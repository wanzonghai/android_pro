{"version":3,"sources":["../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/apic.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/BaseItem.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/BasePool.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Tools/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Tools/commonTool.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/Dictionary.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/DynamicAssetManager.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/feibiaoPool.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/firstScene.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/fruitPool.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/gameDate.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/GameRootNode.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/item_feibiao.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/item_fruit.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Modules/item_proNum.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/manage_event.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/manager_game.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Tools/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Tools/mathematics.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Manages/proNumPool.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Commons/ResourceConfig.ts","../../file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Tools/file:/E:/Cocos/Project/bx_mjb_zz_trucomastergame/TrucoMasterGame/assets/scriptes/Tools/singleton.ts"],"names":["apic","resMg","DynamicAssetManager","GetInstance","eventMg","manage_event","gameMg","manager_game","feibiaoPool","fruitPool","proNumPool","mathematics","Component","onLoad","onEnable","initEvent","start","update","deltaTime","lateUpdate","onDisable","removeEvent","onDestroy","Singleton","constructor","prefabUrl","script","poolSize","nodeName","MemberFlag","_pool","_prefab","_nodeName","initPool","size","clean","Promise","resolve","reject","resources","load","this","Prefab","err","prefab","log","message","addRef","name","initPoolSize","getNode","obj","get","buildNode","Error","active","putNode","isPoolMember","put","warn","clear","decRef","NodePool","i","error","node","instantiate","Node","getNodeName","btnChange","$sprite","$label","$spriteFrame","$labelString","spriteFrame","string","Count","$isCache","isCache","keys","values","Add","key","value","push","Remove","index","indexOf","splice","length","SetDicValue","TryGetValue","ContainsKey","ks","GetKeys","GetValues","_assetMap","_assetRefCountMap","init","Map","url","assetType","callBackFun","Array","isArray","assets","console","pushAsset","asset","loadDir","loadBundel","assetManager","loadBundle","bundle","loadBundelDir","removeBundleRes","$bundleName","getBundle","removeBundle","releaseBundleResOnce","$releasetype","$isRemoveBundle","$resName","$resType","release","releaseAll","isValid","nodeId","uuid","as","extracted","assetArray","set","pullAsset","source","has","delete","getSize","getKeys","fanxing","BasePool","ResourceConfig","prefab_feibiao","item_feibiao","ccclass","property","_decorator","node_fruits","layout_live","btn_stop","label_score","label_time","btn_stop_sprite","statue_btn","curTime","curProNum","curFruitNum","initView","find","getComponent","Button","Label","Sprite","initData","then","updateView","loadRes","gameDate","feibiaoNum","fruitNum","proNumNum","on","onClickHandel","eventTarget","eventFeibiao","onEventHadel","gameTime","gameScore_init","updatePro","removeAllChildren","proNum","itemPro","getSpriteAtlas","panelAtlas","getSpriteFrame","parent","updateProNum","children","updateFruits","itemFruit","fruitName","fruitsAltals","point","updateFruitPion","position","v3","updateFeidao","getChildByName","itemFeibiao","setPosition","angle","event","updaBtn","spriteFrameName","gameStar","gameStop","schedule","scheduleHandel","unschedule","$spriteAtlasName","gameResMap","data","gameScore_change","scheduleOnce","crealData","off","unscheduleAllCallbacks","prefab_fruit","item_fruits","GameManager","director","addPersistRootNode","initMgr","BaseItem","canvasNode","startPos","endPos","collider","Collider2D","unuse","reuse","PhysicsSystem2D","instance","enable","v2","EventType","TOUCH_START","_touchStarHandel","TOUCH_END","_touchEndHandel","Contact2DType","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","getUILocation","x","y","directionRotation","thisPos","UITransform","convertToWorldSpaceAR","signAngle","Math","PI","moveFeibiao","clickPos","convertToNodeSpaceAR","dir","tween","by","call","emit","selfCollider","otherCollider","contact","EventTarget","eventsMap","eventName","callback","target","itemPreTypeArray","fruitMap","playerData","isGameFinish","score","panelAtlasUrl","textures","fruitsAltalsUrl","SpriteAtlas","forEach","element","pointx","randomNum","pointy","maxnum","minnum","Number","parseInt","floor","random","prefab_proNum","item_proNum","c"],"mappings":"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","file":"all.js","sourcesContent":["import manager_game from '../Manages/manager_game';\n\nimport DynamicAssetManager from '../Manages/DynamicAssetManager';\nimport feibiaoPool from '../Manages/feibiaoPool';\nimport fruitPool from '../Manages/fruitPool';\nimport proNumPool from '../Manages/proNumPool';\nimport mathematics from '../Tools/mathematics';\nimport { manage_event } from '../Manages/manage_event';\n\nexport default class apic {\n    public static resMg = DynamicAssetManager.GetInstance(DynamicAssetManager);\n\n    public static eventMg = manage_event.GetInstance(manage_event);\n\n    public static gameMg = manager_game.GetInstance(manager_game);\n\n    public static feibiaoPool = feibiaoPool.GetInstance(feibiaoPool);\n    public static fruitPool = fruitPool.GetInstance(fruitPool);\n    public static proNumPool = proNumPool.GetInstance(proNumPool);\n\n    public static mathematics = mathematics.GetInstance(mathematics);\n}\n","import { Component } from 'cc';\r\n\r\nexport default class BaseItem extends Component {\r\n    onLoad() {}\r\n    onEnable() {\r\n        this.initEvent();\r\n    }\r\n    initEvent() {}\r\n    start() {}\r\n    update(deltaTime: number) {}\r\n    lateUpdate() {}\r\n    onDisable() {\r\n        this.removeEvent();\r\n    }\r\n    onDestroy() {\r\n        this.removeEvent();\r\n    }\r\n    removeEvent() {}\r\n}\r\n","import { Component, error, instantiate, log, Node, NodePool, Prefab, resources, warn } from 'cc';\nimport apic from './apic';\nimport { Singleton } from '../Tools/singleton';\n\nexport default class BasePool extends Singleton<BasePool> {\n    /**\n     * 对象池基类\n     * 只要继承本类,并重写前4个变量即可\n     */\n    //预制体url 子类实现赋值\n    public prefabUrl: string;\n    //(可选)对象脚本组件 子类实现赋值\n\n    public script: any;\n    //(可选)初始化池量 子类实现赋值\n    public poolSize: number = 10;\n    //(可选)组件名字\n    public nodeName: string;\n    //(可选)VIP标记 回收判定是否本池实例\n    public MemberFlag: string;\n\n    private _pool: NodePool;\n    private _prefab: Prefab;\n    private _nodeName: string;\n\n    /**\n     * 初始化对象池入口\n     * fixme 注意：由于使用了动态资源加载,会有出现资源加载延迟现象,使用是不能直接链式编程获取对象,等实例化完成在获取对象池\n     * @param size 初始池量\n     */\n    public initPool(size?: number) {\n        this.clean();\n        return new Promise<void>((resolve, reject) => {\n            resources.load(this.prefabUrl, Prefab, (err: Error, prefab: Prefab) => {\n                if (err) {\n                    log(err.message);\n                    reject();\n                    return;\n                }\n                prefab.addRef();\n                this._prefab = prefab;\n                this._nodeName = prefab.name;\n                this.initPoolSize(size);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * 获取成员对象\n     */\n    public getNode() {\n        let obj: Node;\n        if (this._pool && this._pool.size() > 0) {\n            obj = this._pool.get();\n            // log(`BasePool Tip: 获取${this.MemberFlag}Pool 成员成功,当前池容量剩余:${this._pool.size()}`);\n        } else {\n            obj = this.buildNode();\n            // log(`BasePool Tip: 获取${this.MemberFlag}Pool 成员成功,该池容量不足,产生新成员`);\n        }\n        if (!obj) {\n            throw new Error(`BasePool Tip: 获取${this.MemberFlag}Pool 成员失败`);\n        }\n        obj.active = true;\n        return obj;\n    }\n\n    /**\n     * 回收对象接口\n     * @param obj 回收对象\n     */\n    public putNode(obj: Node) {\n        obj.active = false;\n        if (this.isPoolMember(obj)) {\n            //回收对象\n            this._pool.put(obj);\n            log(`BasePool Tip: ${this.MemberFlag}Pool回收对象成功,当前池容量提升至:${this._pool.size()}`);\n        } else {\n            if (obj && obj.name) {\n                warn(`BasePool Tip: ${this.MemberFlag}Pool回收对象错误,${obj.name}并该对象池成员,回收失败`);\n            } else {\n                throw new Error(`BasePool Tip: 获取${this.MemberFlag}Pool回收对象错误,对象不存在`);\n            }\n        }\n    }\n\n    /**\n     * 清空对象池\n     */\n    public clean() {\n        if (this._pool) {\n            this._pool.clear();\n            log(`BasePool Tip: 清空${this.MemberFlag}Pool成功,当前池容量:${this._pool.size()}`);\n        }\n\n        //释放预制体组件资源\n        if (this._prefab) {\n            this._prefab.decRef();\n            this._prefab = null;\n            log(`BasePool Tip: 释放${this.MemberFlag}Pool 资源数据`);\n        }\n    }\n\n    /**\n     * 初始化对象池\n     * @param size 数量\n     */\n    private initPoolSize(size?: number) {\n        if (size > 0) {\n            this.poolSize = size;\n        }\n        //对象池\n        if (this._prefab) {\n            if (!this.MemberFlag) {\n                this.MemberFlag = this.constructor.name;\n            }\n            if (this.script) {\n                this._pool = new NodePool(this.script);\n            } else {\n                this._pool = new NodePool();\n            }\n            for (let i = 0; i < this.poolSize; i++) {\n                let obj = this.buildNode();\n                this._pool.put(obj);\n            }\n            //log(`BasePool Tip: finish (${this.MemberFlag}Pool)init pool,star size:${this._pool.size()}`);\n        } else {\n            error(`BasePool Tip: ${this.MemberFlag}pool fail init`);\n        }\n    }\n\n    /**\n     * 实例化对象并标记为VIP\n     */\n    private buildNode(): Node {\n        let node: Node = instantiate(this._prefab);\n        node['memberFlag'] = this.MemberFlag;\n        if (this.nodeName) {\n            node.name = this.nodeName;\n        }\n        return node;\n    }\n\n    /**\n     * 判定是否VIP\n     * @param node 回收对象\n     */\n    private isPoolMember(node: Node): boolean {\n        return node instanceof Node && this.MemberFlag == node['memberFlag'];\n    }\n\n    /**\n     * 获取组件名字\n     */\n    public getNodeName(): string {\n        return this.nodeName ? this.nodeName : this._nodeName;\n    }\n}\n","import { Label, Sprite, SpriteFrame } from \"cc\";\r\nimport { Singleton } from \"./singleton\";\r\n\r\nexport default class commonTool extends Singleton<commonTool>{\r\n    public btnChange($sprite:Sprite,$label:Label,$spriteFrame:SpriteFrame,$labelString:string) {\r\n        if ($sprite&&$spriteFrame) {\r\n             $sprite.spriteFrame= $spriteFrame;\r\n        } else if ($label && $labelString) {\r\n            $label.string= $labelString;\r\n        }\r\n    }\r\n}","export class Dictionary<KT, VT> {\n\tprivate keys: KT[] = [];\n\tprivate values: VT[] = [];\n\tprivate isCache: boolean;\n\tpublic get count(): number {\n\t\treturn this.Count();\n    }\n    public set isCacheStatue($isCache: boolean) {\n        this.isCache=$isCache;\n    }\n\n\tpublic constructor(isCache: boolean = false) {\n\t\tthis.isCache = isCache;\n\t}\n    //添加\n\tpublic Add(key: any, value: any): number {\n\t\tif (this.isCache) {\n\t\t\tthis[key] = value;\n\t\t}\n\t\tthis.keys.push(key);\n\t\treturn this.values.push(value);\n\t}\n    //移除\n\tpublic Remove(key: any) {\n\t\tvar index = this.keys.indexOf(key, 0);\n\t\tthis.keys.splice(index, 1);\n\t\tthis.values.splice(index, 1);\n\t\tif (this.isCache) {\n\t\t\tdelete this[key];\n\t\t}\n\t}\n    //字典长度\n\tprivate Count(): number {\n\t\treturn this.keys.length;\n\t}\n    //set字典value\n\tpublic SetDicValue(key: any, value: any) {\n\t\tvar index = this.keys.indexOf(key, 0);\n\t\tif (index != -1) {\n\t\t\tthis.keys[index] = key;\n\t\t\tthis.values[index] = value;\n\t\t\tif (this.isCache) {\n\t\t\t\tthis[key] = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.Add(key, value);\n\t\t}\n\t}\n    //Try获取字典value\n\tpublic TryGetValue(key: KT): VT {\n\t\tvar index = this.keys.indexOf(key, 0);\n\t\tif (index != -1) {\n\t\t\treturn this.values[index];\n\t\t}\n\t\treturn null;\n\t}\n     //字典是否包含value\n\tpublic ContainsKey(key: any): boolean {\n\t\tlet ks = this.keys;\n\t\tfor (let i = 0; i < ks.length; ++i) {\n\t\t\tif (ks[i] == key) {\n\t\t\t\treturn true;;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n    //获取keys[]\n\tpublic GetKeys(): KT[] {\n\t\treturn this.keys;\n\t}\n    //获取Values[]\n\tpublic GetValues(): VT[] {\n\t\treturn this.values;\n    }\n}\n","import { Asset, Component, Node, Prefab, Sprite, SpriteAtlas } from 'cc';\nimport { assetManager } from 'cc';\nimport { AssetManager, SpriteFrame } from 'cc';\nimport { resources } from 'cc';\nimport apic from '../Commons/apic';\nimport { Dictionary } from '../Commons/Dictionary';\nimport { Singleton } from '../Tools/singleton';\n/**\n * 动态资源加载管理类\n */\n\nexport default class DynamicAssetManager extends Singleton<DynamicAssetManager> {\n    private _assetMap: Map<string, Asset[]> = null;\n    private _assetRefCountMap: Map<string, number> = null;\n\n    /**\n     * 初始化\n     */\n    init() {\n        this._assetMap = new Map<string, Asset[]>();\n        this._assetRefCountMap = new Map<string, number>();\n        // console.log('动态资源管理器初始化完成');\n    }\n\n    /**\n     * 动态加载资源(可以同时加载多个资源)\n     * @param node 加载的节点 作为托管驻点\n     * @param url 资源路径\n     * @param callBackFun 加载完成返回\n     */\n    public load(node: Node, url: string | string[], assetType: typeof Asset, callBackFun: Function) {\n        return new Promise((resolve, reject) => {\n            if (node && url) {\n                if (Array.isArray(url))\n                    resources.load(url, assetType, (err, assets: Asset[]) => {\n                        if (err) {\n                            console.error(err.message || err);\n                            reject(err);\n                            return;\n                        }\n                        if (this.pushAsset(node, assets)) {\n                            callBackFun(assets);\n                            resolve(assets);\n                        }\n                    });\n                else\n                    resources.load(url, assetType, (err, asset: Asset) => {\n                        if (err) {\n                            console.error(err.message || err);\n                            reject(err);\n                            return;\n                        }\n                        if (this.pushAsset(node, asset)) {\n                            callBackFun(asset);\n                            resolve(asset);\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * 动态加载目录全部资源\n     * @param node\n     * @param url\n     * @param callBackFun\n     */\n    public loadDir(node: Node, url: string, assetType: typeof Asset, callBackFun: Function) {\n        if (node && url) {\n            resources.loadDir(url, assetType, (err, assets: Asset[]) => {\n                if (err) {\n                    console.error(err.message || err);\n                    return;\n                }\n                if (this.pushAsset(node, assets)) {\n                    callBackFun(assets);\n                }\n            });\n        }\n    }\n\n    /**\n     * 动态加载资源(可以同时加载多个资源) Bundel\n     * @param node\n     * @param url\n     * @param callBackFun\n     */\n    public loadBundel(node: Node, url: string | string[], assetType: typeof Asset, callBackFun: Function) {\n        assetManager.loadBundle('bundle', (err: Error, bundle: AssetManager.Bundle) => {\n            if (node && url) {\n                if (Array.isArray(url))\n                    bundle.load(url, assetType, (err, assets: Asset[]) => {\n                        if (err) {\n                            console.error(err.message || err);\n                            return;\n                        }\n                        if (this.pushAsset(node, assets)) {\n                            callBackFun(assets);\n                        }\n                    });\n                else\n                    bundle.load(url, assetType, (err, asset: Asset) => {\n                        if (err) {\n                            console.error(err.message || err);\n                            return;\n                        }\n                        if (this.pushAsset(node, asset)) {\n                            callBackFun(asset);\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * 动态加载目录全部资源 Bundel\n     * @param node\n     * @param url\n     * @param callBackFun\n     */\n    public loadBundelDir(node: Node, url: string, assetType: typeof Asset, callBackFun: Function) {\n        assetManager.loadBundle('bundle', (err: Error, bundle: AssetManager.Bundle) => {\n            if (node && url) {\n                bundle.loadDir(url, assetType, (err, assets: Asset[]) => {\n                    if (err) {\n                        console.error(err.message || err);\n                        return;\n                    }\n                    if (this.pushAsset(node, assets)) {\n                        callBackFun(assets);\n                    }\n                });\n            }\n        });\n    }\n    /**在加载了AB包之后，此 bundle 会一直存在整个游戏过程中，除非开发者手动移除\n     * 当手动移除了某个不需要的 bundle，那么此 bundle 的缓存也会被移除，如果需要再次使用，则必须再重新加载一次 */\n    public removeBundleRes($bundleName: string) {\n        let bundle = assetManager.getBundle($bundleName);\n        assetManager.removeBundle(bundle);\n    }\n    /**\n     *在移除AB包时，并不会释放该 bundle 中加载过的资源\n     *如果需要释放，请先使用AB包的 release / releaseAll 方法：\n     * @param {number} $releasetype 释放类型 1：单个资源 2：整个包\n     * @param {string} $bundleName  释放AB包名字\n     * @param {string} $resName     释放的资源名字\n     * @param {(SpriteFrame|Prefab|any)} $resType 释放的资源类型\n     * @memberof manage_res\n     */\n    public releaseBundleResOnce($releasetype: number, $bundleName: string, $isRemoveBundle: boolean = true, $resName?: string, $resType?: SpriteFrame | Prefab | any) {\n        // 释放在AB包中的单个资源\n        let bundle = assetManager.getBundle($bundleName);\n        switch ($releasetype) {\n            case 1:\n                bundle.release($resName, $resType);\n                break;\n            case 2:\n                // 释放所有属于AB包的资源\n                bundle.releaseAll();\n            default:\n                break;\n        }\n        //单个资源时 决定是否释放整个包\n        $isRemoveBundle && assetManager.removeBundle(bundle);\n    }\n\n    /**\n     * 托管资源\n     * @param node\n     * @param asset\n     */\n    private pushAsset(node: Node, asset: Asset | Asset[]): boolean {\n        if (node && node.isValid) {\n            let nodeId: string = node.uuid;\n            if (!nodeId || !asset) {\n                console.log(`pushAsset参数不正确:nodeId:${nodeId},asset:${asset}`);\n                return false;\n            }\n            if (asset instanceof Array) {\n                for (let as of asset) {\n                    this.extracted(as, nodeId);\n                }\n            } else {\n                this.extracted(asset, nodeId);\n            }\n            return true;\n        } else {\n            if (asset) {\n                // console.log(`还没加载完`);\n                if (asset instanceof Array) {\n                    for (let as of asset) {\n                        as.decRef();\n                    }\n                } else {\n                    asset.decRef();\n                }\n            }\n            return false;\n        }\n    }\n    //增加计数\n    private extracted(asset: Asset, nodeId: string) {\n        let assetArray: Asset[] = this._assetMap.get(nodeId);\n        if (!assetArray) {\n            assetArray = [];\n        }\n        //同一个节点只增加一次计数\n        if (assetArray.indexOf(asset) < 0) {\n            asset.addRef();\n            assetArray.push(asset);\n            this._assetMap.set(nodeId, assetArray);\n        }\n    }\n\n    /**\n     * 释放资源\n     * @param node\n     * @param source\n     */\n    public pullAsset(node: Node, source: string) {\n        if (node && node.isValid) {\n            let nodeId: string = node.uuid;\n            if (this._assetMap.has(nodeId)) {\n                let assetArray: Asset[] = this._assetMap.get(nodeId);\n                for (let as of assetArray) {\n                    console.log(`释放资源:${as.name}`);\n                    as.decRef();\n                }\n                this._assetMap.delete(nodeId);\n            }\n        } else {\n            console.error(`无法释放资源:传了个null,源头:${source}`);\n        }\n    }\n\n    /**\n     * 当前资源种类数量\n     */\n    public getSize() {\n        return this._assetMap.size;\n    }\n\n    /**\n     * 资源keys\n     */\n    public getKeys() {\n        return this._assetMap.keys();\n    }\n\n    public fanxing<T>(value: T) {\n        // return value;\n    }\n}\n","import BasePool from '../Commons/BasePool';\nimport ResourceConfig from '../Commons/ResourceConfig';\nimport item_feibiao from '../Modules/item_feibiao';\n\nexport default class feibiaoPool extends BasePool {\n    public constructor() {\n        super();\n        //必须赋值(预制体路径)\n        this.prefabUrl = 'prefabs/' + ResourceConfig.prefab_feibiao;\n        //可选\n        this.MemberFlag = 'item_feibiao';\n        this.script = item_feibiao;\n        this.nodeName = 'item_feibiao';\n        // this.poolSize = 15;//默认为10路径)\n    }\n}\n","import { _decorator, Component, Node, Prefab, resources, Button, Label, find, Sprite, SpriteFrame, SpriteAtlas, Vec3, v3, Canvas, director } from 'cc';\nimport apic from '../Commons/apic';\nimport { gameDate } from '../Commons/gameDate';\nimport ResourceConfig from '../Commons/ResourceConfig';\nimport DynamicAssetManager from '../Manages/DynamicAssetManager';\nimport feibiaoPool from '../Manages/feibiaoPool';\nimport fruitPool from '../Manages/fruitPool';\nimport proNumPool from '../Manages/proNumPool';\nimport commonTool from '../Tools/commonTool';\nimport item_feibiao from './item_feibiao';\nimport item_fruits from './item_fruit';\nimport item_proNum from './item_proNum';\nconst { ccclass, property } = _decorator;\n\n@ccclass('firstScene')\nexport class firstScene extends Component {\n    private node_fruits: Node = null;\n\n    private layout_live: Node = null;\n\n    private btn_stop: Button = null;\n    private label_score: Label = null;\n    private label_time: Label = null;\n\n    private btn_stop_sprite: Sprite = null;\n\n    private statue_btn: boolean = false;\n\n    private curTime: number = 0;\n    private curProNum: number = 0;\n    private curFruitNum: number = 0;\n\n    onLoad() {\n        this.initView();\n    }\n    private initView() {\n        this.node_fruits = find('Canvas/node_fruits');\n\n        this.layout_live = find('Canvas/png_dikuang/layout_live');\n\n        this.btn_stop = find('Canvas/btn_stop').getComponent(Button);\n        this.label_score = find('Canvas/png_dikuan2/label_score').getComponent(Label);\n        this.label_time = find('Canvas/png_dikuan3/label_time').getComponent(Label);\n\n        this.btn_stop_sprite = this.btn_stop.getComponent(Sprite);\n    }\n    onEnable() {\n        this.initEvent();\n        this.initData().then(() => {\n            this.updateView();\n        });\n    }\n    start() {}\n    private async initData() {\n        apic.gameMg.init();\n\n        this.statue_btn = false;\n\n        await apic.gameMg.loadRes(this.node).then(() => {\n            apic.feibiaoPool.initPool(gameDate.feibiaoNum).then(() => {});\n\n            apic.fruitPool.initPool(gameDate.fruitNum).then(() => {});\n\n            apic.proNumPool.initPool(gameDate.proNumNum).then(() => {});\n        });\n    }\n    initEvent() {\n        this.btn_stop && this.btn_stop.node.on('click', this.onClickHandel, this);\n\n        apic.eventMg.eventTarget.on(ResourceConfig.eventFeibiao, this.onEventHadel, this);\n    }\n\n    private updateView() {\n        this.label_time.string = 'Time:' + gameDate.gameTime + 's';\n        this.label_score.string = gameDate.gameScore_init + '';\n    }\n    //道具\n    private updatePro() {\n        this.layout_live.removeAllChildren();\n        for (let index = 0; index < gameDate.proNum; index++) {\n            let itemPro: Sprite = apic.proNumPool.getNode().getComponent(Sprite);\n            itemPro.spriteFrame = this.getSpriteAtlas(ResourceConfig.panelAtlas).getSpriteFrame('png_dao_1');\n            itemPro.node.parent = this.layout_live;\n        }\n\n        this.updateProNum();\n    }\n    private updateProNum() {\n        for (let index = 0; index < this.curProNum; index++) {\n            let element: Sprite = this.layout_live.children[index].getComponent(Sprite);\n\n            element.spriteFrame = this.getSpriteAtlas(ResourceConfig.panelAtlas).getSpriteFrame('png_dao_2');\n        }\n    }\n    //水果\n    private updateFruits() {\n        this.node_fruits.removeAllChildren();\n        for (let index = 0; index < gameDate.fruitNum; index++) {\n            let itemFruit: Sprite = apic.fruitPool.getNode().getComponent(Sprite);\n            let fruitName: string = 'png_shuiguo' + (index + 1);\n            itemFruit.spriteFrame = this.getSpriteAtlas(ResourceConfig.fruitsAltals).getSpriteFrame(fruitName);\n            itemFruit.node.parent = this.node_fruits;\n            let point = apic.gameMg.updateFruitPion().get(index + 1);\n            itemFruit.node.position = v3(point[0], point[1]);\n        }\n    }\n    //飞刀\n    private updateFeidao() {\n        let item_feibiao = this.node.getChildByName('item_feibiao');\n        if (item_feibiao) {\n            apic.feibiaoPool.putNode(item_feibiao);\n        }\n        let itemFeibiao: Node = apic.feibiaoPool.getNode();\n        itemFeibiao.parent = this.node;\n        itemFeibiao.setPosition(v3(0, -288, 0));\n        itemFeibiao.angle = 0;\n    }\n\n    update(deltaTime: number) {}\n\n    lateUpdate() {}\n    private onClickHandel(event) {\n        let name: string = event.node.name;\n        this.statue_btn = !this.statue_btn;\n        switch (name) {\n            case 'btn_stop':\n                this.updaBtn();\n                break;\n\n            default:\n                break;\n        }\n    }\n    private updaBtn() {\n        let spriteFrameName: string = this.statue_btn ? 'icon_zhanting' : 'icon_kaishi';\n\n        this.btn_stop_sprite.spriteFrame = this.getSpriteAtlas(ResourceConfig.panelAtlas).getSpriteFrame(spriteFrameName);\n\n        this.statue_btn ? this.gameStar() : this.gameStop();\n    }\n\n    //game star\n    private gameStar() {\n        this.curTime = gameDate.gameTime;\n\n        this.curProNum = gameDate.proNum;\n\n        this.curFruitNum = gameDate.fruitNum;\n        this.updateView();\n        this.updateFeidao();\n        this.updateFruits();\n        this.updatePro();\n        this.schedule(this.scheduleHandel, 1);\n    }\n    private gameStop() {\n        this.unschedule(this.scheduleHandel);\n    }\n\n    private scheduleHandel() {\n        this.curTime--;\n        if (!this.curTime || this.curTime == 0) {\n            this.gameStop();\n        }\n        this.label_time.string = 'Time:' + this.curTime + 's';\n    }\n\n    private getSpriteAtlas($spriteAtlasName: string) {\n        return apic.gameMg.gameResMap.get($spriteAtlasName) as SpriteAtlas;\n    }\n\n    private onEventHadel(data) {\n        if (data) {\n            gameDate.gameScore_init += gameDate.gameScore_change;\n            this.label_score.string = gameDate.gameScore_init + '';\n        }\n        this.curProNum--;\n        this.updatePro();\n        if (this.curProNum > 0 && this.curTime > 0) {\n            this.scheduleOnce(() => {\n                this.updateFeidao();\n            }, 1);\n        } else {\n            this.statue_btn = false;\n            this.updaBtn();\n        }\n    }\n    onDisable() {\n        this.removeEvent();\n        this.crealData();\n    }\n    removeEvent() {\n        this.btn_stop && this.btn_stop.node.off('click', this.onClickHandel, this);\n        apic.eventMg.eventTarget.off(ResourceConfig.eventFeibiao, this.onEventHadel, this);\n    }\n    onDestroy() {\n        this.crealData();\n    }\n\n    private crealData() {\n        this.statue_btn = null;\n        this.curTime = null;\n        this.curProNum = null;\n        this.curFruitNum = null;\n        this.layout_live.removeAllChildren();\n        this.layout_live = null;\n        this.node_fruits.removeAllChildren();\n        this.node_fruits = null;\n\n        DynamicAssetManager.GetInstance(DynamicAssetManager).pullAsset(this.node, this.constructor.name);\n        this.unscheduleAllCallbacks();\n    }\n}\n","import BasePool from \"../Commons/BasePool\";\nimport ResourceConfig from \"../Commons/ResourceConfig\";\nimport item_fruits from \"../Modules/item_fruit\";\n\nexport default class fruitPool extends BasePool{\n    public constructor() {\n        super();\n        //必须赋值(预制体路径)\n        this.prefabUrl = \"prefabs/\"+ResourceConfig.prefab_fruit;\n       //可选\n        this.MemberFlag = \"item_fruits\";\n        this.script = item_fruits;\n        this.nodeName = \"item_fruits\";\n        // this.poolSize = 15;//默认为10路径)\n\n    }\n}","export class gameDate {\n    /**游戏得分 */\n    public static gameScore_change: number = 10;\n    /**初始分数 */\n    public static gameScore_init: number = 0;\n    public static gameTime: number = 90;\n    /**pro num */\n    public static proNum: number = 9;\n\n    /**feibiao num */\n    public static feibiaoNum: number = 8;\n    /**fruit num */\n    public static fruitNum: number = 8;\n    /**proNum num */\n    public static proNumNum: number = 10;\n\n  \n}\n","import { _decorator, Component, director } from 'cc';\r\nimport DynamicAssetManager from '../Manages/DynamicAssetManager';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * 游戏全局管理器\r\n */\r\n@ccclass\r\nexport default class GameManager extends Component {\r\n    onLoad() {\r\n        director.addPersistRootNode(this.node);\r\n        //macro.ENABLE_MULTI_TOUCH = false;\r\n        GameManager.initMgr(); //注册所有管理器\r\n    }\r\n\r\n    static initMgr() {\r\n        DynamicAssetManager.GetInstance(DynamicAssetManager).init(); //动态资源管理器\r\n\r\n        // SoundManager.init();//音频管理器\r\n\r\n        // ResourceManager.init(); //Protobuf资源管理器\r\n\r\n        // NetworkManager.init();//网路管理器\r\n\r\n        // HeartBeatManager.init(); //心跳管理器\r\n    }\r\n}\r\n","import { approx, Collider2D, Contact2DType, director, find, IPhysics2DContact, log, Node, PhysicsSystem2D, resources, tween, Tween, UITransform, v2, v3, Vec2, Vec3, _decorator } from 'cc';\r\nimport apic from '../Commons/apic';\r\nimport BaseItem from '../Commons/BaseItem';\r\nimport { gameDate } from '../Commons/gameDate';\r\nimport ResourceConfig from '../Commons/ResourceConfig';\r\nimport feibiaoPool from '../Manages/feibiaoPool';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('item_feibiao')\r\nexport default class item_feibiao extends BaseItem {\r\n    private canvasNode: Node = null;\r\n    private startPos = null;\r\n    private endPos = null;\r\n\r\n    private collider: Collider2D = null;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n        this.canvasNode = find('Canvas');\r\n        this.collider = this.node.getComponent(Collider2D);\r\n    }\r\n\r\n    unuse() {}\r\n\r\n    reuse() {}\r\n    onEnable() {\r\n        super.onEnable();\r\n        PhysicsSystem2D.instance.enable = true;\r\n        this.startPos = v2(0, 0); //开始位置\r\n        this.endPos = v2(0, 0); //结束位置\r\n    }\r\n    initEvent() {\r\n        this.canvasNode && this.canvasNode.on(Node.EventType.TOUCH_START, this._touchStarHandel, this);\r\n        this.canvasNode && this.canvasNode.on(Node.EventType.TOUCH_END, this._touchEndHandel, this);\r\n        // 注册单个碰撞体的回调函数     //Builtin 2D 物理模块只会发送 BEGIN_CONTACT 和 END_CONTACT 回调消息。\r\n        if (this.collider) {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            this.collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            // collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            // collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n        // // 注册全局碰撞回调函数\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     // PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     // PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n    }\r\n    private _touchStarHandel(event) {\r\n        this.startPos = v3(event.getUILocation().x, event.getUILocation().y);\r\n    }\r\n    private _touchEndHandel(event) {\r\n        this.endPos = v3(event.getUILocation().x, event.getUILocation().y);\r\n\r\n        this.directionRotation();\r\n    }\r\n\r\n    /**旋转方向 */\r\n    private directionRotation() {\r\n        let thisPos = this.node.getComponent(UITransform).convertToWorldSpaceAR(v3(0, 0));\r\n        // 移动方向\r\n        let delta = v2(this.endPos.x - thisPos.x, this.endPos.y - thisPos.y);\r\n\r\n        // 计算出节点朝向鼠标点击点的角度\r\n        let angle = delta.signAngle(v2(1, 0));\r\n        // 设置节点的旋转角度\r\n        this.node.angle = -((angle / Math.PI) * 180 + 90);\r\n\r\n        this.moveFeibiao();\r\n    }\r\n\r\n    /**move */\r\n    private moveFeibiao() {\r\n        if (!this.node) return;\r\n        // // 获取点击位置\r\n        var clickPos: Vec3 = this.endPos;\r\n        clickPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(clickPos);\r\n\r\n        // // 计算出物体需要移动的距离\r\n        var dir = v3(clickPos.x - this.node.position.x, clickPos.y - this.node.position.y);\r\n        //移动\r\n        tween(this.node)\r\n            .by(0.4, { position: dir })\r\n            .call(() => {\r\n                this.scheduleOnce(() => {\r\n                    if (this.node) {\r\n                        apic.feibiaoPool.putNode(this.node);\r\n                        apic.eventMg.eventTarget.emit(ResourceConfig.eventFeibiao, false);\r\n                    }\r\n                }, 2);\r\n            })\r\n            .start();\r\n        this.canvasNode && this.canvasNode.off(Node.EventType.TOUCH_START, this._touchStarHandel, this);\r\n        this.canvasNode && this.canvasNode.off(Node.EventType.TOUCH_END, this._touchEndHandel, this);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n    update(deltaTime: number) {\r\n        super.update(deltaTime);\r\n    }\r\n    lateUpdate() {\r\n        super.lateUpdate();\r\n    }\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    removeEvent() {\r\n        this.startPos = null;\r\n        this.endPos = null;\r\n        PhysicsSystem2D.instance.enable = false;\r\n        // 注册单个碰撞体的回调函数     //Builtin 2D 物理模块只会发送 BEGIN_CONTACT 和 END_CONTACT 回调消息。\r\n        if (this.collider) {\r\n            this.collider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            this.collider.off(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            // collider.off(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            // collider.off(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n        // // 注册全局碰撞回调函数\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.off(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     // PhysicsSystem2D.instance.off(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     // PhysicsSystem2D.instance.off(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n    //Builtin 2D 物理模块只会发送 BEGIN_CONTACT 和 END_CONTACT 回调消息。\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        console.log('onBeginContact');\r\n        if (otherCollider.node.name == 'item_fruits') {\r\n            apic.feibiaoPool.putNode(this.node);\r\n        }\r\n        this.unscheduleAllCallbacks();\r\n        PhysicsSystem2D.instance.enable = false;\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('onEndContact');\r\n    }\r\n    // onPreSolve(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 每次将要处理碰撞体接触逻辑时被调用\r\n    //     console.log('onPreSolve');\r\n    // }\r\n    // onPostSolve(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 每次处理完碰撞体接触逻辑时被调用\r\n    //     console.log('onPostSolve');\r\n    // }\r\n}\r\n","import { Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, _decorator } from 'cc';\r\nimport apic from '../Commons/apic';\r\nimport BaseItem from '../Commons/BaseItem';\r\nimport ResourceConfig from '../Commons/ResourceConfig';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('item_fruits')\r\nexport default class item_fruits extends BaseItem {\r\n    private collider: Collider2D = null;\r\n    onLoad() {\r\n        super.onLoad();\r\n        this.collider = this.node.getComponent(Collider2D);\r\n    }\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n    initEvent() {\r\n        // 注册单个碰撞体的回调函数     //Builtin 2D 物理模块只会发送 BEGIN_CONTACT 和 END_CONTACT 回调消息。\r\n        if (this.collider) {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            this.collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            // collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            // collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n        // // 注册全局碰撞回调函数\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     // PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     // PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n    }\r\n    start() {\r\n        super.start();\r\n    }\r\n    update(deltaTime: number) {\r\n        super.update(deltaTime);\r\n    }\r\n    lateUpdate() {\r\n        super.lateUpdate();\r\n    }\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n    removeEvent() {\r\n        PhysicsSystem2D.instance.enable = false;\r\n\r\n        // 注册单个碰撞体的回调函数     //Builtin 2D 物理模块只会发送 BEGIN_CONTACT 和 END_CONTACT 回调消息。\r\n        if (this.collider) {\r\n            this.collider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            this.collider.off(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            // collider.off(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            // collider.off(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n        // // 注册全局碰撞回调函数\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.off(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     // PhysicsSystem2D.instance.off(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     // PhysicsSystem2D.instance.off(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n    //Builtin 2D 物理模块只会发送 BEGIN_CONTACT 和 END_CONTACT 回调消息。\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        console.log('onBeginContact');\r\n        if (otherCollider.node.name == 'item_feibiao') {\r\n            apic.fruitPool.putNode(this.node);\r\n            //回收\r\n            apic.eventMg.eventTarget.emit(ResourceConfig.eventFeibiao, true);\r\n        }\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('onEndContact');\r\n        PhysicsSystem2D.instance.enable = false;\r\n    }\r\n    // onPreSolve(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 每次将要处理碰撞体接触逻辑时被调用\r\n    //     console.log('onPreSolve');\r\n    // }\r\n    // onPostSolve(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 每次处理完碰撞体接触逻辑时被调用\r\n    //     console.log('onPostSolve');\r\n    // }\r\n}\r\n","import { _decorator } from \"cc\";\r\nimport BaseItem from \"../Commons/BaseItem\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('item_proNum')\r\nexport default class item_proNum extends BaseItem{\r\n    onLoad() {\r\n    super.onLoad();\r\n    }\r\n    onEnable () {\r\n    super.onEnable();\r\n    }\r\n    start () {\r\n    super.start();\r\n    }\r\n    update (deltaTime: number) {\r\n    super.update(deltaTime);\r\n    }\r\n    lateUpdate () {\r\n    super.lateUpdate();\r\n    }\r\n    onDisable () {\r\n    super.onDisable();\r\n    }\r\n    onDestroy () {\r\n    super.onDestroy();\r\n    }\r\n}","import { EventTarget } from 'cc';\r\nimport { Dictionary } from '../Commons/Dictionary';\r\nimport { IEventData } from '../Tools/interface';\r\nimport { Singleton } from '../Tools/singleton';\r\n\r\nexport class manage_event extends Singleton<manage_event> {\r\n    public eventTarget = new EventTarget();\r\n    /**\r\n     * 事件存储 Map\r\n     */\r\n    private eventsMap: Map<string, IEventData> = new Map();\r\n    \r\n    /**\r\n     * 事件监听\r\n     * @param eventName 事件名字\r\n     * @param callback 返回方法\r\n     * @param target\r\n     */\r\n    public on(eventName: string, callback: Function, target: any) {\r\n        if (this.eventsMap.has(eventName)) {\r\n            console.warn(`$(eventName) 事件已存在 ， 做了覆盖处理`);\r\n        }\r\n        this.eventsMap.set(eventName, { callback, target });\r\n    }\r\n    /**\r\n     * 事件发送\r\n     * @param eventName\r\n     * @param data\r\n     */\r\n    public emit(eventName: string, data: any) {\r\n        if (!this.eventsMap.has(eventName)) {\r\n            console.warn(`$(eventName) 事件不存在`);\r\n            return;\r\n        }\r\n        const { callback, target } = this.eventsMap.get(eventName);\r\n        callback.call(target, data);\r\n        console.log('事件map:', this.eventsMap);\r\n    }\r\n    /**\r\n     * 取消事件监听\r\n     * @param eventName\r\n     */\r\n    public off(eventName: string) {\r\n        if (!this.eventsMap.has(eventName)) {\r\n            console.warn(`$(eventName) 事件不存在`);\r\n            return;\r\n        }\r\n        this.eventsMap.delete(eventName);\r\n    }\r\n}\r\n","import { assert, Asset, Component, instantiate, misc, Node, Prefab, SpriteAtlas, SpriteComponent } from 'cc';\nimport apic from '../Commons/apic';\nimport { gameDate } from '../Commons/gameDate';\nimport ResourceConfig from '../Commons/ResourceConfig';\nimport { IPlayerData } from '../Tools/interface';\nimport mathematics from '../Tools/mathematics';\nimport { Singleton } from '../Tools/singleton';\n\nexport default class manager_game extends Singleton<manager_game> {\n    public itemPreTypeArray: Prefab[] = [];\n\n    public gameResMap: Map<string, Asset> = null;\n\n    private fruitMap: Map<number, number[]> = null;\n\n    public playerData: IPlayerData = null;\n\n    public isGameFinish: boolean = false;\n\n    /**初始化 */\n    public init() {\n        this.itemPreTypeArray.length = 0;\n        this.fruitMap = new Map<number, number[]>();\n        this.gameResMap = new Map<string, Asset>();\n        this.playerData = { proNum: gameDate.proNum, score: gameDate.gameScore_init };\n        this.isGameFinish = false;\n    }\n    //加载的节点 作为托管驻点\n    public loadRes(node) {\n        //bx_mjb_zz_trocokingtrucoonline\n        //fruitsAltals.plist\n        return new Promise((resolve, reject) => {\n            let panelAtlasUrl = ResourceConfig.textures + ResourceConfig.panelAtlas;\n            let fruitsAltalsUrl = ResourceConfig.textures + ResourceConfig.fruitsAltals;\n            apic.resMg.load(node, [panelAtlasUrl, fruitsAltalsUrl], SpriteAtlas, (assets: Asset[]) => {\n                assets.forEach((element) => {\n                    this.gameResMap.set(element.name, element);\n                });\n                resolve(this.gameResMap);\n            });\n        });\n    }\n\n    public updateFruitPion(): Map<number, number[]> {\n       \n        for (let index = 1; index < gameDate.fruitNum + 1; index++) {\n            let pointx: number = apic.mathematics.randomNum(876.5, -876.5);\n            let pointy: number = apic.mathematics.randomNum(148.5, -148.5);\n    \n            this.fruitMap.set(index, [pointx, pointy]);\n        }\n        return this.fruitMap;\n    }\n}\n","import { Component } from 'cc';\r\nimport { Singleton } from './singleton';\r\n\r\nexport default class mathematics extends Singleton<mathematics> {\r\n    public randomNum(maxnum, minnum) {\r\n        if (!(maxnum instanceof Number) || !(minnum instanceof Number)) {\r\n            maxnum = parseInt(maxnum);\r\n            minnum = parseInt(minnum);\r\n        }\r\n        return Math.floor(Math.random() * (maxnum - minnum + 1) + minnum);\r\n    }\r\n}\r\n","import BasePool from '../Commons/BasePool';\nimport ResourceConfig from '../Commons/ResourceConfig';\nimport item_proNum from '../Modules/item_proNum';\n\nexport default class proNumPool extends BasePool {\n    public constructor() {\n        super();\n        //必须赋值(预制体路径)\n        this.prefabUrl = 'prefabs/' + ResourceConfig.prefab_proNum;\n        //可选\n        this.MemberFlag = 'item_proNum';\n        this.script = item_proNum;\n        this.nodeName = 'item_proNum';\n        // this.poolSize = 15;//默认为10路径)\n    }\n}\n","export default class ResourceConfig {\r\n    /**资源 textures*/\r\n    public static textures: string = 'textures/';\r\n\r\n    /**资源 panelAtlas*/\r\n    public static panelAtlas: string = 'panelAtlas';\r\n\r\n    /**资源 fruitsAltals*/\r\n    public static fruitsAltals: string = 'fruitsAltals';\r\n\r\n    /**资源 prefab_feibiao*/\r\n    public static prefab_feibiao: string = 'item_feibiao';\r\n\r\n    /**资源 prefab_feibiao*/\r\n    public static prefab_fruit: string = 'item_fruits';\r\n\r\n    /**资源 prefab_proNum*/\r\n    public static prefab_proNum: string = 'item_proNum';\r\n\r\n    //事件\r\n    public static eventFeibiao: string = 'EVENTFEIBIAO';\r\n}\r\n","//Singleton.ts\r\nexport class Singleton<T> {\r\n    private static instance: any = null;\r\n    public static GetInstance<T>(c: { new(): T }): T\r\n    {\r\n        if (this.instance == null)\r\n        {\r\n            this.instance = new c();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public init()\r\n    {\r\n        console.dir(this);\r\n    }\r\n}\r\n"]}