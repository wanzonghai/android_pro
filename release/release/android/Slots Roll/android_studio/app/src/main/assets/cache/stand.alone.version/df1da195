!function(e,t){"use strict";class DepthCasterData{static createDepthCasterUniformBlock(){if(!DepthCasterData.DepthCasterUBOData){let e=new Map;e.set(t.Shader3D.propertyNameToID("u_ShadowBias"),t.UniformBufferParamsType.Vector4),e.set(t.Shader3D.propertyNameToID("u_ShadowLightDirection"),t.UniformBufferParamsType.Vector3),DepthCasterData.DepthCasterUBOData=new t.UnifromBufferData(e)}return DepthCasterData.DepthCasterUBOData}}var a;e.DepthTextureMode=void 0,(a=e.DepthTextureMode||(e.DepthTextureMode={}))[a.None=0]="None",a[a.Depth=1]="Depth",a[a.DepthNormals=2]="DepthNormals",a[a.DepthAndDepthNormals=3]="DepthAndDepthNormals",a[a.MotionVectors=4]="MotionVectors";class DepthPass{static __init__(){DepthPass.DEPTHPASS=t.Shader3D.getDefineByName("DEPTHPASS"),DepthPass.DEFINE_SHADOW_BIAS=t.Shader3D.propertyNameToID("u_ShadowBias"),DepthPass.DEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthTexture"),DepthPass.DEPTHNORMALSTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthNormalsTexture"),DepthPass.DEPTHZBUFFERPARAMS=t.Shader3D.propertyNameToID("u_ZBufferParams"),DepthPass.SHADOWUNIFORMBLOCK=t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SHADOW)}constructor(){this._defaultNormalDepthColor=new t.Color(.5,.5,1,0),this._zBufferParams=new t.Vector4,t.Config3D._uniformBlock&&(this._castDepthData=DepthCasterData.createDepthCasterUniformBlock(),this._castDepthUBO=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_SHADOW,0),this._castDepthUBO||(this._castDepthUBO=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_SHADOW,t.BufferUsage.Dynamic,this._castDepthData.getbyteLength(),!0)))}update(a,r,i){switch(this._viewPort=a.viewport,this._camera=a,r){case e.DepthTextureMode.Depth:a.depthTexture=this._depthTexture=t.RenderTexture.createFromPool(this._viewPort.width,this._viewPort.height,i,t.RenderTargetFormat.None,!1,1);break;case e.DepthTextureMode.DepthNormals:a.depthNormalTexture=this._depthNormalsTexture=t.RenderTexture.createFromPool(this._viewPort.width,this._viewPort.height,t.RenderTargetFormat.R8G8B8A8,i,!1,1);break;case e.DepthTextureMode.MotionVectors:break;default:throw"there is UnDefined type of DepthTextureMode"}}render(a,r){var i=a.scene,n=i._shaderValues;switch(r){case e.DepthTextureMode.Depth:a.pipelineMode="ShadowCaster",n.addDefine(DepthPass.DEPTHPASS),n.setVector(DepthPass.DEFINE_SHADOW_BIAS,DepthPass.SHADOW_BIAS);var s=this._viewPort.x,o=this._viewPort.y;this._depthTexture._start(),t.LayaGL.renderEngine.viewport(s,o,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.scissor(s,o,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,null,1),a.changeViewport(s,o,this._viewPort.width,this._viewPort.height),a.changeScissor(s,o,this._viewPort.width,this._viewPort.height),a.destTarget=this._depthTexture,t.Stat.depthCastDrawCall+=i._opaqueQueue.renderQueue(a),this._depthTexture._end(),this._setupDepthModeShaderValue(r,this._camera),a.pipelineMode=a.configPipeLineMode,n.removeDefine(DepthPass.DEPTHPASS);break;case e.DepthTextureMode.DepthNormals:a.pipelineMode="DepthNormal",this._depthNormalsTexture._start();s=this._viewPort.x,o=this._viewPort.y;t.LayaGL.renderEngine.viewport(s,o,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.scissor(s,o,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,this._defaultNormalDepthColor,1),a.destTarget=this._depthNormalsTexture,a.changeViewport(s,o,this._viewPort.width,this._viewPort.height),a.changeScissor(s,o,this._viewPort.width,this._viewPort.height),t.Stat.depthCastDrawCall+=i._opaqueQueue.renderQueue(a),this._depthNormalsTexture._end(),this._setupDepthModeShaderValue(r,this._camera),a.pipelineMode=a.configPipeLineMode;break;case e.DepthTextureMode.MotionVectors:break;default:throw"there is UnDefined type of DepthTextureMode"}}_setupDepthModeShaderValue(t,a){switch(t){case e.DepthTextureMode.Depth:var r=a.farPlane,i=a.nearPlane;this._zBufferParams.setValue(1-r/i,r/i,(i-r)/(i*r),1/i),a._shaderValues.setVector(DepthPass.DEFINE_SHADOW_BIAS,DepthPass.SHADOW_BIAS),a._shaderValues.setTexture(DepthPass.DEPTHTEXTURE,this._depthTexture),a._shaderValues.setVector(DepthPass.DEPTHZBUFFERPARAMS,this._zBufferParams);break;case e.DepthTextureMode.DepthNormals:a._shaderValues.setTexture(DepthPass.DEPTHNORMALSTEXTURE,this._depthNormalsTexture);break;case e.DepthTextureMode.MotionVectors:break;default:throw"there is UnDefined type of DepthTextureMode"}}cleanUp(){this._depthTexture instanceof t.RenderTexture&&this._depthTexture&&t.RenderTexture.recoverToPool(this._depthTexture),this._depthNormalsTexture&&t.RenderTexture.recoverToPool(this._depthNormalsTexture),this._depthTexture=null,this._depthNormalsTexture=null}}DepthPass.SHADOW_BIAS=new t.Vector4;class Physics3DUtils{constructor(){}static setColliderCollision(e,t,a){}static getIColliderCollision(e,t){return!1}}Physics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER=1,Physics3DUtils.COLLISIONFILTERGROUP_STATICFILTER=2,Physics3DUtils.COLLISIONFILTERGROUP_KINEMATICFILTER=4,Physics3DUtils.COLLISIONFILTERGROUP_DEBRISFILTER=8,Physics3DUtils.COLLISIONFILTERGROUP_SENSORTRIGGER=16,Physics3DUtils.COLLISIONFILTERGROUP_CHARACTERFILTER=32,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER1=64,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER2=128,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER3=256,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER4=512,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER5=1024,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER6=2048,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER7=4096,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER8=8192,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER9=16384,Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER10=32768,Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER=-1,Physics3DUtils.gravity=new t.Vector3(0,-9.81,0);class TextureGenerator{constructor(){}static lightAttenTexture(e,t,a,r,i,n){var s=e/a,o=1/(1+25*s);s>=.64&&(s>1?o=0:o*=1-(s-.64)/.36),n[i]=Math.floor(255*o+.5)}static haloTexture(e,t,a,r,i,n){var s=(e-(a>>=1))/a,o=(t-(r>>=1))/r,l=s*s+o*o;l>1&&(l=1),n[i]=Math.floor(255*(1-l)+.5)}static _generateTexture2D(e,a,r,i){var n=0,s=0;switch(e.format){case t.TextureFormat.R8G8B8:s=3;break;case t.TextureFormat.R8G8B8A8:s=4;break;case t.TextureFormat.Alpha8:s=1;break;default:throw"GeneratedTexture._generateTexture: unkonw texture format."}for(var o=new Uint8Array(a*r*s),l=0;l<r;l++)for(var h=0;h<a;h++)i(h,l,a,r,n,o),n+=s;e.setPixelsData(o,!1,!1)}}class ILaya3D{}ILaya3D.Scene3D=null,ILaya3D.Laya3D=null,ILaya3D.Physics3D=null;class Utils3D{static _createFloatTextureBuffer(e,a){var r=new t.Texture2D(e,a,t.TextureFormat.R32G32B32A32,!1,!1);return r.setPixelsData(null,!1,!1),r.filterMode=t.FilterMode.Point,r.wrapModeU=t.WrapMode.Clamp,r.wrapModeV=t.WrapMode.Clamp,r.anisoLevel=0,r}static _convertToLayaVec3(e,t){var a=ILaya3D.Physics3D._bullet;t.x=a.btVector3_x(e),t.y=a.btVector3_y(e),t.z=a.btVector3_z(e)}static _convertToBulletVec3(e,t){ILaya3D.Physics3D._bullet.btVector3_setValue(t,e.x,e.y,e.z)}static _rotationTransformScaleSkinAnimation(e,t,a,r,i,n,s,o,l,h,c,d){var u,_,m,f,S,g=Utils3D._tempArray16_0,p=Utils3D._tempArray16_1,D=Utils3D._tempArray16_2,T=r+r,E=i+i,C=n+n,A=r*T,R=i*T,x=i*E,M=n*T,y=n*E,I=n*C,v=s*T,L=s*E,b=s*C;for(g[15]=1,g[0]=1-x-I,g[1]=R+b,g[2]=M-L,g[4]=R-b,g[5]=1-A-I,g[6]=y+v,g[8]=M+L,g[9]=y-v,g[10]=1-A-x,p[15]=1,p[0]=o,p[5]=l,p[10]=h,u=0;u<4;u++)_=g[u],m=g[u+4],f=g[u+8],S=g[u+12],D[u]=_,D[u+4]=m,D[u+8]=f,D[u+12]=_*e+m*t+f*a+S;for(u=0;u<4;u++)_=D[u],m=D[u+4],f=D[u+8],S=D[u+12],c[u+d]=_*p[0]+m*p[1]+f*p[2]+S*p[3],c[u+d+4]=_*p[4]+m*p[5]+f*p[6]+S*p[7],c[u+d+8]=_*p[8]+m*p[9]+f*p[10]+S*p[11],c[u+d+12]=_*p[12]+m*p[13]+f*p[14]+S*p[15]}static billboardTrans(e,a,r,i){t.Vector3.normalize(r,Utils3D._tempV1),t.Vector3.cross(a,r,Utils3D._tempV0),t.Vector3.normalize(Utils3D._tempV0,Utils3D._tempV0),t.Vector3.scale(Utils3D._tempV0,e.x,i),t.Vector3.scale(r,e.y,Utils3D._tempV1),t.Vector3.add(i,Utils3D._tempV1,i)}static PointinTriangle(e,t,a,r){let i=a.vsub(e,Utils3D._tempVector3_0),n=t.vsub(e,Utils3D._tempVector3_1),s=r.vsub(e,Utils3D._tempVector3_2),o=i.dot(i),l=i.dot(n),h=i.dot(s),c=n.dot(n),d=n.dot(s),u=1/(o*c-l*l),_=(c*h-l*d)*u;if(_<0||_>1)return!1;let m=(o*d-l*h)*u;return!(m<0||m>1)&&_+m<=1}static _computeBoneAndAnimationDatasByBindPoseMatrxix(e,t,a,r,i,n){var s,o,l=0,h=0,c=e.length;for(s=0;s<c;l+=e[s].keyframeWidth,h+=16,s++)Utils3D._rotationTransformScaleSkinAnimation(t[l+0],t[l+1],t[l+2],t[l+3],t[l+4],t[l+5],t[l+6],t[l+7],t[l+8],t[l+9],r,h),0!=s&&(o=16*e[s].parentIndex,Utils3D.mulMatrixByArray(r,o,r,h,r,h));var d=a.length;for(s=0;s<d;s++)Utils3D.mulMatrixByArrayAndMatrixFast(r,16*n[s],a[s],i,16*s)}static _computeAnimationDatasByArrayAndMatrixFast(e,t,a,r){for(var i=0,n=e.length;i<n;i++)Utils3D.mulMatrixByArrayAndMatrixFast(t,16*r[i],e[i],a,16*i)}static _computeBoneAndAnimationDatasByBindPoseMatrxixOld(e,t,a,r,i){var n,s,o=0,l=0,h=e.length;for(n=0;n<h;o+=e[n].keyframeWidth,l+=16,n++)Utils3D._rotationTransformScaleSkinAnimation(t[o+7],t[o+8],t[o+9],t[o+3],t[o+4],t[o+5],t[o+6],t[o+0],t[o+1],t[o+2],r,l),0!=n&&(s=16*e[n].parentIndex,Utils3D.mulMatrixByArray(r,s,r,l,r,l));var c=a.length;for(n=0;n<c;n++){var d=16*n;Utils3D.mulMatrixByArrayAndMatrixFast(r,d,a[n],i,d)}}static _computeAnimationDatasByArrayAndMatrixFastOld(e,t,a){for(var r=e.length,i=0;i<r;i++){var n=16*i;Utils3D.mulMatrixByArrayAndMatrixFast(t,n,e[i],a,n)}}static _computeRootAnimationData(e,t,a){for(var r=0,i=0,n=0,s=e.length;r<s;i+=e[r].keyframeWidth,n+=16,r++)Utils3D.createAffineTransformationArray(t[i+0],t[i+1],t[i+2],t[i+3],t[i+4],t[i+5],t[i+6],t[i+7],t[i+8],t[i+9],a,n)}static transformVector3ArrayByQuat(e,t,a,r,i){var n=e[t],s=e[t+1],o=e[t+2],l=a.x,h=a.y,c=a.z,d=a.w,u=d*n+h*o-c*s,_=d*s+c*n-l*o,m=d*o+l*s-h*n,f=-l*n-h*s-c*o;r[i]=u*d+f*-l+_*-c-m*-h,r[i+1]=_*d+f*-h+m*-l-u*-c,r[i+2]=m*d+f*-c+u*-h-_*-l}static mulMatrixByArray(e,t,a,r,i,n){var s,o,l,h,c;if(i===a){for(a=Utils3D._tempArray16_3,s=0;s<16;++s)a[s]=i[n+s];r=0}for(s=0;s<4;s++)o=e[t+s],l=e[t+s+4],h=e[t+s+8],c=e[t+s+12],i[n+s]=o*a[r+0]+l*a[r+1]+h*a[r+2]+c*a[r+3],i[n+s+4]=o*a[r+4]+l*a[r+5]+h*a[r+6]+c*a[r+7],i[n+s+8]=o*a[r+8]+l*a[r+9]+h*a[r+10]+c*a[r+11],i[n+s+12]=o*a[r+12]+l*a[r+13]+h*a[r+14]+c*a[r+15]}static mulMatrixByArrayFast(e,t,a,r,i,n){var s,o,l,h,c;for(s=0;s<4;s++)o=e[t+s],l=e[t+s+4],h=e[t+s+8],c=e[t+s+12],i[n+s]=o*a[r+0]+l*a[r+1]+h*a[r+2]+c*a[r+3],i[n+s+4]=o*a[r+4]+l*a[r+5]+h*a[r+6]+c*a[r+7],i[n+s+8]=o*a[r+8]+l*a[r+9]+h*a[r+10]+c*a[r+11],i[n+s+12]=o*a[r+12]+l*a[r+13]+h*a[r+14]+c*a[r+15]}static mulMatrixByArrayAndMatrixFast(e,t,a,r,i){var n,s,o,l,h,c=a.elements,d=c[0],u=c[1],_=c[2],m=c[3],f=c[4],S=c[5],g=c[6],p=c[7],D=c[8],T=c[9],E=c[10],C=c[11],A=c[12],R=c[13],x=c[14],M=c[15],y=t,I=t+4,v=t+8,L=t+12,b=i,P=i+4,O=i+8,B=i+12;for(n=0;n<4;n++)s=e[y+n],o=e[I+n],l=e[v+n],h=e[L+n],r[b+n]=s*d+o*u+l*_+h*m,r[P+n]=s*f+o*S+l*g+h*p,r[O+n]=s*D+o*T+l*E+h*C,r[B+n]=s*A+o*R+l*x+h*M}static createAffineTransformationArray(e,t,a,r,i,n,s,o,l,h,c,d){var u=r+r,_=i+i,m=n+n,f=r*u,S=r*_,g=r*m,p=i*_,D=i*m,T=n*m,E=s*u,C=s*_,A=s*m;c[d+0]=(1-(p+T))*o,c[d+1]=(S+A)*o,c[d+2]=(g-C)*o,c[d+3]=0,c[d+4]=(S-A)*l,c[d+5]=(1-(f+T))*l,c[d+6]=(D+E)*l,c[d+7]=0,c[d+8]=(g+C)*h,c[d+9]=(D-E)*h,c[d+10]=(1-(f+p))*h,c[d+11]=0,c[d+12]=e,c[d+13]=t,c[d+14]=a,c[d+15]=1}static transformVector3ArrayToVector3ArrayCoordinate(e,t,a,r,i){var n=e[t+0],s=e[t+1],o=e[t+2],l=a.elements,h=n*l[3]+s*l[7]+o*l[11]+l[15];r[i]=n*l[0]+s*l[4]+o*l[8]+l[12]/h,r[i+1]=n*l[1]+s*l[5]+o*l[9]+l[13]/h,r[i+2]=n*l[2]+s*l[6]+o*l[10]+l[14]/h}static transformVector3ArrayToVector3ArrayNormal(e,t,a,r,i){var n=e[t+0],s=e[t+1],o=e[t+2],l=a.elements;r[i]=n*l[0]+s*l[4]+o*l[8],r[i+1]=n*l[1]+s*l[5]+o*l[9],r[i+2]=n*l[2]+s*l[6]+o*l[10]}static transformLightingMapTexcoordArray(e,t,a,r,i){r[i+0]=e[t+0]*a.x+a.z,r[i+1]=1-((1-e[t+1])*a.y+a.w)}static getURLVerion(e){var t=e.indexOf("?");return t>=0?e.substr(t):null}static _createAffineTransformationArray(e,t,a,r){var i=t.x,n=t.y,s=t.z,o=t.w,l=i+i,h=n+n,c=s+s,d=i*l,u=i*h,_=i*c,m=n*h,f=n*c,S=s*c,g=o*l,p=o*h,D=o*c,T=a.x,E=a.y,C=a.z;r[0]=(1-(m+S))*T,r[1]=(u+D)*T,r[2]=(_-p)*T,r[3]=0,r[4]=(u-D)*E,r[5]=(1-(d+S))*E,r[6]=(f+g)*E,r[7]=0,r[8]=(_+p)*C,r[9]=(f-g)*C,r[10]=(1-(d+m))*C,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1}static _mulMatrixArray(e,t,a,r,i){var n=t,s=e,o=r,l=n[a],h=n[a+1],c=n[a+2],d=n[a+3],u=n[a+4],_=n[a+5],m=n[a+6],f=n[a+7],S=n[a+8],g=n[a+9],p=n[a+10],D=n[a+11],T=n[a+12],E=n[a+13],C=n[a+14],A=n[a+15],R=s[0],x=s[1],M=s[2],y=s[3],I=s[4],v=s[5],L=s[6],b=s[7],P=s[8],O=s[9],B=s[10],V=s[11],w=s[12],N=s[13],F=s[14],U=s[15];o[i]=l*R+h*I+c*P+d*w,o[i+1]=l*x+h*v+c*O+d*N,o[i+2]=l*M+h*L+c*B+d*F,o[i+3]=l*y+h*b+c*V+d*U,o[i+4]=u*R+_*I+m*P+f*w,o[i+5]=u*x+_*v+m*O+f*N,o[i+6]=u*M+_*L+m*B+f*F,o[i+7]=u*y+_*b+m*V+f*U,o[i+8]=S*R+g*I+p*P+D*w,o[i+9]=S*x+g*v+p*O+D*N,o[i+10]=S*M+g*L+p*B+D*F,o[i+11]=S*y+g*b+p*V+D*U,o[i+12]=T*R+E*I+C*P+A*w,o[i+13]=T*x+E*v+C*O+A*N,o[i+14]=T*M+E*L+C*B+A*F,o[i+15]=T*y+E*b+C*V+A*U}static arcTanAngle(e,t){return 0==e?1==t?Math.PI/2:-Math.PI/2:e>0?Math.atan(t/e):e<0?t>0?Math.atan(t/e)+Math.PI:Math.atan(t/e)-Math.PI:0}static angleTo(e,a,i){t.Vector3.subtract(a,e,r),t.Vector3.normalize(r,r),i.x=Math.asin(r.y),i.y=Utils3D.arcTanAngle(-r.z,-r.x)}static transformQuat(e,t,a){var r=t,i=e.x,n=e.y,s=e.z,o=r[0],l=r[1],h=r[2],c=r[3],d=c*i+l*s-h*n,u=c*n+h*i-o*s,_=c*s+o*n-l*i,m=-o*i-l*n-h*s;a.x=d*c+m*-o+u*-h-_*-l,a.y=u*c+m*-l+_*-o-d*-h,a.z=_*c+m*-h+d*-l-u*-o}static quaternionWeight(e,t,a){a.x=e.x*t,a.y=e.y*t,a.z=e.z*t,a.w=e.w}static quaternionConjugate(e,t){t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=e.w}static scaleWeight(e,t,a){var r=e.x,i=e.y,n=e.z;a.x=r>0?Math.pow(Math.abs(r),t):-Math.pow(Math.abs(r),t),a.y=i>0?Math.pow(Math.abs(i),t):-Math.pow(Math.abs(i),t),a.z=n>0?Math.pow(Math.abs(n),t):-Math.pow(Math.abs(n),t)}static scaleBlend(e,t,a,r){var i=Utils3D._tempVector3_0,n=Utils3D._tempVector3_1;Utils3D.scaleWeight(e,1-a,i),Utils3D.scaleWeight(t,a,n);var s=a>.5?t:e;r.x=s.x>0?Math.abs(i.x*n.x):-Math.abs(i.x*n.x),r.y=s.y>0?Math.abs(i.y*n.y):-Math.abs(i.y*n.y),r.z=s.z>0?Math.abs(i.z*n.z):-Math.abs(i.z*n.z)}static matrix4x4MultiplyFFF(e,t,a){var r,i,n,s,o;if(a===t)for(t=new Float32Array(16),r=0;r<16;++r)t[r]=a[r];var l=t[0],h=t[1],c=t[2],d=t[3],u=t[4],_=t[5],m=t[6],f=t[7],S=t[8],g=t[9],p=t[10],D=t[11],T=t[12],E=t[13],C=t[14],A=t[15];for(r=0;r<4;r++)i=e[r],n=e[r+4],s=e[r+8],o=e[r+12],a[r]=i*l+n*h+s*c+o*d,a[r+4]=i*u+n*_+s*m+o*f,a[r+8]=i*S+n*g+s*p+o*D,a[r+12]=i*T+n*E+s*C+o*A}static matrix4x4MultiplyMFM(e,t,a){Utils3D.matrix4x4MultiplyFFF(e.elements,t,a.elements)}static _buildTexture2D(e,a,r,i,n=!1){var s=new t.Texture2D(e,a,r,n,!0);return s.anisoLevel=1,s.filterMode=t.FilterMode.Point,TextureGenerator._generateTexture2D(s,e,a,i),s}static _drawBound(e,t,a){e.lineCount+12>e.maxLineCount&&(e.maxLineCount+=12);var r=Utils3D._tempVector3_0,i=Utils3D._tempVector3_1,n=t.min,s=t.max;r.setValue(n.x,n.y,n.z),i.setValue(s.x,n.y,n.z),e.addLine(r,i,a,a),r.setValue(n.x,n.y,n.z),i.setValue(n.x,n.y,s.z),e.addLine(r,i,a,a),r.setValue(s.x,n.y,n.z),i.setValue(s.x,n.y,s.z),e.addLine(r,i,a,a),r.setValue(n.x,n.y,s.z),i.setValue(s.x,n.y,s.z),e.addLine(r,i,a,a),r.setValue(n.x,n.y,n.z),i.setValue(n.x,s.y,n.z),e.addLine(r,i,a,a),r.setValue(n.x,n.y,s.z),i.setValue(n.x,s.y,s.z),e.addLine(r,i,a,a),r.setValue(s.x,n.y,n.z),i.setValue(s.x,s.y,n.z),e.addLine(r,i,a,a),r.setValue(s.x,n.y,s.z),i.setValue(s.x,s.y,s.z),e.addLine(r,i,a,a),r.setValue(n.x,s.y,n.z),i.setValue(s.x,s.y,n.z),e.addLine(r,i,a,a),r.setValue(n.x,s.y,n.z),i.setValue(n.x,s.y,s.z),e.addLine(r,i,a,a),r.setValue(s.x,s.y,n.z),i.setValue(s.x,s.y,s.z),e.addLine(r,i,a,a),r.setValue(n.x,s.y,s.z),i.setValue(s.x,s.y,s.z),e.addLine(r,i,a,a)}static _getHierarchyPath(e,t,a){a.length=0;for(var r=t;r!==e;){var i=r._parent;if(!i)return null;a.push(i.getChildIndex(r)),r=i}return a}static _getNodeByHierarchyPath(e,t){for(var a=e,r=t.length-1;r>=0;r--)a=a.getChildAt(t[r]);return a}static _getParentNodeByHierarchyPath(e,t){let a=t.length,r=e;for(let e=0;e<a;e++){if(!r)return null;r=r.parent}return r}static uint8ArrayToArrayBuffer(e){let a,r=e.width,i=e.height;switch(e.colorFormat){case t.RenderTargetFormat.R8G8B8:case t.RenderTargetFormat.R8G8B8A8:a=new Uint8Array(r*i*4);break;case t.RenderTargetFormat.R16G16B16A16:a=new Float32Array(r*i*4);break;default:throw"this function is not surpprt "+e.format.toString()+"format Material"}if(e.getData(0,0,e.width,e.height,a),e.colorFormat===t.RenderTargetFormat.R16G16B16A16){let e=a,t=new Uint8Array(r*i*4);for(let a=0,r=e.length;a<r;a++)t[a]=Math.min(Math.floor(255*e[a]),255);a=t}let n=a;var s;if(t.LayaEnv.isConch);else{var o=new t.HTMLCanvas(!0);o.lock=!0,o.size(r,i);var l=o.getContext("2d"),h=l.createImageData(r,i);h.data.set(new Uint8ClampedArray(n)),l.putImageData(h,0,0),s=o.source.toDataURL(),o.destroy()}return s}}Utils3D._tempVector3_0=new t.Vector3,Utils3D._tempVector3_1=new t.Vector3,Utils3D._tempVector3_2=new t.Vector3,Utils3D._tempArray16_0=new Float32Array(16),Utils3D._tempArray16_1=new Float32Array(16),Utils3D._tempArray16_2=new Float32Array(16),Utils3D._tempArray16_3=new Float32Array(16),Utils3D._compIdToNode=new Object,Utils3D._tempV0=new t.Vector3,Utils3D._tempV1=new t.Vector3,window.getRTBase64=Utils3D.uint8ArrayToArrayBuffer;const r=new t.Vector3;class Transform3D extends t.EventDispatcher{get isDefaultMatrix(){return this._getTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX)&&this.localMatrix,this._isDefaultMatrix}get _isFrontFaceInvert(){if(this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)){var e=this.getWorldLossyScale(),t=e.x<0;e.y<0&&(t=!t),e.z<0&&(t=!t),this._faceInvert=t,this._frontFaceValue=this._faceInvert?-1:1}return this._faceInvert}getFrontFaceValue(){return this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)&&this._isFrontFaceInvert,this._frontFaceValue}get owner(){return this._owner}get worldNeedUpdate(){return this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)}get localPositionX(){return this._localPosition.x}set localPositionX(e){this._localPosition.x=e,this.localPosition=this._localPosition}get localPositionY(){return this._localPosition.y}set localPositionY(e){this._localPosition.y=e,this.localPosition=this._localPosition}get localPositionZ(){return this._localPosition.z}set localPositionZ(e){this._localPosition.z=e,this.localPosition=this._localPosition}get localPosition(){return this._localPosition}set localPosition(e){this._localPosition!==e&&e.cloneTo(this._localPosition),this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX,!0),this._onWorldPositionTransform()}get localRotationX(){return this.localRotation.x}set localRotationX(e){let t=this.localRotation;t.x=e,this.localRotation=t}get localRotationY(){return this.localRotation.y}set localRotationY(e){let t=this.localRotation;t.y=e,this.localRotation=t}get localRotationZ(){return this.localRotation.z}set localRotationZ(e){let t=this.localRotation;t.z=e,this.localRotation=t}get localRotationW(){return this.localRotation.w}set localRotationW(e){let t=this.localRotation;t.w=e,this.localRotation=t}get localRotation(){if(this._getTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION)){var e=this._localRotationEuler;t.Quaternion.createFromYawPitchRoll(e.y/Transform3D._angleToRandin,e.x/Transform3D._angleToRandin,e.z/Transform3D._angleToRandin,this._localRotation),this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION,!1)}return this._localRotation}set localRotation(e){this._localRotation!==e&&e.cloneTo(this._localRotation),this._localRotation.normalize(this._localRotation),this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER|Transform3D.TRANSFORM_LOCALMATRIX,!0),this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION,!1),this._onWorldRotationTransform()}get localScaleX(){return this._localScale.x}set localScaleX(e){this._localScale.x=e,this.localScale=this._localScale}get localScaleY(){return this._localScale.y}set localScaleY(e){this._localScale.y=e,this.localScale=this._localScale}get localScaleZ(){return this._localScale.z}set localScaleZ(e){this._localScale.z=e,this.localScale=this._localScale}get localScale(){return this._localScale}set localScale(e){this._localScale!==e&&e.cloneTo(this._localScale),this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX,!0),this._onWorldScaleTransform()}get localRotationEulerX(){return this.localRotationEuler.x}set localRotationEulerX(e){let t=this.localRotationEuler;t.x=e,this.localRotationEuler=t}get localRotationEulerY(){return this.localRotationEuler.y}set localRotationEulerY(e){let t=this.localRotationEuler;t.y=e,this.localRotationEuler=t}get localRotationEulerZ(){return this.localRotationEuler.z}set localRotationEulerZ(e){let t=this.localRotationEuler;t.z=e,this.localRotationEuler=t}get localRotationEuler(){if(this._getTransformFlag(Transform3D.TRANSFORM_LOCALEULER)){this._localRotation.getYawPitchRoll(Transform3D._tempVector30);var e=Transform3D._tempVector30,t=this._localRotationEuler;t.x=e.y*Transform3D._angleToRandin,t.y=e.x*Transform3D._angleToRandin,t.z=e.z*Transform3D._angleToRandin,this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER,!1)}return this._localRotationEuler}set localRotationEuler(e){this._localRotationEuler!==e&&e.cloneTo(this._localRotationEuler),this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER,!1),this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION|Transform3D.TRANSFORM_LOCALMATRIX,!0),this._onWorldRotationTransform()}get localMatrix(){return this._getTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX)&&(t.Matrix4x4.createAffineTransformation(this._localPosition,this.localRotation,this._localScale,this._localMatrix),this._isDefaultMatrix=this._localMatrix.isIdentity(),this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX,!1)),this._localMatrix}set localMatrix(e){this._localMatrix!==e&&e.cloneTo(this._localMatrix),this._isDefaultMatrix=this._localMatrix.isIdentity(),this._localMatrix.decomposeTransRotScale(this._localPosition,this._localRotation,this._localScale),this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER,!0),this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX,!1),this._onWorldTransform()}get position(){if(this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)){if(null!=this._parent){var e=this.worldMatrix.elements;this._position.x=e[12],this._position.y=e[13],this._position.z=e[14]}else this._localPosition.cloneTo(this._position);this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION,!1)}return this._position}set position(e){if(null!=this._parent){var a=Transform3D._tempMatrix0;this._parent.worldMatrix.invert(a),t.Vector3.transformCoordinate(e,a,this._localPosition)}else e.cloneTo(this._localPosition);this.localPosition=this._localPosition,this._position!==e&&e.cloneTo(this._position),this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION,!1)}get rotation(){return this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)&&(null!=this._parent?t.Quaternion.multiply(this._parent.rotation,this.localRotation,this._rotation):this.localRotation.cloneTo(this._rotation),this._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION,!1)),this._rotation}set rotation(e){null!=this._parent?(this._parent.rotation.invert(Transform3D._tempQuaternion0),t.Quaternion.multiply(Transform3D._tempQuaternion0,e,this._localRotation)):e.cloneTo(this._localRotation),this.localRotation=this._localRotation,e!==this._rotation&&e.cloneTo(this._rotation),this._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION,!1)}get rotationEuler(){if(this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)){this.rotation.getYawPitchRoll(Transform3D._tempVector30);var e=Transform3D._tempVector30,t=this._rotationEuler;t.x=e.y*Transform3D._angleToRandin,t.y=e.x*Transform3D._angleToRandin,t.z=e.z*Transform3D._angleToRandin,this._setTransformFlag(Transform3D.TRANSFORM_WORLDEULER,!1)}return this._rotationEuler}set rotationEuler(e){t.Quaternion.createFromYawPitchRoll(e.y/Transform3D._angleToRandin,e.x/Transform3D._angleToRandin,e.z/Transform3D._angleToRandin,this._rotation),this.rotation=this._rotation,this._rotationEuler!==e&&e.cloneTo(this._rotationEuler),this._setTransformFlag(Transform3D.TRANSFORM_WORLDEULER,!1)}get worldMatrix(){if(this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)){if(null!=this._parent){let e=this._parent;for(;e._parent&&e.isDefaultMatrix;)e=e._parent;t.Matrix4x4.multiply(e.worldMatrix,this.localMatrix,this._worldMatrix)}else this.localMatrix.cloneTo(this._worldMatrix);this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX,!1)}return this._worldMatrix}set worldMatrix(e){null===this._parent?e.cloneTo(this._localMatrix):(this._parent.worldMatrix.invert(this._localMatrix),t.Matrix4x4.multiply(this._localMatrix,e,this._localMatrix)),this.localMatrix=this._localMatrix,this._worldMatrix!==e&&e.cloneTo(this._worldMatrix),this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX,!1)}constructor(e){super(),this._localPosition=new t.Vector3(0,0,0),this._localRotation=new t.Quaternion(0,0,0,1),this._localScale=new t.Vector3(1,1,1),this._localRotationEuler=new t.Vector3(0,0,0),this._localMatrix=new t.Matrix4x4,this._position=new t.Vector3(0,0,0),this._rotation=new t.Quaternion(0,0,0,1),this._scale=new t.Vector3(1,1,1),this._rotationEuler=new t.Vector3(0,0,0),this._worldMatrix=new t.Matrix4x4,this._children=null,this._isDefaultMatrix=!1,this._faceInvert=!1,this._frontFaceValue=1,this._parent=null,this._transformFlag=0,this._owner=e,this._children=[],this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION|Transform3D.TRANSFORM_LOCALEULER|Transform3D.TRANSFORM_LOCALMATRIX,!1),this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION|Transform3D.TRANSFORM_WORLDQUATERNION|Transform3D.TRANSFORM_WORLDEULER|Transform3D.TRANSFORM_WORLDSCALE|Transform3D.TRANSFORM_WORLDMATRIX,!0)}_getScaleMatrix(){var e=Transform3D._tempQuaternion0,a=Transform3D._tempMatrix3x30,r=Transform3D._tempMatrix3x31,i=Transform3D._tempMatrix3x32;return t.Matrix3x3.createFromMatrix4x4(this.worldMatrix,r),this.rotation.invert(e),t.Matrix3x3.createRotationQuaternion(e,a),t.Matrix3x3.multiply(a,r,i),i}_setTransformFlag(e,t){t?this._transformFlag|=e:this._transformFlag&=~e}_getTransformFlag(e){return 0!=(this._transformFlag&e)}_setParent(e){if(this._parent!==e){if(this._parent){var t=this._parent._children,a=t.indexOf(this);t.splice(a,1)}e&&(e._children.push(this),e&&this._onWorldTransform()),this._parent=e}}_onWorldPositionRotationTransform(){this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)||(this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX|Transform3D.TRANSFORM_WORLDPOSITION|Transform3D.TRANSFORM_WORLDQUATERNION|Transform3D.TRANSFORM_WORLDEULER,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,a=this._children.length;e<a;e++)this._children[e]._onWorldPositionRotationTransform()}_onWorldPositionScaleTransform(){this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)||(this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX|Transform3D.TRANSFORM_WORLDPOSITION|Transform3D.TRANSFORM_WORLDSCALE,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,a=this._children.length;e<a;e++)this._children[e]._onWorldPositionScaleTransform()}_onWorldPositionTransform(){this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)||(this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX|Transform3D.TRANSFORM_WORLDPOSITION,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,a=this._children.length;e<a;e++)this._children[e]._onWorldPositionTransform()}_onWorldRotationTransform(){this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)||(this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX|Transform3D.TRANSFORM_WORLDQUATERNION|Transform3D.TRANSFORM_WORLDEULER,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,a=this._children.length;e<a;e++)this._children[e]._onWorldPositionRotationTransform()}_onWorldScaleTransform(){this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)||(this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX|Transform3D.TRANSFORM_WORLDSCALE,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,a=this._children.length;e<a;e++)this._children[e]._onWorldPositionScaleTransform()}_onWorldTransform(){this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)&&this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)||(this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX|Transform3D.TRANSFORM_WORLDPOSITION|Transform3D.TRANSFORM_WORLDQUATERNION|Transform3D.TRANSFORM_WORLDEULER|Transform3D.TRANSFORM_WORLDSCALE,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,a=this._children.length;e<a;e++)this._children[e]._onWorldTransform()}translate(e,a=!0){a?(t.Matrix4x4.createFromQuaternion(this.localRotation,Transform3D._tempMatrix0),t.Vector3.transformCoordinate(e,Transform3D._tempMatrix0,Transform3D._tempVector30),t.Vector3.add(this.localPosition,Transform3D._tempVector30,this._localPosition),this.localPosition=this._localPosition):(t.Vector3.add(this.position,e,this._position),this.position=this._position)}rotate(e,a=!0,r=!0){var i;r?i=e:(t.Vector3.scale(e,Math.PI/180,Transform3D._tempVector30),i=Transform3D._tempVector30),t.Quaternion.createFromYawPitchRoll(i.y,i.x,i.z,Transform3D._tempQuaternion0),a?(t.Quaternion.multiply(this._localRotation,Transform3D._tempQuaternion0,this._localRotation),this.localRotation=this._localRotation):(t.Quaternion.multiply(Transform3D._tempQuaternion0,this.rotation,this._rotation),this.rotation=this._rotation)}getForward(e){var t=this.worldMatrix.elements;e.x=-t[8],e.y=-t[9],e.z=-t[10]}getUp(e){var t=this.worldMatrix.elements;e.x=t[4],e.y=t[5],e.z=t[6]}getRight(e){var t=this.worldMatrix.elements;e.x=t[0],e.y=t[1],e.z=t[2]}lookAt(e,a,r=!1,i=!0){var n;if(r){if(n=this._localPosition,Math.abs(n.x-e.x)<t.MathUtils3D.zeroTolerance&&Math.abs(n.y-e.y)<t.MathUtils3D.zeroTolerance&&Math.abs(n.z-e.z)<t.MathUtils3D.zeroTolerance)return;i?(t.Quaternion.lookAt(this._localPosition,e,a,this._localRotation),this._localRotation.invert(this._localRotation)):(t.Vector3.subtract(this.localPosition,e,Transform3D._tempVector30),t.Quaternion.rotationLookAt(Transform3D._tempVector30,a,this.localRotation),this._localRotation.invert(this._localRotation)),this.localRotation=this._localRotation}else{var s=this.position;if(n=s,Math.abs(n.x-e.x)<t.MathUtils3D.zeroTolerance&&Math.abs(n.y-e.y)<t.MathUtils3D.zeroTolerance&&Math.abs(n.z-e.z)<t.MathUtils3D.zeroTolerance)return;i?(t.Quaternion.lookAt(s,e,a,this._rotation),this._rotation.invert(this._rotation)):(t.Vector3.subtract(this.position,e,Transform3D._tempVector30),t.Quaternion.rotationLookAt(Transform3D._tempVector30,a,this._rotation),this._rotation.invert(this._rotation)),this.rotation=this._rotation}}objLookat(e,t,a=!1){}getWorldLossyScale(){if(this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)){if(null!==this._parent){var e=this._getScaleMatrix().elements;this._scale.x=e[0],this._scale.y=e[4],this._scale.z=e[8]}else this._localScale.cloneTo(this._scale);this._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE,!1)}return this._scale}setWorldLossyScale(e){if(null!==this._parent){var a=Transform3D._tempMatrix3x33,r=Transform3D._tempMatrix3x33,i=r.elements,n=this._parent._getScaleMatrix();n.invert(n),t.Matrix3x3.createFromScaling(e,a),t.Matrix3x3.multiply(n,a,r),this._localScale.x=i[0],this._localScale.y=i[4],this._localScale.z=i[8]}else e.cloneTo(this._localScale);this.localScale=this._localScale,this._scale!==e&&e.cloneTo(this._scale),this._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE,!1)}get scale(){return console.warn("Transfrm3D: discard function,please use getWorldLossyScale instead."),this.getWorldLossyScale()}set scale(e){console.warn("Transfrm3D: discard function,please use setWorldLossyScale instead."),this.setWorldLossyScale(e)}localToGlobal(e,a){t.Vector3.transformV3ToV3(e,this.worldMatrix,a)}globalToLocal(e,a){this.worldMatrix.invert(Transform3D._tempMatrix0),t.Vector3.transformV3ToV3(e,Transform3D._tempMatrix0,a)}toLocalNormal(e,a){this.worldMatrix.invert(Transform3D._tempMatrix0),t.Vector3.TransformNormal(e,Transform3D._tempMatrix0,a)}toDir(e,t){this.worldMatrix,this.rotationTo(this.rotation,e,t),this.rotation=this.rotation}rotationTo(e,a,r){var i=t.Vector3.dot(a,r);return t.Vector3.Up,i<-.999999?(t.Vector3.cross(t.Vector3.UnitX,a,Transform3D.tmpVec3),t.Vector3.scalarLength(Transform3D.tmpVec3)<1e-6&&t.Vector3.cross(t.Vector3.UnitY,a,Transform3D.tmpVec3),t.Vector3.normalize(Transform3D.tmpVec3,Transform3D.tmpVec3),t.Quaternion.createFromAxisAngle(Transform3D.tmpVec3,Math.PI,e),!0):i>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,!1):(t.Vector3.cross(a,r,Transform3D.tmpVec3),e.x=Transform3D.tmpVec3.x,e.y=Transform3D.tmpVec3.y,e.z=Transform3D.tmpVec3.z,e.w=1+i,e.normalize(e),!0)}}Transform3D._tempVector30=new t.Vector3,Transform3D._tempQuaternion0=new t.Quaternion,Transform3D._tempMatrix0=new t.Matrix4x4,Transform3D._tempMatrix3x30=new t.Matrix3x3,Transform3D._tempMatrix3x31=new t.Matrix3x3,Transform3D._tempMatrix3x32=new t.Matrix3x3,Transform3D._tempMatrix3x33=new t.Matrix3x3,Transform3D.TRANSFORM_LOCALQUATERNION=1,Transform3D.TRANSFORM_LOCALEULER=2,Transform3D.TRANSFORM_LOCALMATRIX=4,Transform3D.TRANSFORM_WORLDPOSITION=8,Transform3D.TRANSFORM_WORLDQUATERNION=16,Transform3D.TRANSFORM_WORLDSCALE=32,Transform3D.TRANSFORM_WORLDMATRIX=64,Transform3D.TRANSFORM_WORLDEULER=128,Transform3D._angleToRandin=180/Math.PI,Transform3D.tmpVec3=new t.Vector3;class ColliderShape{static __init__(){var e=ILaya3D.Physics3D._bullet;ColliderShape._btScale=e.btVector3_create(1,1,1),ColliderShape._btVector30=e.btVector3_create(0,0,0),ColliderShape._btQuaternion0=e.btQuaternion_create(0,0,0,1),ColliderShape._btTransform0=e.btTransform_create()}static _createAffineTransformation(e,t,a){var r=t.x,i=t.y,n=t.z,s=t.w,o=r+r,l=i+i,h=n+n,c=r*o,d=r*l,u=r*h,_=i*l,m=i*h,f=n*h,S=s*o,g=s*l,p=s*h;a[0]=1-(_+f),a[1]=d+p,a[2]=u-g,a[3]=0,a[4]=d-p,a[5]=1-(c+f),a[6]=m+S,a[7]=0,a[8]=u+g,a[9]=m-S,a[10]=1-(c+_),a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1}get type(){return this._type}get localOffset(){return this._localOffset}set localOffset(e){this._localOffset=e,this._compoundParent&&this._compoundParent._updateChildTransform(this)}get localRotation(){return this._localRotation}set localRotation(e){this._localRotation=e,this._compoundParent&&this._compoundParent._updateChildTransform(this)}constructor(){this._scale=new t.Vector3(1,1,1),this._centerMatrix=new t.Matrix4x4,this._attatched=!1,this._indexInCompound=-1,this._compoundParent=null,this._attatchedCollisionObject=null,this._referenceCount=0,this._localOffset=new t.Vector3(0,0,0),this._localRotation=new t.Quaternion(0,0,0,1),this.needsCustomCollisionCallback=!1}_setScale(e){if(this._compoundParent)this.updateLocalTransformations();else{var t=ILaya3D.Physics3D._bullet;t.btVector3_setValue(ColliderShape._btScale,e.x,e.y,e.z),t.btCollisionShape_setLocalScaling(this._btShape,ColliderShape._btScale)}}updateLocalTransformations(){if(this._compoundParent){var e=ColliderShape._tempVector30;t.Vector3.multiply(this.localOffset,this._scale,e),ColliderShape._createAffineTransformation(e,this.localRotation,this._centerMatrix.elements)}else ColliderShape._createAffineTransformation(this.localOffset,this.localRotation,this._centerMatrix.elements)}cloneTo(e){var t=e;this._localOffset.cloneTo(t.localOffset),this._localRotation.cloneTo(t.localRotation),t.localOffset=t.localOffset,t.localRotation=t.localRotation}clone(){return null}destroy(){this._btShape&&(ILaya3D.Physics3D._bullet.btCollisionShape_destroy(this._btShape),this._btShape=null)}}ColliderShape.SHAPEORIENTATION_UPX=0,ColliderShape.SHAPEORIENTATION_UPY=1,ColliderShape.SHAPEORIENTATION_UPZ=2,ColliderShape.SHAPETYPES_BOX=0,ColliderShape.SHAPETYPES_SPHERE=1,ColliderShape.SHAPETYPES_CYLINDER=2,ColliderShape.SHAPETYPES_CAPSULE=3,ColliderShape.SHAPETYPES_CONVEXHULL=4,ColliderShape.SHAPETYPES_COMPOUND=5,ColliderShape.SHAPETYPES_STATICPLANE=6,ColliderShape.SHAPETYPES_CONE=7,ColliderShape.SHAPETYPES_HEIGHTFIELDTERRAIN=8,ColliderShape._tempVector30=new t.Vector3;class BoxColliderShape extends ColliderShape{static __init__(){BoxColliderShape._btSize=ILaya3D.Physics3D._bullet.btVector3_create(0,0,0)}get sizeX(){return this._sizeX}set sizeX(e){this._sizeX=e,t.LayaEnv.isPlaying&&this.changeBoxShape()}get sizeY(){return this._sizeY}set sizeY(e){this._sizeY=e,t.LayaEnv.isPlaying&&this.changeBoxShape()}get sizeZ(){return this._sizeZ}set sizeZ(e){this._sizeZ=e,t.LayaEnv.isPlaying&&this.changeBoxShape()}constructor(e=1,t=1,a=1){super(),this._sizeX=e,this._sizeY=t,this._sizeZ=a,this._type=ColliderShape.SHAPETYPES_BOX;var r=ILaya3D.Physics3D._bullet;r.btVector3_setValue(BoxColliderShape._btSize,e/2,t/2,a/2),this._btShape=r.btBoxShape_create(BoxColliderShape._btSize)}changeBoxShape(){var e=ILaya3D.Physics3D._bullet;this._btShape&&e.btCollisionShape_destroy(this._btShape),e.btVector3_setValue(BoxColliderShape._btSize,this._sizeX/2,this._sizeY/2,this._sizeZ/2),this._btShape=e.btBoxShape_create(BoxColliderShape._btSize)}clone(){var e=new BoxColliderShape(this._sizeX,this._sizeY,this._sizeZ);return this.cloneTo(e),e}}class CapsuleColliderShape extends ColliderShape{get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeCapsuleShape()}get length(){return this._length}set length(e){this._length=e,t.LayaEnv.isPlaying&&this.changeCapsuleShape()}get orientation(){return this._orientation}set orientation(e){this._orientation=e,t.LayaEnv.isPlaying&&this.changeCapsuleShape()}constructor(e=.5,t=2,a=ColliderShape.SHAPEORIENTATION_UPY){super(),this._radius=e,this._length=t,this._orientation=a,this._type=ColliderShape.SHAPETYPES_CAPSULE;var r=ILaya3D.Physics3D._bullet;switch(a){case ColliderShape.SHAPEORIENTATION_UPX:this._btShape=r.btCapsuleShapeX_create(e,t-2*e);break;case ColliderShape.SHAPEORIENTATION_UPY:this._btShape=r.btCapsuleShape_create(e,t-2*e);break;case ColliderShape.SHAPEORIENTATION_UPZ:this._btShape=r.btCapsuleShapeZ_create(e,t-2*e);break;default:throw"CapsuleColliderShape:unknown orientation."}}changeCapsuleShape(){var e=ILaya3D.Physics3D._bullet;switch(this._btShape&&e.btCollisionShape_destroy(this._btShape),this._orientation){case ColliderShape.SHAPEORIENTATION_UPX:this._btShape=e.btCapsuleShapeX_create(this._radius,this._length-2*this._radius);break;case ColliderShape.SHAPEORIENTATION_UPY:this._btShape=e.btCapsuleShape_create(this._radius,this._length-2*this._radius);break;case ColliderShape.SHAPEORIENTATION_UPZ:this._btShape=e.btCapsuleShapeZ_create(this._radius,this._length-2*this._radius);break;default:throw"CapsuleColliderShape:unknown orientation."}}_setScale(e){var t=CapsuleColliderShape._tempVector30;switch(this.orientation){case ColliderShape.SHAPEORIENTATION_UPX:t.x=e.x,t.y=t.z=Math.max(e.y,e.z);break;case ColliderShape.SHAPEORIENTATION_UPY:t.y=e.y,t.x=t.z=Math.max(e.x,e.z);break;case ColliderShape.SHAPEORIENTATION_UPZ:t.z=e.z,t.x=t.y=Math.max(e.x,e.y);break;default:throw"CapsuleColliderShape:unknown orientation."}super._setScale(t)}clone(){var e=new CapsuleColliderShape(this._radius,this._length,this._orientation);return this.cloneTo(e),e}}CapsuleColliderShape._tempVector30=new t.Vector3;class CompoundColliderShape extends ColliderShape{static __init__(){var e=ILaya3D.Physics3D._bullet;CompoundColliderShape._btVector3One=e.btVector3_create(1,1,1),CompoundColliderShape._btTransform=e.btTransform_create(),CompoundColliderShape._btOffset=e.btVector3_create(0,0,0),CompoundColliderShape._btRotation=e.btQuaternion_create(0,0,0,1)}constructor(){super(),this._childColliderShapes=[],this._type=ColliderShape.SHAPETYPES_COMPOUND,this._btShape=ILaya3D.Physics3D._bullet.btCompoundShape_create()}_clearChildShape(e){e._attatched=!1,e._compoundParent=null,e._indexInCompound=-1}_updateChildTransform(e){var t=ILaya3D.Physics3D._bullet,a=e.localOffset,r=e.localRotation,i=ColliderShape._btVector30,n=ColliderShape._btQuaternion0,s=ColliderShape._btTransform0;t.btVector3_setValue(i,a.x,a.y,a.z),t.btQuaternion_setValue(n,r.x,r.y,r.z,r.w),t.btTransform_setOrigin(s,i),t.btTransform_setRotation(s,n),t.btCompoundShape_updateChildTransform(this._btShape,e._indexInCompound,s,!0)}set shapes(e){for(var t=this._childColliderShapes.length-1;t>=0;t--)this.removeChildShape(this._childColliderShapes[t]);for(t=0;t<e.length;t++)this.addChildShape(e[t])}get shapes(){return this._childColliderShapes}addChildShape(e){if(e._attatched)throw"CompoundColliderShape: this shape has attatched to other entity.";e._attatched=!0,e._compoundParent=this,e._indexInCompound=this._childColliderShapes.length,this._childColliderShapes.push(e);var t=e.localOffset,a=e.localRotation,r=ILaya3D.Physics3D._bullet;r.btVector3_setValue(CompoundColliderShape._btOffset,t.x,t.y,t.z),r.btQuaternion_setValue(CompoundColliderShape._btRotation,a.x,a.y,a.z,a.w),r.btTransform_setOrigin(CompoundColliderShape._btTransform,CompoundColliderShape._btOffset),r.btTransform_setRotation(CompoundColliderShape._btTransform,CompoundColliderShape._btRotation);var i=r.btCollisionShape_getLocalScaling(this._btShape);r.btCollisionShape_setLocalScaling(this._btShape,CompoundColliderShape._btVector3One),r.btCompoundShape_addChildShape(this._btShape,CompoundColliderShape._btTransform,e._btShape),r.btCollisionShape_setLocalScaling(this._btShape,i),this._attatchedCollisionObject&&(this._attatchedCollisionObject.colliderShape=this)}removeChildShape(e){if(e._compoundParent===this){var t=e._indexInCompound;this._clearChildShape(e);var a=this._childColliderShapes[this._childColliderShapes.length-1];a._indexInCompound=t,this._childColliderShapes[t]=a,this._childColliderShapes.pop(),ILaya3D.Physics3D._bullet.btCompoundShape_removeChildShapeByIndex(this._btShape,t)}}clearChildShape(){for(var e=0,t=this._childColliderShapes.length;e<t;e++)this._clearChildShape(this._childColliderShapes[e]),ILaya3D.Physics3D._bullet.btCompoundShape_removeChildShapeByIndex(this._btShape,0);this._childColliderShapes.length=0}getChildShapeCount(){return this._childColliderShapes.length}cloneTo(e){var t=e;t.clearChildShape();for(var a=0,r=this._childColliderShapes.length;a<r;a++)t.addChildShape(this._childColliderShapes[a].clone())}clone(){var e=new CompoundColliderShape;return this.cloneTo(e),e}destroy(){super.destroy();for(var e=0,t=this._childColliderShapes.length;e<t;e++){var a=this._childColliderShapes[e];0===a._referenceCount&&a.destroy()}}}class ConeColliderShape extends ColliderShape{get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeConeShape()}get height(){return this._height}set height(e){this._height=e,t.LayaEnv.isPlaying&&this.changeConeShape()}get orientation(){return this._orientation}set orientation(e){this._orientation=e,t.LayaEnv.isPlaying&&this.changeConeShape()}constructor(e=.5,t=1,a=ColliderShape.SHAPEORIENTATION_UPY){super(),this._radius=1,this._height=.5,this._radius=e,this._height=t,this._orientation=a,this._type=ColliderShape.SHAPETYPES_CYLINDER;var r=ILaya3D.Physics3D._bullet;switch(a){case ColliderShape.SHAPEORIENTATION_UPX:this._btShape=r.btConeShapeX_create(e,t);break;case ColliderShape.SHAPEORIENTATION_UPY:this._btShape=r.btConeShape_create(e,t);break;case ColliderShape.SHAPEORIENTATION_UPZ:this._btShape=r.btConeShapeZ_create(e,t);break;default:throw"ConeColliderShape:unknown orientation."}}changeConeShape(){var e=ILaya3D.Physics3D._bullet;switch(this._btShape&&e.btCollisionShape_destroy(this._btShape),this._orientation){case ColliderShape.SHAPEORIENTATION_UPX:this._btShape=e.btConeShapeX_create(this._radius,this._height);break;case ColliderShape.SHAPEORIENTATION_UPY:this._btShape=e.btConeShape_create(this._radius,this._height);break;case ColliderShape.SHAPEORIENTATION_UPZ:this._btShape=e.btConeShapeZ_create(this._radius,this._height);break;default:throw"ConeColliderShape:unknown orientation."}}clone(){var e=new ConeColliderShape(this._radius,this._height,this._orientation);return this.cloneTo(e),e}}class CylinderColliderShape extends ColliderShape{static __init__(){CylinderColliderShape._btSize=ILaya3D.Physics3D._bullet.btVector3_create(0,0,0)}get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeCylinder()}get height(){return this._height}set height(e){this._height=e,t.LayaEnv.isPlaying&&this.changeCylinder()}get orientation(){return this._orientation}set orientation(e){this._orientation=e,t.LayaEnv.isPlaying&&this.changeCylinder()}constructor(e=.5,t=1,a=ColliderShape.SHAPEORIENTATION_UPY){super(),this._radius=1,this._height=.5,this._radius=e,this._height=t,this._orientation=a,this._type=ColliderShape.SHAPETYPES_CYLINDER;var r=ILaya3D.Physics3D._bullet;switch(a){case ColliderShape.SHAPEORIENTATION_UPX:r.btVector3_setValue(CylinderColliderShape._btSize,t/2,e,e),this._btShape=r.btCylinderShapeX_create(CylinderColliderShape._btSize);break;case ColliderShape.SHAPEORIENTATION_UPY:r.btVector3_setValue(CylinderColliderShape._btSize,e,t/2,e),this._btShape=r.btCylinderShape_create(CylinderColliderShape._btSize);break;case ColliderShape.SHAPEORIENTATION_UPZ:r.btVector3_setValue(CylinderColliderShape._btSize,e,e,t/2),this._btShape=r.btCylinderShapeZ_create(CylinderColliderShape._btSize);break;default:throw"CapsuleColliderShape:unknown orientation."}}changeCylinder(){var e=ILaya3D.Physics3D._bullet;switch(this._btShape&&e.btCollisionShape_destroy(this._btShape),this._orientation){case ColliderShape.SHAPEORIENTATION_UPX:e.btVector3_setValue(CylinderColliderShape._btSize,this._height/2,this._radius,this._radius),this._btShape=e.btCylinderShapeX_create(CylinderColliderShape._btSize);break;case ColliderShape.SHAPEORIENTATION_UPY:e.btVector3_setValue(CylinderColliderShape._btSize,this._radius,this._height/2,this._radius),this._btShape=e.btCylinderShape_create(CylinderColliderShape._btSize);break;case ColliderShape.SHAPEORIENTATION_UPZ:e.btVector3_setValue(CylinderColliderShape._btSize,this._radius,this._radius,this._height/2),this._btShape=e.btCylinderShapeZ_create(CylinderColliderShape._btSize);break;default:throw"CapsuleColliderShape:unknown orientation."}}clone(){var e=new CylinderColliderShape(this._radius,this._height,this._orientation);return this.cloneTo(e),e}}class MeshColliderShape extends ColliderShape{get mesh(){return this._mesh}set mesh(e){if(e&&this._mesh!==e){var t=ILaya3D.Physics3D._bullet;this._physicMesh=e._getPhysicMesh(),this._mesh&&t.btCollisionShape_destroy(this._btShape),this._setPhysicsMesh(),this._mesh=e}}get convex(){return this._convex}set convex(e){this._convex=e}constructor(){super(),this._mesh=null,this._convex=!1}_setPhysicsMesh(){this._createBvhTriangleCollider()}_createDynamicMeshCollider(){var e=ILaya3D.Physics3D._bullet;this._physicMesh&&(this._btShape=e.btGImpactMeshShape_create(this._physicMesh),e.btGImpactShapeInterface_updateBound(this._btShape))}_createBvhTriangleCollider(){var e=ILaya3D.Physics3D._bullet;this._physicMesh&&(this._btShape=e.btBvhTriangleMeshShape_create(this._physicMesh))}_setScale(e){if(this._compoundParent)this.updateLocalTransformations();else{var t=ILaya3D.Physics3D._bullet;t.btVector3_setValue(ColliderShape._btScale,e.x,e.y,e.z),t.btCollisionShape_setLocalScaling(this._btShape,ColliderShape._btScale),this._attatchedCollisionObject&&this._attatchedCollisionObject._enableProcessCollisions&&t.btGImpactShapeInterface_updateBound(this._btShape)}}cloneTo(e){var t=e;t.convex=this._convex,t.mesh=this._mesh,super.cloneTo(e)}clone(){var e=new MeshColliderShape;return this.cloneTo(e),e}destroy(){this._btShape&&(ILaya3D.Physics3D._bullet.btCollisionShape_destroy(this._btShape),this._btShape=null)}}class SphereColliderShape extends ColliderShape{get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeSphere()}constructor(e=.5){super(),this._radius=e,this._type=ColliderShape.SHAPETYPES_SPHERE,this._btShape=ILaya3D.Physics3D._bullet.btSphereShape_create(e)}changeSphere(){var e=ILaya3D.Physics3D._bullet;this._btShape&&e.btCollisionShape_destroy(this._btShape),this._btShape=ILaya3D.Physics3D._bullet.btSphereShape_create(this._radius)}clone(){var e=new SphereColliderShape(this._radius);return this.cloneTo(e),e}}class PhysicsComponent extends t.Component{static __init__(){var e=ILaya3D.Physics3D._bullet;PhysicsComponent._btVector30=e.btVector3_create(0,0,0),PhysicsComponent._btQuaternion0=e.btQuaternion_create(0,0,0,1)}static _createAffineTransformationArray(e,t,a,r,i,n,s,o,l){var h=r+r,c=i+i,d=n+n,u=r*h,_=r*c,m=r*d,f=i*c,S=i*d,g=n*d,p=s*h,D=s*c,T=s*d,E=o[0],C=o[1],A=o[2];l[0]=(1-(f+g))*E,l[1]=(_+T)*E,l[2]=(m-D)*E,l[3]=0,l[4]=(_-T)*C,l[5]=(1-(u+g))*C,l[6]=(S+p)*C,l[7]=0,l[8]=(m+D)*A,l[9]=(S-p)*A,l[10]=(1-(u+f))*A,l[11]=0,l[12]=e,l[13]=t,l[14]=a,l[15]=1}static _creatShape(e){var a;switch(e.type){case"BoxColliderShape":var r=e.size;a=r?new BoxColliderShape(r[0],r[1],r[2]):new BoxColliderShape;break;case"SphereColliderShape":a=new SphereColliderShape(e.radius);break;case"CapsuleColliderShape":a=new CapsuleColliderShape(e.radius,e.height,e.orientation);break;case"MeshColliderShape":var i=new MeshColliderShape;e.mesh&&(i.mesh=t.Loader.getRes(e.mesh)),a=i;break;case"ConeColliderShape":a=new ConeColliderShape(e.radius,e.height,e.orientation);break;case"CylinderColliderShape":a=new CylinderColliderShape(e.radius,e.height,e.orientation);break;default:throw"unknown shape type."}if(e.center){var n=a.localOffset;n.fromArray(e.center),a.localOffset=n}return a}static physicVector3TransformQuat(e,t,a,r,i,n){var s=e.x,o=e.y,l=e.z,h=i*s+a*l-r*o,c=i*o+r*s-t*l,d=i*l+t*o-a*s,u=-t*s-a*o-r*l;n.x=h*i+u*-t+c*-r-d*-a,n.y=c*i+u*-a+d*-t-h*-r,n.z=d*i+u*-r+h*-a-c*-t}static physicQuaternionMultiply(e,t,a,r,i,n){var s=i.x,o=i.y,l=i.z,h=i.w,c=t*l-a*o,d=a*s-e*l,u=e*o-t*s,_=e*s+t*o+a*l;n.x=e*h+s*r+c,n.y=t*h+o*r+d,n.z=a*h+l*r+u,n.w=r*h-_}get restitution(){return this._restitution}set restitution(e){this._restitution=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_setRestitution(this._btColliderObject,e)}get friction(){return this._friction}set friction(e){this._friction=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_setFriction(this._btColliderObject,e)}get rollingFriction(){return this._rollingFriction}set rollingFriction(e){this._rollingFriction=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_setRollingFriction(this._btColliderObject,e)}get ccdMotionThreshold(){return this._ccdMotionThreshold}set ccdMotionThreshold(e){this._ccdMotionThreshold=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_setCcdMotionThreshold(this._btColliderObject,e)}get ccdSweptSphereRadius(){return this._ccdSweptSphereRadius}set ccdSweptSphereRadius(e){this._ccdSweptSphereRadius=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_setCcdSweptSphereRadius(this._btColliderObject,e)}get isActive(){return!!this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_isActive(this._btColliderObject)}get colliderShape(){return this._colliderShape}set colliderShape(e){var t=this._colliderShape;if(t&&(t._attatched=!1,t._attatchedCollisionObject=null),this._colliderShape=e,e){if(e._attatched)throw"PhysicsComponent: this shape has attatched to other entity.";if(e._attatched=!0,e._attatchedCollisionObject=this,this._btColliderObject){ILaya3D.Physics3D._bullet.btCollisionObject_setCollisionShape(this._btColliderObject,e._btShape);var a=this._simulation&&this._enabled;a&&t&&this._removeFromSimulation(),this._onShapeChange(e),a&&(this._derivePhysicsTransformation(!0),this._addToSimulation())}}else this._simulation&&this._enabled&&t&&this._removeFromSimulation()}get simulation(){return this._simulation}get collisionGroup(){return this._collisionGroup}set collisionGroup(e){this._collisionGroup!==e&&(this._collisionGroup=e,this._simulation&&this._colliderShape&&this._enabled&&(this._removeFromSimulation(),this._addToSimulation()))}get canCollideWith(){return this._canCollideWith}set canCollideWith(e){this._canCollideWith!==e&&(this._canCollideWith=e,this._simulation&&this._colliderShape&&this._enabled&&(this._removeFromSimulation(),this._addToSimulation()))}constructor(e,t){super(),this._restitution=0,this._friction=.5,this._rollingFriction=0,this._ccdMotionThreshold=0,this._ccdSweptSphereRadius=0,this._collisionGroup=Physics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER,this._canCollideWith=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,this._colliderShape=null,this._transformFlag=2147483647,this._controlBySimulation=!1,this._enableProcessCollisions=!0,this._inPhysicUpdateListIndex=-1,this.canScaleShape=!0,this._collisionGroup=e,this._canCollideWith=t,PhysicsComponent._physicObjectsMap[this.id]=this}_parseShape(e){var t=e.length;if(1===t){var a=PhysicsComponent._creatShape(e[0]);this.colliderShape=a}else{for(var r=new CompoundColliderShape,i=0;i<t;i++)a=PhysicsComponent._creatShape(e[i]),r.addChildShape(a);this.colliderShape=r}}_onScaleChange(e){this._colliderShape._setScale(e)}_onAdded(){this.restitution=this._restitution,this.friction=this._friction,this.rollingFriction=this._rollingFriction,this.ccdMotionThreshold=this._ccdMotionThreshold,this.ccdSweptSphereRadius=this._ccdSweptSphereRadius}_onEnable(){this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged),this._simulation=this.owner._scene.physicsSimulation,ILaya3D.Physics3D._bullet.btCollisionObject_setContactProcessingThreshold(this._btColliderObject,0),this._colliderShape&&(this._derivePhysicsTransformation(!0),this._addToSimulation())}_onDisable(){this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged),this._colliderShape&&(this._removeFromSimulation(),-1!==this._inPhysicUpdateListIndex&&this._simulation._physicsUpdateList.remove(this)),this._simulation=null}_onDestroy(){delete PhysicsComponent._physicObjectsMap[this.id],ILaya3D.Physics3D._bullet.btCollisionObject_destroy(this._btColliderObject),this._colliderShape&&this._colliderShape.destroy(),this._btColliderObject=null,this._colliderShape=null,this._simulation=null}getPhysicsPosition(){var e=ILaya3D.Physics3D._bullet,t=this._btColliderObject,a=e.btCollisionObject_getWorldTransform(t),r=e.btTransform_getOrigin(a);let i=e.btVector3_x(r),n=e.btVector3_y(r),s=e.btVector3_z(r);return PhysicsComponent._tempVector30.setValue(i,n,s),PhysicsComponent._tempVector30}getPhysicsOrientation(){var e=ILaya3D.Physics3D._bullet,t=this._btColliderObject,a=e.btCollisionObject_getWorldTransform(t),r=e.btTransform_getRotation(a),i=e.btQuaternion_x(r),n=e.btQuaternion_y(r),s=e.btQuaternion_z(r),o=e.btQuaternion_w(r);return PhysicsComponent._tempQuaternion0.setValue(i,n,s,o),PhysicsComponent._tempQuaternion0}_isValid(){return this._simulation&&this._colliderShape&&this._enabled}_parse(e){null!=e.collisionGroup&&(this.collisionGroup=e.collisionGroup),null!=e.canCollideWith&&(this.canCollideWith=e.canCollideWith),null!=e.ccdMotionThreshold&&(this.ccdMotionThreshold=e.ccdMotionThreshold),null!=e.ccdSweptSphereRadius&&(this.ccdSweptSphereRadius=e.ccdSweptSphereRadius)}_setTransformFlag(e,t){t?this._transformFlag|=e:this._transformFlag&=~e}_getTransformFlag(e){return 0!=(this._transformFlag&e)}_addToSimulation(){}_removeFromSimulation(){}_derivePhysicsTransformation(e){var t=ILaya3D.Physics3D._bullet,a=this._btColliderObject,r=t.btCollisionObject_getWorldTransform(a);this._innerDerivePhysicsTransformation(r,e),t.btCollisionObject_setWorldTransform(a,r)}_innerDerivePhysicsTransformation(e,a){var r=ILaya3D.Physics3D._bullet,i=this.owner._transform;if(a||this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)){var n=this._colliderShape.localOffset,s=i.position,o=PhysicsComponent._btVector30;if(0!==n.x||0!==n.y||0!==n.z){var l=PhysicsComponent._tempVector30,h=i.worldMatrix;t.Vector3.transformCoordinate(n,h,l),r.btVector3_setValue(o,l.x,l.y,l.z)}else r.btVector3_setValue(o,s.x-0,s.y-0,s.z-0);r.btTransform_setOrigin(e,o),this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION,!1)}if(a||this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)){var c=this._colliderShape.localRotation,d=PhysicsComponent._btQuaternion0,u=i.rotation;if(0!==c.x||0!==c.y||0!==c.z||1!==c.w){var _=PhysicsComponent._tempQuaternion0;PhysicsComponent.physicQuaternionMultiply(u.x,u.y,u.z,u.w,c,_),r.btQuaternion_setValue(d,_.x,_.y,_.z,_.w)}else r.btQuaternion_setValue(d,u.x,u.y,u.z,u.w);r.btTransform_setRotation(e,d),this._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION,!1)}(a||this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE))&&(this._onScaleChange(i.getWorldLossyScale()),this._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE,!1))}_updateTransformComponent(e,a=!0,r=0){var i=ILaya3D.Physics3D._bullet,n=this._colliderShape,s=n.localOffset,o=n.localRotation,l=this.owner._transform;if(l){var h=l.position,c=l.rotation,d=i.btTransform_getOrigin(e);if(a){var u=i.btTransform_getRotation(e),_=i.btQuaternion_x(u),m=i.btQuaternion_y(u),f=i.btQuaternion_z(u),S=i.btQuaternion_w(u);if(0!==o.x||0!==o.y||0!==o.z||1!==o.w){var g=PhysicsComponent._tempQuaternion0;o.invert(g),PhysicsComponent.physicQuaternionMultiply(_,m,f,S,g,c)}else c.x=_,c.y=m,c.z=f,c.w=S;l.rotation=c}if(0!==s.x||0!==s.y||0!==s.z){var p=i.btCollisionShape_getLocalScaling(n._btShape),D=PhysicsComponent._tempVector30;D.x=s.x*i.btVector3_x(p),D.y=s.y*i.btVector3_y(p),D.z=s.z*i.btVector3_z(p),t.Vector3.transformQuat(D,c,D),h.x=i.btVector3_x(d)-D.x,h.y=i.btVector3_y(d)-D.y+r,h.z=i.btVector3_z(d)-D.z}else h.x=i.btVector3_x(d),h.y=i.btVector3_y(d),h.z=i.btVector3_z(d);l.position=h}}_onShapeChange(e){var t=this._btColliderObject,a=ILaya3D.Physics3D._bullet,r=a.btCollisionObject_getCollisionFlags(t);e.needsCustomCollisionCallback?0==(r&PhysicsComponent.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK)&&a.btCollisionObject_setCollisionFlags(t,r|PhysicsComponent.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK):(r&PhysicsComponent.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK)>0&&a.btCollisionObject_setCollisionFlags(t,r^PhysicsComponent.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK)}_onTransformChanged(e){!PhysicsComponent._addUpdateList&&this._controlBySimulation||(e&=Transform3D.TRANSFORM_WORLDPOSITION|Transform3D.TRANSFORM_WORLDQUATERNION|Transform3D.TRANSFORM_WORLDSCALE)&&(this._transformFlag|=e,this._isValid()&&-1===this._inPhysicUpdateListIndex&&this._simulation._physicsUpdateList.add(this))}_cloneTo(e){var t=e;t.restitution=this._restitution,t.friction=this._friction,t.rollingFriction=this._rollingFriction,t.ccdMotionThreshold=this._ccdMotionThreshold,t.ccdSweptSphereRadius=this._ccdSweptSphereRadius,t.collisionGroup=this._collisionGroup,t.canCollideWith=this._canCollideWith,t.canScaleShape=this.canScaleShape,this._colliderShape&&(t.colliderShape=this._colliderShape.clone())}}PhysicsComponent.ACTIVATIONSTATE_ACTIVE_TAG=1,PhysicsComponent.ACTIVATIONSTATE_ISLAND_SLEEPING=2,PhysicsComponent.ACTIVATIONSTATE_WANTS_DEACTIVATION=3,PhysicsComponent.ACTIVATIONSTATE_DISABLE_DEACTIVATION=4,PhysicsComponent.ACTIVATIONSTATE_DISABLE_SIMULATION=5,PhysicsComponent.COLLISIONFLAGS_STATIC_OBJECT=1,PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT=2,PhysicsComponent.COLLISIONFLAGS_NO_CONTACT_RESPONSE=4,PhysicsComponent.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK=8,PhysicsComponent.COLLISIONFLAGS_CHARACTER_OBJECT=16,PhysicsComponent.COLLISIONFLAGS_DISABLE_VISUALIZE_OBJECT=32,PhysicsComponent.COLLISIONFLAGS_DISABLE_SPU_COLLISION_PROCESSING=64,PhysicsComponent._tempVector30=new t.Vector3,PhysicsComponent._tempQuaternion0=new t.Quaternion,PhysicsComponent._tempQuaternion1=new t.Quaternion,PhysicsComponent._tempMatrix4x40=new t.Matrix4x4,PhysicsComponent._physicObjectsMap={},PhysicsComponent._addUpdateList=!0;class CharacterController extends PhysicsComponent{static __init__(){CharacterController._btTempVector30=ILaya3D.Physics3D._bullet.btVector3_create(0,0,0)}set colliderShape(e){e instanceof MeshColliderShape&&(e=null,console.error("CharacterController is not support MeshColliderShape")),super.colliderShape=e}get colliderShape(){return this._colliderShape}get fallSpeed(){return this._fallSpeed}set fallSpeed(e){this._fallSpeed=e,ILaya3D.Physics3D._bullet.btKinematicCharacterController_setFallSpeed(this._btKinematicCharacter,e)}set pushForce(e){(this._pushForce=e,this._btKinematicCharacter)&&ILaya3D.Physics3D._bullet.btKinematicCharacterController_setPushForce(this._btKinematicCharacter,e)}get pushForce(){return this._pushForce}get jumpSpeed(){return this._jumpSpeed}set jumpSpeed(e){this._jumpSpeed=e,ILaya3D.Physics3D._bullet.btKinematicCharacterController_setJumpSpeed(this._btKinematicCharacter,e)}get gravity(){return this._gravity}set gravity(e){this._gravity=e;var t=ILaya3D.Physics3D._bullet,a=CharacterController._btTempVector30;t.btVector3_setValue(a,e.x,e.y,e.z),t.btKinematicCharacterController_setGravity(this._btKinematicCharacter,a)}get maxSlope(){return this._maxSlope}set maxSlope(e){this._maxSlope=e,ILaya3D.Physics3D._bullet.btKinematicCharacterController_setMaxSlope(this._btKinematicCharacter,e/180*Math.PI)}get isGrounded(){return ILaya3D.Physics3D._bullet.btKinematicCharacterController_onGround(this._btKinematicCharacter)}get stepHeight(){return this._stepHeight}set stepHeight(e){this._stepHeight=e,ILaya3D.Physics3D._bullet.btKinematicCharacterController_setStepHeight(this._btKinematicCharacter,e)}get upAxis(){return this._upAxis}set upAxis(e){this._upAxis=e;var t=CharacterController._btTempVector30;Utils3D._convertToBulletVec3(e,t),ILaya3D.Physics3D._bullet.btKinematicCharacterController_setUp(this._btKinematicCharacter,t)}get position(){let e=ILaya3D.Physics3D._bullet,t=e.btKinematicCharacterController_getCurrentPosition(this._btKinematicCharacter);return CharacterController.tmpPosition.setValue(e.btVector3_x(t),e.btVector3_y(t),e.btVector3_z(t)),CharacterController.tmpPosition}set position(e){ILaya3D.Physics3D._bullet.btKinematicCharacterController_setCurrentPosition(this._btKinematicCharacter,e.x,e.y,e.z)}get orientation(){let e=ILaya3D.Physics3D._bullet,t=e.btKinematicCharacterController_getCurrentOrientation(this._btKinematicCharacter);return CharacterController.tmpOrientation.setValue(e.btQuaternion_x(t),e.btQuaternion_y(t),e.btQuaternion_z(t),e.btQuaternion_w(t)),CharacterController.tmpOrientation}set orientation(e){ILaya3D.Physics3D._bullet,this._btColliderObject}constructor(e=.1,a=null,r=Physics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER,i=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){super(r,i),this._upAxis=new t.Vector3(0,1,0),this._maxSlope=90,this._jumpSpeed=10,this._fallSpeed=55,this._gravity=new t.Vector3(0,3*-9.8,0),this._btKinematicCharacter=null,this._pushForce=1,this._stepHeight=e,a&&(this._upAxis=a),this._controlBySimulation=!0}setJumpAxis(e,t,a){ILaya3D.Physics3D._bullet.btKinematicCharacterController_setJumpAxis(this._btKinematicCharacter,e,t,a)}_onAdded(){var e=ILaya3D.Physics3D._bullet,t=e.btPairCachingGhostObject_create();e.btCollisionObject_setUserIndex(t,this.id),e.btCollisionObject_setCollisionFlags(t,PhysicsComponent.COLLISIONFLAGS_CHARACTER_OBJECT),this._btColliderObject=t,this._colliderShape&&this._constructCharacter(),super._onAdded()}_onDestroy(){ILaya3D.Physics3D._bullet.btKinematicCharacterController_destroy(this._btKinematicCharacter),super._onDestroy(),this._btKinematicCharacter=null}_constructCharacter(){var e=ILaya3D.Physics3D._bullet;this._btKinematicCharacter&&e.btKinematicCharacterController_destroy(this._btKinematicCharacter);var t=CharacterController._btTempVector30;e.btVector3_setValue(t,this._upAxis.x,this._upAxis.y,this._upAxis.z),this._btKinematicCharacter=e.btKinematicCharacterController_create(this._btColliderObject,this._colliderShape._btShape,this._stepHeight,t),this.fallSpeed=this._fallSpeed,this.maxSlope=this._maxSlope,this.jumpSpeed=this._jumpSpeed,this.gravity=this._gravity,this.setJumpAxis(0,1,0),this.pushForce=this._pushForce}_onShapeChange(e){super._onShapeChange(e),this._constructCharacter()}_addToSimulation(){this._simulation._characters.push(this),this._simulation._addCharacter(this,this._collisionGroup,this._canCollideWith)}_removeFromSimulation(){this._simulation._removeCharacter(this);var e=this._simulation._characters;e.splice(e.indexOf(this),1)}getHitFlag(){return ILaya3D.Physics3D._bullet.btKinematicCharacterController_getHitFlag(this._btKinematicCharacter)}getVerticalVel(){return ILaya3D.Physics3D._bullet.btKinematicCharacterController_getVerticalVelocity(this._btKinematicCharacter)}getOverlappingObj(e){var t=ILaya3D.Physics3D._bullet;let a=this._btColliderObject,r=t.btCollisionObject_getNumOverlappingObjects(a);for(let i=0;i<r;i++){let r=t.btCollisionObject_getOverlappingObject(a,i),n=PhysicsComponent._physicObjectsMap[t.btCollisionObject_getUserIndex(r)];n&&e(n)}}move(e){var t=CharacterController._btVector30,a=ILaya3D.Physics3D._bullet;a.btVector3_setValue(t,e.x,e.y,e.z),a.btKinematicCharacterController_setWalkDirection(this._btKinematicCharacter,t)}jump(e=null){var t=ILaya3D.Physics3D._bullet,a=CharacterController._btVector30;e?(Utils3D._convertToBulletVec3(e,a),t.btKinematicCharacterController_jump(this._btKinematicCharacter,a)):(t.btVector3_setValue(a,0,this._jumpSpeed,0),t.btKinematicCharacterController_jump(this._btKinematicCharacter,a))}get btColliderObject(){return this._btColliderObject}_cloneTo(e){super._cloneTo(e);var t=e;t.stepHeight=this._stepHeight,t.upAxis=this._upAxis,t.maxSlope=this._maxSlope,t.jumpSpeed=this._jumpSpeed,t.fallSpeed=this._fallSpeed,t.gravity=this._gravity}}CharacterController.tmpPosition=new t.Vector3,CharacterController.tmpOrientation=new t.Quaternion,CharacterController.UPAXIS_X=0,CharacterController.UPAXIS_Y=1,CharacterController.UPAXIS_Z=2;class PhysicsUpdateList extends t.SingletonList{constructor(){super()}add(e){if(-1!==e._inPhysicUpdateListIndex)throw"PhysicsUpdateList:element has  in  PhysicsUpdateList.";this._add(e),e._inPhysicUpdateListIndex=this.length++}remove(e){var t=e._inPhysicUpdateListIndex;if(this.length--,t!==this.length){var a=this.elements[this.length];this.elements[t]=a,a._inPhysicUpdateListIndex=t}e._inPhysicUpdateListIndex=-1}}class ContactPoint{constructor(){this._idCounter=0,this.colliderA=null,this.colliderB=null,this.distance=0,this.normal=new t.Vector3,this.positionOnA=new t.Vector3,this.positionOnB=new t.Vector3,this._id=++this._idCounter}}class HitResult{constructor(){this.succeeded=!1,this.collider=null,this.point=new t.Vector3,this.normal=new t.Vector3,this.hitFraction=0}}class Collision{constructor(){this._lastUpdateFrame=-2147483648,this._updateFrame=-2147483648,this._isTrigger=!1,this.contacts=[]}_setUpdateFrame(e){this._lastUpdateFrame=this._updateFrame,this._updateFrame=e}}class CollisionTool{constructor(){this._hitResultsPoolIndex=0,this._hitResultsPool=[],this._contactPonintsPoolIndex=0,this._contactPointsPool=[],this._collisionsPool=[],this._collisions={}}getHitResult(){var e=this._hitResultsPool[this._hitResultsPoolIndex++];return e||(e=new HitResult,this._hitResultsPool.push(e)),e}recoverAllHitResultsPool(){this._hitResultsPoolIndex=0}getContactPoints(){var e=this._contactPointsPool[this._contactPonintsPoolIndex++];return e||(e=new ContactPoint,this._contactPointsPool.push(e)),e}recoverAllContactPointsPool(){this._contactPonintsPoolIndex=0}getCollision(e,t){var a,r=e.id,i=t.id,n=this._collisions[r];return n&&(a=n[i]),a||(n||(n={},this._collisions[r]=n),(a=0===this._collisionsPool.length?new Collision:this._collisionsPool.pop())._colliderA=e,a._colliderB=t,n[i]=a),a}recoverCollision(e){var t=e._colliderA.id,a=e._colliderB.id;this._collisions[t][a]=null,this._collisionsPool.push(e)}garbageCollection(){for(var e in this._hitResultsPoolIndex=0,this._hitResultsPool.length=0,this._contactPonintsPoolIndex=0,this._contactPointsPool.length=0,this._collisionsPool.length=0,this._collisionsPool){var t=this._collisionsPool[e],a=!0;for(var r in t)t[r]?a=!1:delete t[r];a&&delete this._collisionsPool[e]}}}class RaycastWheel{constructor(e){var a;this.worldPos=new t.Vector3,this.worldQuat=new t.Quaternion,this.worldMat=new t.Matrix4x4,this.btWheelPtr=e,this.bt=ILaya3D.Physics3D._bullet,this.btMemory=null===(a=t.ILaya.Laya.WasmModules.bullet)||void 0===a?void 0:a.memory}set engineForce(e){this.bt.btWheelInfo_setEengineForce(this.btWheelPtr,e)}get engineForce(){return this.bt.btWheelInfo_getEengineForce(this.btWheelPtr)}set steeringValue(e){this.bt.btWheelInfo_setSteeringValue(this.btWheelPtr,e)}get steeringValue(){return this.bt.btWheelInfo_getSteeringValue(this.btWheelPtr)}set brake(e){this.bt.btWheelInfo_setBrake(this.btWheelPtr,e)}get brake(){return this.bt.btWheelInfo_getBrake(this.btWheelPtr)}get rotation(){return this.bt.btWheelInfo_getRrotation(this.btWheelPtr)}get deltaRotation(){return this.bt.btWheelInfo_getDeltaRotation(this.btWheelPtr)}get transform(){let e=this.bt,t=e.btWheelInfo_getWorldTransform(this.btWheelPtr),a=this.worldMat,r=a.elements;if(window.conch){let a=e.btTransform_getOrigin(t),i=e.btTransform_getBasis(t),n=e.btMatrix3x3_getRow(i,0),s=e.btMatrix3x3_getRow(i,1),o=e.btMatrix3x3_getRow(i,2);r[0]=e.btVector3_x(n),r[1]=e.btVector3_x(s),r[2]=e.btVector3_x(o),r[3]=0,r[4]=e.btVector3_y(n),r[5]=e.btVector3_y(s),r[6]=e.btVector3_y(o),r[7]=0,r[8]=e.btVector3_z(n),r[9]=e.btVector3_z(s),r[10]=e.btVector3_z(o),r[11]=0,r[12]=e.btVector3_x(a),r[13]=e.btVector3_y(a),r[14]=e.btVector3_z(a),r[15]=1}else{let e=this.btMemory,a=new Float64Array(e.buffer,t,16);r[0]=a[0],r[1]=a[4],r[2]=a[8],r[3]=0,r[4]=a[1],r[5]=a[5],r[6]=a[9],r[7]=0,r[8]=a[2],r[9]=a[6],r[10]=a[10],r[11]=0,r[12]=a[12],r[13]=a[13],r[14]=a[14],r[15]=1}return a}getWorldTransform(){let e=this.bt,t=e.btWheelInfo_getWorldTransform(this.btWheelPtr),a=e.btTransform_getOrigin(t),r=e.btTransform_getRotation(t);this.worldPos.set(e.btVector3_x(a),e.btVector3_y(a),e.btVector3_z(a)),this.worldQuat.set(e.btQuaternion_x(r),e.btQuaternion_y(r),e.btQuaternion_z(r),e.btQuaternion_w(r))}}class btVehicleTuning{constructor(){this.suspensionStiffness=15.88,this.suspensionCompression=.83,this.suspensionDamping=.88,this.maxSuspensionTravelCm=500,this.frictionSlip=10.5,this.maxSuspensionForce=6e3}}class RaycastVehicle{constructor(e){this.tuing=new btVehicleTuning,this.wheels=[],this.btVehiclePtr=e}addWheel(e,t,a,r,i,n,s,o,l,h){let c=ILaya3D.Physics3D._bullet,d=this.tuing;this.getNumWheels();let u=c.btRaycastVehicle_addWheel(this.btVehiclePtr,e.x,e.y,e.z,t.x,t.y,t.z,a.x,a.y,a.z,i,r,s||d.suspensionStiffness,d.suspensionCompression,o||d.suspensionDamping,l||d.frictionSlip,n?100*n:d.maxSuspensionTravelCm,d.maxSuspensionForce,h),_=new RaycastWheel(u);this.wheels.push(_);for(let e=0,t=this.wheels.length;e<t;e++){this.wheels[e].btWheelPtr=this.getWheelInfo(e)}return _}getNumWheels(){return ILaya3D.Physics3D._bullet.btRaycastVehicle_getNumWheels(this.btVehiclePtr)}getWheelInfo(e){return ILaya3D.Physics3D._bullet.btRaycastVehicle_getWheelInfo(this.btVehiclePtr,e)}}class PhysicsSimulation{static __init__(){var e=ILaya3D.Physics3D._bullet;PhysicsSimulation._btTempVector30=e.btVector3_create(0,0,0),PhysicsSimulation._btTempVector31=e.btVector3_create(0,0,0),PhysicsSimulation._btTempQuaternion0=e.btQuaternion_create(0,0,0,1),PhysicsSimulation._btTempQuaternion1=e.btQuaternion_create(0,0,0,1),PhysicsSimulation._btTempTransform0=e.btTransform_create(),PhysicsSimulation._btTempTransform1=e.btTransform_create()}static createConstraint(){}get continuousCollisionDetection(){return ILaya3D.Physics3D._bullet.btCollisionWorld_get_m_useContinuous(this._btDispatchInfo)}set continuousCollisionDetection(e){ILaya3D.Physics3D._bullet.btCollisionWorld_set_m_useContinuous(this._btDispatchInfo,e)}get gravity(){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";return this._gravity}set gravity(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";this._gravity=e;var t=ILaya3D.Physics3D._bullet,a=PhysicsSimulation._btTempVector30;t.btVector3_setValue(a,e.x,e.y,e.z),t.btDiscreteDynamicsWorld_setGravity(this._btDiscreteDynamicsWorld,a)}get speculativeContactRestitution(){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot Cannot perform this action when the physics engine is set to CollisionsOnly";return ILaya3D.Physics3D._bullet.btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(this._btDiscreteDynamicsWorld)}set speculativeContactRestitution(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot Cannot perform this action when the physics engine is set to CollisionsOnly";ILaya3D.Physics3D._bullet.btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(this._btDiscreteDynamicsWorld,e)}constructor(e){this._updateCount=0,this._gravity=new t.Vector3(0,-10,0),this._btVector3Zero=ILaya3D.Physics3D._bullet.btVector3_create(0,0,0),this._btDefaultQuaternion=ILaya3D.Physics3D._bullet.btQuaternion_create(0,0,0,-1),this._collisionsUtils=new CollisionTool,this._previousFrameCollisions=[],this._currentFrameCollisions=[],this._currentConstraint={},this._physicsUpdateList=new PhysicsUpdateList,this._characters=[],this._updatedRigidbodies=0,this.maxSubSteps=1,this.fixedTimeStep=1/60,this.dt=1/60,this.maxSubSteps=e.maxSubSteps,this.fixedTimeStep=e.fixedTimeStep;var a=ILaya3D.Physics3D._bullet;this._btCollisionConfiguration=a.btDefaultCollisionConfiguration_create(),this._btDispatcher=a.btCollisionDispatcher_create(this._btCollisionConfiguration),this._btBroadphase=a.btDbvtBroadphase_create(),a.btOverlappingPairCache_setInternalGhostPairCallback(a.btDbvtBroadphase_getOverlappingPairCache(this._btBroadphase),a.btGhostPairCallback_create());var r=e.flags;if(r&PhysicsSimulation.PHYSICSENGINEFLAGS_COLLISIONSONLY)this._btCollisionWorld=new a.btCollisionWorld(this._btDispatcher,this._btBroadphase,this._btCollisionConfiguration);else{if(r&PhysicsSimulation.PHYSICSENGINEFLAGS_SOFTBODYSUPPORT)throw"PhysicsSimulation:SoftBody processing is not yet available";var i=a.btSequentialImpulseConstraintSolver_create();this._btDiscreteDynamicsWorld=a.btDiscreteDynamicsWorld_create(this._btDispatcher,this._btBroadphase,i,this._btCollisionConfiguration),this._btCollisionWorld=this._btDiscreteDynamicsWorld}this._btDiscreteDynamicsWorld&&(this._btSolverInfo=a.btDynamicsWorld_getSolverInfo(this._btDiscreteDynamicsWorld),this._btDispatchInfo=a.btCollisionWorld_getDispatchInfo(this._btDiscreteDynamicsWorld)),this._btClosestRayResultCallback=a.ClosestRayResultCallback_create(this._btVector3Zero,this._btVector3Zero),this._btAllHitsRayResultCallback=a.AllHitsRayResultCallback_create(this._btVector3Zero,this._btVector3Zero),this._btClosestConvexResultCallback=a.ClosestConvexResultCallback_create(this._btVector3Zero,this._btVector3Zero),this._btAllConvexResultCallback=a.AllConvexResultCallback_create(this._btVector3Zero,this._btVector3Zero),a.btGImpactCollisionAlgorithm_RegisterAlgorithm(this._btDispatcher)}enableDebugDrawer(e){ILaya3D.Physics3D._bullet.btDynamicsWorld_enableDebugDrawer(this._btDiscreteDynamicsWorld,e)}_simulate(e){this._updatedRigidbodies=0,this.dt=e;var t=ILaya3D.Physics3D._bullet;this._btDiscreteDynamicsWorld?t.btDiscreteDynamicsWorld_stepSimulation(this._btDiscreteDynamicsWorld,e,this.maxSubSteps,this.fixedTimeStep):t.PerformDiscreteCollisionDetection(this._btCollisionWorld),this._updateCount++}_destroy(){var e=ILaya3D.Physics3D._bullet;this._btDiscreteDynamicsWorld?(e.btCollisionWorld_destroy(this._btDiscreteDynamicsWorld),this._btDiscreteDynamicsWorld=null):(e.btCollisionWorld_destroy(this._btCollisionWorld),this._btCollisionWorld=null),e.btDbvtBroadphase_destroy(this._btBroadphase),this._btBroadphase=null,e.btCollisionDispatcher_destroy(this._btDispatcher),this._btDispatcher=null,e.btDefaultCollisionConfiguration_destroy(this._btCollisionConfiguration),this._btCollisionConfiguration=null}_addPhysicsCollider(e,t,a){ILaya3D.Physics3D._bullet.btCollisionWorld_addCollisionObject(this._btCollisionWorld,e._btColliderObject,t,a)}_removePhysicsCollider(e){ILaya3D.Physics3D._bullet.btCollisionWorld_removeCollisionObject(this._btCollisionWorld,e._btColliderObject)}_addRigidBody(e,t,a){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";ILaya3D.Physics3D._bullet.btDiscreteDynamicsWorld_addRigidBody(this._btCollisionWorld,e._btColliderObject,t,a)}_removeRigidBody(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";ILaya3D.Physics3D._bullet.btDiscreteDynamicsWorld_removeRigidBody(this._btCollisionWorld,e._btColliderObject)}_addCharacter(e,t,a){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";var r=ILaya3D.Physics3D._bullet;r.btCollisionWorld_addCollisionObject(this._btCollisionWorld,e._btColliderObject,t,a),r.btDynamicsWorld_addAction(this._btCollisionWorld,e._btKinematicCharacter)}_removeCharacter(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";var t=ILaya3D.Physics3D._bullet;t.btCollisionWorld_removeCollisionObject(this._btCollisionWorld,e._btColliderObject),t.btDynamicsWorld_removeAction(this._btCollisionWorld,e._btKinematicCharacter)}raycastFromTo(e,t,a=null,r=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,i=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){var n=ILaya3D.Physics3D._bullet,s=this._btClosestRayResultCallback,o=PhysicsSimulation._btTempVector30,l=PhysicsSimulation._btTempVector31;if(n.btVector3_setValue(o,e.x,e.y,e.z),n.btVector3_setValue(l,t.x,t.y,t.z),n.ClosestRayResultCallback_set_m_rayFromWorld(s,o),n.ClosestRayResultCallback_set_m_rayToWorld(s,l),n.RayResultCallback_set_m_collisionFilterGroup(s,r),n.RayResultCallback_set_m_collisionFilterMask(s,i),n.RayResultCallback_set_m_collisionObject(s,null),n.RayResultCallback_set_m_closestHitFraction(s,1),n.btCollisionWorld_rayTest(this._btCollisionWorld,o,l,s),n.RayResultCallback_hasHit(s)){if(a){a.succeeded=!0,a.collider=PhysicsComponent._physicObjectsMap[n.btCollisionObject_getUserIndex(n.RayResultCallback_get_m_collisionObject(s))],a.hitFraction=n.RayResultCallback_get_m_closestHitFraction(s);var h=n.ClosestRayResultCallback_get_m_hitPointWorld(s),c=a.point;c.x=n.btVector3_x(h),c.y=n.btVector3_y(h),c.z=n.btVector3_z(h);var d=n.ClosestRayResultCallback_get_m_hitNormalWorld(s),u=a.normal;u.x=n.btVector3_x(d),u.y=n.btVector3_y(d),u.z=n.btVector3_z(d)}return!0}return a&&(a.succeeded=!1),!1}raycastAllFromTo(e,t,a,r=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,i=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){var n=ILaya3D.Physics3D._bullet,s=this._btAllHitsRayResultCallback,o=PhysicsSimulation._btTempVector30,l=PhysicsSimulation._btTempVector31;a.length=0,n.btVector3_setValue(o,e.x,e.y,e.z),n.btVector3_setValue(l,t.x,t.y,t.z),n.AllHitsRayResultCallback_set_m_rayFromWorld(s,o),n.AllHitsRayResultCallback_set_m_rayToWorld(s,l),n.RayResultCallback_set_m_collisionFilterGroup(s,r),n.RayResultCallback_set_m_collisionFilterMask(s,i);var h=n.AllHitsRayResultCallback_get_m_collisionObjects(s),c=n.AllHitsRayResultCallback_get_m_hitPointWorld(s),d=n.AllHitsRayResultCallback_get_m_hitNormalWorld(s),u=n.AllHitsRayResultCallback_get_m_hitFractions(s);n.tBtCollisionObjectArray_clear(h),n.tVector3Array_clear(c),n.tVector3Array_clear(d),n.tScalarArray_clear(u),n.btCollisionWorld_rayTest(this._btCollisionWorld,o,l,s);var _=n.tBtCollisionObjectArray_size(h);if(_>0){this._collisionsUtils.recoverAllHitResultsPool();for(var m=0;m<_;m++){var f=this._collisionsUtils.getHitResult();a.push(f),f.succeeded=!0,f.collider=PhysicsComponent._physicObjectsMap[n.btCollisionObject_getUserIndex(n.tBtCollisionObjectArray_at(h,m))],f.hitFraction=n.tScalarArray_at(u,m);var S=n.tVector3Array_at(c,m),g=f.point;g.x=n.btVector3_x(S),g.y=n.btVector3_y(S),g.z=n.btVector3_z(S);var p=n.tVector3Array_at(d,m),D=f.normal;D.x=n.btVector3_x(p),D.y=n.btVector3_y(p),D.z=n.btVector3_z(p)}return!0}return!1}rayCast(e,a=null,r=2147483647,i=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,n=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){var s=e.origin,o=PhysicsSimulation._tempVector30;return t.Vector3.normalize(e.direction,o),t.Vector3.scale(o,r,o),t.Vector3.add(s,o,o),this.raycastFromTo(s,o,a,i,n)}rayCastAll(e,a,r=2147483647,i=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,n=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){var s=e.origin,o=PhysicsSimulation._tempVector30;return t.Vector3.normalize(e.direction,o),t.Vector3.scale(o,r,o),t.Vector3.add(s,o,o),this.raycastAllFromTo(s,o,a,i,n)}shapeCast(e,t,a,r=null,i=null,n=null,s=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,o=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,l=0){var h=ILaya3D.Physics3D._bullet,c=this._btClosestConvexResultCallback,d=PhysicsSimulation._btTempVector30,u=PhysicsSimulation._btTempVector31,_=PhysicsSimulation._btTempQuaternion0,m=PhysicsSimulation._btTempQuaternion1,f=PhysicsSimulation._btTempTransform0,S=PhysicsSimulation._btTempTransform1,g=e._btShape;if(h.btVector3_setValue(d,t.x,t.y,t.z),h.btVector3_setValue(u,a.x,a.y,a.z),h.ConvexResultCallback_set_m_collisionFilterGroup(c,s),h.ConvexResultCallback_set_m_collisionFilterMask(c,o),h.btTransform_setOrigin(f,d),h.btTransform_setOrigin(S,u),i?(h.btQuaternion_setValue(_,i.x,i.y,i.z,i.w),h.btTransform_setRotation(f,_)):h.btTransform_setRotation(f,this._btDefaultQuaternion),n?(h.btQuaternion_setValue(m,n.x,n.y,n.z,n.w),h.btTransform_setRotation(S,m)):h.btTransform_setRotation(S,this._btDefaultQuaternion),h.ClosestConvexResultCallback_set_m_hitCollisionObject(c,null),h.ConvexResultCallback_set_m_closestHitFraction(c,1),h.btCollisionWorld_convexSweepTest(this._btCollisionWorld,g,f,S,c,l),h.ConvexResultCallback_hasHit(c)){if(r){r.succeeded=!0,r.collider=PhysicsComponent._physicObjectsMap[h.btCollisionObject_getUserIndex(h.ClosestConvexResultCallback_get_m_hitCollisionObject(c))],r.hitFraction=h.ConvexResultCallback_get_m_closestHitFraction(c);var p=h.ClosestConvexResultCallback_get_m_hitPointWorld(c),D=h.ClosestConvexResultCallback_get_m_hitNormalWorld(c),T=r.point,E=r.normal;T.x=h.btVector3_x(p),T.y=h.btVector3_y(p),T.z=h.btVector3_z(p),E.x=h.btVector3_x(D),E.y=h.btVector3_y(D),E.z=h.btVector3_z(D)}return!0}return r&&(r.succeeded=!1),!1}shapeCastAll(e,t,a,r,i=null,n=null,s=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,o=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER,l=0){var h=ILaya3D.Physics3D._bullet,c=this._btAllConvexResultCallback,d=PhysicsSimulation._btTempVector30,u=PhysicsSimulation._btTempVector31,_=PhysicsSimulation._btTempQuaternion0,m=PhysicsSimulation._btTempQuaternion1,f=PhysicsSimulation._btTempTransform0,S=PhysicsSimulation._btTempTransform1,g=e._btShape;r.length=0,h.btVector3_setValue(d,t.x,t.y,t.z),h.btVector3_setValue(u,a.x,a.y,a.z),h.ConvexResultCallback_set_m_collisionFilterGroup(c,s),h.ConvexResultCallback_set_m_collisionFilterMask(c,o),h.btTransform_setOrigin(f,d),h.btTransform_setOrigin(S,u),i?(h.btQuaternion_setValue(_,i.x,i.y,i.z,i.w),h.btTransform_setRotation(f,_)):h.btTransform_setRotation(f,this._btDefaultQuaternion),n?(h.btQuaternion_setValue(m,n.x,n.y,n.z,n.w),h.btTransform_setRotation(S,m)):h.btTransform_setRotation(S,this._btDefaultQuaternion);var p=h.AllConvexResultCallback_get_m_collisionObjects(c),D=h.AllConvexResultCallback_get_m_hitPointWorld(c),T=h.AllConvexResultCallback_get_m_hitNormalWorld(c),E=h.AllConvexResultCallback_get_m_hitFractions(c);h.tVector3Array_clear(D),h.tVector3Array_clear(T),h.tScalarArray_clear(E),h.tBtCollisionObjectArray_clear(p),h.btCollisionWorld_convexSweepTest(this._btCollisionWorld,g,f,S,c,l);var C=h.tBtCollisionObjectArray_size(p);if(C>0){this._collisionsUtils.recoverAllHitResultsPool();for(var A=0;A<C;A++){var R=this._collisionsUtils.getHitResult();r.push(R),R.succeeded=!0,R.collider=PhysicsComponent._physicObjectsMap[h.btCollisionObject_getUserIndex(h.tBtCollisionObjectArray_at(p,A))],R.hitFraction=h.tScalarArray_at(E,A);var x=h.tVector3Array_at(D,A),M=R.point;M.x=h.btVector3_x(x),M.y=h.btVector3_y(x),M.z=h.btVector3_z(x);var y=h.tVector3Array_at(T,A),I=R.normal;I.x=h.btVector3_x(y),I.y=h.btVector3_y(y),I.z=h.btVector3_z(y)}return!0}return!1}addConstraint(e,t=!1){if(!this._btDiscreteDynamicsWorld)throw"Cannot perform this action when the physics engine is set to CollisionsOnly";ILaya3D.Physics3D._bullet.btCollisionWorld_addConstraint(this._btDiscreteDynamicsWorld,e._btConstraint,t),this._currentConstraint[e.id]=e}removeConstraint(e){if(!this._btDiscreteDynamicsWorld)throw"Cannot perform this action when the physics engine is set to CollisionsOnly";ILaya3D.Physics3D._bullet.btCollisionWorld_removeConstraint(this._btDiscreteDynamicsWorld,e._btConstraint),delete this._currentConstraint[e.id]}setHitsRayResultCallbackFlag(e=1){var t=ILaya3D.Physics3D._bullet;t.RayResultCallback_set_m_flags(this._btAllHitsRayResultCallback,e),t.RayResultCallback_set_m_flags(this._btClosestRayResultCallback,e)}_updatePhysicsTransformFromRender(){for(var e=this._physicsUpdateList.elements,t=0,a=this._physicsUpdateList.length;t<a;t++){var r=e[t];r._derivePhysicsTransformation(!1),r._inPhysicUpdateListIndex=-1}this._physicsUpdateList.length=0}_updateCharacters(){let e=ILaya3D.Physics3D._bullet;for(var t=0,a=this._characters.length;t<a;t++){var r=this._characters[t];r._updateTransformComponent(e.btCollisionObject_getWorldTransform(r._btColliderObject),!1,.04)}}_updateCollisions(){this._collisionsUtils.recoverAllContactPointsPool();var e=this._currentFrameCollisions;this._currentFrameCollisions=this._previousFrameCollisions,this._currentFrameCollisions.length=0,this._previousFrameCollisions=e;var a=this._updateCount,r=ILaya3D.Physics3D._bullet,i=r.btDispatcher_getNumManifolds(this._btDispatcher);for(let e=0;e<i;e++){var n=r.btDispatcher_getManifoldByIndexInternal(this._btDispatcher,e),s=PhysicsComponent._physicObjectsMap[r.btCollisionObject_getUserIndex(r.btPersistentManifold_getBody0(n))],o=PhysicsComponent._physicObjectsMap[r.btCollisionObject_getUserIndex(r.btPersistentManifold_getBody1(n))];if(s.id>o.id){let e=s;s=o,o=e}var l,h=null,c=null;if(s.isTrigger||o.isTrigger){if(s.owner._getBit(t.NodeFlags.PROCESS_TRIGGERS)||o.owner._getBit(t.NodeFlags.PROCESS_TRIGGERS)){var d=r.btPersistentManifold_getNumContacts(n);for(let e=0;e<d;e++){var u=r.btPersistentManifold_getContactPoint(n,e),_=r.btManifoldPoint_getDistance(u);if(_<=0){c=(h=this._collisionsUtils.getCollision(s,o)).contacts,(l=h._updateFrame!==a)&&(h._isTrigger=!0,c.length=0);break}}}}else if((s.owner._getBit(t.NodeFlags.PROCESS_COLLISIONS)||o.owner._getBit(t.NodeFlags.PROCESS_COLLISIONS))&&(s._enableProcessCollisions||o._enableProcessCollisions)){d=r.btPersistentManifold_getNumContacts(n);for(let e=0;e<d;e++)if(u=r.btPersistentManifold_getContactPoint(n,e),(_=r.btManifoldPoint_getDistance(u))<=0){var m=this._collisionsUtils.getContactPoints();m.colliderA=s,m.colliderB=o,m.distance=_;var f=r.btManifoldPoint_get_m_normalWorldOnB(u),S=m.normal;S.x=r.btVector3_x(f),S.y=r.btVector3_y(f),S.z=r.btVector3_z(f);var g=r.btManifoldPoint_get_m_positionWorldOnA(u),p=m.positionOnA;p.x=r.btVector3_x(g),p.y=r.btVector3_y(g),p.z=r.btVector3_z(g);var D=r.btManifoldPoint_get_m_positionWorldOnB(u),T=m.positionOnB;T.x=r.btVector3_x(D),T.y=r.btVector3_y(D),T.z=r.btVector3_z(D),h||(c=(h=this._collisionsUtils.getCollision(s,o)).contacts,(l=h._updateFrame!==a)&&(h._isTrigger=!1,c.length=0)),c.push(m)}}h&&l&&(this._currentFrameCollisions.push(h),h._setUpdateFrame(a))}for(var E=0,C=this._characters.length;E<C;E++){var A=this._characters[E];A.getOverlappingObj((e=>{if(e instanceof CharacterController)return;let t=A,r=e;A.id>e.id&&(t=e,r=A);let i=this._collisionsUtils.getCollision(t,r);if(i._updateFrame===a)return;let n=i.contacts;n.length=1,i._setUpdateFrame(a);var s=this._collisionsUtils.getContactPoints();s.colliderA=t,s.colliderB=r,s.distance=0,n[0]=s,this._currentFrameCollisions.push(i)}))}}dispatchCollideEvent(){let e=this._updateCount;for(let a=0,r=this._currentFrameCollisions.length;a<r;a++){let r=this._currentFrameCollisions[a],i=r._colliderA,n=r._colliderB;if(i.destroyed||n.destroyed)continue;let s=i.owner,o=n.owner;e-r._lastUpdateFrame==1?r._isTrigger?(s.event(t.Event.TRIGGER_STAY,n),o.event(t.Event.TRIGGER_STAY,i)):(r.other=n,s.event(t.Event.COLLISION_STAY,r),r.other=i,o.event(t.Event.COLLISION_STAY,r)):r._isTrigger?(s.event(t.Event.TRIGGER_ENTER,n),o.event(t.Event.TRIGGER_ENTER,i)):(r.other=n,s.event(t.Event.COLLISION_ENTER,r),r.other=i,o.event(t.Event.COLLISION_ENTER,r))}for(let a=0,r=this._previousFrameCollisions.length;a<r;a++){let r=this._previousFrameCollisions[a],i=r._colliderA,n=r._colliderB;if(i.destroyed||n.destroyed)continue;let s=i.owner,o=n.owner;e-r._updateFrame==1&&(this._collisionsUtils.recoverCollision(r),r._isTrigger?(s.event(t.Event.TRIGGER_EXIT,n),o.event(t.Event.TRIGGER_EXIT,i)):(r.other=n,s.event(t.Event.COLLISION_EXIT,r),r.other=i,o.event(t.Event.COLLISION_EXIT,r)))}for(let e in this._currentConstraint){let a=this._currentConstraint[e];if(a.enabled&&a._isBreakConstrained()){let e=a.ownBody.owner,r=a.connectedBody.owner;e.event(t.Event.JOINT_BREAK),r.event(t.Event.JOINT_BREAK)}}}clearForces(){if(!this._btDiscreteDynamicsWorld)throw"Cannot perform this action when the physics engine is set to CollisionsOnly";ILaya3D.Physics3D._bullet.btDiscreteDynamicsWorld_clearForces(this._btDiscreteDynamicsWorld)}createRaycastVehicle(e){let t=ILaya3D.Physics3D._bullet,a=t.btRaycastVehicle_create(this._btDiscreteDynamicsWorld,e._btColliderObject);return t.btCollisionObject_forceActivationState(e._btColliderObject,PhysicsComponent.ACTIVATIONSTATE_DISABLE_DEACTIVATION),new RaycastVehicle(a)}addVehicle(e){ILaya3D.Physics3D._bullet.btDynamicsWorld_addAction(this._btDiscreteDynamicsWorld,e.btVehiclePtr)}removeVehicle(e){ILaya3D.Physics3D._bullet.btDynamicsWorld_removeAction(e.btVehiclePtr)}sphereQuery(e,t,a,r=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){let i=ILaya3D.Physics3D._bullet;this._btPairCachingGhost||(this._btPairCachingGhost=i.btPairCachingGhostObject_create(),this._btTransform=i.btTransform_create(),this._btVec=i.btVector3_create(0,0,0),this._btSphereShape=i.btSphereShape_create(1)),a.length=0;let n=this._btSphereShape;i.btSphereShpae_setUnscaledRadius(n,t);let s=this._btPairCachingGhost,o=this._btTransform,l=this._btVec;i.btVector3_setValue(l,e.x,e.y,e.z),i.btTransform_setIdentity(o),i.btTransform_setOrigin(o,l),i.btCollisionObject_setCollisionShape(s,n),i.btCollisionObject_setWorldTransform(s,o),i.btCollisionWorld_addCollisionObject(this._btDiscreteDynamicsWorld,s,-1,-1);let h=i.btCollisionObject_getNumOverlappingObjects(s);for(let e=0;e<h;e++){let t=i.btCollisionObject_getOverlappingObject(s,e),n=PhysicsComponent._physicObjectsMap[i.btCollisionObject_getUserIndex(t)];n.collisionGroup&r&&a.push(n)}i.btCollisionWorld_removeCollisionObject(this._btDiscreteDynamicsWorld,s)}}PhysicsSimulation.PHYSICSENGINEFLAGS_NONE=0,PhysicsSimulation.PHYSICSENGINEFLAGS_COLLISIONSONLY=1,PhysicsSimulation.PHYSICSENGINEFLAGS_SOFTBODYSUPPORT=2,PhysicsSimulation.PHYSICSENGINEFLAGS_MULTITHREADED=4,PhysicsSimulation.PHYSICSENGINEFLAGS_USEHARDWAREWHENPOSSIBLE=8,PhysicsSimulation.SOLVERMODE_RANDMIZE_ORDER=1,PhysicsSimulation.SOLVERMODE_FRICTION_SEPARATE=2,PhysicsSimulation.SOLVERMODE_USE_WARMSTARTING=4,PhysicsSimulation.SOLVERMODE_USE_2_FRICTION_DIRECTIONS=16,PhysicsSimulation.SOLVERMODE_ENABLE_FRICTION_DIRECTION_CACHING=32,PhysicsSimulation.SOLVERMODE_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION=64,PhysicsSimulation.SOLVERMODE_CACHE_FRIENDLY=128,PhysicsSimulation.SOLVERMODE_SIMD=256,PhysicsSimulation.SOLVERMODE_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS=512,PhysicsSimulation.SOLVERMODE_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS=1024,PhysicsSimulation.HITSRAYRESULTCALLBACK_FLAG_NONE=0,PhysicsSimulation.HITSRAYRESULTCALLBACK_FLAG_FILTERBACKFACESS=1,PhysicsSimulation.HITSRAYRESULTCALLBACK_FLAG_KEEPUNFILIPPEDNORMAL=2,PhysicsSimulation.HITSRAYRESULTCALLBACK_FLAG_USESUBSIMPLEXCONVEXCASTRAYTEST=4,PhysicsSimulation.HITSRAYRESULTCALLBACK_FLAG_USEGJKCONVEXCASTRAYTEST=8,PhysicsSimulation.HITSRAYRESULTCALLBACK_FLAG_TERMINATOR=4294967295,PhysicsSimulation._tempVector30=new t.Vector3,PhysicsSimulation.disableSimulation=!1;class PhysicsTriggerComponent extends PhysicsComponent{get isTrigger(){return this._isTrigger}set isTrigger(e){this._isTrigger=e;var t=ILaya3D.Physics3D._bullet;if(this._btColliderObject){var a=t.btCollisionObject_getCollisionFlags(this._btColliderObject);e?0==(a&PhysicsComponent.COLLISIONFLAGS_NO_CONTACT_RESPONSE)&&t.btCollisionObject_setCollisionFlags(this._btColliderObject,a|PhysicsComponent.COLLISIONFLAGS_NO_CONTACT_RESPONSE):0!=(a&PhysicsComponent.COLLISIONFLAGS_NO_CONTACT_RESPONSE)&&t.btCollisionObject_setCollisionFlags(this._btColliderObject,a^PhysicsComponent.COLLISIONFLAGS_NO_CONTACT_RESPONSE)}}constructor(e,t){super(e,t),this._isTrigger=!1}_onAdded(){super._onAdded(),this.isTrigger=this._isTrigger}_cloneTo(e){super._cloneTo(e),e.isTrigger=this._isTrigger}}class Rigidbody3D extends PhysicsTriggerComponent{static __init__(){var e=ILaya3D.Physics3D._bullet;Rigidbody3D._btTempVector30=e.btVector3_create(0,0,0),Rigidbody3D._btTempVector31=e.btVector3_create(0,0,0),Rigidbody3D._btVector3Zero=e.btVector3_create(0,0,0),Rigidbody3D._btInertia=e.btVector3_create(0,0,0),Rigidbody3D._btImpulse=e.btVector3_create(0,0,0),Rigidbody3D._btImpulseOffset=e.btVector3_create(0,0,0),Rigidbody3D._btGravity=e.btVector3_create(0,0,0),Rigidbody3D._btTransform0=e.btTransform_create()}get mass(){return this._mass}set mass(e){e=Math.max(e,1e-7),this._mass=e,this._isKinematic||this._updateMass(e)}getCollisionFlags(){var e=ILaya3D.Physics3D._bullet;return this._btColliderObject?e.btCollisionObject_getCollisionFlags(this._btColliderObject):0}get isKinematic(){return this._isKinematic}set isKinematic(e){this._isKinematic=e,this._controlBySimulation=!e;var t=ILaya3D.Physics3D._bullet,a=!!(this._simulation&&this._enabled&&this._colliderShape);a&&this._removeFromSimulation();var r=this._btColliderObject,i=t.btCollisionObject_getCollisionFlags(r);e?(i|=PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT,t.btCollisionObject_setCollisionFlags(r,i),t.btCollisionObject_forceActivationState(this._btColliderObject,PhysicsComponent.ACTIVATIONSTATE_DISABLE_DEACTIVATION),this._enableProcessCollisions=!1,this._updateMass(0)):((i&PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT)>0&&(i^=PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT),t.btCollisionObject_setCollisionFlags(r,i),t.btCollisionObject_setActivationState(this._btColliderObject,PhysicsComponent.ACTIVATIONSTATE_ACTIVE_TAG),this._enableProcessCollisions=!0,this._updateMass(this._mass));var n=Rigidbody3D._btVector3Zero;t.btCollisionObject_setInterpolationLinearVelocity(r,n),t.btRigidBody_setLinearVelocity(r,n),t.btCollisionObject_setInterpolationAngularVelocity(r,n),t.btRigidBody_setAngularVelocity(r,n),a&&this._addToSimulation()}get linearDamping(){return this._linearDamping}set linearDamping(e){this._linearDamping=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btRigidBody_setDamping(this._btColliderObject,e,this._angularDamping)}get angularDamping(){return this._angularDamping}set angularDamping(e){this._angularDamping=e,this._btColliderObject&&ILaya3D.Physics3D._bullet.btRigidBody_setDamping(this._btColliderObject,this._linearDamping,e)}get overrideGravity(){return this._overrideGravity}set overrideGravity(e){this._overrideGravity=e;var t=ILaya3D.Physics3D._bullet;if(this._btColliderObject){var a=t.btRigidBody_getFlags(this._btColliderObject);e?0==(a&Rigidbody3D._BT_DISABLE_WORLD_GRAVITY)&&t.btRigidBody_setFlags(this._btColliderObject,a|Rigidbody3D._BT_DISABLE_WORLD_GRAVITY):(a&Rigidbody3D._BT_DISABLE_WORLD_GRAVITY)>0&&t.btRigidBody_setFlags(this._btColliderObject,a^Rigidbody3D._BT_DISABLE_WORLD_GRAVITY)}}get gravity(){var e=ILaya3D.Physics3D._bullet;return Rigidbody3D._btGravity=e.btRigidBody_getGravity(this._btColliderObject),Utils3D._convertToLayaVec3(Rigidbody3D._btGravity,this._gravity),this._gravity}set gravity(e){this._gravity=e;var t=ILaya3D.Physics3D._bullet;t.btVector3_setValue(Rigidbody3D._btGravity,e.x,e.y,e.z),t.btRigidBody_setGravity(this._btColliderObject,Rigidbody3D._btGravity)}get totalForce(){if(this._btColliderObject){var e=ILaya3D.Physics3D._bullet.btRigidBody_getTotalForce(this._btColliderObject);return Utils3D._convertToLayaVec3(e,this._totalForce),this._totalForce}return null}get linearFactor(){return this._linearFactor}set linearFactor(e){this._linearFactor=e;var t=Rigidbody3D._btTempVector30;Utils3D._convertToBulletVec3(e,t),ILaya3D.Physics3D._bullet.btRigidBody_setLinearFactor(this._btColliderObject,t)}get linearVelocity(){return this._btColliderObject&&Utils3D._convertToLayaVec3(ILaya3D.Physics3D._bullet.btRigidBody_getLinearVelocity(this._btColliderObject),this._linearVelocity),this._linearVelocity}set linearVelocity(e){if(this._linearVelocity=e,this._btColliderObject){var t=Rigidbody3D._btTempVector30;Utils3D._convertToBulletVec3(e,t),this.isSleeping&&this.wakeUp(),ILaya3D.Physics3D._bullet.btRigidBody_setLinearVelocity(this._btColliderObject,t)}}get angularFactor(){return this._angularFactor}set angularFactor(e){this._angularFactor=e;var t=Rigidbody3D._btTempVector30;Utils3D._convertToBulletVec3(e,t),ILaya3D.Physics3D._bullet.btRigidBody_setAngularFactor(this._btColliderObject,t)}get angularVelocity(){return this._btColliderObject&&Utils3D._convertToLayaVec3(ILaya3D.Physics3D._bullet.btRigidBody_getAngularVelocity(this._btColliderObject),this._angularVelocity),this._angularVelocity}set angularVelocity(e){if(this._angularVelocity=e,this._btColliderObject){var t=Rigidbody3D._btTempVector30;Utils3D._convertToBulletVec3(e,t),this.isSleeping&&this.wakeUp(),ILaya3D.Physics3D._bullet.btRigidBody_setAngularVelocity(this._btColliderObject,t)}}get totalTorque(){if(this._btColliderObject){var e=ILaya3D.Physics3D._bullet.btRigidBody_getTotalTorque(this._btColliderObject);return Utils3D._convertToLayaVec3(e,this._totalTorque),this._totalTorque}return null}get detectCollisions(){return this._detectCollisions}set detectCollisions(e){this._detectCollisions!==e&&(this._detectCollisions=e,this._colliderShape&&this._enabled&&this._simulation&&(this._simulation._removeRigidBody(this),this._simulation._addRigidBody(this,this._collisionGroup,e?this._canCollideWith:0)))}get isSleeping(){return!!this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_getActivationState(this._btColliderObject)===PhysicsComponent.ACTIVATIONSTATE_ISLAND_SLEEPING}get sleepLinearVelocity(){return ILaya3D.Physics3D._bullet.btRigidBody_getLinearSleepingThreshold(this._btColliderObject)}set sleepLinearVelocity(e){var t=ILaya3D.Physics3D._bullet;t.btRigidBody_setSleepingThresholds(this._btColliderObject,e,t.btRigidBody_getAngularSleepingThreshold(this._btColliderObject))}get sleepAngularVelocity(){return ILaya3D.Physics3D._bullet.btRigidBody_getAngularSleepingThreshold(this._btColliderObject)}set sleepAngularVelocity(e){var t=ILaya3D.Physics3D._bullet;t.btRigidBody_setSleepingThresholds(this._btColliderObject,t.btRigidBody_getLinearSleepingThreshold(this._btColliderObject),e)}get btColliderObject(){return this._btColliderObject}set position(e){var t=ILaya3D.Physics3D._bullet,a=this._btColliderObject;t.btRigidBody_setCenterOfMassPos(a,e.x,e.y,e.z)}get position(){return this.getPhysicsPosition()}set orientation(e){var t=ILaya3D.Physics3D._bullet,a=this._btColliderObject;t.btRigidBody_setCenterOfMassOrientation(a,e.x,e.y,e.z,e.w)}get orientation(){return this.getPhysicsOrientation()}constructor(e=Physics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER,a=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){super(e,a),this._isKinematic=!1,this._mass=1,this._gravity=new t.Vector3(0,-10,0),this._angularDamping=0,this._linearDamping=0,this._overrideGravity=!1,this._totalTorque=new t.Vector3(0,0,0),this._totalForce=new t.Vector3(0,0,0),this._linearVelocity=new t.Vector3,this._angularVelocity=new t.Vector3,this._linearFactor=new t.Vector3(1,1,1),this._angularFactor=new t.Vector3(1,1,1),this._detectCollisions=!0,this._controlBySimulation=!0}_updateMass(e){if(this._btColliderObject&&this._colliderShape&&this._colliderShape._btShape){var t=ILaya3D.Physics3D._bullet;t.btCollisionShape_calculateLocalInertia(this._colliderShape._btShape,e,Rigidbody3D._btInertia),t.btRigidBody_setMassProps(this._btColliderObject,e,Rigidbody3D._btInertia),t.btRigidBody_updateInertiaTensor(this._btColliderObject)}}_onScaleChange(e){super._onScaleChange(e),this._updateMass(this._isKinematic?0:this._mass)}_derivePhysicsTransformation(e){var t=ILaya3D.Physics3D._bullet,a=this._btColliderObject,r=t.btCollisionObject_getWorldTransform(a),i=Rigidbody3D._btTransform0;t.btTransform_equal(i,r),this._innerDerivePhysicsTransformation(i,e),t.btRigidBody_setCenterOfMassTransform(a,i)}_initRigidbody(e){var t=ILaya3D.Physics3D._bullet,a=t.layaMotionState_create();t.layaMotionState_set_rigidBodyID(a,e),this._btLayaMotionState=a;var r=t.btRigidBodyConstructionInfo_create(0,a,null,Rigidbody3D._btVector3Zero),i=t.btRigidBody_create(r);t.btCollisionObject_setUserIndex(i,this.id),this._btColliderObject=i,t.btRigidBodyConstructionInfo_destroy(r)}_onAdded(){this._initRigidbody(this.id),super._onAdded(),this.mass=this._mass,this.linearFactor=this._linearFactor,this.angularFactor=this._angularFactor,this.linearDamping=this._linearDamping,this.angularDamping=this._angularDamping,this.overrideGravity=this._overrideGravity,this.gravity=this._gravity,this.isKinematic=this._isKinematic}_onDestroy(){ILaya3D.Physics3D._bullet.btMotionState_destroy(this._btLayaMotionState),super._onDestroy(),this._btLayaMotionState=null,this._gravity=null,this._totalTorque=null,this._linearVelocity=null,this._angularVelocity=null,this._linearFactor=null,this._angularFactor=null}set colliderShape(e){e instanceof MeshColliderShape&&(e=null,console.error("RigidBody3D is not support MeshColliderShape")),super.colliderShape=e}get colliderShape(){return this._colliderShape}_onShapeChange(e){if(super._onShapeChange(e),!(this.mass<=0))if(this._isKinematic)this._updateMass(0);else{var t=ILaya3D.Physics3D._bullet;t.btRigidBody_setCenterOfMassTransform(this._btColliderObject,t.btCollisionObject_getWorldTransform(this._btColliderObject)),this._updateMass(this._mass)}}_parse(e){if(null!=e.friction&&(this.friction=e.friction),null!=e.rollingFriction&&(this.rollingFriction=e.rollingFriction),null!=e.restitution&&(this.restitution=e.restitution),null!=e.isTrigger&&(this.isTrigger=e.isTrigger),null!=e.mass&&(this.mass=e.mass),null!=e.linearDamping&&(this.linearDamping=e.linearDamping),null!=e.angularDamping&&(this.angularDamping=e.angularDamping),null!=e.overrideGravity&&(this.overrideGravity=e.overrideGravity),null!=e.linearFactor){var t=this.linearFactor;t.fromArray(e.linearFactor),this.linearFactor=t}if(null!=e.angularFactor){var a=this.angularFactor;a.fromArray(e.angularFactor),this.angularFactor=a}e.gravity&&(this.gravity.fromArray(e.gravity),this.gravity=this.gravity),super._parse(e),this._parseShape(e.shapes),null!=e.isKinematic&&(this.isKinematic=e.isKinematic)}_addToSimulation(){this._simulation._addRigidBody(this,this._collisionGroup,this._detectCollisions?this._canCollideWith:0)}_removeFromSimulation(){this._simulation._removeRigidBody(this)}_cloneTo(e){super._cloneTo(e);var t=e;t.isKinematic=this._isKinematic,t.mass=this._mass,t.gravity=this._gravity,t.angularDamping=this._angularDamping,t.linearDamping=this._linearDamping,t.overrideGravity=this._overrideGravity,t.linearVelocity=this._linearVelocity,t.angularVelocity=this._angularVelocity,t.linearFactor=this._linearFactor,t.angularFactor=this._angularFactor,t.detectCollisions=this._detectCollisions}applyForce(e,t=null){this.applyForceXYZ(e.x,e.y,e.z,t)}applyForceXYZ(e,t,a,r=null){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var i=ILaya3D.Physics3D._bullet,n=Rigidbody3D._btTempVector30;if(i.btVector3_setValue(n,e,t,a),this.wakeUp(),r){var s=Rigidbody3D._btTempVector31;i.btVector3_setValue(s,r.x,r.y,r.z),i.btRigidBody_applyForce(this._btColliderObject,n,s)}else i.btRigidBody_applyCentralForce(this._btColliderObject,n)}setCollisionFlags(e){var t=ILaya3D.Physics3D._bullet,a=!(!this._simulation||!this._enabled);a&&this._removeFromSimulation(),3&e?(this._isKinematic=!0,this._simulation&&this._updateMass(0)):this._simulation&&this._updateMass(this._mass),t.btCollisionObject_setCollisionFlags(this._btColliderObject,e),a&&this._addToSimulation()}applyTorque(e){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var t=ILaya3D.Physics3D._bullet,a=Rigidbody3D._btTempVector30;this.wakeUp(),t.btVector3_setValue(a,e.x,e.y,e.z),t.btRigidBody_applyTorque(this._btColliderObject,a)}applyImpulse(e,t=null){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var a=ILaya3D.Physics3D._bullet;a.btVector3_setValue(Rigidbody3D._btImpulse,e.x,e.y,e.z),this.wakeUp(),t?(a.btVector3_setValue(Rigidbody3D._btImpulseOffset,t.x,t.y,t.z),a.btRigidBody_applyImpulse(this._btColliderObject,Rigidbody3D._btImpulse,Rigidbody3D._btImpulseOffset)):a.btRigidBody_applyCentralImpulse(this._btColliderObject,Rigidbody3D._btImpulse)}applyTorqueImpulse(e){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var t=ILaya3D.Physics3D._bullet,a=Rigidbody3D._btTempVector30;this.wakeUp(),t.btVector3_setValue(a,e.x,e.y,e.z),t.btRigidBody_applyTorqueImpulse(this._btColliderObject,a)}wakeUp(){this._btColliderObject&&ILaya3D.Physics3D._bullet.btCollisionObject_activate(this._btColliderObject,!1)}clearForces(){var e=this._btColliderObject;if(null==e)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var t=ILaya3D.Physics3D._bullet;t.btRigidBody_clearForces(e);var a=Rigidbody3D._btVector3Zero;t.btCollisionObject_setInterpolationLinearVelocity(e,a),t.btRigidBody_setLinearVelocity(e,a),t.btCollisionObject_setInterpolationAngularVelocity(e,a),t.btRigidBody_setAngularVelocity(e,a)}}Rigidbody3D.TYPE_STATIC=0,Rigidbody3D.TYPE_DYNAMIC=1,Rigidbody3D.TYPE_KINEMATIC=2,Rigidbody3D._BT_DISABLE_WORLD_GRAVITY=1,Rigidbody3D._BT_ENABLE_GYROPSCOPIC_FORCE=2;class StaticPlaneColliderShape extends ColliderShape{static __init__(){StaticPlaneColliderShape._btNormal=ILaya3D.Physics3D._bullet.btVector3_create(0,0,0)}constructor(e,t){super(),this._normal=e,this._offset=t,this._type=ColliderShape.SHAPETYPES_STATICPLANE;var a=ILaya3D.Physics3D._bullet;a.btVector3_setValue(StaticPlaneColliderShape._btNormal,-e.x,e.y,e.z),this._btShape=a.btStaticPlaneShape_create(StaticPlaneColliderShape._btNormal,t)}clone(){var e=new StaticPlaneColliderShape(this._normal,this._offset);return this.cloneTo(e),e}}class Physics3D{static __bulletinit__(){this._bullet=window.Physics3D,this._bullet&&(StaticPlaneColliderShape.__init__(),ColliderShape.__init__(),CompoundColliderShape.__init__(),PhysicsComponent.__init__(),PhysicsSimulation.__init__(),BoxColliderShape.__init__(),CylinderColliderShape.__init__(),CharacterController.__init__(),Rigidbody3D.__init__())}}Physics3D._bullet=null,Physics3D._cannon=null,Physics3D._enablePhysics=!1;class KeyframeNode{constructor(){this._ownerPath=[],this._propertys=[],this._keyFrames=[]}get ownerPathCount(){return this._ownerPath.length}get propertyCount(){return this._propertys.length}get keyFramesCount(){return this._keyFrames.length}_setOwnerPathCount(e){this._ownerPath.length=e}_setOwnerPathByIndex(e,t){this._ownerPath[e]=t}_joinOwnerPath(e){return this._ownerPath.join(e)}_setPropertyCount(e){this._propertys.length=e}_setPropertyByIndex(e,t){this._propertys[e]=t}_joinProperty(e){return this._propertys.join(e)}_setKeyframeCount(e){this._keyFrames.length=e}_setKeyframeByIndex(e,t){this._keyFrames[e]=t}getOwnerPathByIndex(e){return this._ownerPath[e]}getPropertyByIndex(e){return this._propertys[e]}getKeyframeByIndex(e){return this._keyFrames[e]}}class AnimationEvent{constructor(){}}var i,n,s,o,l,h,c,d,u,_,m,f,S,g,p,D,T,E,C,A;e.WeightedMode=void 0,(i=e.WeightedMode||(e.WeightedMode={}))[i.None=0]="None",i[i.In=1]="In",i[i.Out=2]="Out",i[i.Both=3]="Both";class Keyframe{constructor(){}cloneTo(e){e.time=this.time}clone(){var e=new Keyframe;return this.cloneTo(e),e}}Keyframe.defaultWeight=.33333;class FloatKeyframe extends Keyframe{constructor(){super(),this.inWeight=Keyframe.defaultWeight,this.outWeight=Keyframe.defaultWeight,this.weightedMode=e.WeightedMode.None}cloneTo(e){super.cloneTo(e);var t=e;t.inTangent=this.inTangent,t.outTangent=this.outTangent,t.value=this.value,t.inTangent=this.inTangent,t.outTangent=this.outTangent,t.value=this.value,t.inWeight=this.inWeight,t.outWeight=this.outWeight,t.weightedMode=this.weightedMode}clone(){let e=new FloatKeyframe;return this.cloneTo(e),e}}class QuaternionKeyframe extends Keyframe{constructor(e=!1){super(),this.inTangent=new t.Vector4,this.outTangent=new t.Vector4,this.value=new t.Quaternion,e&&(this.inWeight=new t.Vector4,this.outWeight=new t.Vector4,this.weightedMode=new t.Vector4)}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.weightedMode&&(this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode))}}class Vector3Keyframe extends Keyframe{constructor(a=!1){super(),this.inTangent=new t.Vector3,this.outTangent=new t.Vector3,this.value=new t.Vector3,a&&(this.inWeight=new t.Vector3(Keyframe.defaultWeight,Keyframe.defaultWeight,Keyframe.defaultWeight),this.outWeight=new t.Vector3(Keyframe.defaultWeight,Keyframe.defaultWeight,Keyframe.defaultWeight),this.weightedMode=new t.Vector3(e.WeightedMode.None,e.WeightedMode.None,e.WeightedMode.None))}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.weightedMode&&(this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode))}}class AnimationClipParser03{static READ_DATA(){AnimationClipParser03._DATA.offset=AnimationClipParser03._reader.getUint32(),AnimationClipParser03._DATA.size=AnimationClipParser03._reader.getUint32()}static READ_BLOCK(){for(var e=AnimationClipParser03._BLOCK.count=AnimationClipParser03._reader.getUint16(),t=AnimationClipParser03._BLOCK.blockStarts=[],a=AnimationClipParser03._BLOCK.blockLengths=[],r=0;r<e;r++)t.push(AnimationClipParser03._reader.getUint32()),a.push(AnimationClipParser03._reader.getUint32())}static READ_STRINGS(){var e=AnimationClipParser03._reader.getUint32(),t=AnimationClipParser03._reader.getUint16(),a=AnimationClipParser03._reader.pos;AnimationClipParser03._reader.pos=e+AnimationClipParser03._DATA.offset;for(var r=0;r<t;r++)AnimationClipParser03._strings[r]=AnimationClipParser03._reader.readUTFString();AnimationClipParser03._reader.pos=a}static parse(e,t){AnimationClipParser03._animationClip=e,AnimationClipParser03._reader=t,AnimationClipParser03.READ_DATA(),AnimationClipParser03.READ_BLOCK(),AnimationClipParser03.READ_STRINGS();for(var a=0,r=AnimationClipParser03._BLOCK.count;a<r;a++){var i=t.getUint16(),n=AnimationClipParser03._strings[i],s=AnimationClipParser03["READ_"+n];if(null==s)throw new Error("model file err,no this function:"+i+" "+n);s.call(null)}}static READ_ANIMATIONS(){var e,t,a,r=AnimationClipParser03._reader,i=[],n=r.getUint16();for(i.length=n,e=0;e<n;e++)i[e]=r.getFloat32();var s=AnimationClipParser03._animationClip;s.name=AnimationClipParser03._strings[r.getUint16()];var o=s._duration=r.getFloat32();s.islooping=!!r.getByte(),s._frameRate=r.getInt16();var l=r.getInt16(),h=s._nodes;h.count=l;var c=s._nodesMap={},d=s._nodesDic={};for(e=0;e<l;e++){a=new KeyframeNode,h.setNodeByIndex(e,a),a._indexInList=e;var u=a.type=r.getUint8(),_=r.getUint16();for(a._setOwnerPathCount(_),t=0;t<_;t++)a._setOwnerPathByIndex(t,AnimationClipParser03._strings[r.getUint16()]);var m=a._joinOwnerPath("/"),f=c[m];f||(c[m]=f=[]),f.push(a),a.propertyOwner=AnimationClipParser03._strings[r.getUint16()];var S=r.getUint16();for(a._setPropertyCount(S),t=0;t<S;t++)a._setPropertyByIndex(t,AnimationClipParser03._strings[r.getUint16()]);var g=m+"."+a.propertyOwner+"."+a._joinProperty(".");d[g]=a,a.fullPath=g;var p=r.getUint16();for(a._setKeyframeCount(p),t=0;t<p;t++)switch(u){case 0:var D=new FloatKeyframe;a._setKeyframeByIndex(t,D),D.time=i[r.getUint16()],D.inTangent=r.getFloat32(),D.outTangent=r.getFloat32(),D.value=r.getFloat32();break;case 1:case 3:case 4:var T=new Vector3Keyframe;a._setKeyframeByIndex(t,T),T.time=i[r.getUint16()];var E=T.inTangent,C=T.outTangent,A=T.value;E.x=r.getFloat32(),E.y=r.getFloat32(),E.z=r.getFloat32(),C.x=r.getFloat32(),C.y=r.getFloat32(),C.z=r.getFloat32(),A.x=r.getFloat32(),A.y=r.getFloat32(),A.z=r.getFloat32();break;case 2:var R=new QuaternionKeyframe;a._setKeyframeByIndex(t,R),R.time=i[r.getUint16()];var x=R.inTangent,M=R.outTangent,y=R.value;x.x=r.getFloat32(),x.y=r.getFloat32(),x.z=r.getFloat32(),x.w=r.getFloat32(),M.x=r.getFloat32(),M.y=r.getFloat32(),M.z=r.getFloat32(),M.w=r.getFloat32(),y.x=r.getFloat32(),y.y=r.getFloat32(),y.z=r.getFloat32(),y.w=r.getFloat32();break;default:throw"AnimationClipParser03:unknown type."}}var I=r.getUint16();for(e=0;e<I;e++){var v=new AnimationEvent;v.time=Math.min(o,r.getFloat32()),v.eventName=AnimationClipParser03._strings[r.getUint16()];var L=[],b=r.getUint16();for(b>0&&(v.params=L=[]),t=0;t<b;t++){switch(r.getByte()){case 0:L.push(!!r.getByte());break;case 1:L.push(r.getInt32());break;case 2:L.push(r.getFloat32());break;case 3:L.push(AnimationClipParser03._strings[r.getUint16()]);break;default:throw new Error("unknown type.")}}s.addEvent(v)}}}AnimationClipParser03._strings=[],AnimationClipParser03._BLOCK={count:0},AnimationClipParser03._DATA={offset:0,size:0};class Vector2Keyframe extends Keyframe{constructor(a=!1){super(),this.inTangent=new t.Vector2,this.outTangent=new t.Vector2,this.value=new t.Vector2,a&&(this.inWeight=new t.Vector2(Keyframe.defaultWeight,Keyframe.defaultWeight),this.outWeight=new t.Vector2(Keyframe.defaultWeight,Keyframe.defaultWeight),this.weightedMode=new t.Vector2(e.WeightedMode.None,e.WeightedMode.None))}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.weightedMode&&(this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode))}}class Vector4Keyframe extends Keyframe{constructor(a=!1){super(),this.inTangent=new t.Vector4,this.outTangent=new t.Vector4,this.value=new t.Vector4,a&&(this.inWeight=new t.Vector4(Keyframe.defaultWeight,Keyframe.defaultWeight,Keyframe.defaultWeight,Keyframe.defaultWeight),this.outWeight=new t.Vector4(Keyframe.defaultWeight,Keyframe.defaultWeight,Keyframe.defaultWeight,Keyframe.defaultWeight),this.weightedMode=new t.Vector4(e.WeightedMode.None,e.WeightedMode.None,e.WeightedMode.None,e.WeightedMode.None))}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.weightedMode&&(this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode))}}e.KeyFrameValueType=void 0,(n=e.KeyFrameValueType||(e.KeyFrameValueType={}))[n.None=-1]="None",n[n.Float=0]="Float",n[n.Position=1]="Position",n[n.Rotation=2]="Rotation",n[n.Scale=3]="Scale",n[n.RotationEuler=4]="RotationEuler",n[n.Vector2=5]="Vector2",n[n.Vector3=6]="Vector3",n[n.Vector4=7]="Vector4",n[n.Color=8]="Color";class KeyframeNodeOwner{constructor(){this.indexInList=-1,this.referenceCount=0,this.updateMark=-1,this.type=-1,this.fullPath=null,this.nodePath=null,this.propertyOwner=null,this.property=null,this.defaultValue=null,this.value=null,this.crossFixedValue=null,this.isMaterial=!1}saveCrossFixedValue(){if(this.propertyOwner)switch(this.type){case 0:this.crossFixedValue=this.value;break;case 1:case 3:case 4:case 2:this.value.cloneTo(this.crossFixedValue);break;default:throw"Animator:unknown type."}}animatorDataSetCallBack(){this.callBackOwner[this.callbackFun].apply(this.callBackOwner,this.callParams)}getCallbackNode(){if(this.propertyOwner&&this.callbackFunData){let e=this.callbackFunData.split(".");this.callBackOwner=this.propertyOwner;for(let t=0,a=e.length-1;t<a;t++)this.callBackOwner=this.callBackOwner[e[t]];this.callbackFun=e[e.length-1]}}}class AnimationClipParser04{static READ_DATA(){AnimationClipParser04._DATA.offset=AnimationClipParser04._reader.getUint32(),AnimationClipParser04._DATA.size=AnimationClipParser04._reader.getUint32()}static READ_BLOCK(){for(var e=AnimationClipParser04._BLOCK.count=AnimationClipParser04._reader.getUint16(),t=AnimationClipParser04._BLOCK.blockStarts=[],a=AnimationClipParser04._BLOCK.blockLengths=[],r=0;r<e;r++)t.push(AnimationClipParser04._reader.getUint32()),a.push(AnimationClipParser04._reader.getUint32())}static READ_STRINGS(){var e=AnimationClipParser04._reader.getUint32(),t=AnimationClipParser04._reader.getUint16(),a=AnimationClipParser04._reader.pos;AnimationClipParser04._reader.pos=e+AnimationClipParser04._DATA.offset;for(var r=0;r<t;r++)AnimationClipParser04._strings[r]=AnimationClipParser04._reader.readUTFString();AnimationClipParser04._reader.pos=a}static parse(e,t,a){AnimationClipParser04._animationClip=e,AnimationClipParser04._reader=t,AnimationClipParser04._version=a,AnimationClipParser04.READ_DATA(),AnimationClipParser04.READ_BLOCK(),AnimationClipParser04.READ_STRINGS();for(var r=0,i=AnimationClipParser04._BLOCK.count;r<i;r++){var n=t.getUint16(),s=AnimationClipParser04._strings[n],o=AnimationClipParser04["READ_"+s];if(null==o)throw new Error("model file err,no this function:"+n+" "+s);o.call(null)}AnimationClipParser04._version=null,AnimationClipParser04._reader=null,AnimationClipParser04._animationClip=null}static READ_ANIMATIONS(){var a,r,i,n=AnimationClipParser04._reader,s=[],o=n.getUint16();for(s.length=o,a=0;a<o;a++)s[a]=n.getFloat32();var l=AnimationClipParser04._animationClip;l.name=AnimationClipParser04._strings[n.getUint16()];var h=l._duration=n.getFloat32();l.islooping=!!n.getByte(),l._frameRate=n.getInt16();var c=n.getInt16(),d=l._nodes;d.count=c;var u=l._nodesMap={},_=l._nodesDic={};for(a=0;a<c;a++){if(i=new KeyframeNode,"LAYAANIMATION:WEIGHT_05"==AnimationClipParser04._version){1==n.getByte()&&(i.propertyChangePath=AnimationClipParser04._strings[n.getUint16()]),1==n.getByte()&&(i.callbackFunData=AnimationClipParser04._strings[n.getUint16()]);let e=n.getUint8(),t=null;for(r=0;r<e;r++)null==t&&(t=[]),t.push(AnimationClipParser04._strings[n.getUint16()]);i.callParams=t}d.setNodeByIndex(a,i),i._indexInList=a;var m=i.type=n.getUint8(),f=n.getUint16();for(i._setOwnerPathCount(f),r=0;r<f;r++)i._setOwnerPathByIndex(r,AnimationClipParser04._strings[n.getUint16()]);var S=i._joinOwnerPath("/"),g=u[S];g||(u[S]=g=[]),g.push(i),i.propertyOwner=AnimationClipParser04._strings[n.getUint16()];var p=n.getUint16();for(i._setPropertyCount(p),r=0;r<p;r++)i._setPropertyByIndex(r,AnimationClipParser04._strings[n.getUint16()]);var D=S+"."+i.propertyOwner+"."+i._joinProperty(".");_[D]=i,i.fullPath=D,i.nodePath=S;var T=n.getUint16();switch(i._setKeyframeCount(T),AnimationClipParser04._version){case"LAYAANIMATION:04":for(r=0;r<T;r++)switch(m){case e.KeyFrameValueType.Float:var E=new FloatKeyframe;i._setKeyframeByIndex(r,E),E.time=s[n.getUint16()],E.inTangent=n.getFloat32(),E.outTangent=n.getFloat32(),E.value=n.getFloat32();break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:var C=new Vector3Keyframe;i._setKeyframeByIndex(r,C),C.time=s[n.getUint16()];var A=C.inTangent,R=C.outTangent,x=C.value;A.x=n.getFloat32(),A.y=n.getFloat32(),A.z=n.getFloat32(),R.x=n.getFloat32(),R.y=n.getFloat32(),R.z=n.getFloat32(),x.x=n.getFloat32(),x.y=n.getFloat32(),x.z=n.getFloat32();break;case e.KeyFrameValueType.Rotation:var M=new QuaternionKeyframe;i._setKeyframeByIndex(r,M),M.time=s[n.getUint16()];var y=M.inTangent,I=M.outTangent,v=M.value;y.x=n.getFloat32(),y.y=n.getFloat32(),y.z=n.getFloat32(),y.w=n.getFloat32(),I.x=n.getFloat32(),I.y=n.getFloat32(),I.z=n.getFloat32(),I.w=n.getFloat32(),v.x=n.getFloat32(),v.y=n.getFloat32(),v.z=n.getFloat32(),v.w=n.getFloat32();break;case e.KeyFrameValueType.Vector2:var L=new Vector2Keyframe;i._setKeyframeByIndex(r,L),L.time=s[n.getUint16()];var b=L.inTangent,P=L.outTangent,O=L.value;b.x=n.getFloat32(),b.y=n.getFloat32(),P.x=n.getFloat32(),P.y=n.getFloat32(),O.x=n.getFloat32(),O.y=n.getFloat32();break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:var B=new Vector4Keyframe;i._setKeyframeByIndex(r,B),B.time=s[n.getUint16()];var V=B.inTangent,w=B.outTangent,N=B.value;V.x=n.getFloat32(),V.y=n.getFloat32(),V.z=n.getFloat32(),V.w=n.getFloat32(),w.x=n.getFloat32(),w.y=n.getFloat32(),w.z=n.getFloat32(),w.w=n.getFloat32(),N.x=n.getFloat32(),N.y=n.getFloat32(),N.z=n.getFloat32(),N.w=n.getFloat32();break;default:throw"AnimationClipParser04:unknown type."}break;case"LAYAANIMATION:WEIGHT_04":case"LAYAANIMATION:WEIGHT_05":for(r=0;r<T;r++){let t=1;switch(m){case e.KeyFrameValueType.Float:E=new FloatKeyframe;i._setKeyframeByIndex(r,E),E.time=s[n.getUint16()],E.inTangent=n.getFloat32(),E.outTangent=n.getFloat32(),E.value=n.getFloat32(),E.weightedMode=n.getUint8(),"LAYAANIMATION:WEIGHT_05"==AnimationClipParser04._version?(e.WeightedMode.In!=E.weightedMode&&e.WeightedMode.Both!=E.weightedMode||(E.inWeight=n.getFloat32()),e.WeightedMode.Out!=E.weightedMode&&e.WeightedMode.Both!=E.weightedMode||(E.outWeight=n.getFloat32())):(E.inWeight=n.getFloat32(),E.outWeight=n.getFloat32());break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:C=new Vector3Keyframe(!0);i._setKeyframeByIndex(r,C),C.time=s[n.getUint16()];A=C.inTangent,R=C.outTangent,x=C.value;let a=C.weightedMode,o=C.inWeight,l=C.outWeight;A.x=n.getFloat32(),A.y=n.getFloat32(),A.z=n.getFloat32(),R.x=n.getFloat32(),R.y=n.getFloat32(),R.z=n.getFloat32(),x.x=n.getFloat32(),x.y=n.getFloat32(),x.z=n.getFloat32(),"LAYAANIMATION:WEIGHT_05"==AnimationClipParser04._version&&(t=n.getByte()),1==t&&(a.x=n.getUint8(),a.y=n.getUint8(),a.z=n.getUint8(),o.x=n.getFloat32(),o.y=n.getFloat32(),o.z=n.getFloat32(),l.x=n.getFloat32(),l.y=n.getFloat32(),l.z=n.getFloat32());break;case e.KeyFrameValueType.Rotation:M=new QuaternionKeyframe(!0);i._setKeyframeByIndex(r,M),M.time=s[n.getUint16()];y=M.inTangent,I=M.outTangent,v=M.value;let h=M.weightedMode,c=M.inWeight,d=M.outWeight;y.x=n.getFloat32(),y.y=n.getFloat32(),y.z=n.getFloat32(),y.w=n.getFloat32(),I.x=n.getFloat32(),I.y=n.getFloat32(),I.z=n.getFloat32(),I.w=n.getFloat32(),v.x=n.getFloat32(),v.y=n.getFloat32(),v.z=n.getFloat32(),v.w=n.getFloat32(),"LAYAANIMATION:WEIGHT_05"==AnimationClipParser04._version&&(t=n.getByte()),1==t&&(h.x=n.getUint8(),h.y=n.getUint8(),h.z=n.getUint8(),h.w=n.getUint8(),c.x=n.getFloat32(),c.y=n.getFloat32(),c.z=n.getFloat32(),c.w=n.getFloat32(),d.x=n.getFloat32(),d.y=n.getFloat32(),d.z=n.getFloat32(),d.w=n.getFloat32());break;case e.KeyFrameValueType.Vector2:L=new Vector2Keyframe(!0);i._setKeyframeByIndex(r,L),L.time=s[n.getUint16()];b=L.inTangent,P=L.outTangent,O=L.value;let u=L.weightedMode,_=L.inWeight,m=L.outWeight;b.x=n.getFloat32(),b.y=n.getFloat32(),P.x=n.getFloat32(),P.y=n.getFloat32(),O.x=n.getFloat32(),O.y=n.getFloat32(),"LAYAANIMATION:WEIGHT_05"==AnimationClipParser04._version&&(t=n.getByte()),1==t&&(u.x=n.getUint8(),u.y=n.getUint8(),_.x=n.getFloat32(),_.y=n.getFloat32(),m.x=n.getFloat32(),m.y=n.getFloat32());break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:B=new Vector4Keyframe(!0);i._setKeyframeByIndex(r,B),B.time=s[n.getUint16()];V=B.inTangent,w=B.outTangent,N=B.value;var F=B.weightedMode,U=B.inWeight,G=B.outWeight;V.x=n.getFloat32(),V.y=n.getFloat32(),V.z=n.getFloat32(),V.w=n.getFloat32(),w.x=n.getFloat32(),w.y=n.getFloat32(),w.z=n.getFloat32(),w.w=n.getFloat32(),N.x=n.getFloat32(),N.y=n.getFloat32(),N.z=n.getFloat32(),N.w=n.getFloat32(),"LAYAANIMATION:WEIGHT_05"==AnimationClipParser04._version&&(t=n.getByte()),1==t&&(F.x=n.getUint8(),F.y=n.getUint8(),F.z=n.getUint8(),F.w=n.getUint8(),U.x=n.getFloat32(),U.y=n.getFloat32(),U.z=n.getFloat32(),U.w=n.getFloat32(),G.x=n.getFloat32(),G.y=n.getFloat32(),G.z=n.getFloat32(),G.w=n.getFloat32());break;default:throw"AnimationClipParser04:unknown type."}}break;case"LAYAANIMATION:COMPRESSION_04":for(r=0;r<T;r++)switch(m){case e.KeyFrameValueType.Float:E=new FloatKeyframe,i._setKeyframeByIndex(r,E),E.time=s[n.getUint16()],E.inTangent=t.HalfFloatUtils.convertToNumber(n.getUint16()),E.outTangent=t.HalfFloatUtils.convertToNumber(n.getUint16()),E.value=t.HalfFloatUtils.convertToNumber(n.getUint16());break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:C=new Vector3Keyframe,i._setKeyframeByIndex(r,C),C.time=s[n.getUint16()],A=C.inTangent,R=C.outTangent,x=C.value,A.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),A.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),A.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),R.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),R.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),R.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),x.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),x.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),x.z=t.HalfFloatUtils.convertToNumber(n.getUint16());break;case e.KeyFrameValueType.Rotation:M=new QuaternionKeyframe,i._setKeyframeByIndex(r,M),M.time=s[n.getUint16()],y=M.inTangent,I=M.outTangent,v=M.value,y.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),y.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),y.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),y.w=t.HalfFloatUtils.convertToNumber(n.getUint16()),I.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),I.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),I.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),I.w=t.HalfFloatUtils.convertToNumber(n.getUint16()),v.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),v.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),v.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),v.w=t.HalfFloatUtils.convertToNumber(n.getUint16());break;case e.KeyFrameValueType.Vector2:L=new Vector2Keyframe;i._setKeyframeByIndex(r,L),L.time=s[n.getUint16()];b=L.inTangent,P=L.outTangent,O=L.value;b.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),b.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),P.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),P.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),O.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),O.y=t.HalfFloatUtils.convertToNumber(n.getUint16());break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:B=new Vector4Keyframe;i._setKeyframeByIndex(r,B),B.time=s[n.getUint16()];V=B.inTangent,w=B.outTangent,N=B.value;V.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),V.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),V.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),V.w=t.HalfFloatUtils.convertToNumber(n.getUint16()),w.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),w.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),w.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),w.w=t.HalfFloatUtils.convertToNumber(n.getUint16()),N.x=t.HalfFloatUtils.convertToNumber(n.getUint16()),N.y=t.HalfFloatUtils.convertToNumber(n.getUint16()),N.z=t.HalfFloatUtils.convertToNumber(n.getUint16()),N.w=t.HalfFloatUtils.convertToNumber(n.getUint16());break;default:throw"AnimationClipParser04:unknown type."}}}var H=n.getUint16();for(a=0;a<H;a++){var k=new AnimationEvent;k.time=Math.min(h,n.getFloat32()),k.eventName=AnimationClipParser04._strings[n.getUint16()];var z=[],W=n.getUint16();for(W>0&&(k.params=z=[]),r=0;r<W;r++){switch(n.getByte()){case 0:z.push(!!n.getByte());break;case 1:z.push(n.getInt32());break;case 2:z.push(n.getFloat32());break;case 3:z.push(AnimationClipParser04._strings[n.getUint16()]);break;default:throw new Error("unknown type.")}}l.addEvent(k)}}}AnimationClipParser04._strings=[],AnimationClipParser04._BLOCK={count:0},AnimationClipParser04._DATA={offset:0,size:0};class KeyframeNodeList{get count(){return this._nodes.length}set count(e){this._nodes.length=e}constructor(){this._nodes=[]}getNodeByIndex(e){return this._nodes[e]}setNodeByIndex(e,t){this._nodes[e]=t}}class AnimationClip extends t.Resource{static _parse(e){var a=new AnimationClip,r=new t.Byte(e),i=r.readUTFString();switch(i){case"LAYAANIMATION:03":AnimationClipParser03.parse(a,r);break;case"LAYAANIMATION:04":case"LAYAANIMATION:COMPRESSION_04":case"LAYAANIMATION:WEIGHT_04":case"LAYAANIMATION:WEIGHT_05":AnimationClipParser04.parse(a,r,i);break;default:throw"unknown animationClip version."}return a}static load(e,a){t.ILaya.loader.load(e,a,null,t.Loader.ANIMATIONCLIP)}duration(){return this._duration}constructor(){super(),this._duration=0,this._frameRate=0,this._nodes=new KeyframeNodeList,this.islooping=!1,this._animationEvents=[]}_weightModeHermite(t,a){return 0==(t&e.WeightedMode.Out)&&0==(a&e.WeightedMode.In)}_hermiteInterpolate(e,t,a,r){var i=e.outTangent,n=t.inTangent;if(Number.isFinite(i)&&Number.isFinite(n)){var s=a*a,o=s*a,l=o-2*s+a,h=o-s,c=-2*o+3*s;return(2*o-3*s+1)*e.value+l*i*r+h*n*r+c*t.value}return e.value}_hermiteInterpolateVector3(e,t,a,r,i){var n=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=a*a,c=h*a,d=2*c-3*h+1,u=c-2*h+a,_=c-h,m=-2*c+3*h,f=s.x,S=l.x;!e.weightedMode||this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(S)?i.x=d*n.x+u*f*r+_*S*r+m*o.x:i.x=n.x:i.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,a),f=s.y,S=l.y,!e.weightedMode||this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(S)?i.y=d*n.y+u*f*r+_*S*r+m*o.y:i.y=n.y:i.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,a),f=s.z,S=l.z,!e.weightedMode||this._weightModeHermite(e.weightedMode.z,t.weightedMode.z)?Number.isFinite(f)&&Number.isFinite(S)?i.z=d*n.z+u*f*r+_*S*r+m*o.z:i.z=n.z:i.z=this._hermiteCurveSplineWeight(e.value.z,e.time,e.outWeight.z,e.outTangent.z,t.value.z,t.time,t.inWeight.z,t.inTangent.z,a)}_hermiteInterpolateQuaternion(e,t,a,r,i){var n=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=a*a,c=h*a,d=2*c-3*h+1,u=c-2*h+a,_=c-h,m=-2*c+3*h,f=s.x,S=l.x;!e.weightedMode||this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(S)?i.x=d*n.x+u*f*r+_*S*r+m*o.x:i.x=n.x:i.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,a),f=s.y,S=l.y,!e.weightedMode||this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(S)?i.y=d*n.y+u*f*r+_*S*r+m*o.y:i.y=n.y:i.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,a),f=s.z,S=l.z,!e.weightedMode||this._weightModeHermite(e.weightedMode.z,t.weightedMode.z)?Number.isFinite(f)&&Number.isFinite(S)?i.z=d*n.z+u*f*r+_*S*r+m*o.z:i.z=n.z:i.z=this._hermiteCurveSplineWeight(e.value.z,e.time,e.outWeight.z,e.outTangent.z,t.value.z,t.time,t.inWeight.z,t.inTangent.z,a),f=s.w,S=l.w,!e.weightedMode||this._weightModeHermite(e.weightedMode.w,t.weightedMode.w)?Number.isFinite(f)&&Number.isFinite(S)?i.w=d*n.w+u*f*r+_*S*r+m*o.w:i.w=n.w:i.w=this._hermiteCurveSplineWeight(e.value.w,e.time,e.outWeight.w,e.outTangent.w,t.value.w,t.time,t.inWeight.w,t.inTangent.w,a)}_hermiteInterpolateVector4(e,t,a,r,i){var n=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=a*a,c=h*a,d=2*c-3*h+1,u=c-2*h+a,_=c-h,m=-2*c+3*h,f=s.x,S=l.x;!e.weightedMode||this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(S)?i.x=d*n.x+u*f*r+_*S*r+m*o.x:i.x=n.x:i.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,a),f=s.y,S=l.y,!e.weightedMode||this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(S)?i.y=d*n.y+u*f*r+_*S*r+m*o.y:i.y=n.y:i.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,a),f=s.z,S=l.z,!e.weightedMode||this._weightModeHermite(e.weightedMode.z,t.weightedMode.z)?Number.isFinite(f)&&Number.isFinite(S)?i.z=d*n.z+u*f*r+_*S*r+m*o.z:i.z=n.z:i.z=this._hermiteCurveSplineWeight(e.value.z,e.time,e.outWeight.z,e.outTangent.z,t.value.z,t.time,t.inWeight.z,t.inTangent.z,a),f=s.w,S=l.w,!e.weightedMode||this._weightModeHermite(e.weightedMode.w,t.weightedMode.w)?Number.isFinite(f)&&Number.isFinite(S)?i.w=d*n.w+u*f*r+_*S*r+m*o.w:i.w=n.w:i.w=this._hermiteCurveSplineWeight(e.value.w,e.time,e.outWeight.w,e.outTangent.w,t.value.w,t.time,t.inWeight.w,t.inTangent.w,a)}_hermiteInterpolateVector2(e,t,a,r,i){var n=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=a*a,c=h*a,d=2*c-3*h+1,u=c-2*h+a,_=c-h,m=-2*c+3*h,f=s.x,S=l.x;!e.weightedMode||this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(S)?i.x=d*n.x+u*f*r+_*S*r+m*o.x:i.x=n.x:i.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,a),f=s.y,S=l.y,!e.weightedMode||this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(S)?i.y=d*n.y+u*f*r+_*S*r+m*o.y:i.y=n.y:i.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,a)}_hermiteCurveSplineWeight(e,t,a,r,i,n,s,o,l){let h=222e-18,c=l,d=e,u=a,_=s,m=n-t,f=i-d;f=Math.max(Math.abs(f),h)*(f<0?-1:1);let S=r,g=o;if(!Number.isFinite(S)||!Number.isFinite(g))return e;S=S*m/f,g=g*m/f;let p=1-_,D=.5,T=0;if(Math.abs(u-.33333334)<1e-4&&Math.abs(_-.33333334)<1e-4)D=c,T=1-D;else for(;;){T=1-D;let e=3*T*T*D*u+3*T*D*D*p+D*D*D-c;if(Math.abs(e)<=2.5*h)break;let t=3*T*T*u+6*T*D*(p-u)+3*D*D*(1-p),a=6*T*(p-2*u)+6*D*(1-2*p+u);D-=(6*e*t*t-3*e*e*a)/(6*t*t*t-6*e*t*a+e*e*(18*u-18*p+6))}return(3*T*T*D*u*S+3*T*D*D*(1-_*g)+D*D*D)*f+d}_curveInterpolate(e,t,a,r){return!e.weightedMode||this._weightModeHermite(e.weightedMode,t.weightedMode)?this._hermiteInterpolate(e,t,a,r):this._hermiteCurveSplineWeight(e.value,e.time,e.outWeight,e.outTangent,t.value,t.time,t.inWeight,t.inTangent,a)}_evaluateClipDatasRealTime(a,r,i,n,s,o,l){for(var h=0,c=a.count;h<c;h++){var d,u=a.getNodeByIndex(h),_=u.type,m=u._keyFrames,f=m.length,S=i[h];if(!l||l.getTransformActive(u.nodePath)){if(s)for(-1!==S&&r<m[S].time&&(S=-1,i[h]=S),d=S+1;d<f&&!(m[d].time>r);)S++,d++,i[h]=S;else for((d=S+1)!==f&&r>m[d].time&&(S=f-1,i[h]=S),d=S+1;S>-1&&!(m[S].time<r);)S--,d--,i[h]=S;var g=d===f;switch(_){case e.KeyFrameValueType.Float:if(-1!==S){var p=m[S];if(g)o[h]=p.value;else{var D,T=m[d],E=T.time-p.time;D=0!==E?(r-p.time)/E:0,o[h]=this._curveInterpolate(p,T,D,E)}}else o[h]=m[0].value;n&&(o[h]=o[h]-m[0].value);break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:var C=o[h];if(this._evaluateFrameNodeVector3DatasRealTime(m,S,g,r,C),n){var A=m[0].value;C.x-=A.x,C.y-=A.y,C.z-=A.z}break;case e.KeyFrameValueType.Rotation:var R=o[h];if(this._evaluateFrameNodeQuaternionDatasRealTime(m,S,g,r,R),n){var x=AnimationClip._tempQuaternion0,M=m[0].value;Utils3D.quaternionConjugate(M,x),t.Quaternion.multiply(x,R,R)}break;case e.KeyFrameValueType.Scale:C=o[h],this._evaluateFrameNodeVector3DatasRealTime(m,S,g,r,C),n&&(A=m[0].value,C.x/=A.x,C.y/=A.y,C.z/=A.z);break;case e.KeyFrameValueType.Vector2:var y=o[h];if(this._evaluateFrameNodeVector2DatasRealTime(m,S,g,r,y),n){var I=m[0].value;y.x-=I.x,y.y-=I.y}break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:var v=o[h];if(this._evaluateFrameNodeVector4DatasRealTime(m,S,g,r,v),n){var L=m[0].value;v.x-=L.x,v.y-=L.y,v.z-=L.z,v.w-=L.w}break;default:throw"AnimationClip:unknown node type."}}}}_evaluateFrameNodeVector3DatasRealTime(e,t,a,r,i){if(-1!==t){var n=e[t];if(a){var s=n.value;i.x=s.x,i.y=s.y,i.z=s.z}else{var o,l=e[t+1],h=n.time,c=l.time-h;o=0!==c?(r-h)/c:0,this._hermiteInterpolateVector3(n,l,o,c,i)}}else{var d=e[0].value;i.x=d.x,i.y=d.y,i.z=d.z}}_evaluateFrameNodeVector2DatasRealTime(e,t,a,r,i){if(-1!==t){var n=e[t];if(a){var s=n.value;i.x=s.x,i.y=s.y}else{var o,l=e[t+1],h=n.time,c=l.time-h;o=0!==c?(r-h)/c:0,this._hermiteInterpolateVector2(n,l,o,c,i)}}else{var d=e[0].value;i.x=d.x,i.y=d.y}}_evaluateFrameNodeVector4DatasRealTime(e,t,a,r,i){if(-1!==t){var n=e[t];if(a){var s=n.value;i.x=s.x,i.y=s.y,i.z=s.z}else{var o,l=e[t+1],h=n.time,c=l.time-h;o=0!==c?(r-h)/c:0,this._hermiteInterpolateVector4(n,l,o,c,i)}}else{var d=e[0].value;i.x=d.x,i.y=d.y,i.z=d.z}}_evaluateFrameNodeQuaternionDatasRealTime(e,t,a,r,i){if(-1!==t){var n=e[t];if(a){var s=n.value;i.x=s.x,i.y=s.y,i.z=s.z,i.w=s.w}else{var o,l=e[t+1],h=n.time,c=l.time-h;o=0!==c?(r-h)/c:0,this._hermiteInterpolateQuaternion(n,l,o,c,i)}}else{var d=e[0].value;i.x=d.x,i.y=d.y,i.z=d.z,i.w=d.w}}_binarySearchEventIndex(e){for(var t,a=0,r=this._animationEvents.length-1;a<=r;){t=Math.floor((a+r)/2);var i=this._animationEvents[t].time;if(i==e)return t;i>e?r=t-1:a=t+1}return a}addEvent(e){var t=this._binarySearchEventIndex(e.time);this._animationEvents.splice(t,0,e)}_disposeResource(){this._nodes=null,this._nodesMap=null}}AnimationClip._tempQuaternion0=new t.Quaternion,e.StaticFlag=void 0,(s=e.StaticFlag||(e.StaticFlag={}))[s.Normal=1]="Normal",s[s.StaticBatch=2]="StaticBatch";class Sprite3D extends t.Node{static __init__(){Sprite3D.WORLDMATRIX=t.Shader3D.propertyNameToID("u_WorldMat"),Sprite3D.WORLDINVERTFRONT=t.Shader3D.propertyNameToID("u_WroldInvertFront"),Sprite3D.sprite3DCommandUniformMap=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D"),Sprite3D.sprite3DCommandUniformMap.addShaderUniform(Sprite3D.WORLDMATRIX,"u_WorldMat"),Sprite3D.sprite3DCommandUniformMap.addShaderUniform(Sprite3D.WORLDINVERTFRONT,"u_WroldInvertFront")}static instantiate(e,t=null,a=!0,r=null,i=null){var n=e.clone();t&&t.addChild(n);var s=n.transform;if(a){var o=s.worldMatrix;e.transform.worldMatrix.cloneTo(o),s.worldMatrix=o}else r&&(s.position=r),i&&(s.rotation=i);return n}static load(e,a){t.ILaya.loader.load(e).then((e=>{a&&a.runWith([null==e?void 0:e.create()])}))}get id(){return this._id}get layer(){return this._layer}set layer(e){if(this._layer!==e){if(!(e>=0&&e<=30))throw new Error("Layer value must be 0-30.");this._layer=e,this.event(t.Event.LAYERCHANGE,e)}}get isStatic(){return!!(this._isStatic>>1|0)}set isStatic(a){this._isStatic=a?e.StaticFlag.StaticBatch:e.StaticFlag.Normal,this.event(t.Event.staticMask,this._isStatic)}get transform(){return this._transform}get scene(){return this._scene}constructor(a=null,r=!1){super(),this._isRenderNode=0,this._id=++Sprite3D._uniqueIDCounter,this._is3D=!0,this._transform=t.LayaGL.renderOBJCreate.createTransform(this),this._isStatic=r?e.StaticFlag.StaticBatch:e.StaticFlag.Normal,this.layer=0,this.name=a||"New Sprite3D"}_onActive(){super._onActive(),t.Stat.sprite3DCount++}_onInActive(){super._onInActive(),t.Stat.sprite3DCount--}_onAdded(){if(this._parent instanceof Sprite3D){var e=this._parent;this.transform._setParent(e.transform)}else this.transform._onWorldTransform();super._onAdded()}_onRemoved(){super._onRemoved(),this._parent instanceof Sprite3D&&this.transform._setParent(null)}onStartListeningToType(e){super.onStartListeningToType(e),e.startsWith("collision")?this._setBit(t.NodeFlags.PROCESS_COLLISIONS,!0):e.startsWith("trigger")&&this._setBit(t.NodeFlags.PROCESS_TRIGGERS,!0)}_parse(e,t){if(void 0!==e.isStatic&&(this.isStatic=e.isStatic),void 0!==e.active&&(this.active=e.active),null!=e.name&&(this.name=e.name),null!=e.tag&&(this.tag=e.tag),void 0!==e.position){var a=this.transform.localPosition;a.fromArray(e.position),this.transform.localPosition=a}if(void 0!==e.rotationEuler){var r=this.transform.localRotationEuler;r.fromArray(e.rotationEuler),this.transform.localRotationEuler=r}if(void 0!==e.rotation){var i=this.transform.localRotation;i.fromArray(e.rotation),this.transform.localRotation=i}if(void 0!==e.scale){var n=this.transform.localScale;n.fromArray(e.scale),this.transform.localScale=n}null!=e.layer&&(this.layer=e.layer)}_cloneTo(e,t,a){if(this._destroyed)throw new Error("Sprite3D: Can't be cloned if the Sprite3D has destroyed.");var r=e,i=this._transform,n=r._transform;r.name=this.name,r.tag=this.tag,r._destroyed=this._destroyed,r.active=this.active,n.localPosition=i.localPosition,n.localRotation=i.localRotation,n.localScale=i.localScale,r._isStatic=this._isStatic,r.layer=this.layer,super._cloneTo(r,t,a)}static _createSprite3DInstance(e){for(var t=e._create(),a=e._children,r=0,i=a.length;r<i;r++){var n=Sprite3D._createSprite3DInstance(a[r]);t.addChild(n)}return t}static _parseSprite3DInstance(e,t,a,r){for(var i=a._children,n=r._children,s=0,o=i.length;s<o;s++)Sprite3D._parseSprite3DInstance(e,t,i[s],n[s]);a._cloneTo(r,e,t)}clone(){var e=Sprite3D._createSprite3DInstance(this);return Sprite3D._parseSprite3DInstance(this,e,this,e),e}destroy(e=!0){this._destroyed||(super.destroy(e),this._transform=null)}_create(){return new Sprite3D}}Sprite3D._uniqueIDCounter=0;class ClusterData{constructor(){this.updateMark=-1,this.pointLightCount=0,this.spotLightCount=0,this.indices=[]}}class Cluster{constructor(e,a,r,i){this._updateMark=0,this._depthSliceParam=new t.Vector2,this._xSlices=e,this._ySlices=a,this._zSlices=r;var n=e*a,s=r*(1+Math.ceil(i/4));this._clusterTexture=Utils3D._createFloatTextureBuffer(n,s),this._clusterTexture.lock=!0,this._clusterPixels=new Float32Array(n*s*4);for(var o=new Array(this._zSlices),l=0;l<this._zSlices;l++){o[l]=new Array(this._ySlices);for(var h=0;h<this._ySlices;h++){o[l][h]=new Array(this._xSlices);for(var c=0;c<this._xSlices;c++)o[l][h][c]=new ClusterData}}this._clusterDatas=o}_placePointLightToClusters(e,t){for(var a=this._clusterDatas,r=this._updateMark,i=t.zMin,n=t.zMax;i<n;i++)for(var s=t.yMin,o=t.yMax;s<o;s++)for(var l=t.xMin,h=t.xMax;l<h;l++){var c=a[i][s][l];c.updateMark!=r&&(c.pointLightCount=0,c.spotLightCount=0,c.updateMark=r);var d=c.indices,u=c.pointLightCount++;u<d.length?d[u]=e:d.push(e)}}_placeSpotLightToClusters(e,t){for(var a=this._clusterDatas,r=this._updateMark,i=t.zMin,n=t.zMax;i<n;i++)for(var s=t.yMin,o=t.yMax;s<o;s++)for(var l=t.xMin,h=t.xMax;l<h;l++){var c=a[i][s][l];c.updateMark!=r&&(c.pointLightCount=0,c.spotLightCount=0,c.updateMark=r);var d=c.indices,u=c.pointLightCount+c.spotLightCount++;u<d.length?d[u]=e:d.push(e)}}_insertConePlane(e,a,r,i,n){var s=Cluster._tempVector36,o=Cluster._tempVector37;t.Vector3.cross(n,a,s),t.Vector3.cross(s,a,o),t.Vector3.normalize(o,o);var l=r*Math.tan(i),h=e.x+r*a.x+l*o.x,c=e.y+r*a.y+l*o.y,d=e.z+r*a.z+l*o.z;return h*n.x+c*n.y+d*n.z<=0||e.x*n.x+e.y*n.y+e.z*n.z<=0}_shrinkSphereLightZPerspective(e,t,a,r,i){var n=a.z,s=n-r,o=n+r;if(s>t||o<=e)return!1;var l=this._depthSliceParam;return i.zMin=Math.floor(Math.log2(Math.max(s,e))*l.x-l.y),i.zMax=Math.min(Math.ceil(Math.log2(o)*l.x-l.y),this._zSlices),!0}_shrinkSpotLightZPerspective(e,t,a,r,i,n,s){var o=r.x,l=r.y,h=r.z,c=Math.tan(n)*i,d=a.x,u=a.y,_=a.z,m=o-d,f=l-u,S=h-_,g=m*m+f*f+S*S,p=Math.sqrt(1-S*S/g),D=Math.max(Math.min(_,h-p*c),a.z-i),T=Math.min(Math.max(_,h+p*c),a.z+i);if(D>t||T<=e)return!1;var E=this._depthSliceParam;return s.zMin=Math.floor(Math.log2(Math.max(D,e))*E.x-E.y),s.zMax=Math.min(Math.ceil(Math.log2(T)*E.x-E.y),this._zSlices),!0}_shrinkSphereLightByBoundOrth(e,t,a,r,i,n,s){var o=i.z,l=o-n,h=o+n;if(l>r||h<=a)return!1;var c=i.x,d=c-n,u=c+n;if(d>e||u<=-e)return!1;var _=i.y,m=_-n,f=_+n;if(m>t||f<=-t)return!1;var S=this._xSlices,g=this._ySlices,p=this._depthSliceParam,D=2*e/S,T=2*t/g;return s.xMin=Math.max(Math.floor((d+e)/D),0),s.xMax=Math.min(Math.ceil((u+e)/D),S),s.yMin=Math.max(Math.floor((t-f)/T),0),s.yMax=Math.min(Math.ceil((t-m)/T),g),s.zMin=Math.floor(Math.log2(Math.max(l,a))*p.x-p.y),s.zMax=Math.min(Math.ceil(Math.log2(h)*p.x-p.y),this._zSlices),!0}_shrinkSpotLightByBoundOrth(e,t,a,r,i,n,s,o,l){var h=n.x,c=n.y,d=n.z,u=Math.tan(o)*s,_=i.x,m=i.y,f=i.z,S=h-_,g=c-m,p=d-f,D=S*S+g*g+p*p,T=Math.sqrt(1-p*p/D),E=Math.max(Math.min(f,d-T*u),i.z-s),C=Math.min(Math.max(f,d+T*u),i.z+s);if(E>r||C<=a)return!1;var A=Math.sqrt(1-S*S/D),R=Math.max(Math.min(_,h-A*u),i.x-s),x=Math.min(Math.max(_,h+A*u),i.x+s);if(R>e||x<=-e)return!1;var M=Math.sqrt(1-g*g/D),y=Math.max(Math.min(m,c-M*u),i.y-s),I=Math.min(Math.max(m,c+M*u),i.y+s);if(y>t||I<=-t)return!1;var v=this._xSlices,L=this._ySlices,b=this._depthSliceParam,P=2*e/v,O=2*t/L;return l.xMin=Math.max(Math.floor((R+e)/P),0),l.xMax=Math.min(Math.ceil((x+e)/P),v),l.yMin=Math.max(Math.floor((t-I)/O),0),l.yMax=Math.min(Math.ceil((t-y)/O),L),l.zMin=Math.floor(Math.log2(Math.max(E,a))*b.x-b.y),l.zMax=Math.min(Math.ceil(Math.log2(C)*b.x-b.y),this._zSlices),!0}_shrinkXYByRadiusPerspective(e,t,a,r,i){var n,s,o,l,h,c=e.x,d=e.y,u=e.z,_=this._ySlices+1;for(h=0;h<_;h++){if(d*(m=i[h]).y+u*m.z<t){s=Math.max(0,h-1);break}}if(h==_)return!1;for(l=this._ySlices,h=s+1;h<_;h++){if(d*(m=i[h]).y+u*m.z<=-t){l=Math.max(0,h);break}}for(_=this._xSlices+1,h=0;h<_;h++){if(c*(m=r[h]).x+u*m.z<t){n=Math.max(0,h-1);break}}for(o=this._xSlices,h=n+1;h<_;h++){var m;if(c*(m=r[h]).x+u*m.z<=-t){o=Math.max(0,h);break}}return a.xMin=n,a.xMax=o,a.yMin=s,a.yMax=l,!0}_shrinkSpotXYByConePerspective(e,t,a,r,i,n,s){for(var o,l,h,c,d=Cluster._tempVector32,u=i.yMax+1,_=i.yMin+1;_<u;_++)if(this._insertConePlane(e,t,a,r,s[_])){l=Math.max(0,_-1);break}c=i.yMax;for(_=l+1;_<u;_++){var m=s[_];if(d.setValue(0,-m.y,-m.z),!this._insertConePlane(e,t,a,r,d)){c=Math.max(0,_);break}}u=i.xMax+1;for(_=i.xMin+1;_<u;_++)if(this._insertConePlane(e,t,a,r,n[_])){o=Math.max(0,_-1);break}h=i.xMax;for(_=o+1;_<u;_++){m=n[_];if(d.setValue(-m.x,0,-m.z),!this._insertConePlane(e,t,a,r,d)){h=Math.max(0,_);break}}i.xMin=o,i.xMax=h,i.yMin=l,i.yMax=c}_updatePointLightPerspective(e,a,r,i,n,s,o){var l=Cluster._tempLightBound,h=Cluster._tempVector30;t.Vector3.transformV3ToV3(i.owner._transform.position,r,h),h.z*=-1,this._shrinkSphereLightZPerspective(e,a,h,i.range,l)&&this._shrinkXYByRadiusPerspective(h,i.range,l,s,o)&&this._placePointLightToClusters(n,l)}_updateSpotLightPerspective(e,a,r,i,n,s,o){var l=Cluster._tempLightBound,h=Cluster._tempVector30,c=Cluster._tempVector31,d=Cluster._tempVector34,u=i.owner._transform.position,_=i.range;i.owner._transform.worldMatrix.getForward(c),t.Vector3.normalize(c,c),t.Vector3.scale(c,_,d),t.Vector3.add(u,d,d),t.Vector3.transformV3ToV3(u,r,h),t.Vector3.transformV3ToV3(d,r,d),h.z*=-1,d.z*=-1;var m=i.spotAngle/2*Math.PI/180;if(this._shrinkSpotLightZPerspective(e,a,h,d,_,m,l)&&this._shrinkXYByRadiusPerspective(h,_,l,s,o)){var f=Cluster._tempVector33;f.x=d.x-h.x,f.y=d.y-h.y,f.z=d.z-h.z,t.Vector3.normalize(f,f),this._shrinkSpotXYByConePerspective(h,f,_,m,l,s,o),this._placeSpotLightToClusters(n,l)}}_updatePointLightOrth(e,a,r,i,n,s,o){var l=Cluster._tempLightBound,h=Cluster._tempVector30;t.Vector3.transformV3ToV3(s.owner._transform.position,n,h),h.z*=-1,this._shrinkSphereLightByBoundOrth(e,a,r,i,h,s.range,l)&&this._placePointLightToClusters(o,l)}_updateSpotLightOrth(e,a,r,i,n,s,o){var l=Cluster._tempLightBound,h=Cluster._tempVector30,c=Cluster._tempVector31,d=Cluster._tempVector34,u=s.owner._transform.position,_=s.range;s.owner._transform.worldMatrix.getForward(c),t.Vector3.normalize(c,c),t.Vector3.scale(c,_,d),t.Vector3.add(u,d,d),t.Vector3.transformV3ToV3(u,n,h),t.Vector3.transformV3ToV3(d,n,d),h.z*=-1,d.z*=-1;var m=s.spotAngle/2*Math.PI/180;this._shrinkSpotLightByBoundOrth(e,a,r,i,h,d,_,m,l)&&this._placeSpotLightToClusters(o,l)}update(e,a){this._updateMark++;var r=e.nearPlane;this._depthSliceParam.x=t.Config3D.lightClusterCount.z/Math.log2(e.farPlane/r),this._depthSliceParam.y=Math.log2(r)*this._depthSliceParam.x;var i=e.nearPlane,n=e.farPlane,s=e.viewMatrix,o=a._directionLights._length,l=a._pointLights,h=l._length,c=l._elements,d=a._spotLights,u=d._length,_=d._elements;if(e.orthographic){for(var m=e.orthographicVerticalSize/2,f=m*e.aspectRatio,S=0;S<h;S++,o++)this._updatePointLightOrth(f,m,i,n,s,c[S],o);for(S=0;S<u;S++,o++)this._updateSpotLightOrth(f,m,i,n,s,_[S],o)}else{e._updateClusterPlaneXY();var g=e._clusterXPlanes,p=e._clusterYPlanes;for(S=0;S<h;S++,o++)this._updatePointLightPerspective(i,n,s,c[S],o,g,p);for(S=0;S<u;S++,o++)this._updateSpotLightPerspective(i,n,s,_[S],o,g,p)}if(h+u>0){for(var D=this._xSlices,T=this._ySlices,E=this._zSlices,C=D*T*4,A=C*E,R=this._clusterPixels,x=R.length,M=this._clusterDatas,y=this._updateMark,I=!0,v=0;v<E;v++)for(var L=0;L<T;L++)for(var b=0;b<D;b++){var P=M[v][L][b],O=4*(b+L*D+v*D*T);if(P.updateMark!==y)R[O]=0,R[O+1]=0;else if(I){var B=P.indices,V=P.pointLightCount,w=P.spotLightCount,N=V+w;if(A+N<x){R[O]=V,R[O+1]=w,R[O+2]=Math.floor(A/C),R[O+3]=A%C;for(S=0;S<N;S++)R[A++]=B[S]}else{N=x-(A+N),V=Math.min(V,N),R[O]=V,R[O+1]=Math.min(w,N-V),R[O+2]=Math.floor(A/C),R[O+3]=A%C;for(S=0;S<N;S++)R[A++]=B[S];I=!1}}}var F=this._clusterTexture.width;this._clusterTexture.setSubPixelsData(0,0,F,Math.ceil(A/(4*F)),R,0,!1,!1,!1)}}}Cluster._tempVector30=new t.Vector3,Cluster._tempVector31=new t.Vector3,Cluster._tempVector32=new t.Vector3,Cluster._tempVector33=new t.Vector3,Cluster._tempVector34=new t.Vector3,Cluster._tempVector35=new t.Vector3,Cluster._tempVector36=new t.Vector3,Cluster._tempVector37=new t.Vector3,Cluster._tempLightBound=new class{};class Plane{constructor(e=new t.Vector3,a=0){this._normal=e,this._distance=a}set normal(e){e.cloneTo(this._normal)}get normal(){return this._normal}set distance(e){this._distance=e}get distance(){return this._distance}static createPlaneBy3P(e,t,a,r){var i=t.x-e.x,n=t.y-e.y,s=t.z-e.z,o=a.x-e.x,l=a.y-e.y,h=a.z-e.z,c=n*h-s*l,d=s*o-i*h,u=i*l-n*o,_=1/Math.sqrt(c*c+d*d+u*u),m=c*_,f=d*_,S=u*_,g=r.normal;g.x=m,g.y=f,g.z=S,r.normal=g.normalize(),r.distance=-(m*e.x+f*e.y+S*e.z)}normalize(){var e=this.normal.x,t=this.normal.y,a=this.normal.z,r=1/Math.sqrt(e*e+t*t+a*a);this.normal.x=e*r,this.normal.y=t*r,this.normal.z=a*r,this.distance*=r}cloneTo(e){var t=e;this.normal.cloneTo(t.normal),t.distance=this.distance}clone(){var e=new Plane;return this.cloneTo(e),e}}Plane.PlaneIntersectionType_Back=0,Plane.PlaneIntersectionType_Front=1,Plane.PlaneIntersectionType_Intersecting=2;class Ray{constructor(e,t){this.origin=e,this.direction=t}at(e,a){t.Vector3.scale(this.direction,e,a),t.Vector3.add(this.origin,a,a)}}class ContainmentType{}ContainmentType.Disjoint=0,ContainmentType.Contains=1,ContainmentType.Intersects=2;class CollisionUtils{constructor(){}static distancePlaneToPoint(e,a){return t.Vector3.dot(e.normal,a)+e.distance}static distanceBoxToPoint(e,t){var a=e.min,r=a.x,i=a.y,n=a.z,s=e.max,o=s.x,l=s.y,h=s.z,c=t.x,d=t.y,u=t.z,_=0;return c<r&&(_+=(r-c)*(r-c)),c>o&&(_+=(o-c)*(o-c)),d<i&&(_+=(i-d)*(i-d)),d>l&&(_+=(l-d)*(l-d)),u<n&&(_+=(n-u)*(n-u)),u>h&&(_+=(h-u)*(h-u)),Math.sqrt(_)}static distanceBoxToBox(e,t){var a,r=e.min,i=r.x,n=r.y,s=r.z,o=e.max,l=o.x,h=o.y,c=o.z,d=t.min,u=d.x,_=d.y,m=d.z,f=t.max,S=f.x,g=f.y,p=f.z,D=0;return i>S?D+=(a=i-S)*a:u>l&&(D+=(a=u-l)*a),n>g?D+=(a=n-g)*a:_>h&&(D+=(a=_-h)*a),s>p?D+=(a=s-p)*a:m>c&&(D+=(a=m-c)*a),Math.sqrt(D)}static distanceSphereToPoint(e,a){var r=Math.sqrt(t.Vector3.distanceSquared(e.center,a));return r-=e.radius,Math.max(r,0)}static distanceSphereToSphere(e,a){var r=Math.sqrt(t.Vector3.distanceSquared(e.center,a.center));return r-=e.radius+a.radius,Math.max(r,0)}static intersectsRayAndTriangleRD(e,a,r,i,n){var s=e.origin,o=s.x,l=s.y,h=s.z,c=e.direction,d=c.x,u=c.y,_=c.z,m=a.x,f=a.y,S=a.z,g=r.x,p=r.y,D=r.z,T=i.x,E=i.y,C=i.z,A=CollisionUtils._tempV30.x,R=CollisionUtils._tempV30.y,x=CollisionUtils._tempV30.z;A=g-m,R=p-f,x=D-S;var M=CollisionUtils._tempV31.x,y=CollisionUtils._tempV31.y,I=CollisionUtils._tempV31.z;M=T-m,y=E-f,I=C-S;var v=CollisionUtils._tempV32.x,L=CollisionUtils._tempV32.y,b=CollisionUtils._tempV32.z,P=A*(v=u*I-_*y)+R*(L=_*M-d*I)+x*(b=d*y-u*M);if(t.MathUtils3D.isZero(P))return!1;var O=1/P,B=CollisionUtils._tempV33.x,V=CollisionUtils._tempV33.y,w=CollisionUtils._tempV33.z,N=(B=o-m)*v+(V=l-f)*L+(w=h-S)*b;if((N*=O)<0||N>1)return!1;var F=CollisionUtils._tempV34.x,U=CollisionUtils._tempV34.y,G=CollisionUtils._tempV34.z,H=d*(F=V*x-w*R)+u*(U=w*A-B*x)+_*(G=B*R-V*A);if((H*=O)<0||N+H>1)return!1;var k=M*F+y*U+I*G;return!((k*=O)<0)}static intersectsRayAndTriangleRP(e,a,r,i,n){var s;return CollisionUtils.intersectsRayAndTriangleRD(e,a,r,i,s)?(t.Vector3.scale(e.direction,s,CollisionUtils._tempV30),t.Vector3.add(e.origin,CollisionUtils._tempV30,n),!0):(t.Vector3.ZERO.cloneTo(n),!1)}static intersectsRayAndPoint(e,a){t.Vector3.subtract(e.origin,a,CollisionUtils._tempV30);var r=t.Vector3.dot(CollisionUtils._tempV30,e.direction),i=t.Vector3.dot(CollisionUtils._tempV30,CollisionUtils._tempV30)-t.MathUtils3D.zeroTolerance;return!(i>0&&r>0)&&!(r*r-i<0)}static intersectsRayAndRay(e,a,r){var i=e.origin,n=i.x,s=i.y,o=i.z,l=e.direction,h=l.x,c=l.y,d=l.z,u=a.origin,_=u.x,m=u.y,f=u.z,S=a.direction,g=S.x,p=S.y,D=S.z;t.Vector3.cross(l,S,CollisionUtils._tempV30);var T=CollisionUtils._tempV30,E=t.Vector3.scalarLength(CollisionUtils._tempV30);if(t.MathUtils3D.isZero(E)&&t.MathUtils3D.nearEqual(_,n)&&t.MathUtils3D.nearEqual(m,s)&&t.MathUtils3D.nearEqual(f,o))return t.Vector3.ZERO.cloneTo(r),!0;E*=E;var C=_-n,A=m-s,R=f-o,x=g,M=p,y=D,I=T.x,v=T.y,L=T.z,b=C*M*L+A*y*I+R*x*v-C*y*v-A*x*L-R*M*I;x=h,M=c,y=d;var P=b/E;t.Vector3.scale(l,P,CollisionUtils._tempV30),t.Vector3.scale(S,P,CollisionUtils._tempV31),t.Vector3.add(i,CollisionUtils._tempV30,CollisionUtils._tempV32),t.Vector3.add(u,CollisionUtils._tempV31,CollisionUtils._tempV33);var O=CollisionUtils._tempV32,B=CollisionUtils._tempV33;return t.MathUtils3D.nearEqual(B.x,O.x)&&t.MathUtils3D.nearEqual(B.y,O.y)&&t.MathUtils3D.nearEqual(B.z,O.z)?(r=CollisionUtils._tempV32,!0):(t.Vector3.ZERO.cloneTo(r),!1)}static intersectsPlaneAndTriangle(e,t,a,r){var i=CollisionUtils.intersectsPlaneAndPoint(e,t),n=CollisionUtils.intersectsPlaneAndPoint(e,a),s=CollisionUtils.intersectsPlaneAndPoint(e,r);return i==Plane.PlaneIntersectionType_Front&&n==Plane.PlaneIntersectionType_Front&&s==Plane.PlaneIntersectionType_Front?Plane.PlaneIntersectionType_Front:i==Plane.PlaneIntersectionType_Back&&n==Plane.PlaneIntersectionType_Back&&s==Plane.PlaneIntersectionType_Back?Plane.PlaneIntersectionType_Back:Plane.PlaneIntersectionType_Intersecting}static intersectsRayAndPlaneRD(e,a){var r=a.normal,i=t.Vector3.dot(r,e.direction);if(Math.abs(i)<t.MathUtils3D.zeroTolerance)return-1;var n=t.Vector3.dot(r,e.origin),s=(-a.distance-n)/i;if(s<0){if(s<-t.MathUtils3D.zeroTolerance)return-1;s=0}return s}static intersectsRayAndPlaneRP(e,a,r){var i=CollisionUtils.intersectsRayAndPlaneRD(e,a);if(-1==i)return r.setValue(0,0,0),!1;var n=CollisionUtils._tempV30;return t.Vector3.scale(e.direction,i,n),t.Vector3.add(e.origin,n,r),!0}static intersectsRayAndBoxRD(e,a){var r=e.origin,i=r.x,n=r.y,s=r.z,o=e.direction,l=o.x,h=o.y,c=o.z,d=a.min,u=d.x,_=d.y,m=d.z,f=a.max,S=f.x,g=f.y,p=f.z,D=0,T=t.MathUtils3D.MaxValue;if(t.MathUtils3D.isZero(l)){if(i<u||i>S)return-1}else{var E=1/l,C=(u-i)*E,A=(S-i)*E;if(C>A){var R=C;C=A,A=R}if((D=Math.max(C,D))>(T=Math.min(A,T)))return-1}if(t.MathUtils3D.isZero(h)){if(n<_||n>g)return-1}else{var x=1/h,M=(_-n)*x,y=(g-n)*x;if(M>y){var I=M;M=y,y=I}if((D=Math.max(M,D))>(T=Math.min(y,T)))return-1}if(t.MathUtils3D.isZero(c)){if(s<m||s>p)return-1}else{var v=1/c,L=(m-s)*v,b=(p-s)*v;if(L>b){var P=L;L=b,b=P}if((D=Math.max(L,D))>(T=Math.min(b,T)))return-1}return D}static intersectsRayAndBoxRP(e,a,r){var i=CollisionUtils.intersectsRayAndBoxRD(e,a);return-1===i?(t.Vector3.ZERO.cloneTo(r),i):(t.Vector3.scale(e.direction,i,CollisionUtils._tempV30),t.Vector3.add(e.origin,CollisionUtils._tempV30,CollisionUtils._tempV31),CollisionUtils._tempV31.cloneTo(r),i)}static intersectsRayAndSphereRD(e,a){var r=a.radius;t.Vector3.subtract(e.origin,a.center,CollisionUtils._tempV30);var i=t.Vector3.dot(CollisionUtils._tempV30,e.direction),n=t.Vector3.dot(CollisionUtils._tempV30,CollisionUtils._tempV30)-r*r;if(n>0&&i>0)return-1;var s=i*i-n;if(s<0)return-1;var o=-i-Math.sqrt(s);return o<0&&(o=0),o}static intersectsRayAndSphereRP(e,a,r){var i=CollisionUtils.intersectsRayAndSphereRD(e,a);return-1===i?(t.Vector3.ZERO.cloneTo(r),i):(t.Vector3.scale(e.direction,i,CollisionUtils._tempV30),t.Vector3.add(e.origin,CollisionUtils._tempV30,CollisionUtils._tempV31),CollisionUtils._tempV31.cloneTo(r),i)}static intersectsSphereAndTriangle(e,a,r,i){var n=e.center,s=e.radius;return CollisionUtils.closestPointPointTriangle(n,a,r,i,CollisionUtils._tempV30),t.Vector3.subtract(CollisionUtils._tempV30,n,CollisionUtils._tempV31),t.Vector3.dot(CollisionUtils._tempV31,CollisionUtils._tempV31)<=s*s}static intersectsPlaneAndPoint(e,a){var r=t.Vector3.dot(e.normal,a)+e.distance;return r>0?Plane.PlaneIntersectionType_Front:r<0?Plane.PlaneIntersectionType_Back:Plane.PlaneIntersectionType_Intersecting}static intersectsPlaneAndPlane(e,a){t.Vector3.cross(e.normal,a.normal,CollisionUtils._tempV30);var r=t.Vector3.dot(CollisionUtils._tempV30,CollisionUtils._tempV30);return!t.MathUtils3D.isZero(r)}static intersectsPlaneAndPlaneRL(e,a,r){var i=e.normal,n=a.normal;t.Vector3.cross(i,n,CollisionUtils._tempV34);var s=t.Vector3.dot(CollisionUtils._tempV34,CollisionUtils._tempV34);return!t.MathUtils3D.isZero(s)&&(t.Vector3.scale(n,e.distance,CollisionUtils._tempV30),t.Vector3.scale(i,a.distance,CollisionUtils._tempV31),t.Vector3.subtract(CollisionUtils._tempV30,CollisionUtils._tempV31,CollisionUtils._tempV32),t.Vector3.cross(CollisionUtils._tempV32,CollisionUtils._tempV34,CollisionUtils._tempV33),t.Vector3.normalize(CollisionUtils._tempV34,CollisionUtils._tempV34),new Ray(CollisionUtils._tempV33,CollisionUtils._tempV34),!0)}static intersectsPlaneAndBox(e,a){var r=e.distance,i=e.normal,n=i.x,s=i.y,o=i.z,l=a.min,h=l.x,c=l.y,d=l.z,u=a.max,_=u.x,m=u.y,f=u.z;CollisionUtils._tempV30.x=n>0?h:_,CollisionUtils._tempV30.y=s>0?c:m,CollisionUtils._tempV30.z=o>0?d:f,CollisionUtils._tempV31.x=n>0?_:h,CollisionUtils._tempV31.y=s>0?m:c,CollisionUtils._tempV31.z=o>0?f:d;var S=t.Vector3.dot(i,CollisionUtils._tempV30);return S+r>0?Plane.PlaneIntersectionType_Front:(S=t.Vector3.dot(i,CollisionUtils._tempV31))+r<0?Plane.PlaneIntersectionType_Back:Plane.PlaneIntersectionType_Intersecting}static intersectsPlaneAndSphere(e,a){var r=a.radius,i=t.Vector3.dot(e.normal,a.center)+e.distance;return i>r?Plane.PlaneIntersectionType_Front:i<-r?Plane.PlaneIntersectionType_Back:Plane.PlaneIntersectionType_Intersecting}static intersectsBoxAndBox(e,t){var a=e.min,r=e.max,i=t.min,n=t.max;return!(a.x>n.x||i.x>r.x)&&(!(a.y>n.y||i.y>r.y)&&!(a.z>n.z||i.z>r.z))}static intersectsBoxAndSphere(e,a){var r=a.center,i=a.radius,n=CollisionUtils._tempV30;return t.Vector3.Clamp(r,e.min,e.max,n),t.Vector3.distanceSquared(r,n)<=i*i}static intersectsSphereAndSphere(e,a){var r=e.radius+a.radius;return t.Vector3.distanceSquared(e.center,a.center)<=r*r}static boxContainsPoint(e,t){var a=e.min,r=e.max;return a.x<=t.x&&r.x>=t.x&&a.y<=t.y&&r.y>=t.y&&a.z<=t.z&&r.z>=t.z?ContainmentType.Contains:ContainmentType.Disjoint}static boxContainsBox(e,t){var a=e.min,r=a.x,i=a.y,n=a.z,s=e.max,o=s.x,l=s.y,h=s.z,c=t.min,d=c.x,u=c.y,_=c.z,m=t.max,f=m.x,S=m.y,g=m.z;return o<d||r>f||l<u||i>S||h<_||n>g?ContainmentType.Disjoint:r<=d&&f<=o&&i<=u&&S<=l&&n<=_&&g<=h?ContainmentType.Contains:ContainmentType.Intersects}static boxContainsSphere(e,a){var r=e.min,i=r.x,n=r.y,s=r.z,o=e.max,l=o.x,h=o.y,c=o.z,d=a.center,u=d.x,_=d.y,m=d.z,f=a.radius;return t.Vector3.Clamp(d,r,o,CollisionUtils._tempV30),t.Vector3.distanceSquared(d,CollisionUtils._tempV30)>f*f?ContainmentType.Disjoint:i+f<=u&&u<=l-f&&l-i>f&&n+f<=_&&_<=h-f&&h-n>f&&s+f<=m&&m<=c-f&&c-s>f?ContainmentType.Contains:ContainmentType.Intersects}static sphereContainsPoint(e,a){return t.Vector3.distanceSquared(a,e.center)<=e.radius*e.radius?ContainmentType.Contains:ContainmentType.Disjoint}static sphereContainsTriangle(e,t,a,r){var i=CollisionUtils.sphereContainsPoint(e,t),n=CollisionUtils.sphereContainsPoint(e,a),s=CollisionUtils.sphereContainsPoint(e,r);return i==ContainmentType.Contains&&n==ContainmentType.Contains&&s==ContainmentType.Contains?ContainmentType.Contains:CollisionUtils.intersectsSphereAndTriangle(e,t,a,r)?ContainmentType.Intersects:ContainmentType.Disjoint}static sphereContainsBox(e,a){var r=e.center;r.x,r.y,r.z;var i=e.radius,n=a.min;n.x,n.y,n.z;var s=a.max;s.x,s.y,s.z;var o=CollisionUtils._tempV30;if(o.x,o.y,o.z,!CollisionUtils.intersectsBoxAndSphere(a,e))return ContainmentType.Disjoint;var l=i*i;return t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l||t.Vector3.scalarLengthSquared(CollisionUtils._tempV30)>l?ContainmentType.Intersects:ContainmentType.Contains}static sphereContainsSphere(e,a){var r=e.radius,i=a.radius,n=t.Vector3.distance(e.center,a.center);return r+i<n?ContainmentType.Disjoint:r-i<n?ContainmentType.Intersects:ContainmentType.Contains}static closestPointPointTriangle(e,a,r,i,n){t.Vector3.subtract(r,a,CollisionUtils._tempV30),t.Vector3.subtract(i,a,CollisionUtils._tempV31),t.Vector3.subtract(e,a,CollisionUtils._tempV32),t.Vector3.subtract(e,r,CollisionUtils._tempV33),t.Vector3.subtract(e,i,CollisionUtils._tempV34);var s=t.Vector3.dot(CollisionUtils._tempV30,CollisionUtils._tempV32),o=t.Vector3.dot(CollisionUtils._tempV31,CollisionUtils._tempV32),l=t.Vector3.dot(CollisionUtils._tempV30,CollisionUtils._tempV33),h=t.Vector3.dot(CollisionUtils._tempV31,CollisionUtils._tempV33),c=t.Vector3.dot(CollisionUtils._tempV30,CollisionUtils._tempV34),d=t.Vector3.dot(CollisionUtils._tempV31,CollisionUtils._tempV34);if(s<=0&&o<=0)a.cloneTo(n);else if(l>=0&&h<=l)r.cloneTo(n);else{var u=s*h-l*o;if(u<=0&&s>=0&&l<=0){var _=s/(s-l);return t.Vector3.scale(CollisionUtils._tempV30,_,n),void t.Vector3.add(a,n,n)}if(d>=0&&c<=d)i.cloneTo(n);else{var m=c*o-s*d;if(m<=0&&o>=0&&d<=0){var f=o/(o-d);return t.Vector3.scale(CollisionUtils._tempV31,f,n),void t.Vector3.add(a,n,n)}var S=l*d-c*h;if(S<=0&&h-l>=0&&c-d>=0){var g=(h-l)/(h-l+(c-d));return t.Vector3.subtract(i,r,n),t.Vector3.scale(n,g,n),void t.Vector3.add(r,n,n)}var p=1/(S+m+u),D=m*p,T=u*p;t.Vector3.scale(CollisionUtils._tempV30,D,CollisionUtils._tempV35),t.Vector3.scale(CollisionUtils._tempV31,T,CollisionUtils._tempV36),t.Vector3.add(CollisionUtils._tempV35,CollisionUtils._tempV36,n),t.Vector3.add(a,n,n)}}}static closestPointPlanePoint(e,a,r){var i=e.normal,n=t.Vector3.dot(i,a)-e.distance;t.Vector3.scale(i,n,CollisionUtils._tempV30),t.Vector3.subtract(a,CollisionUtils._tempV30,r)}static closestPointBoxPoint(e,a,r){t.Vector3.max(a,e.min,CollisionUtils._tempV30),t.Vector3.min(CollisionUtils._tempV30,e.max,r)}static closestPointSpherePoint(e,a,r){var i=e.center;t.Vector3.subtract(a,i,r),t.Vector3.normalize(r,r),t.Vector3.scale(r,e.radius,r),t.Vector3.add(r,i,r)}static closestPointSphereSphere(e,a,r){var i=e.center;t.Vector3.subtract(a.center,i,r),t.Vector3.normalize(r,r),t.Vector3.scale(r,e.radius,r),t.Vector3.add(r,i,r)}}CollisionUtils._tempV30=new t.Vector3,CollisionUtils._tempV31=new t.Vector3,CollisionUtils._tempV32=new t.Vector3,CollisionUtils._tempV33=new t.Vector3,CollisionUtils._tempV34=new t.Vector3,CollisionUtils._tempV35=new t.Vector3,CollisionUtils._tempV36=new t.Vector3,e.FrustumCorner=void 0,(o=e.FrustumCorner||(e.FrustumCorner={}))[o.FarBottomLeft=0]="FarBottomLeft",o[o.FarTopLeft=1]="FarTopLeft",o[o.FarTopRight=2]="FarTopRight",o[o.FarBottomRight=3]="FarBottomRight",o[o.nearBottomLeft=4]="nearBottomLeft",o[o.nearTopLeft=5]="nearTopLeft",o[o.nearTopRight=6]="nearTopRight",o[o.nearBottomRight=7]="nearBottomRight",o[o.unknown=8]="unknown";class BoundFrustum{static getPlanesFromMatrix(e,t,a,r,i,n,s){var o=e.elements,l=o[0],h=o[1],c=o[2],d=o[3],u=o[4],_=o[5],m=o[6],f=o[7],S=o[8],g=o[9],p=o[10],D=o[11],T=o[12],E=o[13],C=o[14],A=o[15],R=t.normal;R.x=c,R.y=m,R.z=p,t.distance=C,t.normal=R,t.normalize();var x=a.normal;x.x=d-c,x.y=f-m,x.z=D-p,a.distance=A-C,a.normal=x,a.normalize();var M=r.normal;M.x=d+l,M.y=f+u,M.z=D+S,r.distance=A+T,r.normal=M,r.normalize();var y=i.normal;y.x=d-l,y.y=f-u,y.z=D-S,i.distance=A-T,i.normal=y,i.normalize();var I=n.normal;I.x=d-h,I.y=f-_,I.z=D-g,n.distance=A-E,n.normal=I,n.normalize();var v=s.normal;v.x=d+h,v.y=f+_,v.z=D+g,s.distance=A+E,s.normal=v,s.normalize()}constructor(e){this._matrix=e,this.initBoundingPlane()}initBoundingPlane(){this._near=new Plane,this._far=new Plane,this._left=new Plane,this._right=new Plane,this._top=new Plane,this._bottom=new Plane,BoundFrustum.getPlanesFromMatrix(this._matrix,this._near,this._far,this._left,this._right,this._top,this._bottom)}get matrix(){return this._matrix}set matrix(e){e.cloneTo(this._matrix),BoundFrustum.getPlanesFromMatrix(this._matrix,this._near,this._far,this._left,this._right,this._top,this._bottom)}get near(){return this._near}get far(){return this._far}get left(){return this._left}get right(){return this._right}get top(){return this._top}get bottom(){return this._bottom}equalsBoundFrustum(e){return this._matrix.equalsOtherMatrix(e.matrix)}equalsObj(e){if(e instanceof BoundFrustum){var t=e;return this.equalsBoundFrustum(t)}return!1}getPlane(e){switch(e){case 0:return this._near;case 1:return this._far;case 2:return this._left;case 3:return this._right;case 4:return this._top;case 5:return this._bottom;default:return null}}static get3PlaneInterPoint(e,a,r,i){var n=e.normal,s=a.normal,o=r.normal;t.Vector3.cross(s,o,BoundFrustum._tempV30),t.Vector3.cross(o,n,BoundFrustum._tempV31),t.Vector3.cross(n,s,BoundFrustum._tempV32);var l=t.Vector3.dot(n,BoundFrustum._tempV30),h=t.Vector3.dot(s,BoundFrustum._tempV31),c=t.Vector3.dot(o,BoundFrustum._tempV32);t.Vector3.scale(BoundFrustum._tempV30,-e.distance/l,BoundFrustum._tempV33),t.Vector3.scale(BoundFrustum._tempV31,-a.distance/h,BoundFrustum._tempV34),t.Vector3.scale(BoundFrustum._tempV32,-r.distance/c,BoundFrustum._tempV35),t.Vector3.add(BoundFrustum._tempV33,BoundFrustum._tempV34,BoundFrustum._tempV36),t.Vector3.add(BoundFrustum._tempV35,BoundFrustum._tempV36,i)}getCorners(t){BoundFrustum.get3PlaneInterPoint(this._near,this._bottom,this._right,t[e.FrustumCorner.nearBottomRight]),BoundFrustum.get3PlaneInterPoint(this._near,this._top,this._right,t[e.FrustumCorner.nearTopRight]),BoundFrustum.get3PlaneInterPoint(this._near,this._top,this._left,t[e.FrustumCorner.nearTopLeft]),BoundFrustum.get3PlaneInterPoint(this._near,this._bottom,this._left,t[e.FrustumCorner.nearBottomLeft]),BoundFrustum.get3PlaneInterPoint(this._far,this._bottom,this._right,t[e.FrustumCorner.FarBottomRight]),BoundFrustum.get3PlaneInterPoint(this._far,this._top,this._right,t[e.FrustumCorner.FarTopRight]),BoundFrustum.get3PlaneInterPoint(this._far,this._top,this._left,t[e.FrustumCorner.FarTopLeft]),BoundFrustum.get3PlaneInterPoint(this._far,this._bottom,this._left,t[e.FrustumCorner.FarBottomLeft])}containsPoint(e){for(var t=Plane.PlaneIntersectionType_Front,a=Plane.PlaneIntersectionType_Front,r=0;r<6;r++){switch(r){case 0:a=CollisionUtils.intersectsPlaneAndPoint(this._near,e);break;case 1:a=CollisionUtils.intersectsPlaneAndPoint(this._far,e);break;case 2:a=CollisionUtils.intersectsPlaneAndPoint(this._left,e);break;case 3:a=CollisionUtils.intersectsPlaneAndPoint(this._right,e);break;case 4:a=CollisionUtils.intersectsPlaneAndPoint(this._top,e);break;case 5:a=CollisionUtils.intersectsPlaneAndPoint(this._bottom,e)}switch(a){case Plane.PlaneIntersectionType_Back:return ContainmentType.Disjoint;case Plane.PlaneIntersectionType_Intersecting:t=Plane.PlaneIntersectionType_Intersecting}}return t===Plane.PlaneIntersectionType_Intersecting?ContainmentType.Intersects:ContainmentType.Contains}intersects(e){var t=e.min,a=e.max,r=t.x,i=t.y,n=t.z,s=a.x,o=a.y,l=a.z,h=this._near.normal;if(this._near.distance+h.x*(h.x<0?r:s)+h.y*(h.y<0?i:o)+h.z*(h.z<0?n:l)<0)return!1;var c=this._left.normal;if(this._left.distance+c.x*(c.x<0?r:s)+c.y*(c.y<0?i:o)+c.z*(c.z<0?n:l)<0)return!1;var d=this._right.normal;if(this._right.distance+d.x*(d.x<0?r:s)+d.y*(d.y<0?i:o)+d.z*(d.z<0?n:l)<0)return!1;var u=this._bottom.normal;if(this._bottom.distance+u.x*(u.x<0?r:s)+u.y*(u.y<0?i:o)+u.z*(u.z<0?n:l)<0)return!1;var _=this._top.normal;if(this._top.distance+_.x*(_.x<0?r:s)+_.y*(_.y<0?i:o)+_.z*(_.z<0?n:l)<0)return!1;var m=this._far.normal;return!(this._far.distance+m.x*(m.x<0?r:s)+m.y*(m.y<0?i:o)+m.z*(m.z<0?n:l)<0)}containsBoundBox(e){for(var t=BoundFrustum._tempV30,a=BoundFrustum._tempV31,r=e.min,i=e.max,n=ContainmentType.Contains,s=0;s<6;s++){var o=this.getPlane(s),l=o.normal;if(l.x>=0?(t.x=i.x,a.x=r.x):(t.x=r.x,a.x=i.x),l.y>=0?(t.y=i.y,a.y=r.y):(t.y=r.y,a.y=i.y),l.z>=0?(t.z=i.z,a.z=r.z):(t.z=r.z,a.z=i.z),CollisionUtils.intersectsPlaneAndPoint(o,t)===Plane.PlaneIntersectionType_Back)return ContainmentType.Disjoint;CollisionUtils.intersectsPlaneAndPoint(o,a)===Plane.PlaneIntersectionType_Back&&(n=ContainmentType.Intersects)}return n}containsBoundSphere(e){for(var t=Plane.PlaneIntersectionType_Front,a=Plane.PlaneIntersectionType_Front,r=0;r<6;r++){switch(r){case 0:a=CollisionUtils.intersectsPlaneAndSphere(this._near,e);break;case 1:a=CollisionUtils.intersectsPlaneAndSphere(this._far,e);break;case 2:a=CollisionUtils.intersectsPlaneAndSphere(this._left,e);break;case 3:a=CollisionUtils.intersectsPlaneAndSphere(this._right,e);break;case 4:a=CollisionUtils.intersectsPlaneAndSphere(this._top,e);break;case 5:a=CollisionUtils.intersectsPlaneAndSphere(this._bottom,e)}switch(a){case Plane.PlaneIntersectionType_Back:return ContainmentType.Disjoint;case Plane.PlaneIntersectionType_Intersecting:t=Plane.PlaneIntersectionType_Intersecting}}return t===Plane.PlaneIntersectionType_Intersecting?ContainmentType.Intersects:ContainmentType.Contains}cloneTo(e){e.matrix=this.matrix}clone(){let e=new BoundFrustum(new t.Matrix4x4);return this.cloneTo(e),e}}BoundFrustum._tempV30=new t.Vector3,BoundFrustum._tempV31=new t.Vector3,BoundFrustum._tempV32=new t.Vector3,BoundFrustum._tempV33=new t.Vector3,BoundFrustum._tempV34=new t.Vector3,BoundFrustum._tempV35=new t.Vector3,BoundFrustum._tempV36=new t.Vector3;class Viewport{constructor(e,t,a,r){this.minDepth=0,this.maxDepth=1,this.x=null!=e?e:0,this.y=null!=t?t:0,this.width=null!=a?a:0,this.height=null!=r?r:0}project(e,a,r){t.Vector3.transformV3ToV4(e,a,r);var i=r.x,n=r.y,s=r.z,o=r.w;1!==o&&(i/=o,n/=o,s/=o),r.x=.5*(i+1)*this.width+this.x,r.y=.5*(1-n)*this.height+this.y,r.z=s*(this.maxDepth-this.minDepth)+this.minDepth}unprojectFromMat(e,a,r){var i=a.elements;r.x=(e.x-this.x)/this.width*2-1,r.y=-((e.y-this.y)/this.height*2-1),r.z=(e.z-this.minDepth)/(this.maxDepth-this.minDepth);var n=r.x*i[3]+r.y*i[7]+r.z*i[11]+i[15];t.Vector3.transformV3ToV3(r,a,r),1!==n&&(r.x=r.x/n,r.y=r.y/n,r.z=r.z/n)}unprojectFromWVP(e,a,r,i,n){t.Matrix4x4.multiply(a,r,Viewport._tempMatrix4x4),i&&t.Matrix4x4.multiply(Viewport._tempMatrix4x4,i,Viewport._tempMatrix4x4),Viewport._tempMatrix4x4.invert(Viewport._tempMatrix4x4),this.unprojectFromMat(e,Viewport._tempMatrix4x4,n)}set(e,t,a,r){this.x=e,this.y=t,this.width=a,this.height=r}cloneTo(e){e.x=this.x,e.y=this.y,e.width=this.width,e.height=this.height,e.minDepth=this.minDepth,e.maxDepth=this.maxDepth}}Viewport._tempMatrix4x4=new t.Matrix4x4,Viewport._tempViewport=new Viewport(0,0,0,0);class Picker{constructor(){}static calculateCursorRay(e,a,r,i,n,s){var o=e.x,l=e.y,h=Picker._tempVector30,c=h;c.x=o,c.y=l,c.z=a.minDepth;var d=Picker._tempVector31,u=d;u.x=o,u.y=l,u.z=a.maxDepth;var _=s.origin,m=Picker._tempVector32;a.unprojectFromWVP(h,r,i,n,_),a.unprojectFromWVP(d,r,i,n,m);var f=s.direction;f.x=m.x-_.x,f.y=m.y-_.y,f.z=m.z-_.z,t.Vector3.normalize(s.direction,s.direction)}static rayIntersectsTriangle(e,a,r,i){var n=Picker._tempVector30,s=Picker._tempVector31;t.Vector3.subtract(r,a,n),t.Vector3.subtract(i,a,s);var o,l=Picker._tempVector32;if(t.Vector3.cross(e.direction,s,l),(o=t.Vector3.dot(n,l))>-Number.MIN_VALUE&&o<Number.MIN_VALUE)return Number.NaN;var h,c=1/o,d=Picker._tempVector33;if(t.Vector3.subtract(e.origin,a,d),h=t.Vector3.dot(d,l),(h*=c)<0||h>1)return Number.NaN;var u,_,m=Picker._tempVector34;return t.Vector3.cross(d,n,m),u=t.Vector3.dot(e.direction,m),(u*=c)<0||h+u>1?Number.NaN:(_=t.Vector3.dot(s,m),(_*=c)<0?Number.NaN:_)}static rayPlaneIntersection(e,a){let r=new t.Vector3,i=t.Vector3.dot(e.direction.normalize(),a.normal.normalize());if(0==i)return null;let n=(-a.distance-t.Vector3.dot(e.origin,a.normal))/i;return n<0?null:(e.at(n,r),r)}}Picker._tempVector30=new t.Vector3,Picker._tempVector31=new t.Vector3,Picker._tempVector32=new t.Vector3,Picker._tempVector33=new t.Vector3,Picker._tempVector34=new t.Vector3;class RenderableSprite3D extends Sprite3D{static __init__(){RenderableSprite3D.SHADERDEFINE_RECEIVE_SHADOW=t.Shader3D.getDefineByName("RECEIVESHADOW"),RenderableSprite3D.SAHDERDEFINE_LIGHTMAP=t.Shader3D.getDefineByName("LIGHTMAP"),RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL=t.Shader3D.getDefineByName("LIGHTMAP_DIRECTIONAL"),RenderableSprite3D.LIGHTMAPSCALEOFFSET=t.Shader3D.propertyNameToID("u_LightmapScaleOffset"),RenderableSprite3D.LIGHTMAP=t.Shader3D.propertyNameToID("u_LightMap"),RenderableSprite3D.LIGHTMAP_DIRECTION=t.Shader3D.propertyNameToID("u_LightMapDirection"),RenderableSprite3D.PICKCOLOR=t.Shader3D.propertyNameToID("u_PickColor"),RenderableSprite3D.REFLECTIONCUBE_PROBEPOSITION=t.Shader3D.propertyNameToID("u_SpecCubeProbePosition"),RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMAX=t.Shader3D.propertyNameToID("u_SpecCubeBoxMax"),RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMIN=t.Shader3D.propertyNameToID("u_SpecCubeBoxMin"),RenderableSprite3D.VOLUMETRICGI_PROBECOUNTS=t.Shader3D.propertyNameToID("u_VolumetricGI.probeCounts"),RenderableSprite3D.VOLUMETRICGI_PROBESTEPS=t.Shader3D.propertyNameToID("u_VolumetricGI.probeStep"),RenderableSprite3D.VOLUMETRICGI_PROBESTARTPOS=t.Shader3D.propertyNameToID("u_VolumetricGI.probeStartPosition"),RenderableSprite3D.VOLUMETRICGI_PROBEPARAMS=t.Shader3D.propertyNameToID("u_VolumetricGI.probeParams"),RenderableSprite3D.VOLUMETRICGI_IRRADIANCE=t.Shader3D.propertyNameToID("u_ProbeIrradiance"),RenderableSprite3D.VOLUMETRICGI_DISTANCE=t.Shader3D.propertyNameToID("u_ProbeDistance"),RenderableSprite3D.AMBIENTCOLOR=t.Shader3D.propertyNameToID("u_AmbientColor"),RenderableSprite3D.AMBIENTSH=t.Shader3D.propertyNameToID("u_IblSH"),RenderableSprite3D.AMBIENTINTENSITY=t.Shader3D.propertyNameToID("u_AmbientIntensity"),RenderableSprite3D.REFLECTIONINTENSITY=t.Shader3D.propertyNameToID("u_ReflectionIntensity"),RenderableSprite3D.IBLTEX=t.Shader3D.propertyNameToID("u_IBLTex"),RenderableSprite3D.IBLROUGHNESSLEVEL=t.Shader3D.propertyNameToID("u_IBLRoughnessLevel");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");RenderableSprite3D.SHADERDEFINE_MORPHTARGET=t.Shader3D.getDefineByName("MORPHTARGETS"),RenderableSprite3D.SHADERDEFINE_MORPHTARGET_POSITION=t.Shader3D.getDefineByName("MORPHTARGETS_POSITION"),RenderableSprite3D.SHADERDEFINE_MORPHTARGET_NORMAL=t.Shader3D.getDefineByName("MORPHTARGETS_NORMAL"),RenderableSprite3D.SHADERDEFINE_MORPHTARGET_TANGENT=t.Shader3D.getDefineByName("MORPHTARGETS_TANGENT"),RenderableSprite3D.MorphTex=t.Shader3D.propertyNameToID("u_MorphTargetsTex"),RenderableSprite3D.MorphParams=t.Shader3D.propertyNameToID("u_MorphParams"),RenderableSprite3D.MorphAttriOffset=t.Shader3D.propertyNameToID("u_MorphAttrOffset"),RenderableSprite3D.MorphActiceTargets=t.Shader3D.propertyNameToID("u_MorphActiveTargets"),RenderableSprite3D.MorphActiveWeights=t.Shader3D.propertyNameToID("u_MorphTargetWeights"),RenderableSprite3D.MorphActiveCount=t.Shader3D.propertyNameToID("u_MorphTargetActiveCount"),e.addShaderUniform(RenderableSprite3D.MorphTex,"u_MorphTargetsTex"),e.addShaderUniform(RenderableSprite3D.MorphParams,"u_MorphParams"),e.addShaderUniform(RenderableSprite3D.MorphAttriOffset,"u_MorphAttrOffset"),e.addShaderUniform(RenderableSprite3D.MorphActiceTargets,"u_MorphActiveTargets"),e.addShaderUniform(RenderableSprite3D.MorphActiveWeights,"u_MorphTargetWeights"),e.addShaderUniform(RenderableSprite3D.MorphActiveCount,"u_MorphTargetActiveCount"),e.addShaderUniform(RenderableSprite3D.LIGHTMAPSCALEOFFSET,"u_LightmapScaleOffset"),e.addShaderUniform(RenderableSprite3D.LIGHTMAP,"u_LightMap"),e.addShaderUniform(RenderableSprite3D.LIGHTMAP_DIRECTION,"u_LightMapDirection"),e.addShaderUniform(RenderableSprite3D.PICKCOLOR,"u_PickColor"),e.addShaderUniform(RenderableSprite3D.REFLECTIONCUBE_PROBEPOSITION,"u_SpecCubeProbePosition"),e.addShaderUniform(RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMAX,"u_SpecCubeBoxMax"),e.addShaderUniform(RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMIN,"u_SpecCubeBoxMin"),e.addShaderUniform(RenderableSprite3D.IBLTEX,"u_IBLTex"),e.addShaderUniform(RenderableSprite3D.IBLROUGHNESSLEVEL,"u_IBLRoughnessLevel"),e.addShaderUniform(RenderableSprite3D.VOLUMETRICGI_PROBECOUNTS,"u_VolumetricGI.probeCounts"),e.addShaderUniform(RenderableSprite3D.VOLUMETRICGI_PROBESTEPS,"u_VolumetricGI.probeStep"),e.addShaderUniform(RenderableSprite3D.VOLUMETRICGI_PROBESTARTPOS,"u_VolumetricGI.probeStartPosition"),e.addShaderUniform(RenderableSprite3D.VOLUMETRICGI_PROBEPARAMS,"u_VolumetricGI.probeParams"),e.addShaderUniform(RenderableSprite3D.VOLUMETRICGI_IRRADIANCE,"u_ProbeIrradiance"),e.addShaderUniform(RenderableSprite3D.VOLUMETRICGI_DISTANCE,"u_ProbeDistance"),e.addShaderUniform(RenderableSprite3D.AMBIENTSH,"u_IblSH"),e.addShaderUniform(RenderableSprite3D.AMBIENTCOLOR,"u_AmbientColor"),e.addShaderUniform(RenderableSprite3D.AMBIENTINTENSITY,"u_AmbientIntensity"),e.addShaderUniform(RenderableSprite3D.REFLECTIONINTENSITY,"u_ReflectionIntensity"),RenderableSprite3D.REFLECTIONTEXTURE=t.Shader3D.propertyNameToID("u_ReflectTexture"),RenderableSprite3D.REFLECTIONCUBE_HDR_PARAMS=t.Shader3D.propertyNameToID("u_ReflectCubeHDRParams"),e.addShaderUniform(RenderableSprite3D.REFLECTIONTEXTURE,"REFLECTIONTEXTURE"),e.addShaderUniform(RenderableSprite3D.REFLECTIONCUBE_HDR_PARAMS,"u_ReflectCubeHDRParams"),RenderableSprite3D.AMBIENTSHAR=t.Shader3D.propertyNameToID("u_AmbientSHAr"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHAR,"u_AmbientSHAr"),RenderableSprite3D.AMBIENTSHAG=t.Shader3D.propertyNameToID("u_AmbientSHAg"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHAG,"u_AmbientSHAg"),RenderableSprite3D.AMBIENTSHAB=t.Shader3D.propertyNameToID("u_AmbientSHAb"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHAB,"u_AmbientSHAb"),RenderableSprite3D.AMBIENTSHBR=t.Shader3D.propertyNameToID("u_AmbientSHBr"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHBR,"u_AmbientSHBr"),RenderableSprite3D.AMBIENTSHBG=t.Shader3D.propertyNameToID("u_AmbientSHBg"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHBG,"u_AmbientSHBg"),RenderableSprite3D.AMBIENTSHBB=t.Shader3D.propertyNameToID("u_AmbientSHBb"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHBB,"u_AmbientSHBb"),RenderableSprite3D.AMBIENTSHC=t.Shader3D.propertyNameToID("u_AmbientSHC"),e.addShaderUniform(RenderableSprite3D.AMBIENTSHC,"u_AmbientSHC")}constructor(e){super(e)}_onInActive(){super._onInActive()}_onActive(){super._onActive()}_onActiveInScene(){super._onActiveInScene()}_create(){return new Sprite3D(this.name)}_addToInitStaticBatchManager(){}_setBelongScene(e){super._setBelongScene(e)}_setUnBelongScene(){super._setUnBelongScene()}}class MeshSprite3DShaderDeclaration{}class Bounds{static merge(e,a,r){t.Vector3.min(e.min,a.min,r.min),t.Vector3.max(e.max,a.max,r.max),r.min=r.min,r.max=r.max}static containPoint(e,t){let a=e.getMax(),r=e.getMin();return!(t.x>a.x||t.x<r.x)&&(!(t.y>a.y||t.y<r.y)&&!(t.z>a.z||t.z<r.z))}get min(){return this.getMin()}set min(e){this.setMin(e)}get max(){return this.getMax()}set max(e){this.setMax(e)}setMin(e){this._imp.setMin(e)}getMin(){return this._imp.getMin()}setMax(e){this._imp.setMax(e)}getMax(){return this._imp.getMax()}setCenter(e){this._imp.setCenter(e)}getCenter(){return this._imp.getCenter()}setExtent(e){this._imp.setExtent(e)}getExtent(){return this._imp.getExtent()}constructor(e,a){this._imp=t.LayaGL.renderOBJCreate.createBounds(e,a)}_getUpdateFlag(e){return this._imp._getUpdateFlag(e)}_setUpdateFlag(e,t){this._imp._setUpdateFlag(e,t)}_getCenter(e,a,r){t.Vector3.add(e,a,r),t.Vector3.scale(r,.5,r)}_getExtent(e,a,r){t.Vector3.subtract(a,e,r),t.Vector3.scale(r,.5,r)}_getMin(e,a,r){t.Vector3.subtract(e,a,r)}_getMax(e,a,r){t.Vector3.add(e,a,r)}_rotateExtents(e,t,a){var r=e.x,i=e.y,n=e.z,s=t.elements;a.x=Math.abs(s[0]*r)+Math.abs(s[4]*i)+Math.abs(s[8]*n),a.y=Math.abs(s[1]*r)+Math.abs(s[5]*i)+Math.abs(s[9]*n),a.z=Math.abs(s[2]*r)+Math.abs(s[6]*i)+Math.abs(s[10]*n)}_tranform(e,t){this._imp._tranform(e,t._imp)}getCorners(e){this._imp.getCorners(e)}getBoundBox(e){this._imp._getBoundBox().cloneTo(e)}calculateBoundsintersection(e){return this._imp.calculateBoundsintersection(e._imp)}cloneTo(e){this._imp.cloneTo(e._imp)}clone(){var e=new Bounds(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}Bounds._UPDATE_MIN=1,Bounds._UPDATE_MAX=2,Bounds._UPDATE_CENTER=4,Bounds._UPDATE_EXTENT=8,new t.Vector3,new t.Vector3,e.volumeIntersectType=void 0,(l=e.volumeIntersectType||(e.volumeIntersectType={}))[l.contain=0]="contain",l[l.intersect=1]="intersect",l[l.Disjoint=2]="Disjoint";class Volume extends t.Component{constructor(){super(),this._aroundVolumeCacheNum=0,this._bounds=new Bounds,this._primitiveBounds=new Bounds,this._importance=0,this.runInEditor=!0}get type(){return this._type}get bounds(){return this._bounds}get boundsMax(){return this._primitiveBounds.getMax()}set boundsMax(e){this._primitiveBounds.setMax(e),this._reCaculateBoundBox()}set boundsMin(e){this._primitiveBounds.setMin(e),this._reCaculateBoundBox()}get boundsMin(){return this._primitiveBounds.getMin()}get probePosition(){return this.owner.transform.position}get importance(){return this._importance}set importance(e){this._importance=e}_onEnable(){this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._VolumeChange),this._volumeManager=this.owner.scene._volumeManager,this._volumeManager.add(this),this._reCaculateBoundBox()}_onDisable(){this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._VolumeChange),this._volumeManager.remove(this)}_VolumeChange(){this._volumeManager._needUpdateAllRender=!0,this._reCaculateBoundBox()}_reCaculateBoundBox(){this.owner&&this._primitiveBounds._tranform(this.owner.transform.worldMatrix,this._bounds)}_cloneTo(e){}}class ReflectionProbeManager{constructor(){this._reflectionProbes=new t.SingletonList,this._needUpdateAllRender=!1,this._sceneReflectionProbe=new ReflectionProbe,this._sceneReflectionProbe.boxProjection=!1,this._sceneReflectionProbe._isScene=!0}set sceneReflectionProbe(e){this._sceneReflectionProbe=e,this._needUpdateAllRender=!0}get sceneReflectionProbe(){return this._sceneReflectionProbe}_updateRenderObject(e){if(0!=this._reflectionProbes.length){for(var t,a,r=this._reflectionProbes.elements,i=0,n=e.bounds,s=0,o=this._reflectionProbes.length;s<o;s++){var l=r[s];if(t){if(t.importance>l.importance)continue;if((a=n.calculateBoundsintersection(l.bounds))<i&&t.importance==l.importance)continue}else if((a=n.calculateBoundsintersection(l.bounds))<i)continue;t=l,i=a}!t&&this._sceneReflectionProbe&&(t=this._sceneReflectionProbe),e.probReflection=t}else e.probReflection=this._sceneReflectionProbe}add(e){this._reflectionProbes.add(e),this._needUpdateAllRender=!0}remove(e){this._reflectionProbes.remove(e),this._needUpdateAllRender=!0}handleMotionlist(e){var t=e.elements;let a;for(var r=0,i=e.length;r<i;r++)a=t[r],a._surportReflectionProbe&&1==a._reflectionMode&&this._updateRenderObject(t[r])}reCaculateAllRenderObjects(e){var t=e.elements;let a;for(var r=0,i=e.length;r<i;r++)a=t[r],a._surportReflectionProbe&&1==a._reflectionMode&&this._updateRenderObject(a),this._needUpdateAllRender=!1}destroy(){for(let e=0;e<this._reflectionProbes.length;e++){this._reflectionProbes.elements[e].destroy()}this._reflectionProbes.length=0,this._sceneReflectionProbe.destroy(),this._sceneReflectionProbe=null}}class Sprite3DRenderDeclaration{}class VolumetricGIManager{constructor(){this._GIVolumes=new t.SingletonList,this._needUpdateAllRender=!0}removeVolumetricGI(e){e._shaderValues.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_VOLUMETRICGI)}add(e){this._GIVolumes.add(e),this._needUpdateAllRender=!0}remove(e){this._GIVolumes.remove(e),this._needUpdateAllRender=!0}_updateRenderObject(e){if(0==this._GIVolumes.length)return void this.removeVolumetricGI(e);let t,a=e.bounds,r=0,i=0,n=this._GIVolumes.elements;for(let e=0;e<this._GIVolumes.length;e++){let s=n[e];if(t){if(t.importance>s.importance)continue;if(i=a.calculateBoundsintersection(s.bounds),i<r&&t.importance==s.importance)continue}else if(i=a.calculateBoundsintersection(s.bounds),i<r)continue;t=s,r=i}t?t.applyVolumetricGI(e._shaderValues):this.removeVolumetricGI(e)}handleMotionlist(e){for(let t=0;t<e.length;t++){let a=e.elements[t];this._updateRenderObject(a)}this._needUpdateAllRender=!1}reCaculateAllRenderObjects(e){for(let t=0;t<e.length;t++){let a=e.elements[t];this._updateRenderObject(a)}this._needUpdateAllRender=!1}destroy(){}}class VolumeManager{constructor(){this._motionObjects=new t.SingletonList,this._volumeList=new t.SingletonList,this._needUpdateAllRender=!1,this._regVolumeManager={},this._reflectionProbeManager=new ReflectionProbeManager,this._regVolumeManager[VolumeManager.ReflectionProbeVolumeType]=this._reflectionProbeManager,this._volumetricGIManager=new VolumetricGIManager,this._regVolumeManager[VolumeManager.VolumetricGIType]=this._volumetricGIManager}get reflectionProbeManager(){return this._reflectionProbeManager}get volumetricGIManager(){return this._volumetricGIManager}add(e){let t=this._regVolumeManager[e.type];t?t.add(e):(this._volumeList.add(e),this._needUpdateAllRender=!0)}remove(e){let t=this._regVolumeManager[e.type];t?t.remove(e):(this._volumeList.remove(e),this._needUpdateAllRender=!0)}addMotionObject(e){this._motionObjects.add(e)}removeMotionObject(e){this._motionObjects.remove(e)}_updateRenderObject(e){let t,a=this._volumeList.elements,r=e.bounds.getCenter();for(var i=0,n=this._volumeList.length;i<n;i++){let e=a[i],n=e.bounds;Bounds.containPoint(n,r)&&(t=e)}e.volume=t}handleMotionlist(){for(var e=this._motionObjects.elements,t=0,a=this._motionObjects.length;t<a;t++)this._updateRenderObject(e[t]);this.reflectionProbeManager.handleMotionlist(this._motionObjects),this.volumetricGIManager.handleMotionlist(this._motionObjects),this.clearMotionObjects()}reCaculateAllRenderObjects(e){if(this._needUpdateAllRender){for(var t=e.elements,a=0,r=e.length;a<r;a++)this._updateRenderObject(t[a]);this._needUpdateAllRender=!1}else this.handleMotionlist();this.reflectionProbeManager._needUpdateAllRender?this.reflectionProbeManager.reCaculateAllRenderObjects(e):this.reflectionProbeManager.handleMotionlist(this._motionObjects),this.volumetricGIManager._needUpdateAllRender?this.volumetricGIManager.reCaculateAllRenderObjects(e):this.volumetricGIManager.handleMotionlist(this._motionObjects)}needreCaculateAllRenderObjects(){return this._needUpdateAllRender||this.reflectionProbeManager._needUpdateAllRender||this.volumetricGIManager._needUpdateAllRender}clearMotionObjects(){this._motionObjects.length=0}destroy(){}}VolumeManager.ReflectionProbeVolumeType=1,VolumeManager.VolumetricGIType=2;class SphericalHarmonicsL2{constructor(){this._coefficients=new Float32Array(27)}getCoefficient(e,t){return this._coefficients[9*e+t]}setCoefficient(e,t,a){this._coefficients[9*e+t]=a}setCoefficients(e,t,a,r,i,n,s,o,l,h){var c=9*e;this._coefficients[c]=t,this._coefficients[++c]=a,this._coefficients[++c]=r,this._coefficients[++c]=i,this._coefficients[++c]=n,this._coefficients[++c]=s,this._coefficients[++c]=o,this._coefficients[++c]=l,this._coefficients[++c]=h}cloneTo(e){if(this!==e)for(var t=this._coefficients,a=e._coefficients,r=0;r<27;r++)a[r]=t[r]}}SphericalHarmonicsL2._default=new SphericalHarmonicsL2;class SphericalHarmonicsL2Generater{static surfaceArea(e,t){return Math.atan2(e*t,Math.sqrt(e*e+t*t+1))}static uv2Dir(e,a,r,i){switch(r){case t.TextureCubeFace.PositiveX:i.x=1,i.y=-a,i.z=-e;break;case t.TextureCubeFace.NegativeX:i.x=-1,i.y=-a,i.z=e;break;case t.TextureCubeFace.PositiveY:i.x=e,i.y=1,i.z=a;break;case t.TextureCubeFace.NegativeY:i.x=e,i.y=-1,i.z=-a;break;case t.TextureCubeFace.PositiveZ:i.x=e,i.y=-a,i.z=1;break;case t.TextureCubeFace.NegativeZ:i.x=-e,i.y=-a,i.z=-1}}static sh_eval_9(e,t,a,r){const i=Math.sqrt,n=Math.PI;switch(e){case 0:return.5*i(1/n);case 1:return.5*-a*i(3/n);case 2:return.5*r*i(3/n);case 3:return.5*-t*i(3/n);case 4:return t*a*.5*i(15/n);case 5:return-a*r*.5*i(15/n);case 6:return.25*(3*r*r-1)*i(5/n);case 7:return-t*r*.5*i(15/n);case 8:return.25*(t*t-a*a)*i(15/n);default:return 0}}static CalCubemapSH(e,a,r,i=!0){let n=r,s=r,o=this._tempSHR.fill(0),l=this._tempSHG.fill(0),h=this._tempSHB.fill(0),c=new t.Vector3;for(let r=0;r<6;r++){let d=e[r];for(let e=0;e<s;e++)for(let u=0;u<n;u++){let _=(u+.5)/n*2-1,m=(e+.5)/s*2-1,f=1/n,S=1/s,g=_-f,p=m-S,D=_+f,T=m+S,E=this.surfaceArea(g,p)-this.surfaceArea(g,T)-this.surfaceArea(D,p)+this.surfaceArea(D,T);this.uv2Dir(_,m,r,c),t.Vector3.normalize(c,c);let C=(u+e*n)*a,A=d[C],R=d[C+1],x=d[C+2];i&&(A=t.Color.gammaToLinearSpace(A),R=t.Color.gammaToLinearSpace(R),x=t.Color.gammaToLinearSpace(x));for(let e=0;e<this.SH_Count;e++){let t=this.sh_eval_9(e,c.x,c.y,c.z);o[e]+=A*t*E,l[e]+=R*t*E,h[e]+=x*t*E}}}let d=new SphericalHarmonicsL2;for(let e=0;e<this.SH_Count;e++){let t=this.k[e],a=o[e];d.setCoefficient(0,e,a*t);let r=l[e];d.setCoefficient(1,e,r*t);let i=h[e];d.setCoefficient(2,e,i*t)}return d}static CalGradientSH(e,a,r,i=!0){console.time("Gradient SH");let n=this._tempSkyPixels,s=this._tempEquatorPixels,o=this._tempGroundPixels;const fillPixelBuffer=(e,a,r)=>{let i=new t.Color(a.x,a.y,a.z,1);r&&i.toLinear(i);let n=Math.min(i.r,1),s=Math.min(i.g,1),o=Math.min(i.b,1);for(let t=0;t<e.length;t+=3)e[t]=n,e[t+1]=s,e[t+2]=o};fillPixelBuffer(n,e,i),fillPixelBuffer(s,a,i),fillPixelBuffer(o,r,i);let l=[];l[t.TextureCubeFace.PositiveY]=n,l[t.TextureCubeFace.NegativeY]=o,l[t.TextureCubeFace.PositiveX]=s,l[t.TextureCubeFace.NegativeX]=s,l[t.TextureCubeFace.PositiveZ]=s,l[t.TextureCubeFace.NegativeZ]=s;let h=SphericalHarmonicsL2Generater.CalCubemapSH(l,3,this.GradientSimulateSize,!1);return console.timeEnd("Gradient SH"),h}}SphericalHarmonicsL2Generater._tempSHR=new Float32Array(9),SphericalHarmonicsL2Generater._tempSHG=new Float32Array(9),SphericalHarmonicsL2Generater._tempSHB=new Float32Array(9),SphericalHarmonicsL2Generater.k=[.28209479177387814,-.32573500793527993,.32573500793527993,-.32573500793527993,.2731371076480198,-.2731371076480198,.07884789131313,-.2731371076480198,.1365685538240099],SphericalHarmonicsL2Generater.GradientSimulateSize=3,SphericalHarmonicsL2Generater.SH_Count=9,SphericalHarmonicsL2Generater._tempSkyPixels=new Float32Array(SphericalHarmonicsL2Generater.GradientSimulateSize*SphericalHarmonicsL2Generater.GradientSimulateSize*3),SphericalHarmonicsL2Generater._tempEquatorPixels=new Float32Array(SphericalHarmonicsL2Generater.GradientSimulateSize*SphericalHarmonicsL2Generater.GradientSimulateSize*3),SphericalHarmonicsL2Generater._tempGroundPixels=new Float32Array(SphericalHarmonicsL2Generater.GradientSimulateSize*SphericalHarmonicsL2Generater.GradientSimulateSize*3),e.AmbientMode=void 0,(h=e.AmbientMode||(e.AmbientMode={}))[h.SolidColor=0]="SolidColor",h[h.SphericalHarmonics=1]="SphericalHarmonics",h[h.TripleColor=2]="TripleColor",e.ReflectionProbeMode=void 0,(c=e.ReflectionProbeMode||(e.ReflectionProbeMode={}))[c.off=0]="off",c[c.simple=1]="simple";class ReflectionProbe extends Volume{constructor(){super(),this._boxProjection=!1,this._ambientColor=new t.Color,this._ambientMode=e.AmbientMode.SolidColor,this._isScene=!1,this._reflectionHDRParams=new t.Vector4,this._reflectionDecodeFormat=t.TextureDecodeFormat.Normal,this._ambientSkyColor=new t.Vector3,this._ambientEquatorColor=new t.Vector3,this._ambientGroundColor=new t.Vector3,this._importance=0,this._type=VolumeManager.ReflectionProbeVolumeType,this._ambientIntensity=1,this._reflectionIntensity=1,this.boundsMax=new t.Vector3(5,5,5),this.boundsMin=new t.Vector3(-5,-5,-5)}get boxProjection(){return this._boxProjection}set boxProjection(e){e!=this._boxProjection&&(this._updateMark=ILaya3D.Scene3D._updateMark),this._boxProjection=e}get importance(){return this._importance}set importance(e){this._importance=e}get ambientIntensity(){return this._ambientIntensity}set ambientIntensity(e){e!=this._ambientIntensity&&(this._ambientIntensity=e,this._updateMark=ILaya3D.Scene3D._updateMark)}get reflectionIntensity(){return this._reflectionIntensity}set reflectionIntensity(e){e!=this._reflectionIntensity&&(e=Math.max(e,0),this._reflectionIntensity=e,this._updateMark=ILaya3D.Scene3D._updateMark)}get bounds(){return this._bounds}set boundsMax(e){super.boundsMax=e,this.boxProjection&&(this._updateMark=ILaya3D.Scene3D._updateMark)}get boundsMax(){return this._primitiveBounds.getMax()}set boundsMin(e){super.boundsMin=e,this.boxProjection&&(this._updateMark=ILaya3D.Scene3D._updateMark)}get boundsMin(){return this._primitiveBounds.getMin()}get probePosition(){return this.owner.transform.position}get ambientColor(){return this._ambientColor}set ambientColor(t){t&&t.cloneTo(this._ambientColor),this.ambientMode==e.AmbientMode.SolidColor&&(this._updateMark=ILaya3D.Scene3D._updateMark)}get ambientSH(){return this._ambientSH}set ambientSH(t){this.ambientMode==e.AmbientMode.SphericalHarmonics&&(this._updateMark=ILaya3D.Scene3D._updateMark),this._ambientSH=t}get ambientMode(){return this._ambientMode}set ambientMode(t){t!=this.ambientMode&&(this._ambientMode=t,this.ambientSH||(t==e.AmbientMode.SphericalHarmonics?this._ambientSphericalHarmonics&&this._applySHCoefficients(this._ambientSphericalHarmonics,Math.pow(this._ambientIntensity,2.2)):t==e.AmbientMode.TripleColor&&this._ambientTripleColorSphericalHarmonics&&this._applySHCoefficients(this._ambientTripleColorSphericalHarmonics,1)),this._updateMark=ILaya3D.Scene3D._updateMark)}get iblTex(){return this._iblTex}set iblTex(e){this.iblTex!=e&&(this.iblTex&&this.iblTex._removeReference(),this._iblTex=e,e&&e._addReference(),this._updateMark=ILaya3D.Scene3D._updateMark)}get iblTexRGBD(){return this._iblTexRGBD}set iblTexRGBD(e){e!=this._iblTexRGBD&&(this._iblTexRGBD=e,this._updateMark=ILaya3D.Scene3D._updateMark)}applyReflectionShaderData(a){this.boxProjection?(a.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),a.setShaderData(RenderableSprite3D.REFLECTIONCUBE_PROBEPOSITION,t.ShaderDataType.Vector3,this.probePosition),a.setShaderData(RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMAX,t.ShaderDataType.Vector3,this._bounds.getMax()),a.setShaderData(RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMIN,t.ShaderDataType.Vector3,this._bounds.getMin())):a.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),this.ambientMode==e.AmbientMode.SolidColor?(a.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),a.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL),a.setColor(RenderableSprite3D.AMBIENTCOLOR,this.ambientColor)):this.iblTex&&this.ambientSH?(a.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL),a.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),this.iblTex&&(a.setTexture(RenderableSprite3D.IBLTEX,this.iblTex),a.setNumber(RenderableSprite3D.IBLROUGHNESSLEVEL,this.iblTex.maxMipmapLevel)),this.iblTexRGBD?a.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD):a.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD),this.ambientSH&&a.setBuffer(RenderableSprite3D.AMBIENTSH,this.ambientSH)):(a.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL),a.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),this._reflectionTexture&&(a.setShaderData(RenderableSprite3D.REFLECTIONTEXTURE,t.ShaderDataType.TextureCube,this.reflectionTexture?this.reflectionTexture:t.TextureCube.blackTexture),a.setShaderData(RenderableSprite3D.REFLECTIONCUBE_HDR_PARAMS,t.ShaderDataType.Vector4,this.reflectionHDRParams)),this._shCoefficients&&(a.setVector(RenderableSprite3D.AMBIENTSHAR,this._shCoefficients[0]),a.setVector(RenderableSprite3D.AMBIENTSHAG,this._shCoefficients[1]),a.setVector(RenderableSprite3D.AMBIENTSHAB,this._shCoefficients[2]),a.setVector(RenderableSprite3D.AMBIENTSHBR,this._shCoefficients[3]),a.setVector(RenderableSprite3D.AMBIENTSHBG,this._shCoefficients[4]),a.setVector(RenderableSprite3D.AMBIENTSHBB,this._shCoefficients[5]),a.setVector(RenderableSprite3D.AMBIENTSHC,this._shCoefficients[6]))),a.setNumber(RenderableSprite3D.AMBIENTINTENSITY,this.ambientIntensity),a.setNumber(RenderableSprite3D.REFLECTIONINTENSITY,this.reflectionIntensity)}_onEnable(){super._onEnable(),this._updateMark=ILaya3D.Scene3D._updateMark}_onDisable(){super._onDisable()}_onDestroy(){}_cloneTo(e){}get reflectionTexture(){return this._reflectionTexture}set reflectionTexture(e){this._reflectionTexture!=e&&(this._reflectionTexture&&this.iblTex._removeReference(),this._reflectionTexture=e,e&&(this._reflectionTexture._addReference(),this._updateMark=ILaya3D.Scene3D._updateMark))}get customReflection(){return this.reflectionTexture}set customReflection(e){this.reflectionTexture=e}get reflectionHDRParams(){return this._reflectionHDRParams}set reflectionHDRParams(e){this._reflectionHDRParams=e,this._updateMark=ILaya3D.Scene3D._updateMark}get reflectionDecodingFormat(){return this._reflectionDecodeFormat}set reflectionDecodingFormat(e){this._reflectionDecodeFormat!=e&&(this._reflectionDecodeFormat=e,this._reflectionDecodeFormat==t.TextureDecodeFormat.RGBM&&(this._reflectionHDRParams.x=5),this._updateMark=ILaya3D.Scene3D._updateMark)}get ambientSphericalHarmonics(){return this._ambientSphericalHarmonics}set ambientSphericalHarmonics(t){var a=t||SphericalHarmonicsL2._default;this._ambientSphericalHarmonics||(this._ambientSphericalHarmonics=new SphericalHarmonicsL2),this._ambientSphericalHarmonics!=t&&(t.cloneTo(this._ambientSphericalHarmonics),this._applySHCoefficients(this._ambientSphericalHarmonics,Math.pow(this.ambientIntensity,2.2))),this.ambientMode==e.AmbientMode.TripleColor&&this._applySHCoefficients(a,Math.pow(this.ambientIntensity,2.2)),this._updateMark=ILaya3D.Scene3D._updateMark}_applySHCoefficients(e,a){if(!this._shCoefficients){this._shCoefficients=new Array(7);for(var r=0;r<7;r++)this._shCoefficients[r]=new t.Vector4}var i=this._shCoefficients;for(r=0;r<3;r++){var n=i[r],s=i[r+3];n.setValue(e.getCoefficient(r,3)*a,e.getCoefficient(r,1)*a,e.getCoefficient(r,2)*a,(e.getCoefficient(r,0)-e.getCoefficient(r,6))*a),s.setValue(e.getCoefficient(r,4)*a,e.getCoefficient(r,5)*a,3*e.getCoefficient(r,6)*a,e.getCoefficient(r,7)*a)}i[6].setValue(e.getCoefficient(0,8)*a,e.getCoefficient(1,8)*a,e.getCoefficient(2,8)*a,1)}setGradientAmbient(t,a,r){this._ambientSkyColor=t,this._ambientEquatorColor=a,this._ambientGroundColor=r;let i=SphericalHarmonicsL2Generater.CalGradientSH(this._ambientSkyColor,this._ambientEquatorColor,this._ambientGroundColor,!0);this._ambientTripleColorSphericalHarmonics=i,this.ambientMode==e.AmbientMode.TripleColor&&this._applySHCoefficients(i,2.2),this._updateMark=ILaya3D.Scene3D._updateMark}}ReflectionProbe.TEMPVECTOR3=new t.Vector3,ReflectionProbe.defaultTextureHDRDecodeValues=new t.Vector4(1,1,0,0),e.RenderBitFlag=void 0,(d=e.RenderBitFlag||(e.RenderBitFlag={}))[d.RenderBitFlag_CullFlag=0]="RenderBitFlag_CullFlag",d[d.RenderBitFlag_Batch=1]="RenderBitFlag_Batch",d[d.RenderBitFlag_Editor=2]="RenderBitFlag_Editor",d[d.RenderBitFlag_InstanceBatch=3]="RenderBitFlag_InstanceBatch",d[d.RenderBitFlag_VertexMergeBatch=4]="RenderBitFlag_VertexMergeBatch";class BaseRender extends t.Component{static __init__(){BaseRender.shaderValueInit()}static getMeshDefine(e,a){a.length=0;for(var r=0,i=e._subMeshes.length;r<i;r++)for(var n=e.getSubMesh(r)._vertexBuffer._vertexDeclaration._vertexElements,s=0,o=n.length;s<o;s++){switch(n[s]._elementUsage){case t.VertexMesh.MESH_COLOR0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);break;case t.VertexMesh.MESH_TEXTURECOORDINATE0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);break;case t.VertexMesh.MESH_TANGENT0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT)}}}static changeVertexDefine(e,t,a){var r=e;if(r){BaseRender.getMeshDefine(r,BaseRender._meshVerticeDefine);for(var i=0,n=BaseRender._meshVerticeDefine.length;i<n;i++)a.removeDefine(BaseRender._meshVerticeDefine[i])}if(t){BaseRender.getMeshDefine(t,BaseRender._meshVerticeDefine);for(i=0,n=BaseRender._meshVerticeDefine.length;i<n;i++)a.addDefine(BaseRender._meshVerticeDefine[i])}}static shaderValueInit(){Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL=t.Shader3D.getDefineByName("GI_LEGACYIBL"),Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL=t.Shader3D.getDefineByName("GI_IBL"),Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD=t.Shader3D.getDefineByName("IBL_RGBD"),Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION=t.Shader3D.getDefineByName("SPECCUBE_BOX_PROJECTION"),Sprite3DRenderDeclaration.SHADERDEFINE_VOLUMETRICGI=t.Shader3D.getDefineByName("VOLUMETRICGI")}set ratioIgnor(e){this._ratioIgnor=e}get ratioIgnor(){return this._ratioIgnor}get renderbitFlag(){return this._rendernode.renderbitFlag}set boundsChange(e){this._rendernode.boundsChange=e}get boundsChange(){return this._rendernode.boundsChange}get renderNode(){return this._rendernode}set distanceForSort(e){this._rendernode.distanceForSort=e}get distanceForSort(){return this._rendernode.distanceForSort}set geometryBounds(e){this._baseGeometryBounds=this._rendernode.geometryBounds=e}get geometryBounds(){return this._baseGeometryBounds}get id(){return this._rendernode.renderId}get lightmapIndex(){return this._lightmapIndex}set lightmapIndex(e){this._lightmapIndex=e}get lightmapScaleOffset(){return this._lightmapScaleOffset}set lightmapScaleOffset(e){if(!e)throw"BaseRender: lightmapScaleOffset can't be null.";this._lightmapScaleOffset=e,this._setShaderValue(RenderableSprite3D.LIGHTMAPSCALEOFFSET,t.ShaderDataType.Vector4,e)}get material(){var e=this._sharedMaterials[0];if(e&&!this._materialsInstance[0]){var t=this._getInstanceMaterial(e,0),a=this._renderElements[0];a&&(a.material=t)}return this._sharedMaterials[0]}set material(e){this.sharedMaterial=e,this._isSupportReflection()}get materials(){for(var e=0,t=this._sharedMaterials.length;e<t;e++)if(!this._materialsInstance[e]){var a=this._getInstanceMaterial(this._sharedMaterials[e],e),r=this._renderElements[e];r&&(r.material=a)}return this._sharedMaterials.slice()}set materials(e){this.sharedMaterials=e,this._isSupportReflection()}get sharedMaterial(){return this._sharedMaterials[0]}set sharedMaterial(e){var t=this._sharedMaterials[0];if(t!==e){this._sharedMaterials[0]=e,this._materialsInstance[0]=!1,this._changeMaterialReference(t,e);var a=this._renderElements[0];a&&(a.material=e)}this._isSupportReflection()}get sharedMaterials(){return this._sharedMaterials.slice()}set sharedMaterials(e){for(var t=this._materialsInstance,a=this._sharedMaterials,r=0,i=a.length;r<i;r++){var n=a[r];n&&n._removeReference()}if(!e)throw new Error("BaseRender: shadredMaterials value can't be null.");var s=e.length;for(t.length=s,a.length=s,r=0;r<s;r++){n=a[r];var o=e[r];if(n!==o){t[r]=!1;var l=this._renderElements[r];l&&(l.material=o)}o&&o._addReference(),a[r]=o}this._isSupportReflection()}get bounds(){return this.boundsChange&&(this._calculateBoundingBox(),this.boundsChange=!1),this._bounds}set receiveShadow(e){this.renderNode.receiveShadow!==e&&(this.renderNode.receiveShadow=e,e?this._shaderValues.addDefine(RenderableSprite3D.SHADERDEFINE_RECEIVE_SHADOW):this._shaderValues.removeDefine(RenderableSprite3D.SHADERDEFINE_RECEIVE_SHADOW))}get receiveShadow(){return this.renderNode.receiveShadow}get castShadow(){return this.renderNode.castShadow}set castShadow(e){this.renderNode.castShadow=e}set reflectionMode(e){this._reflectionMode=e}get reflectionMode(){return this._reflectionMode}set volume(e){if(e)return this._volume!=e?(e._addRenderNode&&e._addRenderNode(this),void(this._volume=e)):void(e._motionInVolume&&e._motionInVolume(this));this._volume&&(this._volume._removeRenderNode&&this._volume._removeRenderNode(this),this._volume=null)}get volume(){return this._volume}set probReflection(a){this._probReflection!=a&&(this._probReflection=a,this._reflectionMode==e.ReflectionProbeMode.off?(this._shaderValues.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),this._shaderValues.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL),this._setShaderValue(RenderableSprite3D.IBLTEX,t.ShaderDataType.TextureCube,t.TextureCube.blackTexture),this._setShaderValue(RenderableSprite3D.IBLROUGHNESSLEVEL,t.ShaderDataType.Float,0)):this._probReflection.applyReflectionShaderData(this._shaderValues))}constructor(){super(),this._lightmapScaleOffset=new t.Vector4(1,1,0,0),this._sharedMaterials=[],this._supportOctree=!0,this._sceneUpdateMark=-1,this._updateMark=-1,this._surportReflectionProbe=!1,this._reflectionMode=e.ReflectionProbeMode.simple,this._updateRenderType=-1,this._motionIndexList=-1,this._ratioIgnor=.005,this._LOD=-1,this._rendernode=this._createBaseRenderNode(),this._rendernode.owner=this,this._rendernode.renderId=++BaseRender._uniqueIDCounter,this._bounds=this._rendernode.bounds=new Bounds(t.Vector3.ZERO,t.Vector3.ZERO),this._renderElements=[],this._enabled=!0,this._materialsInstance=[],this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(null),this.lightmapIndex=-1,this.receiveShadow=!1,this.sortingFudge=0,this._customCull=this._needRender!==BaseRender.prototype._needRender,this.runInEditor=!0,this.boundsChange=!0,this._rendernode.renderbitFlag=0,this._rendernode.staticMask=1,this._worldParams=new t.Vector4(1,0,0,0)}_createBaseRenderNode(){return t.LayaGL.renderOBJCreate.createBaseRenderNode()}_changeLayer(e){this._rendernode.layer=e}_changeStaticMask(e){this._rendernode.staticMask=e}_onAdded(){this._transform=this.owner.transform,this.owner._isRenderNode++,this.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_Editor,this.owner._getBit(t.NodeFlags.HIDE_BY_EDITOR)),this._rendernode.transform=this._transform,this._changeLayer(this.owner.layer),this._changeStaticMask(this.owner._isStatic)}_onEnable(){super._onEnable(),this.owner&&(this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this.owner.on(t.Event.LAYERCHANGE,this,this._changeLayer),this.owner.on(t.Event.staticMask,this,this._changeStaticMask),this._changeLayer(this.owner.layer),this._changeStaticMask(this.owner._isStatic)),this.owner.scene._addRenderObject(this),this._setBelongScene(this.owner.scene)}_onDisable(){this.owner&&(this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this.owner.off(t.Event.LAYERCHANGE,this,this._changeLayer),this.owner.off(t.Event.staticMask,this,this._changeStaticMask)),this.owner.scene._removeRenderObject(this),this._setUnBelongScene(),this.volume=null}_changeMaterialReference(e,t){e&&e._removeReference(),t._addReference()}_getInstanceMaterial(e,t){var a=e.clone();return a.name=a.name+"(Instance)",this._materialsInstance[t]=!0,this._changeMaterialReference(this._sharedMaterials[t],a),this._sharedMaterials[t]=a,a}_isSupportReflection(){let e=this._surportReflectionProbe;this._surportReflectionProbe=!1;for(var t=this._sharedMaterials,a=0,r=t.length;a<r;a++){var i=t[a];this._surportReflectionProbe||(this._surportReflectionProbe=this._surportReflectionProbe||i&&i._shader._supportReflectionProbe)}!e&&this._surportReflectionProbe&&this._addReflectionProbeUpdate()}_onWorldMatNeedChange(e){this.boundsChange=!0,this._addReflectionProbeUpdate(),this._subUniformBufferData&&(this._subUniformBufferData._needUpdate=!0),this._batchRender&&this._batchRender._updateOneRender(this)}_calculateBoundingBox(){throw"BaseRender: must override it."}setRenderbitFlag(e,t){t?this._rendernode.renderbitFlag|=1<<e:this._rendernode.renderbitFlag&=~(1<<e)}_setShaderValue(e,t,a){this._shaderValues.setShaderData(e,t,a)}_addReflectionProbeUpdate(){this._scene&&this._scene._volumeManager.addMotionObject(this)}_applyLightMapParams(){if(this._scene){var e=this._scene.lightmaps,t=this._shaderValues,a=this._lightmapIndex;if(a>=0&&a<e.length){var r=e[a];t.setTexture(RenderableSprite3D.LIGHTMAP,r.lightmapColor),t.addDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),r.lightmapDirection?(t.setTexture(RenderableSprite3D.LIGHTMAP_DIRECTION,r.lightmapDirection),t.addDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)):t.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}else t.removeDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),t.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}}_applyReflection(){this._probReflection&&(this._probReflection._updateMark=ILaya3D.Scene3D._updateMark)&&this._probReflection.applyReflectionShaderData(this._shaderValues)}_setBelongScene(e){this._scene=e,this._onWorldMatNeedChange(1),this._isSupportReflection(),this._batchRender&&this._batchRender._batchOneRender(this),t.Stat.renderNode++}_setUnBelongScene(){t.Stat.renderNode--,this._scene._volumeManager.removeMotionObject(this);let e=this._batchRender;this._batchRender&&this._batchRender._removeOneRender(this),this._batchRender=e,this._scene=null}_needRender(e,t){return!e||e.intersects(this.bounds)}_CullOut(){}_renderUpdate(e,t){}_renderUpdateWithCamera(e,t){}_onDestroy(){this.owner&&this.owner._isRenderNode--,-1!==this._motionIndexList&&this._scene._sceneRenderManager.removeMotionObject(this),this._scene&&this._scene.sceneRenderableManager.removeRenderObject(this);var e=0,t=0;for(e=0,t=this._renderElements.length;e<t;e++)this._renderElements[e].destroy();for(e=0,t=this._sharedMaterials.length;e<t;e++){let t=this._sharedMaterials[e];t&&!t.destroyed&&t._removeReference()}this._renderElements=null,this._sharedMaterials=null,this._bounds=null,this._lightmapScaleOffset=null,this._scene=null,this._rendernode=null,this._shaderValues.destroy(),this._shaderValues=null,this._transform=null,this._batchRender=null,this._subUniformBufferData&&(BaseRender._transLargeUbO.recover(this._subUniformBufferData),this._subUniformBufferData=null)}_cloneTo(e){super._cloneTo(e);let t=e;t.receiveShadow=this.receiveShadow,t.sharedMaterials=this.sharedMaterials,t.reflectionMode=this.reflectionMode,t.castShadow=this.castShadow,t.sortingFudge=this.sortingFudge}}BaseRender._meshVerticeDefine=[],BaseRender._uniqueIDCounter=0,BaseRender._tempBoundBoxCorners=[new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3],BaseRender._defaultLightmapScaleOffset=new t.Vector4(1,1,0,0);class RenderElement{set transform(e){this._renderElementOBJ._transform=e}get transform(){return this._renderElementOBJ._transform}set material(e){e&&(this._material=e,this._renderElementOBJ._materialShaderData=e.shaderData)}get material(){return this._material}set renderSubShader(e){this._subShader=e}get renderSubShader(){return this._subShader}set render(e){this._baseRender=e,this._renderElementOBJ._renderShaderData=e._shaderValues}get render(){return this._baseRender}constructor(){this._canBatch=!1,this._subShaderIndex=0,this.renderType=RenderElement.RENDERTYPE_NORMAL,this._createRenderElementOBJ()}_createRenderElementOBJ(){this._renderElementOBJ=t.LayaGL.renderOBJCreate.createRenderElement()}getInvertFront(){return!!this.transform&&this.transform._isFrontFaceInvert}setTransform(e){this.transform=e}setGeometry(e){this._geometry=e,this._renderElementOBJ._geometry=e._geometryElementOBj}compileShader(e){var a=this._subShader._passes;this._renderElementOBJ._clearShaderInstance();for(var r=0,i=a.length;r<i;r++){var n=a[r];if(n._pipelineMode===e.pipelineMode){var s=RenderElement._compileDefine;e.sceneShaderData?e.sceneShaderData._defineDatas.cloneTo(s):t.Shader3D._configDefineValues.cloneTo(s),e.cameraShaderData&&s.addDefineDatas(e.cameraShaderData._defineDatas),this.render&&s.addDefineDatas(this.render._shaderValues._defineDatas),s.addDefineDatas(this._renderElementOBJ._materialShaderData._defineDatas);var o=n.withCompile(s);this._renderElementOBJ._addShaderInstance(o)}}}_convertSubShader(e,t,a=0){var r=this.material._shader.getSubShaderAt(this._subShaderIndex);if(this.renderSubShader=null,e)if(t){var i=r.getFlag(t);if(!i)return;for(var n=e._subShaders,s=0,o=n.length;s<o;s++){var l=n[s];if(i===l.getFlag(t)){this.renderSubShader=l;break}}if(!this.renderSubShader)return}else this.renderSubShader=e.getSubShaderAt(a);else this.renderSubShader=r}_update(e,t,a,r,i=0){if(this.material){if(this._convertSubShader(a,r,i),!this.renderSubShader)return;var n=e._getRenderQueue(this.material.renderQueue);n._isTransparent,n.addRenderElement(this)}}_renderUpdatePre(e){var t=ILaya3D.Scene3D._updateMark,a=this.transform;e.renderElement=this,!!this.render&&(t!==this.render._sceneUpdateMark||this.renderType!==this.render._updateRenderType)&&(this.render._renderUpdate(e,a),this.render._sceneUpdateMark=t);var r=Camera._updateMark;!!this.render&&(r!==this.render._updateMark||this.renderType!==this.render._updateRenderType)&&(this.render._renderUpdateWithCamera(e,a),this.render._updateMark=r,this.render._updateRenderType=this.renderType);const i=!!this.render&&this.render._subUniformBufferData;i&&i._needUpdate&&BaseRender._transLargeUbO.updateSubData(i),this._renderElementOBJ._isRender=this._geometry._prepareRender(e),this._geometry._updateRenderParams(e),this.compileShader(e._contextOBJ),this._renderElementOBJ._invertFront=this.getInvertFront()}_render(e){this._renderElementOBJ._render(e)}destroy(){this._renderElementOBJ._destroy(),this._renderElementOBJ=null,this._geometry=null,this._baseRender=null,this._material=null,this._baseRender=null,this._subShader=null}}RenderElement.RENDERTYPE_NORMAL=0,RenderElement.RENDERTYPE_STATICBATCH=1,RenderElement.RENDERTYPE_INSTANCEBATCH=2,RenderElement.RENDERTYPE_VERTEXBATCH=3,RenderElement._compileDefine=new t.DefineDatas;class GeometryElement{set bufferState(e){this._geometryElementOBj.bufferState=e}get bufferState(){return this._geometryElementOBj.bufferState}set mode(e){this._geometryElementOBj.mode=e}get mode(){return this._geometryElementOBj.mode}set drawType(e){this._geometryElementOBj.drawType=e}get drawType(){return this._geometryElementOBj.drawType}setDrawArrayParams(e,t){this._geometryElementOBj.setDrawArrayParams(e,t)}setDrawElemenParams(e,t){this._geometryElementOBj.setDrawElemenParams(e,t)}set instanceCount(e){this._geometryElementOBj.instanceCount=e}get instanceCount(){return this._geometryElementOBj.instanceCount}set indexFormat(e){this._geometryElementOBj.indexFormat=e}get indexFormat(){return this._geometryElementOBj.indexFormat}get destroyed(){return this._destroyed}constructor(e,a){this._destroyed=!1,this._geometryElementOBj=t.LayaGL.renderOBJCreate.createRenderGeometry(e,a),this._id=++GeometryElement._uniqueIDCounter}_getType(){throw"GeometryElement:must override it."}_prepareRender(e){return!0}_render(e){t.LayaGL.renderDrawContext.drawGeometryElement(this._geometryElementOBj)}_updateRenderParams(e){throw"GeometryElement:must override it."}destroy(){this._destroyed||(this._destroyed=!0,this._geometryElementOBj.destroy())}clearRenderParams(){this._geometryElementOBj.clearRenderParams()}}GeometryElement._uniqueIDCounter=0,GeometryElement._typeCounter=0;class SkyBox extends GeometryElement{static __init__(){SkyBox.instance=new SkyBox}constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElement);var e=new Float32Array([-1,1,-1,1,1,-1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1]),a=new Uint8Array([0,1,2,2,3,0,4,7,6,6,5,4,0,3,7,7,4,0,1,5,6,6,2,1,3,2,6,6,7,3,0,4,5,5,1,0]),r=t.VertexMesh.getVertexDeclaration("POSITION");let i=t.LayaGL.renderOBJCreate.createVertexBuffer3D(8*r.vertexStride,t.BufferUsage.Static,!1);i.vertexDeclaration=r;let n=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt8,36,t.BufferUsage.Static,!1);i.setData(e.buffer),n.setData(a),this.bufferState=new t.BufferState,this.bufferState.applyState([i],n),this._geometryElementOBj.setDrawElemenParams(36,0),this.indexFormat=t.IndexFormat.UInt8}_updateRenderParams(e){}}class VertexPositionTexture0{static get vertexDeclaration(){return VertexPositionTexture0._vertexDeclaration}static __init__(){VertexPositionTexture0._vertexDeclaration=new t.VertexDeclaration(20,[new t.VertexElement(0,t.VertexElementFormat.Vector3,t.VertexMesh.MESH_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector2,t.VertexMesh.MESH_TEXTURECOORDINATE0)])}get position(){return this._position}get textureCoordinate0(){return this._textureCoordinate0}get vertexDeclaration(){return VertexPositionTexture0._vertexDeclaration}constructor(e,t){this._position=e,this._textureCoordinate0=t}}class SkyDome extends GeometryElement{static __init__(){SkyDome.instance=new SkyDome}get stacks(){return this._stacks}get slices(){return this._slices}constructor(e=48,a=48){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this._stacks=e,this._slices=a;for(var r=VertexPositionTexture0.vertexDeclaration,i=r.vertexStride/4,n=(this._stacks+1)*(this._slices+1),s=3*this._stacks*(this._slices+1)*2,o=new Float32Array(n*i),l=new Uint16Array(s),h=Math.PI/this._stacks,c=2*Math.PI/this._slices,d=0,u=0,_=0,m=0;m<this._stacks+1;m++)for(var f=Math.sin(m*h),S=Math.cos(m*h),g=0;g<this._slices+1;g++){var p=f*Math.sin(g*c),D=f*Math.cos(g*c);o[u+0]=p*SkyDome._radius,o[u+1]=S*SkyDome._radius,o[u+2]=D*SkyDome._radius,o[u+3]=-g/this._slices+.75,o[u+4]=m/this._stacks,u+=i,m!=this._stacks-1&&(l[_++]=d+1,l[_++]=d,l[_++]=d+(this._slices+1),l[_++]=d+(this._slices+1),l[_++]=d,l[_++]=d+this._slices,d++)}let T=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*o.length,t.BufferUsage.Static,!1);T.vertexDeclaration=r;let E=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,l.length,t.BufferUsage.Static,!1);T.setData(o.buffer),E.setData(l);var C=new t.BufferState;C.applyState([T],E),this.bufferState=C,this.indexFormat=t.IndexFormat.UInt16,this._geometryElementOBj.setDrawElemenParams(E.indexCount,0)}_updateRenderParams(e){}}SkyDome._radius=1;class SkyRenderer{static __init__(){SkyRenderer.SUNLIGHTDIRECTION=t.Shader3D.propertyNameToID("u_SunLight_direction"),SkyRenderer.SUNLIGHTDIRCOLOR=t.Shader3D.propertyNameToID("u_SunLight_color");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(SkyRenderer.SUNLIGHTDIRECTION,"u_SunLight_direction"),e.addShaderUniform(SkyRenderer.SUNLIGHTDIRCOLOR,"u_SunLight_color")}get material(){return this._material}set material(e){this._material!==e&&(this._material&&this._material._removeReference(),this._material=e,this._renderElement.material=e,e?(e._addReference(),e.cull=t.CullMode.Off,e.depthTest=t.CompareFunction.LessEqual,e.depthWrite=!1,e.stencilWrite=!1,this._renderElement.renderSubShader=this._material._shader.getSubShaderAt(0)):this._renderElement.renderSubShader=null)}get mesh(){return this._mesh}set mesh(e){this._mesh!==e&&(this._mesh=e,this._renderElement.setGeometry(this._mesh))}get meshType(){return this.mesh==SkyBox.instance?"box":this.mesh==SkyDome.instance?"dome":""}set meshType(e){this.mesh="dome"==e?SkyDome.instance:SkyBox.instance}constructor(){this._renderElement=new RenderElement,this.mesh=SkyDome.instance,this._renderData=new BaseRender,this._renderElement.render=this._renderData}_isAvailable(){return!(!this._material||!this._mesh)}_render(e){if(this._material&&this._mesh){var a=e.camera,r=e.scene,i=SkyRenderer._tempMatrix1;a.orthographic&&t.Matrix4x4.createPerspective(a.fieldOfView,a.aspectRatio,a.nearPlane,a.farPlane,i),this._renderData._shaderValues.setColor(SkyRenderer.SUNLIGHTDIRCOLOR,r._sunColor),this._renderData._shaderValues.setVector3(SkyRenderer.SUNLIGHTDIRECTION,r._sundir);var n=SkyRenderer._tempMatrix0;a.viewMatrix.cloneTo(n),a.projectionMatrix.cloneTo(i),n.setTranslationVector(t.Vector3.ZERO);var s=1/Math.tan(3.1416*a.fieldOfView/180*.5);i.elements[0]=s/a.aspectRatio,i.elements[5]=s,i.elements[10]=-.999999,i.elements[11]=-1,i.elements[14]=-0,a.isWebXR?a._applyViewProject(e,n,a.projectionMatrix):a._applyViewProject(e,n,i),e._contextOBJ.applyContext(Camera._updateMark),e.drawRenderElement(this._renderElement),a._applyViewProject(e,a.viewMatrix,a.projectionMatrix)}}destroy(){this._material&&(this._material._removeReference(),this._material=null),this._renderData.destroy(),this._renderData._onDestroy(),this._renderElement.destroy()}}SkyRenderer._tempMatrix0=new t.Matrix4x4,SkyRenderer._tempMatrix1=new t.Matrix4x4;class BaseCamera extends Sprite3D{static shaderValueInit(){BaseCamera.SHADERDEFINE_DEPTH=t.Shader3D.getDefineByName("DEPTHMAP"),BaseCamera.SHADERDEFINE_DEPTHNORMALS=t.Shader3D.getDefineByName("DEPTHNORMALSMAP"),BaseCamera.SHADERDEFINE_ORTHOGRAPHIC=t.Shader3D.getDefineByName("CAMERAORTHOGRAPHIC"),BaseCamera.SHADERDEFINE_FXAA=t.Shader3D.getDefineByName("FXAA");let e=BaseCamera.cameraUniformMap=t.LayaGL.renderOBJCreate.createGlobalUniformMap("BaseCamera");BaseCamera.CAMERAPOS=t.Shader3D.propertyNameToID("u_CameraPos"),BaseCamera.VIEWMATRIX=t.Shader3D.propertyNameToID("u_View"),BaseCamera.VIEWPROJECTMATRIX=t.Shader3D.propertyNameToID("u_ViewProjection"),BaseCamera.PROJECTMATRIX=t.Shader3D.propertyNameToID("u_Projection"),BaseCamera.CAMERADIRECTION=t.Shader3D.propertyNameToID("u_CameraDirection"),BaseCamera.CAMERAUP=t.Shader3D.propertyNameToID("u_CameraUp"),BaseCamera.VIEWPORT=t.Shader3D.propertyNameToID("u_Viewport"),BaseCamera.PROJECTION_PARAMS=t.Shader3D.propertyNameToID("u_ProjectionParams"),BaseCamera.DEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthTexture"),BaseCamera.DEPTHNORMALSTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthNormalsTexture"),BaseCamera.OPAQUETEXTURE=t.Shader3D.propertyNameToID("u_CameraOpaqueTexture"),BaseCamera.DEPTHZBUFFERPARAMS=t.Shader3D.propertyNameToID("u_ZBufferParams"),BaseCamera.CAMERAUNIFORMBLOCK=t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_CAMERA),e.addShaderUniform(BaseCamera.CAMERAPOS,"u_CameraPos"),e.addShaderUniform(BaseCamera.VIEWMATRIX,"u_View"),e.addShaderUniform(BaseCamera.PROJECTMATRIX,"u_Projection"),e.addShaderUniform(BaseCamera.VIEWPROJECTMATRIX,"u_ViewProjection"),e.addShaderUniform(BaseCamera.CAMERADIRECTION,"u_CameraDirection"),e.addShaderUniform(BaseCamera.CAMERAUP,"u_CameraUp"),e.addShaderUniform(BaseCamera.VIEWPORT,"u_Viewport"),e.addShaderUniform(BaseCamera.PROJECTION_PARAMS,"u_ProjectionParams"),e.addShaderUniform(BaseCamera.DEPTHTEXTURE,"u_CameraDepthTexture"),e.addShaderUniform(BaseCamera.DEPTHNORMALSTEXTURE,"u_CameraDepthNormalsTexture"),e.addShaderUniform(BaseCamera.OPAQUETEXTURE,"u_CameraOpaqueTexture"),e.addShaderUniform(BaseCamera.DEPTHZBUFFERPARAMS,"u_ZBufferParams"),e.addShaderUniform(BaseCamera.CAMERAUNIFORMBLOCK,t.UniformBufferObject.UBONAME_CAMERA)}static createCameraUniformBlock(){if(!BaseCamera.CameraUBOData){let e=new Map;e.set("u_View",t.UniformBufferParamsType.Matrix4x4),e.set("u_Projection",t.UniformBufferParamsType.Matrix4x4),e.set("u_ViewProjection",t.UniformBufferParamsType.Matrix4x4),e.set("u_ProjectionParams",t.UniformBufferParamsType.Vector4),e.set("u_Viewport",t.UniformBufferParamsType.Vector4),e.set("u_CameraDirection",t.UniformBufferParamsType.Vector3),e.set("u_CameraUp",t.UniformBufferParamsType.Vector3),e.set("u_CameraPos",t.UniformBufferParamsType.Vector3);let a=new Map;e.forEach(((e,r)=>{a.set(t.Shader3D.propertyNameToID(r),e)})),BaseCamera.CameraUBOData=new t.UnifromBufferData(a)}return BaseCamera.CameraUBOData}static __init__(){BaseCamera.shaderValueInit()}get clearColor(){return this._clearColor}set clearColor(e){this._clearColor=e,e.toLinear(this._linearClearColor)}get skyRenderer(){return this._skyRenderer}get fieldOfView(){return this._fieldOfView}set fieldOfView(e){this._fieldOfView=e,this._calculateProjectionMatrix(),this._caculateMaxLocalYRange()}get maxlocalYDistance(){return this._yrange}get nearPlane(){return this._nearPlane}set nearPlane(e){this._nearPlane=e,this._calculateProjectionMatrix()}get farPlane(){return this._farPlane}set farPlane(e){this._farPlane=e,this._calculateProjectionMatrix(),this._caculateMaxLocalYRange()}get orthographic(){return this._orthographic}set orthographic(e){this._orthographic=e,this._calculateProjectionMatrix(),e?this._shaderValues.addDefine(BaseCamera.SHADERDEFINE_ORTHOGRAPHIC):this._shaderValues.removeDefine(BaseCamera.SHADERDEFINE_ORTHOGRAPHIC)}get orthographicVerticalSize(){return this._orthographicVerticalSize}set orthographicVerticalSize(e){this._orthographicVerticalSize=e,this._calculateProjectionMatrix()}get cullingMask(){return this._cullingMask}set cullingMask(e){this._cullingMask=e}get renderingOrder(){return this._renderingOrder}set renderingOrder(e){this._renderingOrder=e,this._sortCamerasByRenderingOrder()}constructor(e=.3,a=1e3){super(),this._skyRenderer=new SkyRenderer,this._forward=new t.Vector3,this._up=new t.Vector3,this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(null),this._linearClearColor=new t.Color,this.clearColor=new t.Color(100/255,149/255,237/255,1),this._fieldOfView=60,this._useUserProjectionMatrix=!1,this._orthographicVerticalSize=10,this.renderingOrder=0,this._nearPlane=e,this._farPlane=a,this.cullingMask=2147483647,this.staticMask=4294967295,this.useOcclusionCulling=!0,this._renderEngine=t.LayaGL.renderEngine,this._orthographic=!1,t.Config3D._uniformBlock&&(this._cameraUniformUBO=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_CAMERA,0),this._cameraUniformData=BaseCamera.createCameraUniformBlock(),this._cameraUniformUBO||(this._cameraUniformUBO=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_CAMERA,t.BufferUsage.Dynamic,this._cameraUniformData.getbyteLength(),!1)),this._shaderValues._addCheckUBO(t.UniformBufferObject.UBONAME_CAMERA,this._cameraUniformUBO,this._cameraUniformData),this._shaderValues.setUniformBuffer(BaseCamera.CAMERAUNIFORMBLOCK,this._cameraUniformUBO))}_caculateMaxLocalYRange(){let e=3.1416*this.fieldOfView/180/2,t=this.farPlane;this._yrange=Math.tan(e)*t*2}_calculateProjectionMatrix(){}_onScreenSizeChanged(){this._calculateProjectionMatrix()}_create(){return new BaseCamera}_sortCamerasByRenderingOrder(){if(this.displayedInStage)for(var e=this.scene._cameraPool,t=e.length-1,a=0;a<t;a++)if(e[a].renderingOrder>e[t].renderingOrder){var r=e[a];e[a]=e[t],e[t]=r}}_prepareCameraToRender(){this.transform.getForward(this._forward),this.transform.getUp(this._up),this._shaderValues.setVector3(BaseCamera.CAMERAPOS,this.transform.position),this._shaderValues.setVector3(BaseCamera.CAMERADIRECTION,this._forward),this._shaderValues.setVector3(BaseCamera.CAMERAUP,this._up)}render(e=null,t=null){}addLayer(e){this.cullingMask|=Math.pow(2,e)}removeLayer(e){this.cullingMask&=~Math.pow(2,e)}addAllLayers(){this.cullingMask=2147483647}removeAllLayers(){this.cullingMask=0}resetProjectionMatrix(){this._useUserProjectionMatrix=!1,this._calculateProjectionMatrix()}_onActive(){this._scene._addCamera(this),super._onActive()}_onInActive(){this._scene._removeCamera(this),super._onInActive()}_parse(e,a){super._parse(e,a),this.orthographic=e.orthographic,void 0!==e.orthographicVerticalSize&&(this.orthographicVerticalSize=e.orthographicVerticalSize),void 0!==e.fieldOfView&&(this.fieldOfView=e.fieldOfView),this.nearPlane=e.nearPlane,this.farPlane=e.farPlane;var r=e.clearColor;this.clearColor=new t.Color(r[0],r[1],r[2],r[3]);var i=e.skyboxMaterial;i&&(this._skyRenderer.material=t.Loader.getRes(i.path))}destroy(e=!0){this._skyRenderer.destroy(),this._skyRenderer=null,t.ILaya.stage.off(t.Event.RESIZE,this,this._onScreenSizeChanged),super.destroy(e)}}BaseCamera.RENDERINGTYPE_SHADERDEFINE_FXAA="FXAA",BaseCamera.RENDERINGTYPE_DEFERREDLIGHTING="DEFERREDLIGHTING",BaseCamera.RENDERINGTYPE_FORWARDRENDERING="FORWARDRENDERING",BaseCamera._invertYScaleMatrix=new t.Matrix4x4(1,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,1),BaseCamera._invertYProjectionMatrix=new t.Matrix4x4,BaseCamera._invertYProjectionViewMatrix=new t.Matrix4x4,BaseCamera._tempMatrix4x40=new t.Matrix4x4,e.ShadowMode=void 0,(u=e.ShadowMode||(e.ShadowMode={}))[u.None=0]="None",u[u.Hard=1]="Hard",u[u.SoftLow=2]="SoftLow",u[u.SoftHigh=3]="SoftHigh",e.ShadowCascadesMode=void 0,(_=e.ShadowCascadesMode||(e.ShadowCascadesMode={}))[_.NoCascades=0]="NoCascades",_[_.TwoCascades=1]="TwoCascades",_[_.FourCascades=2]="FourCascades",e.LightType=void 0,(m=e.LightType||(e.LightType={}))[m.Directional=0]="Directional",m[m.Spot=1]="Spot",m[m.Point=2]="Point",m[m.Area=3]="Area",e.LightMode=void 0,(f=e.LightMode||(e.LightMode={}))[f.mix=0]="mix",f[f.realTime=1]="realTime",f[f.bakeOnly=2]="bakeOnly";class Light extends t.Component{get intensity(){return this._intensity}set intensity(e){this._intensity=e}get shadowMode(){return this._shadowMode}set shadowMode(e){this._shadowMode=e}get shadowDistance(){return this._shadowDistance}set shadowDistance(e){this._shadowDistance=e}get shadowResolution(){return this._shadowResolution}set shadowResolution(e){this._shadowResolution=e}get shadowDepthBias(){return this._shadowDepthBias}set shadowDepthBias(e){this._shadowDepthBias=e}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e}get shadowStrength(){return this._shadowStrength}set shadowStrength(e){this._shadowStrength=e}get shadowNearPlane(){return this._shadowNearPlane}set shadowNearPlane(e){this._shadowNearPlane=e}get lightmapBakedType(){return this._lightmapBakedType}set lightmapBakedType(t){let a=this._lightmapBakedType;this._lightmapBakedType!==t&&(this._lightmapBakedType=t,this._enabled&&(t==e.LightMode.bakeOnly?this._removeFromScene():a==e.LightMode.bakeOnly&&this._addToScene()))}get lightWorldMatrix(){var e=this.owner.transform.position,a=this.owner.transform.rotation;return t.Matrix4x4.createAffineTransformation(e,a,t.Vector3.ONE,this._lightWoldMatrix),this._lightWoldMatrix}constructor(){super(),this._shadowMode=e.ShadowMode.None,this._isAlternate=!1,this._shadowResolution=2048,this._shadowDistance=50,this._shadowDepthBias=1,this._shadowNormalBias=1,this._shadowNearPlane=.1,this._shadowStrength=1,this._lightWoldMatrix=new t.Matrix4x4,this.runInEditor=!0,this._intensity=1,this._intensityColor=new t.Vector3,this.color=new t.Color(1,1,1,1),this._lightmapBakedType=e.LightMode.realTime}_parse(e,t){super._parse(e,t);var a=e.color;this.color.r=a[0],this.color.g=a[1],this.color.b=a[2],this.intensity=e.intensity,this.lightmapBakedType=e.lightmapBakedType}_cloneTo(e){super._cloneTo(e);var t=e;t.color=this.color.clone(),t.intensity=this.intensity,t.lightmapBakedType=this.lightmapBakedType}_addToScene(){var e=this.owner.scene,a=t.Config3D.maxLightCount;e._lightCount<a?(e._lightCount++,this._addToLightQueue(),this._isAlternate=!1):(e._alternateLights.add(this),this._isAlternate=!0,console.warn("LightSprite:light count has large than maxLightCount,the latest added light will be ignore."))}_removeFromScene(){var e=this.owner._scene;if(e)if(this._isAlternate)e._alternateLights.remove(this);else if(e._lightCount--,this._removeFromLightQueue(),e._alternateLights._length>0){var t=e._alternateLights.shift();t._addToLightQueue(),t._isAlternate=!1,e._lightCount++}}_addToLightQueue(){}_removeFromLightQueue(){}_onEnable(){this.lightmapBakedType!==e.LightMode.bakeOnly&&this._addToScene()}_onDisable(){this.lightmapBakedType!==e.LightMode.bakeOnly&&this._removeFromScene()}_onDestroy(){}_create(){return new Light}}!function(e){e[e.Near=0]="Near",e[e.Far=1]="Far",e[e.Left=2]="Left",e[e.Right=3]="Right",e[e.Bottom=4]="Bottom",e[e.Top=5]="Top"}(S||(S={})),e.ShadowMapFormat=void 0,(g=e.ShadowMapFormat||(e.ShadowMapFormat={}))[g.bit16=0]="bit16",g[g.bit24_8=1]="bit24_8",g[g.bit32=2]="bit32";class ShadowUtils{static init(){ShadowUtils._adjustNearPlane=new Plane(new t.Vector3,0),ShadowUtils._adjustFarPlane=new Plane(new t.Vector3,0)}static supportShadow(){return t.LayaGL.renderEngine.getCapable(t.RenderCapable.RenderTextureFormat_Depth)}static getTemporaryShadowTexture(a,r,i){let n=t.RenderTargetFormat.DEPTH_16;switch(i){case e.ShadowMapFormat.bit16:n=t.RenderTargetFormat.DEPTH_16;break;case e.ShadowMapFormat.bit24_8:n=t.RenderTargetFormat.DEPTHSTENCIL_24_8;break;case e.ShadowMapFormat.bit32:n=t.RenderTargetFormat.DEPTH_32}var s=t.RenderTexture.createFromPool(a,r,n,t.RenderTargetFormat.None,!1,1);return s.compareMode=t.TextureCompareMode.LESS,s.filterMode=t.FilterMode.Bilinear,s.wrapModeU=t.WrapMode.Clamp,s.wrapModeV=t.WrapMode.Clamp,s}static getShadowBias(a,r,i,n){var s;a._lightType==e.LightType.Directional?s=2/r.elements[0]:a._lightType==e.LightType.Spot?s=Math.tan(.5*a.spotAngle*t.MathUtils3D.Deg2Rad)*a.range:(console.warn("ShadowUtils:Only spot and directional shadow casters are supported now."),s=0);var o=s/i,l=-a._shadowDepthBias*o,h=-a._shadowNormalBias*o;if(a.shadowMode==e.ShadowMode.SoftHigh){const e=2.5;l*=e,h*=e}n.setValue(l,h,0,0)}static getCameraFrustumPlanes(e,t){BoundFrustum.getPlanesFromMatrix(e,t[S.Near],t[S.Far],t[S.Left],t[S.Right],t[S.Top],t[S.Bottom])}static getFarWithRadius(e,t){return Math.sqrt(e*e/t)}static getCascadesSplitDistance(t,a,r,i,n,s,o,l){l[0]=r;var h=i-r,c=Math.tan(.5*n),d=1+c*c*(s*s+1);switch(o){case e.ShadowCascadesMode.NoCascades:l[1]=ShadowUtils.getFarWithRadius(i,d);break;case e.ShadowCascadesMode.TwoCascades:l[1]=ShadowUtils.getFarWithRadius(r+h*t,d),l[2]=ShadowUtils.getFarWithRadius(i,d);break;case e.ShadowCascadesMode.FourCascades:l[1]=ShadowUtils.getFarWithRadius(r+h*a.x,d),l[2]=ShadowUtils.getFarWithRadius(r+h*a.y,d),l[3]=ShadowUtils.getFarWithRadius(r+h*a.z,d),l[4]=ShadowUtils.getFarWithRadius(i,d)}}static applySliceTransform(e,t,a,r,i){var n=ShadowUtils._tempMatrix0.elements,s=1/t,o=1/a;n[0]=e.resolution*s,n[5]=e.resolution*o,n[12]=e.offsetX*s,n[13]=e.offsetY*o,n[1]=n[2]=n[2]=n[4]=n[6]=n[7]=n[8]=n[9]=n[11]=n[14]=0,n[10]=n[15]=1;var l=16*r;Utils3D._mulMatrixArray(n,i,l,i,l)}static getDirectionLightShadowCullPlanes(a,r,i,n,s,o){var l=ShadowUtils._frustumCorners,h=ShadowUtils._backPlaneFaces,c=ShadowUtils._frustumPlaneNeighbors,d=ShadowUtils._frustumTwoPlaneCorners,u=ShadowUtils._edgePlanePoint2,_=o.cullPlanes,m=a[S.Near],f=a[S.Far],g=a[S.Left],p=a[S.Right],D=a[S.Bottom],T=a[S.Top],E=i[r]-n,C=ShadowUtils._adjustNearPlane,A=ShadowUtils._adjustFarPlane;C.normal=m.normal,A.normal=f.normal,C.distance=m.distance-E,A.distance=Math.min(-m.distance+o.sphereCenterZ+o.splitBoundSphere.radius,f.distance),BoundFrustum.get3PlaneInterPoint(C,D,p,l[e.FrustumCorner.nearBottomRight]),BoundFrustum.get3PlaneInterPoint(C,T,p,l[e.FrustumCorner.nearTopRight]),BoundFrustum.get3PlaneInterPoint(C,T,g,l[e.FrustumCorner.nearTopLeft]),BoundFrustum.get3PlaneInterPoint(C,D,g,l[e.FrustumCorner.nearBottomLeft]),BoundFrustum.get3PlaneInterPoint(A,D,p,l[e.FrustumCorner.FarBottomRight]),BoundFrustum.get3PlaneInterPoint(A,T,p,l[e.FrustumCorner.FarTopRight]),BoundFrustum.get3PlaneInterPoint(A,T,g,l[e.FrustumCorner.FarTopLeft]),BoundFrustum.get3PlaneInterPoint(A,D,g,l[e.FrustumCorner.FarBottomLeft]);for(var R=0,x=0;x<6;x++){var M;switch(x){case S.Near:M=C;break;case S.Far:M=A;break;default:M=a[x]}t.Vector3.dot(M.normal,s)<0&&(M.cloneTo(_[R]),h[R]=x,R++)}var y=R;for(x=0;x<R;x++)for(var I=h[x],v=c[I],L=0;L<4;L++){for(var b=v[L],P=!0,O=0;O<R;O++)if(b==h[O]){P=!1;break}if(P){var B=d[I][b],V=l[B[0]],w=l[B[1]];t.Vector3.add(V,s,u),Plane.createPlaneBy3P(V,w,u,_[y++])}}o.cullPlaneCount=y}static getBoundSphereByFrustum(e,a,r,i,n,s,o){var l,h,c=Math.sqrt(1+i*i)*Math.tan(r/2),d=c*c,u=a-e,_=a+e;d>u/_?(l=a,h=a*c):(l=.5*_*(1+d),h=.5*Math.sqrt(u*u+2*(a*a+e*e)*d+_*_*d*d));var m=o.center;return o.radius=h,t.Vector3.scale(s,l,m),t.Vector3.add(n,m,m),o.center=m,l}static getMaxTileResolutionInAtlas(e,t,a){for(var r=Math.min(e,t),i=Math.floor(e/r)*Math.floor(t/r);i<a;)r=Math.floor(r>>1),i=Math.floor(e/r)*Math.floor(t/r);return r}static getDirectionalLightMatrices(e,a,r,i,n,s,o,l){var h=o.splitBoundSphere,c=h.center,d=h.radius,u=s/2,_=d*u/(u-ShadowUtils.atlasBorderSize),m=2*_,f=s/m,S=m/s,g=Math.ceil(t.Vector3.dot(c,e)*f)*S,p=Math.ceil(t.Vector3.dot(c,a)*f)*S,D=t.Vector3.dot(c,r);c.x=e.x*g+a.x*p+r.x*D,c.y=e.y*g+a.y*p+r.y*D,c.z=e.z*g+a.z*p+r.z*D,h.center=c;var T=o.position,E=o.viewMatrix,C=o.projectionMatrix,A=o.viewProjectMatrix;o.resolution=s,o.offsetX=i%2*s,o.offsetY=Math.floor(i/2)*s,t.Vector3.scale(r,d+n,T),t.Vector3.subtract(c,T,T),t.Matrix4x4.createLookAt(T,c,e,E),t.Matrix4x4.createOrthoOffCenter(-_,_,-_,_,0,2*d+n,C),t.Matrix4x4.multiply(C,E,A),Utils3D._mulMatrixArray(ShadowUtils._shadowMapScaleOffsetMatrix.elements,A.elements,0,l,16*i)}static getSpotLightShadowData(e,a,r,i,n,s){var o=e.position=a.owner.transform.position;e.resolution=r,s.setValue(1/r,1/r,r,r),e.offsetX=0,e.offsetY=0;var l=a.lightWorldMatrix,h=e.viewMatrix,c=e.projectionMatrix,d=e.viewProjectMatrix,u=e.cameraCullInfo.boundFrustum;l.invert(h),t.Matrix4x4.createPerspective(3.1416*a.spotAngle/180,1,.1,a.range,c),i.y=a.shadowStrength,t.Matrix4x4.multiply(c,h,d),u.matrix=d,d.cloneTo(n),e.cameraCullInfo.position=o}static prepareShadowReceiverShaderValues(e,t,a,r,i,n,s,o,l){if(n.setValue(1/t,1/a,t,a),s.setValue(e._shadowStrength,0,0,0),i>1){const e=16;for(var h=i*e,c=4*e;h<c;h++)o[h]=0;for(h=0;h<i;h++){var d=r[h].splitBoundSphere,u=d.center,_=d.radius,m=4*h;l[m]=u.x,l[m+1]=u.y,l[m+2]=u.z,l[m+3]=_*_}const t=4;for(h=i*t,c=4*t;h<c;h++)l[h]=0}}}ShadowUtils._tempMatrix0=new t.Matrix4x4,ShadowUtils._shadowMapScaleOffsetMatrix=new t.Matrix4x4(.5,0,0,0,0,.5,0,0,0,0,1,0,.5,.5,0,1),ShadowUtils._frustumCorners=[new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3],ShadowUtils._backPlaneFaces=new Array(5),ShadowUtils._edgePlanePoint2=new t.Vector3,ShadowUtils._frustumPlaneNeighbors=[[S.Left,S.Right,S.Top,S.Bottom],[S.Left,S.Right,S.Top,S.Bottom],[S.Near,S.Far,S.Top,S.Bottom],[S.Near,S.Far,S.Top,S.Bottom],[S.Near,S.Far,S.Left,S.Right],[S.Near,S.Far,S.Left,S.Right]],ShadowUtils._frustumTwoPlaneCorners=[[[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.nearBottomLeft,e.FrustumCorner.nearTopLeft],[e.FrustumCorner.nearTopRight,e.FrustumCorner.nearBottomRight],[e.FrustumCorner.nearBottomRight,e.FrustumCorner.nearBottomLeft],[e.FrustumCorner.nearTopLeft,e.FrustumCorner.nearTopRight]],[[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.FarTopLeft,e.FrustumCorner.FarBottomLeft],[e.FrustumCorner.FarBottomRight,e.FrustumCorner.FarTopRight],[e.FrustumCorner.FarBottomLeft,e.FrustumCorner.FarBottomRight],[e.FrustumCorner.FarTopRight,e.FrustumCorner.FarTopLeft]],[[e.FrustumCorner.nearTopLeft,e.FrustumCorner.nearBottomLeft],[e.FrustumCorner.FarBottomLeft,e.FrustumCorner.FarTopLeft],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.nearBottomLeft,e.FrustumCorner.FarBottomLeft],[e.FrustumCorner.FarTopLeft,e.FrustumCorner.nearTopLeft]],[[e.FrustumCorner.nearBottomRight,e.FrustumCorner.nearTopRight],[e.FrustumCorner.FarTopRight,e.FrustumCorner.FarBottomRight],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.FarBottomRight,e.FrustumCorner.nearBottomRight],[e.FrustumCorner.nearTopRight,e.FrustumCorner.FarTopRight]],[[e.FrustumCorner.nearBottomLeft,e.FrustumCorner.nearBottomRight],[e.FrustumCorner.FarBottomRight,e.FrustumCorner.FarBottomLeft],[e.FrustumCorner.FarBottomLeft,e.FrustumCorner.nearBottomLeft],[e.FrustumCorner.nearBottomRight,e.FrustumCorner.FarBottomRight],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown]],[[e.FrustumCorner.nearTopRight,e.FrustumCorner.nearTopLeft],[e.FrustumCorner.FarTopLeft,e.FrustumCorner.FarTopRight],[e.FrustumCorner.nearTopLeft,e.FrustumCorner.FarTopLeft],[e.FrustumCorner.FarTopRight,e.FrustumCorner.nearTopRight],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown]]],ShadowUtils.atlasBorderSize=4;class RenderContext3D{static __init__(){RenderContext3D._instance=new RenderContext3D}get destTarget(){return this._contextOBJ.destTarget}set destTarget(e){this._contextOBJ.destTarget=e}get viewport(){return this._contextOBJ.viewPort}set viewport(e){e.cloneTo(this._contextOBJ.viewPort)}get scissor(){return this._contextOBJ.scissor}set scissor(e){e.cloneTo(this._contextOBJ.scissor)}get invertY(){return this._contextOBJ.invertY}set invertY(e){this._contextOBJ.invertY=e}get pipelineMode(){return this._contextOBJ.pipelineMode}set pipelineMode(e){this._contextOBJ.pipelineMode=e}get cameraShaderValue(){return this._contextOBJ.cameraShaderData}set cameraShaderValue(e){this._contextOBJ.cameraShaderData=e}set scene(e){e?(this._contextOBJ.sceneID=e._id,this._contextOBJ.sceneShaderData=e._shaderValues,this._scene=e):(this._contextOBJ.sceneID=-1,this._contextOBJ.sceneShaderData=null,this._scene=null)}get scene(){return this._scene}changeViewport(e,t,a,r){Viewport._tempViewport.set(e,t,a,r),this.viewport=Viewport._tempViewport}changeScissor(e,a,r,i){t.Vector4.tempVec4.setValue(e,a,r,i),this.scissor=t.Vector4.tempVec4}drawRenderElement(e){e.material&&e._convertSubShader(this.customShader,this.replaceTag),e.renderSubShader&&(e._renderUpdatePre(this),this._contextOBJ.drawRenderElement(e._renderElementOBJ))}constructor(){this.configPipeLineMode="Forward",this._contextOBJ=t.LayaGL.renderOBJCreate.createRenderContext3D()}}class ScreenQuad extends GeometryElement{static __init__(){ScreenQuad._vertexDeclaration=new t.VertexDeclaration(16,[new t.VertexElement(0,t.VertexElementFormat.Vector4,ScreenQuad.SCREENQUAD_POSITION_UV)]),ScreenQuad.instance=new ScreenQuad}constructor(){super(t.MeshTopology.TriangleStrip,t.DrawType.DrawArray),this._bufferState=new t.BufferState,this._bufferStateInvertUV=new t.BufferState,this.setDrawArrayParams(0,4),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(64,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=ScreenQuad._vertexDeclaration,this._vertexBuffer.setData(ScreenQuad._vertices.buffer),this._bufferState.applyState([this._vertexBuffer],null),this._vertexBufferInvertUV=t.LayaGL.renderOBJCreate.createVertexBuffer3D(64,t.BufferUsage.Static,!1),this._vertexBufferInvertUV.vertexDeclaration=ScreenQuad._vertexDeclaration,this._vertexBufferInvertUV.setData(ScreenQuad._verticesInvertUV.buffer),this._bufferStateInvertUV.applyState([this._vertexBufferInvertUV],null)}set invertY(e){this.bufferState=e?this._bufferStateInvertUV:this._bufferState}_updateRenderParams(e){}destroy(){super.destroy(),this._bufferState.destroy(),this._vertexBuffer.destroy(),this._bufferStateInvertUV.destroy(),this._vertexBufferInvertUV.destroy()}}ScreenQuad.SCREENQUAD_POSITION_UV=0,ScreenQuad._vertices=new Float32Array([1,1,1,1,1,-1,1,0,-1,1,0,1,-1,-1,0,0]),ScreenQuad._verticesInvertUV=new Float32Array([1,1,1,0,1,-1,1,1,-1,1,0,0,-1,-1,0,1]);class Command{static __init__(){Command._screenShaderData=t.LayaGL.renderOBJCreate.createShaderData(null),Command._screenShader=t.Shader3D.find("BlitScreen"),Command.SCREENTEXTURE_ID=t.Shader3D.propertyNameToID(Command.SCREENTEXTURE_NAME),Command.SCREENTEXTUREOFFSETSCALE_ID=t.Shader3D.propertyNameToID(Command.SCREENTEXTUREOFFSETSCALE_NAME),Command.MAINTEXTURE_TEXELSIZE_ID=t.Shader3D.propertyNameToID(Command.MAINTEXTURE_TEXELSIZE_NAME)}constructor(){this._commandBuffer=null}run(){}recover(){this._commandBuffer=null}setContext(e){this._context=e}destroy(){this._commandBuffer=null,this._context=null}}Command.SCREENTEXTURE_NAME="u_MainTex",Command.SCREENTEXTUREOFFSETSCALE_NAME="u_OffsetScale",Command.MAINTEXTURE_TEXELSIZE_NAME="u_MainTex_TexelSize";class BlitScreenQuadCMD extends Command{static create(e,t,a=null,r=null,i=null,n=0,s=BlitScreenQuadCMD._SCREENTYPE_QUAD,o=null){var l;return(l=BlitScreenQuadCMD._pool.length>0?BlitScreenQuadCMD._pool.pop():new BlitScreenQuadCMD)._source=e,l._dest=t,l._offsetScale=a,l.setshader(r,n,i),l._commandBuffer=o,l}constructor(){super(),this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,this._subShader=0,this._sourceTexelSize=new t.Vector4,this._transform3D=t.LayaGL.renderOBJCreate.createTransform(null),this._renderElement=new RenderElement,this._renderElement.setTransform(this._transform3D),this._renderElement.setGeometry(ScreenQuad.instance)}set shaderData(e){this._shaderData=e||Command._screenShaderData,this._renderElement._renderElementOBJ._materialShaderData=this._shaderData}setshader(e,t,a){this._shader=e||Command._screenShader,this._subShader=t||0,this.shaderData=a,this._renderElement.renderSubShader=this._shader.getSubShaderAt(this._subShader),this._renderElement._subShaderIndex=t}run(){this._commandBuffer&&this.setContext(this._commandBuffer._context);var e,a=this._context;if(this._source)e=this._source;else{if(!this._commandBuffer._camera._internalRenderTexture)throw"camera internalRenderTexture is null,please set camera enableBuiltInRenderTexture";e=this._commandBuffer._camera._internalRenderTexture}var r=this._shaderData,i=this._dest?this._dest:this._commandBuffer._camera._internalRenderTexture;if(i)a.changeViewport(0,0,i.width,i.height),a.changeScissor(0,0,i.width,i.height);else{let e=this._commandBuffer._camera.viewport,t=e.height,r=RenderContext3D.clientHeight-e.y-t;a.changeViewport(e.x,r,e.width,t),a.changeScissor(e.x,r,e.width,t)}r.setTexture(Command.SCREENTEXTURE_ID,e),r.setVector(Command.SCREENTEXTUREOFFSETSCALE_ID,this._offsetScale||BlitScreenQuadCMD._defaultOffsetScale),this._sourceTexelSize.setValue(1/e.width,1/e.height,e.width,e.height),r.setVector(Command.MAINTEXTURE_TEXELSIZE_ID,this._sourceTexelSize),a.destTarget=i,a._contextOBJ.applyContext(Camera._updateMark),ScreenQuad.instance.invertY=a.invertY,a.drawRenderElement(this._renderElement),t.Stat.blitDrawCall++}recover(){BlitScreenQuadCMD._pool.push(this),this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,super.recover()}destroy(){this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,this._renderElement.destroy()}}BlitScreenQuadCMD._SCREENTYPE_QUAD=0,BlitScreenQuadCMD._SCREENTYPE_TRIANGLE=1,BlitScreenQuadCMD._pool=[],BlitScreenQuadCMD._defaultOffsetScale=new t.Vector4(0,0,1,1);class SetRenderTargetCMD extends Command{constructor(){super(...arguments),this._renderTexture=null}static create(e){var t;return(t=SetRenderTargetCMD._pool.length>0?SetRenderTargetCMD._pool.pop():new SetRenderTargetCMD)._renderTexture=e,t}run(){t.RenderTexture.currentActive&&t.RenderTexture.currentActive._end(),RenderContext3D._instance.destTarget=this._renderTexture,RenderContext3D._instance.changeScissor(0,0,this._renderTexture.width,this._renderTexture.height),RenderContext3D._instance.changeViewport(0,0,this._renderTexture.width,this._renderTexture.height),RenderContext3D._instance._contextOBJ.applyContext(Camera._updateMark)}recover(){SetRenderTargetCMD._pool.push(this),this._renderTexture=null}}SetRenderTargetCMD._pool=[];class SetShaderDataCMD extends Command{constructor(){super(...arguments),this._shaderData=null,this._nameID=0,this._value=null,this._dataType=-1}static create(e,t,a,r,i){var n;return(n=SetShaderDataCMD._pool.length>0?SetShaderDataCMD._pool.pop():new SetShaderDataCMD)._shaderData=e,n._nameID=t,n._value=a.clone?a.clone():a,n._dataType=r,n._commandBuffer=i,n}run(){switch(this._dataType){case t.ShaderDataType.Int:this._shaderData.setInt(this._nameID,this._value);break;case t.ShaderDataType.Float:this._shaderData.setNumber(this._nameID,this._value);break;case t.ShaderDataType.Bool:this._shaderData.setBool(this._nameID,this._value);break;case t.ShaderDataType.Matrix4x4:this._shaderData.setMatrix4x4(this._nameID,this._value);break;case t.ShaderDataType.Color:this._shaderData.setColor(this._nameID,this._value);break;case t.ShaderDataType.Texture2D:this._shaderData.setTexture(this._nameID,this._value);break;case t.ShaderDataType.Vector4:this._shaderData.setVector(this._nameID,this._value);break;case t.ShaderDataType.Vector2:this._shaderData.setVector2(this._nameID,this._value);break;case t.ShaderDataType.Vector3:this._shaderData.setVector3(this._nameID,this._value);break;case t.ShaderDataType.Buffer:this._shaderData.setBuffer(this._nameID,this._value);break;default:if(this._dataType==SetShaderDataCMD.ShaderDataType_define){let e=t.Shader3D.getDefineByName(this._nameID);this._value?this._shaderData.addDefine(e):this._shaderData.removeDefine(e);break}throw"no type shaderValue on this CommendBuffer"}}recover(){SetShaderDataCMD._pool.push(this),this._shaderData=null,this._nameID=0,this._value=null,this._dataType=-1}}SetShaderDataCMD.ShaderDataType_define=-2,SetShaderDataCMD._pool=[],e.MaterialRenderMode=void 0,(p=e.MaterialRenderMode||(e.MaterialRenderMode={}))[p.RENDERMODE_OPAQUE=0]="RENDERMODE_OPAQUE",p[p.RENDERMODE_CUTOUT=1]="RENDERMODE_CUTOUT",p[p.RENDERMODE_TRANSPARENT=2]="RENDERMODE_TRANSPARENT",p[p.RENDERMODE_ADDTIVE=3]="RENDERMODE_ADDTIVE",p[p.RENDERMODE_ALPHABLENDED=4]="RENDERMODE_ALPHABLENDED",p[p.RENDERMODE_CUSTOME=5]="RENDERMODE_CUSTOME";class Material extends t.Resource{static load(e,a){t.ILaya.loader.load(e,a,null,t.Loader.MATERIAL)}static __initDefine__(){Material.SHADERDEFINE_ALPHATEST=t.Shader3D.getDefineByName("ALPHATEST"),Material.SHADERDEFINE_MAINTEXTURE=t.Shader3D.getDefineByName("MAINTEXTURE"),Material.SHADERDEFINE_ADDTIVEFOG=t.Shader3D.getDefineByName("ADDTIVEFOG"),Material.ALPHATESTVALUE=t.Shader3D.propertyNameToID("u_AlphaTestValue"),Material.CULL=t.Shader3D.propertyNameToID("s_Cull"),Material.BLEND=t.Shader3D.propertyNameToID("s_Blend"),Material.BLEND_SRC=t.Shader3D.propertyNameToID("s_BlendSrc"),Material.BLEND_DST=t.Shader3D.propertyNameToID("s_BlendDst"),Material.BLEND_SRC_RGB=t.Shader3D.propertyNameToID("s_BlendSrcRGB"),Material.BLEND_DST_RGB=t.Shader3D.propertyNameToID("s_BlendDstRGB"),Material.BLEND_SRC_ALPHA=t.Shader3D.propertyNameToID("s_BlendSrcAlpha"),Material.BLEND_DST_ALPHA=t.Shader3D.propertyNameToID("s_BlendDstAlpha"),Material.BLEND_EQUATION=t.Shader3D.propertyNameToID("s_BlendEquation"),Material.BLEND_EQUATION_RGB=t.Shader3D.propertyNameToID("s_BlendEquationRGB"),Material.BLEND_EQUATION_ALPHA=t.Shader3D.propertyNameToID("s_BlendEquationAlpha"),Material.DEPTH_TEST=t.Shader3D.propertyNameToID("s_DepthTest"),Material.DEPTH_WRITE=t.Shader3D.propertyNameToID("s_DepthWrite"),Material.STENCIL_Ref=t.Shader3D.propertyNameToID("s_StencilRef"),Material.STENCIL_TEST=t.Shader3D.propertyNameToID("s_StencilTest"),Material.STENCIL_WRITE=t.Shader3D.propertyNameToID("s_StencilWrite"),Material.STENCIL_Op=t.Shader3D.propertyNameToID("s_StencilOp")}get shaderData(){return this._shaderValues}get alphaTestValue(){return this._shaderValues.getNumber(Material.ALPHATESTVALUE)}set alphaTestValue(e){this._shaderValues.setNumber(Material.ALPHATESTVALUE,e)}get alphaTest(){return this.shaderData.hasDefine(Material.SHADERDEFINE_ALPHATEST)}set alphaTest(e){e?this._shaderValues.addDefine(Material.SHADERDEFINE_ALPHATEST):this._shaderValues.removeDefine(Material.SHADERDEFINE_ALPHATEST)}addDefine(e){this._shaderValues.addDefine(e)}removeDefine(e){this._shaderValues.removeDefine(e)}setDefine(e,t){t?this._shaderValues.addDefine(e):this._shaderValues.removeDefine(e)}hasDefine(e){return this._shaderValues.hasDefine(e)}get depthWrite(){return this._shaderValues.getBool(Material.DEPTH_WRITE)}set depthWrite(e){this._shaderValues.setBool(Material.DEPTH_WRITE,e)}get cull(){return this._shaderValues.getInt(Material.CULL)}set cull(e){this._shaderValues.setInt(Material.CULL,e)}get blend(){return this._shaderValues.getInt(Material.BLEND)}set blend(e){this._shaderValues.setInt(Material.BLEND,e)}get blendSrc(){return this._shaderValues.getInt(Material.BLEND_SRC)}set blendSrc(e){this._shaderValues.setInt(Material.BLEND_SRC,e)}get blendDst(){return this._shaderValues.getInt(Material.BLEND_DST)}set blendDst(e){this._shaderValues.setInt(Material.BLEND_DST,e)}get blendSrcAlpha(){return this._shaderValues.getInt(Material.BLEND_SRC_ALPHA)}set blendSrcAlpha(e){this._shaderValues.setInt(Material.BLEND_SRC_ALPHA,e)}get blendSrcRGB(){return this._shaderValues.getInt(Material.BLEND_SRC_RGB)}set blendSrcRGB(e){this._shaderValues.setInt(Material.BLEND_SRC_RGB,e)}get blendDstRGB(){return this._shaderValues.getInt(Material.BLEND_DST_RGB)}set blendDstRGB(e){this._shaderValues.setInt(Material.BLEND_DST_RGB,e)}get blendDstAlpha(){return this._shaderValues.getInt(Material.BLEND_DST_ALPHA)}set blendDstAlpha(e){this._shaderValues.setInt(Material.BLEND_DST_ALPHA,e)}get blendEquation(){return this._shaderValues.getInt(Material.BLEND_EQUATION)}set blendEquation(e){this._shaderValues.setInt(Material.BLEND_EQUATION,e)}get blendEquationRGB(){return this._shaderValues.getInt(Material.BLEND_EQUATION_RGB)}set blendEquationRGB(e){this._shaderValues.setInt(Material.BLEND_EQUATION_RGB,e)}get blendEquationAlpha(){return this._shaderValues.getInt(Material.BLEND_EQUATION_ALPHA)}set blendEquationAlpha(e){this._shaderValues.setInt(Material.BLEND_EQUATION_ALPHA,e)}get depthTest(){return this._shaderValues.getInt(Material.DEPTH_TEST)}set depthTest(e){this._shaderValues.setInt(Material.DEPTH_TEST,e)}get stencilTest(){return this._shaderValues.getInt(Material.STENCIL_TEST)}set stencilTest(e){this._shaderValues.setInt(Material.STENCIL_TEST,e)}get stencilWrite(){return this._shaderValues.getBool(Material.STENCIL_WRITE)}set stencilWrite(e){this._shaderValues.setBool(Material.STENCIL_WRITE,e)}set stencilRef(e){this._shaderValues.setInt(Material.STENCIL_Ref,e)}get stencilRef(){return this._shaderValues.getInt(Material.STENCIL_Ref)}set stencilOp(e){this._shaderValues.setVector3(Material.STENCIL_Op,e)}get stencilOp(){return this._shaderValues.getVector3(Material.STENCIL_Op)}get MaterialProperty(){let e={};var a=this._shaderValues.getData();for(let r in a)e[t.LayaGL.renderEngine.propertyIDToName(parseInt(r))]=a[r];return e}get MaterialDefine(){let e=new Array,a=this._shaderValues._defineDatas;return t.Shader3D._getNamesByDefineData(a,e),e}set materialRenderMode(a){switch(this._matRenderNode=a,a){case e.MaterialRenderMode.RENDERMODE_OPAQUE:this.alphaTest=!1,this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case e.MaterialRenderMode.RENDERMODE_CUTOUT:this.renderQueue=Material.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case e.MaterialRenderMode.RENDERMODE_TRANSPARENT:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case e.MaterialRenderMode.RENDERMODE_ADDTIVE:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);break;case e.MaterialRenderMode.RENDERMODE_ALPHABLENDED:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);break;case e.MaterialRenderMode.RENDERMODE_CUSTOME:break;default:throw new Error("UnlitMaterial : renderMode value error.")}}get materialRenderMode(){return this._matRenderNode}constructor(){super(),this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(this),this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.alphaTest=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.blendSrc=t.RenderState.BLENDPARAM_ONE,this.blendDst=t.RenderState.BLENDPARAM_ZERO,this.blendSrcRGB=t.RenderState.BLENDPARAM_ONE,this.blendDstRGB=t.RenderState.BLENDPARAM_ZERO,this.blendSrcAlpha=t.RenderState.BLENDPARAM_ONE,this.blendDstAlpha=t.RenderState.BLENDPARAM_ZERO,this.blendEquation=t.RenderState.BLENDEQUATION_ADD,this.blendEquationRGB=t.RenderState.BLENDEQUATION_ADD,this.blendEquationAlpha=t.RenderState.BLENDEQUATION_ADD,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL,this.depthWrite=!0,this.stencilRef=1,this.stencilTest=t.RenderState.STENCILTEST_OFF,this.stencilWrite=!1,this.stencilOp=new t.Vector3(t.RenderState.STENCILOP_KEEP,t.RenderState.STENCILOP_KEEP,t.RenderState.STENCILOP_REPLACE),this.destroyedImmediately=t.Config.destroyResourceImmediatelyDefault}_bindShaderInfo(e){let a=e.getSubShaderAt(0)._uniformBufferDataMap;if(a)for(let e of a.keys()){let r=a.get(e).clone(),i=t.UniformBufferObject.create(e,t.BufferUsage.Dynamic,r.getbyteLength(),!1);this._shaderValues.setUniformBuffer(t.Shader3D.propertyNameToID(e),i),this._shaderValues._addCheckUBO(e,i,r)}}_releaseUBOData(){if(this._shaderValues.uniformBufferDatas){for(let e of this._shaderValues.uniformBufferDatas.values())e.ubo._updateDataInfo.destroy(),e.ubo.destroy(),e.ubo._updateDataInfo=null;this._shaderValues.uniformBufferDatas.clear(),this._shaderValues.uniformBuffersMap.clear()}}_disposeResource(){this._releaseUBOData(),this._shaderValues.destroy(),this._shaderValues=null}effectiveProperty(){return this._shader.getSubShaderAt(0)._uniformTypeMap}setShaderName(e){this._shader=t.Shader3D.find(e),this._shader||(console.warn(`Material: unknown shader name '${e}'`),this._shader=t.Shader3D.find("BLINNPHONG")),t.Config3D._uniformBlock&&(this._releaseUBOData(),this._bindShaderInfo(this._shader));let a=this._shader.getSubShaderAt(0),r=a._uniformDefaultValue,i=a._uniformTypeMap;this.applyUniformDefaultValue(i,r)}applyUniformDefaultValue(e,a){e.forEach(((e,r)=>{if(a&&null!=a[r]){let t=a[r];this.setShaderData(r,e,t)}else this.setShaderData(r,e,t.ShaderDataDefaultValue(e))}))}getBoolByIndex(e){return this.shaderData.getBool(e)}setBoolByIndex(e,t){this.shaderData.setBool(e,t)}getBool(e){let a=t.Shader3D.propertyNameToID(e);return this.getBoolByIndex(a)}setBool(e,a){let r=t.Shader3D.propertyNameToID(e);this.setBoolByIndex(r,a)}getFloatByIndex(e){return this.shaderData.getNumber(e)}setFloatByIndex(e,t){this.shaderData.setNumber(e,t)}getFloat(e){let a=t.Shader3D.propertyNameToID(e);return this.getFloatByIndex(a)}setFloat(e,a){let r=t.Shader3D.propertyNameToID(e);this.setFloatByIndex(r,a)}getIntByIndex(e){return this.shaderData.getInt(e)}setIntByIndex(e,t){this.shaderData.setInt(e,t)}getInt(e){let a=t.Shader3D.propertyNameToID(e);return this.getIntByIndex(a)}setInt(e,a){let r=t.Shader3D.propertyNameToID(e);this.setIntByIndex(r,a)}getVector2ByIndex(e){return this.shaderData.getVector2(e)}setVector2ByIndex(e,t){this.shaderData.setVector2(e,t)}getVector2(e){let a=t.Shader3D.propertyNameToID(e);return this.getVector2ByIndex(a)}setVector2(e,a){let r=t.Shader3D.propertyNameToID(e);this.setVector2ByIndex(r,a)}getVector3ByIndex(e){return this.shaderData.getVector3(e)}setVector3ByIndex(e,t){this.shaderData.setVector3(e,t)}getVector3(e){let a=t.Shader3D.propertyNameToID(e);return this.getVector3ByIndex(a)}setVector3(e,a){let r=t.Shader3D.propertyNameToID(e);this.setVector3ByIndex(r,a)}setVector4ByIndex(e,t){this.shaderData.setVector(e,t)}getVector4ByIndex(e){return this.shaderData.getVector(e)}setVector4(e,a){let r=t.Shader3D.propertyNameToID(e);this.setVector4ByIndex(r,a)}getVector4(e){let a=t.Shader3D.propertyNameToID(e);return this.getVector4ByIndex(a)}getColorByIndex(e){return this.shaderData.getColor(e)}setColorByIndex(e,t){this.shaderData.setColor(e,t)}getColor(e){let a=t.Shader3D.propertyNameToID(e);return this.shaderData.getColor(a)}setColor(e,a){let r=t.Shader3D.propertyNameToID(e);this.setColorByIndex(r,a)}getMatrix4x4ByIndex(e){return this.shaderData.getMatrix4x4(e)}setMatrix4x4ByIndex(e,t){this.shaderData.setMatrix4x4(e,t)}getMatrix4x4(e){let a=t.Shader3D.propertyNameToID(e);return this.getMatrix4x4ByIndex(a)}setMatrix4x4(e,a){let r=t.Shader3D.propertyNameToID(e);this.setMatrix4x4ByIndex(r,a)}setTextureByIndex(e,a){this.shaderData.setTexture(e,a),a&&!a._texture&&a.once(t.Event.READY,this,this.reSetTexture)}reSetTexture(e){let t=this.shaderData.getSourceIndex(e);-1!=t&&this.setTextureByIndex(t,e)}getTextureByIndex(e){return this.shaderData.getTexture(e)}setTexture(e,a){let r=t.Shader3D.propertyNameToID(e);this.setTextureByIndex(r,a)}getTexture(e){let a=t.Shader3D.propertyNameToID(e);return this.getTextureByIndex(a)}getBufferByIndex(e){return this.shaderData.getBuffer(e)}setBufferByIndex(e,t){this.shaderData.setBuffer(e,t)}getBuffer(e){let a=t.Shader3D.propertyNameToID(e);return this.getBufferByIndex(a)}setBuffer(e,a){let r=t.Shader3D.propertyNameToID(e);this.setBufferByIndex(r,a)}setShaderDataByIndex(e,t,a){this.shaderData.setShaderData(e,t,a)}setShaderData(e,a,r){let i=t.Shader3D.propertyNameToID(e);this.setShaderDataByIndex(i,a,r)}getShaderData(e,a){let r=t.Shader3D.propertyNameToID(e);return this.getShaderDataByIndex(r,a)}getShaderDataByIndex(e,t){return this._shaderValues.getShaderData(e,t)}cloneTo(e){var t=e;t.name=this.name,t.renderQueue=this.renderQueue,t.setShaderName(this._shader._name),this._shaderValues.cloneTo(t._shaderValues)}clone(){var e=new Material;return this.cloneTo(e),e}setShaderPropertyValue(e,a){let r=t.Shader3D.propertyNameToID(e);this.shaderData.setValueData(r,a)}getShaderPropertyValue(e){return this.shaderData.getValueData(t.Shader3D.propertyNameToID(e))}get _defineDatas(){return this._shaderValues._defineDatas}oldparseEndEvent(){}}Material.RENDERQUEUE_OPAQUE=2e3,Material.RENDERQUEUE_ALPHATEST=2450,Material.RENDERQUEUE_TRANSPARENT=3e3;class BlinnPhongMaterial extends Material{static __initDefine__(){BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP=t.Shader3D.getDefineByName("DIFFUSEMAP"),BlinnPhongMaterial.SHADERDEFINE_NORMALMAP=t.Shader3D.getDefineByName("NORMALMAP"),BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP=t.Shader3D.getDefineByName("SPECULARMAP"),BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR=t.Shader3D.getDefineByName("ENABLEVERTEXCOLOR"),BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION=t.Shader3D.getDefineByName("ENABLETRANSMISSION"),BlinnPhongMaterial.SHADERDEFINE_THICKNESSMAP=t.Shader3D.getDefineByName("THICKNESSMAP"),BlinnPhongMaterial.ALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_DiffuseTexture"),BlinnPhongMaterial.NORMALTEXTURE=t.Shader3D.propertyNameToID("u_NormalTexture"),BlinnPhongMaterial.SPECULARTEXTURE=t.Shader3D.propertyNameToID("u_SpecularTexture"),BlinnPhongMaterial.ALBEDOCOLOR=t.Shader3D.propertyNameToID("u_DiffuseColor"),BlinnPhongMaterial.MATERIALSPECULAR=t.Shader3D.propertyNameToID("u_MaterialSpecular"),BlinnPhongMaterial.SHININESS=t.Shader3D.propertyNameToID("u_Shininess"),BlinnPhongMaterial.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset"),BlinnPhongMaterial.TRANSMISSIONRATE=t.Shader3D.propertyNameToID("u_TransmissionRate"),BlinnPhongMaterial.IBACKDIFFUSE=t.Shader3D.propertyNameToID("u_BackDiffuse"),BlinnPhongMaterial.IBACKSCALE=t.Shader3D.propertyNameToID("u_BackScale"),BlinnPhongMaterial.THINKNESSTEXTURE=t.Shader3D.propertyNameToID("u_ThinknessTexture"),BlinnPhongMaterial.TRANSMISSIONCOLOR=t.Shader3D.propertyNameToID("u_TransmissionColor"),BlinnPhongMaterial.AlbedoIntensity=t.Shader3D.propertyNameToID("u_AlbedoIntensity")}set renderMode(e){switch(e){case BlinnPhongMaterial.RENDERMODE_OPAQUE:this.alphaTest=!1,this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case BlinnPhongMaterial.RENDERMODE_CUTOUT:this.renderQueue=Material.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case BlinnPhongMaterial.RENDERMODE_TRANSPARENT:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;default:throw new Error("Material:renderMode value error.")}}get enableVertexColor(){return this.hasDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR)}set enableVertexColor(e){e?this.addDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR):this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR)}get tilingOffset(){return this.getVector4ByIndex(BlinnPhongMaterial.TILINGOFFSET)}set tilingOffset(e){e?this.setVector4ByIndex(BlinnPhongMaterial.TILINGOFFSET,e):this.getVector4ByIndex(BlinnPhongMaterial.TILINGOFFSET).setValue(1,1,0,0)}get albedoColor(){return this.getColorByIndex(BlinnPhongMaterial.ALBEDOCOLOR)}set albedoColor(e){this.setColorByIndex(BlinnPhongMaterial.ALBEDOCOLOR,e)}get albedoIntensity(){return this.getFloatByIndex(BlinnPhongMaterial.AlbedoIntensity)}set albedoIntensity(e){this.setFloatByIndex(BlinnPhongMaterial.AlbedoIntensity,e)}get specularColor(){return this.getColorByIndex(BlinnPhongMaterial.MATERIALSPECULAR)}set specularColor(e){this.setColorByIndex(BlinnPhongMaterial.MATERIALSPECULAR,e)}get shininess(){return this.getFloatByIndex(BlinnPhongMaterial.SHININESS)}set shininess(e){e=Math.max(0,Math.min(1,e)),this.setFloatByIndex(BlinnPhongMaterial.SHININESS,e)}get albedoTexture(){return this.getTextureByIndex(BlinnPhongMaterial.ALBEDOTEXTURE)}set albedoTexture(e){e?this.addDefine(BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP):this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP),this.setTextureByIndex(BlinnPhongMaterial.ALBEDOTEXTURE,e)}get normalTexture(){return this.getTextureByIndex(BlinnPhongMaterial.NORMALTEXTURE)}set normalTexture(e){e?this.addDefine(BlinnPhongMaterial.SHADERDEFINE_NORMALMAP):this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_NORMALMAP),this.setTextureByIndex(BlinnPhongMaterial.NORMALTEXTURE,e)}get specularTexture(){return this.getTextureByIndex(BlinnPhongMaterial.SPECULARTEXTURE)}set specularTexture(e){e?this.addDefine(BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP):this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP),this.setTextureByIndex(BlinnPhongMaterial.SPECULARTEXTURE,e)}get enableTransmission(){return this.hasDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION)}set enableTransmission(e){e?this.addDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION):this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION)}get transmissionRata(){return this.getFloatByIndex(BlinnPhongMaterial.TRANSMISSIONRATE)}set transmissionRata(e){this.setFloatByIndex(BlinnPhongMaterial.TRANSMISSIONRATE,e)}get backDiffuse(){return this.getFloatByIndex(BlinnPhongMaterial.IBACKDIFFUSE)}set backDiffuse(e){this.setFloatByIndex(BlinnPhongMaterial.IBACKDIFFUSE,Math.max(e,1))}get backScale(){return this.getFloatByIndex(BlinnPhongMaterial.IBACKSCALE)}set backScale(e){this.setFloatByIndex(BlinnPhongMaterial.IBACKSCALE,e)}get thinknessTexture(){return this.getTextureByIndex(BlinnPhongMaterial.THINKNESSTEXTURE)}set thinknessTexture(e){e?this.addDefine(BlinnPhongMaterial.SHADERDEFINE_THICKNESSMAP):this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_THICKNESSMAP),this.setTextureByIndex(BlinnPhongMaterial.THINKNESSTEXTURE,e)}get transmissionColor(){return this.getColorByIndex(BlinnPhongMaterial.TRANSMISSIONCOLOR)}set transmissionColor(e){this.setColorByIndex(BlinnPhongMaterial.TRANSMISSIONCOLOR,e)}get transmissionRate(){return this.getFloatByIndex(BlinnPhongMaterial.TRANSMISSIONRATE)}constructor(){super(),this.setShaderName("BLINNPHONG"),this.renderMode=BlinnPhongMaterial.RENDERMODE_OPAQUE}clone(){var e=new BlinnPhongMaterial;return this.cloneTo(e),e}cloneTo(e){super.cloneTo(e);var t=e;t.albedoIntensity=this.albedoIntensity,t.enableVertexColor=this.enableVertexColor,this.albedoColor.cloneTo(t.albedoColor)}}BlinnPhongMaterial.RENDERMODE_OPAQUE=0,BlinnPhongMaterial.RENDERMODE_CUTOUT=1,BlinnPhongMaterial.RENDERMODE_TRANSPARENT=2;class MeshFilter extends t.Component{constructor(){super(),this.runInEditor=!0}_onEnable(){const e=this.owner.getComponent(MeshRenderer);e&&e._enabled&&e._onMeshChange(this._sharedMesh)}_onDisable(){this.owner.getComponent(MeshRenderer)}get sharedMesh(){return this._sharedMesh}set sharedMesh(e){if(this._sharedMesh!==e){var t=this._sharedMesh;t&&t._removeReference(),e&&e._addReference(),this._sharedMesh=e;const a=this.owner.getComponent(MeshRenderer);if(!a)return;a._onMeshChange(e),this._sharedMesh=e}}_onDestroy(){this._sharedMesh&&(this._sharedMesh._removeReference(),this._sharedMesh=null)}_cloneTo(e){e.sharedMesh=this.sharedMesh,super._cloneTo(e)}}MeshFilter._meshVerticeDefine=[];class SubMeshRenderElement extends RenderElement{constructor(){super(),this._dynamicWorldPositionNormalNeedUpdate=!0,this._canBatch=!0}_onWorldMatrixChanged(){this._dynamicWorldPositionNormalNeedUpdate=!0}setTransform(e){this.transform!==e&&(this.transform&&this.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatrixChanged),e&&e.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatrixChanged),this._dynamicWorldPositionNormalNeedUpdate=!0,this.transform=e)}setGeometry(e){this._geometry!==e&&(this._geometry=e,this._renderElementOBJ._geometry=e._geometryElementOBj)}destroy(){this._renderElementOBJ&&(this.transform&&this.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatrixChanged),super.destroy(),this.staticBatch=null,this.instanceSubMesh=null,this.staticBatchElementList&&this.staticBatchElementList.destroy(),this.instanceBatchElementList&&this.instanceBatchElementList.destroy(),this.vertexBatchElementList&&this.vertexBatchElementList.destroy(),this.vertexBatchVertexDeclaration=null)}}class MeshUtil{static getMeshDefine(e,a){a.length=0;let r=e._vertexBuffer.vertexDeclaration._vertexElements;for(const e of r)switch(e.elementUsage){case t.VertexMesh.MESH_COLOR0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);break;case t.VertexMesh.MESH_TEXTURECOORDINATE0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);break;case t.VertexMesh.MESH_TANGENT0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT)}}}class MeshRenderer extends BaseRender{static __init__(){MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0=t.Shader3D.getDefineByName("UV"),MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR=t.Shader3D.getDefineByName("COLOR"),MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1=t.Shader3D.getDefineByName("UV1"),MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT=t.Shader3D.getDefineByName("TANGENT"),MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE=t.Shader3D.getDefineByName("GPU_INSTANCE")}constructor(){super(),this._revertStaticBatchDefineUV1=!1,this.morphTargetActiveCount=0,this._morphWeightChange=!0,this._morphTargetValues={},this._projectionViewWorldMatrix=new t.Matrix4x4}_createRenderElement(){return new SubMeshRenderElement}getMesh(){return this._mesh}_onEnable(){super._onEnable();const e=this.owner.getComponent(MeshFilter);e&&e._enabled&&this._onMeshChange(e.sharedMesh)}_getMeshDefine(e,t){t.length=0,MeshUtil.getMeshDefine(e,t)}_changeVertexDefine(e){var t=this._shaderValues,a=this._mesh;if(a){this._getMeshDefine(a,MeshFilter._meshVerticeDefine);for(var r=0,i=MeshFilter._meshVerticeDefine.length;r<i;r++)t.removeDefine(MeshFilter._meshVerticeDefine[r])}if(e){this._getMeshDefine(e,MeshFilter._meshVerticeDefine);for(r=0,i=MeshFilter._meshVerticeDefine.length;r<i;r++)t.addDefine(MeshFilter._meshVerticeDefine[r])}}get morphTargetValues(){return this._morphTargetValues}set morphTargetValues(e){this._morphTargetValues=e}_changeMorphTargetValue(e){this._morphWeightChange=!0}setMorphChannelWeight(e,t){let a=this._mesh;if(a&&a.morphTargetData){let r=a.morphTargetData.getMorphChannel(e);this.morphTargetValues[r.name]=t,this._morphWeightChange=!0}}_applyMorphdata(){let e=this._mesh;if(this._morphWeightChange&&e&&e.morphTargetData){let a=e.morphTargetData,r=a.channelCount;for(let e=0;e<r;e++){let t=a.getMorphChannelbyIndex(e),r=this.morphTargetValues[t.name],i=0;t.targets.forEach((e=>{r<=e.fullWeight?this.morphTargetWeight[e._index]=(r-i)/(e.fullWeight-i):this.morphTargetWeight[e._index]=1,i=e.fullWeight}))}let i=0;this.morphTargetWeight.forEach(((e,t)=>{e>0&&(this.morphTargetActiveIndex[i]=t,this.morphTargetActiveWeight[i]=e,i++)})),this.morphTargetActiveCount=Math.min(i,t.Config3D.maxMorphTargetCount),t.LayaGL.renderEngine.getCapable(t.RenderCapable.Texture3D)&&(this._shaderValues.setInt(RenderableSprite3D.MorphActiveCount,this.morphTargetActiveCount),this._shaderValues.setBuffer(RenderableSprite3D.MorphActiceTargets,this.morphTargetActiveIndex),this._shaderValues.setBuffer(RenderableSprite3D.MorphActiveWeights,this.morphTargetActiveWeight)),this._morphWeightChange=!1}}_changeMorphData(e){let a=this._shaderValues,r=this._mesh;let i=t.Config3D.maxMorphTargetCount;if(this.morphTargetActiveIndex=new Float32Array(i),this.morphTargetActiveWeight=new Float32Array(i),t.LayaGL.renderEngine.getCapable(t.RenderCapable.Texture3D)){if(r&&r.morphTargetData){let e=r.morphTargetData;a.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET),e.vertexDec._vertexElements.forEach((e=>{switch(e.elementUsage){case t.VertexMesh.MESH_POSITION0:a.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_POSITION);break;case t.VertexMesh.MESH_NORMAL0:a.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_NORMAL);break;case t.VertexMesh.MESH_TANGENT0:a.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_TANGENT)}}))}if(e&&e.morphTargetData){let r=e.morphTargetData;a.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET),r.vertexDec._vertexElements.forEach((e=>{switch(e.elementUsage){case t.VertexMesh.MESH_POSITION0:a.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_POSITION);break;case t.VertexMesh.MESH_NORMAL0:a.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_NORMAL);break;case t.VertexMesh.MESH_TANGENT0:a.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_TANGENT)}})),a.setVector(RenderableSprite3D.MorphAttriOffset,e.morphTargetData.attributeOffset),a.setTexture(RenderableSprite3D.MorphTex,e.morphTargetData.targetTexture),a.setVector(RenderableSprite3D.MorphParams,r.params),a.setBuffer(RenderableSprite3D.MorphActiceTargets,this.morphTargetActiveIndex),a.setBuffer(RenderableSprite3D.MorphActiveWeights,this.morphTargetActiveWeight)}}if(r&&r.morphTargetData&&(this.morphTargetWeight=null,this.morphtargetChannels=null,this._morphTargetValues={}),e&&e.morphTargetData){let t=e.morphTargetData,a=t.channelCount;this.morphTargetWeight=new Float32Array(t.targetCount),this.morphtargetChannels=new Array(a);for(let e=0;e<a;e++){let a=t.getMorphChannelbyIndex(e);this.morphtargetChannels[e]=a,this._morphTargetValues[a.name]=0}}}_onMeshChange(e){if(e&&this._mesh!=e){this._changeVertexDefine(e),this._changeMorphData(e),this._mesh=e,this.geometryBounds=e.bounds;var t=e.subMeshCount;this._renderElements.length=t;for(var a=0;a<t;a++){var r=this._renderElements[a];if(!r){var i=this.sharedMaterials[a];r=this._renderElements[a]=this._renderElements[a]?this._renderElements[a]:this._createRenderElement(),this.owner&&r.setTransform(this.owner._transform),r.render=this,r.material=i||BlinnPhongMaterial.defaultMaterial}r.setGeometry(e.getSubMesh(a))}}else e||(this._renderElements.forEach,this._renderElements.forEach((e=>{e.destroy()})),this._renderElements.length=0,this._mesh=null,this._changeVertexDefine(null),this._changeMorphData(null));this.boundsChange=!0}updateMulPassRender(){const e=this.owner.getComponent(MeshFilter);if(!e)return;const t=e.sharedMesh;if(t){var a=t.subMeshCount,r=this._sharedMaterials.length;if(a>r){let e=a;this._renderElements.length=e;for(var i=0;i<e;i++){if(!(s=this._renderElements[i])){var n=this.sharedMaterials[i];(s=this._renderElements[i]=this._renderElements[i]?this._renderElements[i]:this._createRenderElement()).setTransform(this.owner._transform),s.render=this,s.material=n||BlinnPhongMaterial.defaultMaterial}s.setGeometry(t.getSubMesh(i))}}else{let e=r;this._renderElements.length=e;for(i=0;i<e;i++){var s;if(!(s=this._renderElements[i])){n=this.sharedMaterials[i];(s=this._renderElements[i]=this._renderElements[i]?this._renderElements[i]:this._createRenderElement()).setTransform(this.owner._transform),s.render=this,s.material=n||BlinnPhongMaterial.defaultMaterial}}s.setGeometry(t.getSubMesh(e%a))}}else this._renderElements.length=0;this.boundsChange=!0}_calculateBoundingBox(){var e=this._mesh;if(e){var t=this._transform.worldMatrix;e.morphTargetData?e.morphTargetData.bounds._tranform(t,this._bounds):e.bounds._tranform(t,this._bounds)}}_renderUpdate(e,a){this._applyLightMapParams(),this._applyReflection(),this._applyMorphdata(),e.renderElement;let r=a||this._transform;this._setShaderValue(Sprite3D.WORLDMATRIX,t.ShaderDataType.Matrix4x4,r.worldMatrix),this._worldParams.x=r.getFrontFaceValue(),this._setShaderValue(Sprite3D.WORLDINVERTFRONT,t.ShaderDataType.Vector4,this._worldParams)}_revertBatchRenderUpdate(e){switch(e.renderElement.renderType){case RenderElement.RENDERTYPE_STATICBATCH:this._revertStaticBatchDefineUV1&&this._shaderValues.removeDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1),this._shaderValues.setVector(RenderableSprite3D.LIGHTMAPSCALEOFFSET,this.lightmapScaleOffset);break;case RenderElement.RENDERTYPE_INSTANCEBATCH:this._shaderValues.removeDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE)}}_onDestroy(){super._onDestroy(),this._morphTargetValues=null}_cloneTo(e){super._cloneTo(e),this.morphTargetWeight&&(e.morphTargetWeight=new Float32Array(this.morphTargetWeight));for(const t in this._morphTargetValues)e._morphTargetValues[t]=this._morphTargetValues[t]}}class DrawMeshCMD extends Command{static create(e,t,a,r,i,n){var s;return(s=DrawMeshCMD._pool.length>0?DrawMeshCMD._pool.pop():new DrawMeshCMD)._matrix=t,s._transform.worldMatrix=s._matrix,s.material=a,s._subMeshIndex=r,s._subShaderIndex=i,s.mesh=e,s._commandBuffer=n,s}constructor(){super(),this._transform=t.LayaGL.renderOBJCreate.createTransform(null),this._meshRender=new MeshRenderer}set material(e){this._material&&this._material._removeReference(1),this._material=e,this._material&&this._material._addReference(1)}set mesh(e){this._mesh!=e&&(this._mesh=e,this._meshRender._onMeshChange(this._mesh),this._renderElemnts=this._meshRender._renderElements,this._renderElemnts.forEach((e=>{e.material=this._material,e.setTransform(this._transform),e.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),e._subShaderIndex=this._subShaderIndex})))}run(){var e=RenderContext3D._instance;this._meshRender.probReflection=e.scene.sceneReflectionProb,e._contextOBJ.applyContext(Camera._updateMark);let t=this._mesh._subMeshes;if(-1==this._subMeshIndex)for(let a=0,r=t.length;a<r;a++){let t=this._renderElemnts[a];e.drawRenderElement(t)}else{let t=this._renderElemnts[this._subMeshIndex];e.drawRenderElement(t)}}recover(){DrawMeshCMD._pool.push(this),super.recover(),this._material&&(this.material=null),this._mesh&&(this.mesh=null)}destroy(){super.destroy(),this._renderElemnts.forEach((e=>{e.destroy()})),this._material&&this._material._removeReference(1),this._material=null,this._renderElemnts=null,this._transform=null,this._material=null,this._matrix=null}}DrawMeshCMD._pool=[];class ClearRenderTextureCMD extends Command{constructor(){super(...arguments),this._clearColor=!1,this._clearDepth=!1,this._backgroundColor=new t.Color,this._linearbackgroundColor=new t.Color,this._depth=1}static create(e,t,a,r=1,i){var n;return(n=ClearRenderTextureCMD._pool.length>0?ClearRenderTextureCMD._pool.pop():new ClearRenderTextureCMD)._clearColor=e,n._clearDepth=t,a.cloneTo(n._backgroundColor),a.toLinear(n._linearbackgroundColor),n._depth=r,n._commandBuffer=i,n}run(){let e=this._linearbackgroundColor;this._clearDepth&&this._clearColor?t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,e,this._depth):this._clearDepth?t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,e,this._depth):this._clearColor&&t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Color,e,this._depth)}recover(){}}ClearRenderTextureCMD._pool=[];class DrawRenderCMD extends Command{static create(e,t,a,r){var i;return(i=DrawRenderCMD._pool.length>0?DrawRenderCMD._pool.pop():new DrawRenderCMD)._render=e,i.material=t,i._subShaderIndex=a,i._commandBuffer=r,i}constructor(){super()}_elementRender(e,t){e.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),e.material=this._material,t.drawRenderElement(e)}set material(e){this._material&&this._material._removeReference(1),this._material=e,this._material&&this._material._addReference(1)}run(){if(!this._material)throw"This render command material cannot be empty";this.setContext(this._commandBuffer._context);var e=this._context;e._contextOBJ.applyContext(Camera._updateMark);for(var t=this._render._renderElements,a=0,r=t.length;a<r;a++){var i=t[a];let r=i.material;this._elementRender(i,e),i.material=r}}recover(){DrawRenderCMD._pool.push(this),super.recover(),this._material&&this._material._removeReference(1),this._material=null}destroy(){super.destroy(),this._material&&this._material._removeReference(1),this._material=null}}DrawRenderCMD._pool=[];class SetGlobalShaderDataCMD extends Command{constructor(){super(...arguments),this._nameID=0,this._value=null,this._dataType=-1}static create(e,t,a,r){var i;return(i=SetGlobalShaderDataCMD._pool.length>0?SetGlobalShaderDataCMD._pool.pop():new SetGlobalShaderDataCMD)._nameID=e,i._value=t,i._dataType=a,i._commandBuffer=r,i}run(){let e=RenderContext3D._instance,a=e._contextOBJ.globalShaderData;switch(a||(a=e._contextOBJ.globalShaderData=t.LayaGL.renderOBJCreate.createShaderData(null)),this._dataType){case t.ShaderDataType.Int:a.setInt(this._nameID,this._value);break;case t.ShaderDataType.Float:a.setNumber(this._nameID,this._value);break;case t.ShaderDataType.Bool:a.setBool(this._nameID,this._value);break;case t.ShaderDataType.Matrix4x4:a.setMatrix4x4(this._nameID,this._value);break;case t.ShaderDataType.Texture2D:a.setTexture(this._nameID,this._value);break;case t.ShaderDataType.Vector4:a.setVector(this._nameID,this._value);break;case t.ShaderDataType.Vector2:a.setVector2(this._nameID,this._value);break;case t.ShaderDataType.Vector3:a.setVector3(this._nameID,this._value);break;case t.ShaderDataType.Buffer:a.setBuffer(this._nameID,this._value);break;case t.ShaderDataType.Color:a.setColor(this._nameID,this._value);break;default:throw"no type shaderValue on this CommendBuffer"}}recover(){SetGlobalShaderDataCMD._pool.push(this),this._nameID=0,this._value=null,this._dataType=-1}}SetGlobalShaderDataCMD._pool=[];class MeshInstanceGeometry extends GeometryElement{constructor(e){super(e?e._geometryElementOBj.mode:t.MeshTopology.Triangles,t.DrawType.DrawElementInstance),this._subMesh=e,e&&(this.indexFormat=e._mesh.indexFormat)}set subMesh(e){this._subMesh=e,e&&(this.indexFormat=e._mesh.indexFormat),this.mode=e._geometryElementOBj.mode}get subMesh(){return this._subMesh}_updateRenderParams(e){this.clearRenderParams(),this.setDrawElemenParams(this._subMesh.indexCount,2*this._subMesh._indexStart)}}class DrawMeshInstancedCMD extends Command{static create(e,t,a,r,i,n,s,o){var l;if(a&&a.length>DrawMeshInstancedCMD.maxInstanceCount||s>DrawMeshInstancedCMD.maxInstanceCount)throw"the number of renderings exceeds the maximum number of merges";return(l=DrawMeshInstancedCMD._pool.length>0?DrawMeshInstancedCMD._pool.pop():new DrawMeshInstancedCMD)._matrixs=a,l.material=r,l._subMeshIndex=t,l._subShaderIndex=i,l._commandBuffer=o,l._instanceProperty=n,l._drawnums=s,l.mesh=e,a&&l._updateWorldMatrixBuffer(),l._setInstanceBuffer(),l.setContext(RenderContext3D._instance),l}constructor(){super(),this._subShaderIndex=0,this._transform=t.LayaGL.renderOBJCreate.createTransform(null),this._instanceRenderElementArray=[],this._instanceGeometryArray=[],this._instanceWorldMatrixData=new Float32Array(16*DrawMeshInstancedCMD.maxInstanceCount),this._instanceWorldMatrixBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this._instanceWorldMatrixData.length,t.BufferUsage.Dynamic,!1),this._instanceWorldMatrixBuffer.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,this._instanceWorldMatrixBuffer.instanceBuffer=!0,this._render=new BaseRender,this._render._shaderValues.addDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE)}set material(e){this._material&&this._material._removeReference(1),this._material=e,this._material&&this._material._addReference(1)}get bufferState(){return this._instanceWorldMatrixBuffer}set mesh(e){if(this._mesh==e)return;if(BaseRender.changeVertexDefine(this._mesh,e,this._render._shaderValues),this._mesh=e,!this._mesh)return;let t=this._mesh._subMeshes;if(-1==this._subMeshIndex)for(let e=0,a=t.length;e<a;e++){let a=this._instanceRenderElementArray[e]=this._instanceRenderElementArray[e]?this._instanceRenderElementArray[e]:new RenderElement,r=this._instanceGeometryArray[e]=this._instanceGeometryArray[e]?this._instanceGeometryArray[e]:new MeshInstanceGeometry(t[e]);a.setGeometry(r),a.transform=this._transform,a.material=this._material,a.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),a._subShaderIndex=this._subShaderIndex,a.render=this._render,r.bufferState=this._instanceBufferState,r.instanceCount=this._drawnums}else{let e=this._instanceRenderElementArray[0]=this._instanceRenderElementArray[0]?this._instanceRenderElementArray[0]:new RenderElement,a=this._instanceGeometryArray[0]=this._instanceGeometryArray[0]?this._instanceGeometryArray[0]:new MeshInstanceGeometry(t[this._subMeshIndex]);e.setGeometry(a),e.transform=this._transform,e.material=this._material,e.render=this._render,e.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),a.bufferState=this._instanceBufferState,a.instanceCount=this._drawnums}}get mesh(){return this._mesh}_setInstanceBuffer(){this._instanceBufferState||(this._instanceBufferState=new t.BufferState);let e=this._instanceBufferState,a=[];this._mesh._bufferState._vertexBuffers.forEach((e=>{a.push(e)})),a.push(this._instanceWorldMatrixBuffer);let r=this._instanceProperty._propertyMap;for(let e in r)a.push(r[e]._vertexBuffer);e.applyState(a,this._mesh._indexBuffer),this._instanceGeometryArray.forEach((t=>{t.bufferState=e}))}_updateWorldMatrixBuffer(){let e=this._instanceWorldMatrixData,t=this._drawnums;for(let a=0;a<t;a++)e.set(this._matrixs[a].elements,16*a);let a=this._instanceWorldMatrixBuffer;a.orphanStorage(),a.setData(e.buffer,0,0,64*t)}setWorldMatrix(e){if(e.length<this._drawnums)throw"worldMatrixArray length is less then drawnums";this._matrixs=e,this._matrixs&&this._updateWorldMatrixBuffer()}setDrawNums(e){if(this._matrixs&&this._matrixs.length<e)throw"worldMatrixArray length is less then drawnums";this._drawnums=e;let t=this._mesh._subMeshes;if(-1==this._subMeshIndex)for(let e=0,a=t.length;e<a;e++){(this._instanceGeometryArray[e]?this._instanceGeometryArray[e]:new MeshInstanceGeometry(t[e])).instanceCount=this._drawnums}else{(this._instanceGeometryArray[0]?this._instanceGeometryArray[0]:new MeshInstanceGeometry(t[0])).instanceCount=this._drawnums}this._matrixs&&this._updateWorldMatrixBuffer()}run(){let e=RenderContext3D._instance;e._contextOBJ.applyContext(Camera._updateMark);let t=this._instanceProperty._propertyMap;for(let e in t)t[e].updateVertexBufferData(this._drawnums);let a=this.mesh._subMeshes;if(-1==this._subMeshIndex)for(let t=0,r=a.length;t<r;t++){let a=this._instanceRenderElementArray[t];e.drawRenderElement(a)}else{let t=this._instanceRenderElementArray[0];e.drawRenderElement(t)}}recover(){DrawMeshInstancedCMD._pool.push(this),super.recover(),this._material&&this._material._removeReference(1),this._material=null,this._instanceBufferState.destroy(),this._instanceBufferState=null,delete this._instanceRenderElementArray,this._instanceRenderElementArray=[],delete this._instanceGeometryArray,this._instanceGeometryArray=[],this.mesh=null}destroy(){super.destroy(),this._material&&this._material._removeReference(1),this._material=null,this._instanceBufferState.destroy(),this._instanceBufferState=null,delete this._instanceRenderElementArray,this._instanceRenderElementArray=[],delete this._instanceGeometryArray,this._instanceGeometryArray=[],this.mesh=null}}DrawMeshInstancedCMD._pool=[],DrawMeshInstancedCMD.maxInstanceCount=1024;class CommandBuffer{constructor(e=null,t=!1){this._shadow=!1,this._camera=null,this._commands=[],this._name=e,this._shadow=t}get name(){return this._name}get casterShadow(){return this._shadow}set context(e){this._context=e}get context(){return this._context}_apply(){for(var e=0,a=this._commands.length;e<a;e++)this._commands[e].run();t.Stat.cmdDrawCall+=this._commands.length}_applyOne(){if(this._commands.length){var e=this._commands.shift();e.run(),e.recover()}return this._commands.length>0}getCommandsSize(){return this._commands.length}setShaderDataTexture(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Texture2D,this))}setGlobalTexture(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Texture2D,this))}setShaderDataColor(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Color,this))}setGlobalColor(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Color,this))}setShaderDataVector(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Vector4,this))}setGlobalVector(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Vector4,this))}setShaderDataVector3(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Vector3,this))}setGlobalVector3(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Vector3,this))}setShaderDataVector2(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Vector2,this))}setGlobalVector2(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Vector2,this))}setShaderDataNumber(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Float,this))}setGlobalNumber(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Float,this))}setShaderDataInt(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Int,this))}setGlobalInt(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Int,this))}setShaderDataMatrix(e,a,r){this._commands.push(SetShaderDataCMD.create(e,a,r,t.ShaderDataType.Matrix4x4,this))}setShaderDefine(e,t,a){this._commands.push(SetShaderDataCMD.create(e,t,a,SetShaderDataCMD.ShaderDataType_define,this))}setGlobalMatrix(e,a){this._commands.push(SetGlobalShaderDataCMD.create(e,a,t.ShaderDataType.Matrix4x4,this))}blitScreenQuad(e,t,a=null,r=null,i=null,n=0){this._commands.push(BlitScreenQuadCMD.create(e,t,a,r,i,n,BlitScreenQuadCMD._SCREENTYPE_QUAD,this))}blitScreenQuadByMaterial(e,t,a=null,r=null,i=0){var n,s;r&&(n=r._shader,s=r.shaderData),this._commands.push(BlitScreenQuadCMD.create(e,t,a,n,s,i,BlitScreenQuadCMD._SCREENTYPE_QUAD,this))}blitScreenTriangle(e,t,a=null,r=null,i=null,n=0){this._commands.push(BlitScreenQuadCMD.create(e,t,a,r,i,n,BlitScreenQuadCMD._SCREENTYPE_TRIANGLE,this))}setRenderTarget(e){this._commands.push(SetRenderTargetCMD.create(e))}clearRenderTarget(e,t,a,r=1){this._commands.push(ClearRenderTextureCMD.create(e,t,a,r,this))}drawMesh(e,t,a,r,i){this._commands.push(DrawMeshCMD.create(e,t,a,r,i,this))}drawRender(e,t,a){this._commands.push(DrawRenderCMD.create(e,t,a,this))}drawMeshInstance(e,a=0,r,i,n=0,s,o){if(!t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance))return null;var l=DrawMeshInstancedCMD.create(e,a,r,i,n,s,o,this);return this._commands.push(l),l}addCustomCMD(e){e._commandBuffer=this,this._commands.push(e)}clear(){for(var e=0,t=this._commands.length;e<t;e++)this._commands[e].recover();this._commands.length=0}}class PhysicsSettings{constructor(){this.flags=0,this.maxSubSteps=1,this.fixedTimeStep=1/60}}class LightQueue{constructor(){this._length=0,this._elements=[]}add(e){let t=this._elements.indexOf(e);-1!=t&&t<this._length||(this._length===this._elements.length?this._elements.push(e):this._elements[this._length]=e,this._length++)}remove(e){var t=this._elements.indexOf(e);if(-1!=t&&(this._length--,t!==this._length)){var a=this._elements[this._length];this._elements[t]=a}}shift(){return this._length--,this._elements.shift()}getBrightestLight(){for(var e,t=-1,a=this._elements,r=0;r<this._length;r++){var i=a[r]._intensity;t<i&&(t=i,e=r)}return e}normalLightOrdering(e){var t=this._elements[0];this._elements[0]=this._elements[e],this._elements[e]=t}}class AlternateLightQueue extends LightQueue{remove(e){var t=this._elements.indexOf(e);this._elements.splice(t,1),this._length--}}class Lightmap{}class Scene3DShaderDeclaration{}class BoundSphere{set center(e){e.cloneTo(this._center)}get center(){return this._center}set radius(e){this._radius=e}get radius(){return this._radius}constructor(e=new t.Vector3,a=0){this._center=e,this._radius=a}toDefault(){this._center.toDefault(),this._radius=0}static createFromSubPoints(e,a,r,i){if(null==e)throw new Error("points");if(a<0||a>=e.length)throw new Error("start"+a+"Must be in the range [0, "+(e.length-1)+"]");if(r<0||a+r>e.length)throw new Error("count"+r+"Must be in the range <= "+e.length+"}");var n=a+r,s=BoundSphere._tempVector3;s.x=0,s.y=0,s.z=0;for(var o=a;o<n;++o)t.Vector3.add(e[o],s,s);var l=i.center;t.Vector3.scale(s,1/r,l);var h=0;for(o=a;o<n;++o){var c=t.Vector3.distanceSquared(l,e[o]);c>h&&(h=c)}i.radius=Math.sqrt(h)}static createfromPoints(e,t){if(null==e)throw new Error("points");BoundSphere.createFromSubPoints(e,0,e.length,t)}intersectsRayDistance(e){return CollisionUtils.intersectsRayAndSphereRD(e,this)}intersectsRayPoint(e,t){return CollisionUtils.intersectsRayAndSphereRP(e,this,t)}cloneTo(e){var t=e;this._center.cloneTo(t._center),t._radius=this._radius}clone(){var e=new BoundSphere(new t.Vector3,0);return this.cloneTo(e),e}}BoundSphere._tempVector3=new t.Vector3;class ShadowSliceData{constructor(){this.cameraShaderValue=t.LayaGL.renderOBJCreate.createShaderData(null),this.position=new t.Vector3,this.viewMatrix=new t.Matrix4x4,this.projectionMatrix=new t.Matrix4x4,this.viewProjectMatrix=new t.Matrix4x4,this.cullPlanes=[new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0)],this.splitBoundSphere=new BoundSphere(new t.Vector3,0)}}class ShadowSpotData{constructor(){this.cameraShaderValue=t.LayaGL.renderOBJCreate.createShaderData(null),this.position=new t.Vector3,this.viewMatrix=new t.Matrix4x4,this.projectionMatrix=new t.Matrix4x4,this.viewProjectMatrix=new t.Matrix4x4,this.cameraCullInfo=t.LayaGL.renderOBJCreate.createCameraCullInfo()}}class FrustumCulling{static __init__(){FrustumCulling._cameraCullInfo=t.LayaGL.renderOBJCreate.createCameraCullInfo(),FrustumCulling._shadowCullInfo=t.LayaGL.renderOBJCreate.createShadowCullInfo()}static cullingRenderBounds(e,t){for(var a=t.cullPlaneCount,r=t.cullPlanes,i=e.getMin(),n=e.getMax(),s=i.x,o=i.y,l=i.z,h=n.x,c=n.y,d=n.z,u=!0,_=0;_<a;_++){var m=r[_],f=m.normal;if(m.distance+f.x*(f.x<0?s:h)+f.y*(f.y<0?o:c)+f.z*(f.z<0?l:d)<0){u=!1;break}}return u}static cullingRenderBoundsState(e,t){for(var a=FrustumCulling._tempV30,r=FrustumCulling._tempV31,i=e.min,n=e.max,s=ContainmentType.Contains,o=0,l=t.cullPlaneCount;o<l;o++){var h=t.cullPlanes[o],c=h.normal;if(c.x>=0?(a.x=n.x,r.x=i.x):(a.x=i.x,r.x=n.x),c.y>=0?(a.y=n.y,r.y=i.y):(a.y=i.y,r.y=n.y),c.z>=0?(a.z=n.z,r.z=i.z):(a.z=i.z,r.z=n.z),CollisionUtils.intersectsPlaneAndPoint(h,a)===Plane.PlaneIntersectionType_Back)return ContainmentType.Disjoint;CollisionUtils.intersectsPlaneAndPoint(h,r)===Plane.PlaneIntersectionType_Back&&(s=ContainmentType.Intersects)}return s}}FrustumCulling._tempV30=new t.Vector3,FrustumCulling._tempV31=new t.Vector3,e.ShadowLightType=void 0,(D=e.ShadowLightType||(e.ShadowLightType={}))[D.DirectionLight=0]="DirectionLight",D[D.SpotLight=1]="SpotLight",D[D.PointLight=2]="PointLight";class ShadowCasterPass{static __init__(){ShadowCasterPass._frustumPlanes=new Array(new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0),new Plane(new t.Vector3,0)),ShadowCasterPass.SHADOW_BIAS=t.Shader3D.propertyNameToID("u_ShadowBias"),ShadowCasterPass.SHADOW_LIGHT_DIRECTION=t.Shader3D.propertyNameToID("u_ShadowLightDirection"),ShadowCasterPass.SHADOW_SPLIT_SPHERES=t.Shader3D.propertyNameToID("u_ShadowSplitSpheres"),ShadowCasterPass.SHADOW_MATRICES=t.Shader3D.propertyNameToID("u_ShadowMatrices"),ShadowCasterPass.SHADOW_MAP_SIZE=t.Shader3D.propertyNameToID("u_ShadowMapSize"),ShadowCasterPass.SHADOW_MAP=t.Shader3D.propertyNameToID("u_ShadowMap"),ShadowCasterPass.SHADOW_PARAMS=t.Shader3D.propertyNameToID("u_ShadowParams"),ShadowCasterPass.SHADOW_SPOTMAP_SIZE=t.Shader3D.propertyNameToID("u_SpotShadowMapSize"),ShadowCasterPass.SHADOW_SPOTMAP=t.Shader3D.propertyNameToID("u_SpotShadowMap"),ShadowCasterPass.SHADOW_SPOTMATRICES=t.Shader3D.propertyNameToID("u_SpotViewProjectMatrix");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Scene3D");e.addShaderUniform(ShadowCasterPass.SHADOW_BIAS,"u_ShadowBias"),e.addShaderUniform(ShadowCasterPass.SHADOW_LIGHT_DIRECTION,"u_ShadowLightDirection"),e.addShaderUniform(ShadowCasterPass.SHADOW_SPLIT_SPHERES,"u_ShadowSplitSpheres"),e.addShaderUniform(ShadowCasterPass.SHADOW_MATRICES,"u_ShadowMatrices"),e.addShaderUniform(ShadowCasterPass.SHADOW_MAP_SIZE,"u_ShadowMapSize"),e.addShaderUniform(ShadowCasterPass.SHADOW_MAP,"u_ShadowMap"),e.addShaderUniform(ShadowCasterPass.SHADOW_PARAMS,"u_ShadowParams"),e.addShaderUniform(ShadowCasterPass.SHADOW_SPOTMAP_SIZE,"u_SpotShadowMapSize"),e.addShaderUniform(ShadowCasterPass.SHADOW_SPOTMAP,"u_SpotShadowMap"),e.addShaderUniform(ShadowCasterPass.SHADOW_SPOTMATRICES,"u_SpotViewProjectMatrix"),e.addShaderUniform(t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SHADOW),t.UniformBufferObject.UBONAME_SHADOW)}constructor(){this._shadowBias=new t.Vector4,this._shadowParams=new t.Vector4,this._shadowMapSize=new t.Vector4,this._shadowSpotMapSize=new t.Vector4,this._shadowMatrices=new Float32Array(16*ShadowCasterPass._maxCascades),this._shadowSpotMatrices=new t.Matrix4x4,this._splitBoundSpheres=new Float32Array(4*ShadowCasterPass._maxCascades),this._cascadeCount=0,this._shadowMapWidth=0,this._shadowMapHeight=0,this._shadowSliceDatas=[new ShadowSliceData,new ShadowSliceData,new ShadowSliceData,new ShadowSliceData],this._shadowSpotData=new ShadowSpotData,this._lightUp=new t.Vector3,this._lightSide=new t.Vector3,this._lightForward=new t.Vector3,this._shadowSpotData.cameraCullInfo.boundFrustum=new BoundFrustum(new t.Matrix4x4),t.Config3D._uniformBlock&&(this._castDepthBufferData=DepthCasterData.createDepthCasterUniformBlock(),this._castDepthBufferOBJ=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_SHADOW,0),this._castDepthBufferOBJ||(this._castDepthBufferOBJ=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_SHADOW,t.BufferUsage.Dynamic,this._castDepthBufferData.getbyteLength(),!0)),BaseCamera.createCameraUniformBlock(),this._castDepthCameraBufferData=BaseCamera.CameraUBOData.clone(),this._castDepthCameraBufferOBJ=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_CAMERA,1),this._castDepthCameraBufferOBJ||(this._castDepthCameraBufferOBJ=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_CAMERA,t.BufferUsage.Dynamic,this._castDepthCameraBufferData.getbyteLength(),!1)))}_setupShadowCasterShaderValues(a,r,i,n,s,o,l){switch(r.setVector(ShadowCasterPass.SHADOW_BIAS,o),l){case e.LightType.Directional:r.setVector3(ShadowCasterPass.SHADOW_LIGHT_DIRECTION,n);break;case e.LightType.Spot:r.setVector(ShadowCasterPass.SHADOW_PARAMS,s);case e.LightType.Point:}var h=i.cameraShaderValue;this._castDepthCameraBufferOBJ&&(h._addCheckUBO(t.UniformBufferObject.UBONAME_CAMERA,this._castDepthCameraBufferOBJ,this._castDepthCameraBufferData),h.setUniformBuffer(BaseCamera.CAMERAUNIFORMBLOCK,this._castDepthCameraBufferOBJ)),h.setMatrix4x4(BaseCamera.VIEWMATRIX,i.viewMatrix),h.setMatrix4x4(BaseCamera.PROJECTMATRIX,i.projectionMatrix),h.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX,i.viewProjectMatrix),r.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX,i.viewProjectMatrix),a.viewMatrix=i.viewMatrix,a.projectionMatrix=i.projectionMatrix,a.projectionViewMatrix=i.viewProjectMatrix}_setupShadowReceiverShaderValues(t){var a=this._light;switch(a.shadowCascadesMode!==e.ShadowCascadesMode.NoCascades?t.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE):t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE),a.shadowMode){case e.ShadowMode.Hard:t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case e.ShadowMode.SoftLow:t.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case e.ShadowMode.SoftHigh:t.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH),t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW)}t.setTexture(ShadowCasterPass.SHADOW_MAP,this._shadowDirectLightMap),t.setBuffer(ShadowCasterPass.SHADOW_MATRICES,this._shadowMatrices),t.setVector(ShadowCasterPass.SHADOW_MAP_SIZE,this._shadowMapSize),t.setVector(ShadowCasterPass.SHADOW_PARAMS,this._shadowParams),t.setBuffer(ShadowCasterPass.SHADOW_SPLIT_SPHERES,this._splitBoundSpheres)}_setupSpotShadowReceiverShaderValues(t){switch(this._light.shadowMode){case e.ShadowMode.Hard:t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);break;case e.ShadowMode.SoftLow:t.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW),t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);break;case e.ShadowMode.SoftHigh:t.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),t.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW)}t.setTexture(ShadowCasterPass.SHADOW_SPOTMAP,this._shadowSpotLightMap),t.setMatrix4x4(ShadowCasterPass.SHADOW_SPOTMATRICES,this._shadowSpotMatrices),t.setVector(ShadowCasterPass.SHADOW_SPOTMAP_SIZE,this._shadowSpotMapSize),t.setVector(ShadowCasterPass.SHADOW_PARAMS,this._shadowParams)}update(a,r,i){switch(this.cleanUp(),i){case e.ShadowLightType.DirectionLight:this._light=r;var n=(R=ShadowCasterPass._tempMatrix0).elements,s=this._lightUp,o=this._lightSide,l=this._lightForward;t.Matrix4x4.createFromQuaternion(r.owner._transform.rotation,R),o.setValue(n[0],n[1],n[2]),s.setValue(n[4],n[5],n[6]),l.setValue(-n[8],-n[9],-n[10]);var h,c,d,u,_=r._shadowResolution,m=r._shadowCascadesMode;m==e.ShadowCascadesMode.NoCascades?(h=1,c=_,d=_,u=_):(h=m==e.ShadowCascadesMode.TwoCascades?2:4,d=2*(c=ShadowUtils.getMaxTileResolutionInAtlas(_,_,h)),u=m==e.ShadowCascadesMode.TwoCascades?c:2*c),this._cascadeCount=h,this._shadowMapWidth=d,this._shadowMapHeight=u;var f=ShadowCasterPass._cascadesSplitDistance,S=ShadowCasterPass._frustumPlanes,g=a.nearPlane,p=Math.min(a.farPlane,r._shadowDistance),D=this._shadowMatrices,T=this._splitBoundSpheres;ShadowUtils.getCascadesSplitDistance(r._shadowTwoCascadeSplits,r._shadowFourCascadeSplits,g,p,a.fieldOfView*t.MathUtils3D.Deg2Rad,a.aspectRatio,m,f),ShadowUtils.getCameraFrustumPlanes(a.projectionViewMatrix,S);var E=ShadowCasterPass._tempVector30;a._transform.getForward(E),t.Vector3.normalize(E,E);for(var C=0;C<h;C++){var A=this._shadowSliceDatas[C];A.sphereCenterZ=ShadowUtils.getBoundSphereByFrustum(f[C],f[C+1],a.fieldOfView*t.MathUtils3D.Deg2Rad,a.aspectRatio,a._transform.position,E,A.splitBoundSphere),ShadowUtils.getDirectionLightShadowCullPlanes(S,C,f,g,l,A),ShadowUtils.getDirectionalLightMatrices(s,o,l,C,r._shadowNearPlane,c,A,D),h>1&&ShadowUtils.applySliceTransform(A,d,u,C,D)}ShadowUtils.prepareShadowReceiverShaderValues(r,d,u,this._shadowSliceDatas,h,this._shadowMapSize,this._shadowParams,D,T);break;case e.ShadowLightType.SpotLight:this._light=r;var R=ShadowCasterPass._tempMatrix0,x=(l=this._lightForward,this._light._shadowResolution);this._shadowMapWidth=x,this._shadowMapHeight=x;var M=this._shadowSpotData;ShadowUtils.getSpotLightShadowData(M,this._light,x,this._shadowParams,this._shadowSpotMatrices,this._shadowSpotMapSize);break;case e.ShadowLightType.PointLight:break;default:throw"There is no shadow of this type"}}render(a,r,i,n){switch(i){case e.ShadowLightType.DirectionLight:var s=r._shaderValues;a.pipelineMode="ShadowCaster",(f=this._shadowDirectLightMap=ShadowUtils.getTemporaryShadowTexture(this._shadowMapWidth,this._shadowMapHeight,e.ShadowMapFormat.bit16))._start(),a.destTarget=f;for(var o=this._light,l=0,h=this._cascadeCount;l<h;l++){var c=this._shadowSliceDatas[l];ShadowUtils.getShadowBias(o,c.projectionMatrix,c.resolution,this._shadowBias),this._setupShadowCasterShaderValues(a,s,c,this._lightForward,this._shadowParams,this._shadowBias,e.LightType.Directional);var d=FrustumCulling._shadowCullInfo;d.position=c.position,d.cullPlanes=c.cullPlanes,d.cullPlaneCount=c.cullPlaneCount,d.cullSphere=c.splitBoundSphere,d.direction=this._lightForward,r._directLightShadowCull(d,a),a.cameraShaderValue=c.cameraShaderValue,Camera._updateMark++;var u=c.resolution,_=c.offsetX,m=c.offsetY;t.LayaGL.renderEngine.viewport(_,m,u,u),t.LayaGL.renderEngine.scissor(_,m,u,u),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,null,1),r._opaqueQueue.elements.length>0&&(Viewport._tempViewport.set(_,m,u,u),ShadowCasterPass._tempVector4.setValue(_+1,m+1,u-2,u-2),a.viewport=Viewport._tempViewport,a.scissor=ShadowCasterPass._tempVector4,t.Stat.depthCastDrawCall+=r._opaqueQueue.renderQueue(a)),n._applyCasterPassCommandBuffer(a)}f._end(),this._setupShadowReceiverShaderValues(s),a.pipelineMode=a.configPipeLineMode;break;case e.ShadowLightType.SpotLight:s=r._shaderValues;a.pipelineMode="ShadowCaster";var f,S=this._light;(f=this._shadowSpotLightMap=ShadowUtils.getTemporaryShadowTexture(this._shadowMapWidth,this._shadowMapHeight,e.ShadowMapFormat.bit16))._start(),a.destTarget=f;var g=this._shadowSpotData;ShadowUtils.getShadowBias(S,g.projectionMatrix,g.resolution,this._shadowBias),this._setupShadowCasterShaderValues(a,s,g,this._light.owner.transform.position,this._shadowParams,this._shadowBias,e.LightType.Spot),r._sportLightShadowCull(g.cameraCullInfo,a),a.cameraShaderValue=g.cameraShaderValue,Camera._updateMark++,t.LayaGL.renderEngine.viewport(g.offsetX,g.offsetY,g.resolution,g.resolution),t.LayaGL.renderEngine.scissor(g.offsetX,g.offsetY,g.resolution,g.resolution),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,null,1),r._opaqueQueue.elements.length>0&&(a.changeViewport(g.offsetX,g.offsetY,g.resolution,g.resolution),a.changeScissor(g.offsetX,g.offsetY,g.resolution,g.resolution),t.Stat.depthCastDrawCall+=r._opaqueQueue.renderQueue(a)),n._applyCasterPassCommandBuffer(a),f._end(),this._setupSpotShadowReceiverShaderValues(s),a.pipelineMode=a.configPipeLineMode;break;case e.ShadowLightType.PointLight:break;default:throw"There is no shadow of this type"}}cleanUp(){this._shadowDirectLightMap&&t.RenderTexture.recoverToPool(this._shadowDirectLightMap),this._shadowSpotLightMap&&t.RenderTexture.recoverToPool(this._shadowSpotLightMap),this._shadowDirectLightMap=null,this._shadowSpotLightMap=null,this._light=null}}ShadowCasterPass._tempVector30=new t.Vector3,ShadowCasterPass._tempVector4=new t.Vector4,ShadowCasterPass._tempMatrix0=new t.Matrix4x4,ShadowCasterPass._maxCascades=4,ShadowCasterPass._cascadesSplitDistance=new Array(ShadowCasterPass._maxCascades+1),ShadowCasterPass._frustumPlanes=new Array;class BlitFrameBufferCMD{static __init__(){BlitFrameBufferCMD.shaderdata=t.LayaGL.renderOBJCreate.createShaderData(null),BlitFrameBufferCMD.GAMMAOUT=t.Shader3D.getDefineByName("GAMMAOUT")}static create(e,t,a,r=null,i=null,n=null,s=0){var o;return(o=BlitFrameBufferCMD._pool.length>0?BlitFrameBufferCMD._pool.pop():new BlitFrameBufferCMD)._source=e,o._dest=t,o._offsetScale=r,o.setshader(i,s,n),o._source&&o._texture_size.setValue(e.width,e.height,1/e.width,1/e.height),o._viewPort=a,o}constructor(){this._source=null,this._dest=null,this._offsetScale=null,this._texture_size=null,this._shader=null,this._shaderData=null,this._subShader=0,this._viewPort=null,this._transform3D=t.LayaGL.renderOBJCreate.createTransform(null),this._renderElement=new RenderElement,this._renderElement.setTransform(this._transform3D),this._renderElement.setGeometry(ScreenQuad.instance),this._texture_size=new t.Vector4}set shaderData(e){this._shaderData=e||BlitFrameBufferCMD.shaderdata,this._renderElement._renderElementOBJ._materialShaderData=this._shaderData}setshader(e,t,a){this._shader=e||Command._screenShader,this._subShader=t||0,this.shaderData=a,this._renderElement.renderSubShader=this._shader.getSubShaderAt(this._subShader)}run(){if(!this._source||!this._viewPort)return;var e=this._source,a=this._dest,r=this._shader,i=this._shaderData,n=this._viewPort;let s=RenderContext3D.clientHeight-n.y-n.height,o=RenderContext3D._instance;o.changeViewport(n.x,s,n.width,n.height),o.changeScissor(n.x,s,n.width,n.height),i.setTexture(Command.SCREENTEXTURE_ID,e),i.setVector(Command.SCREENTEXTUREOFFSETSCALE_ID,this._offsetScale||BlitFrameBufferCMD._defaultOffsetScale),e&&i.setVector(Command.MAINTEXTURE_TEXELSIZE_ID,this._texture_size),t.RenderTexture.currentActive&&t.RenderTexture.currentActive._end(),a?(a._start(),i.removeDefine(BlitFrameBufferCMD.GAMMAOUT)):i.addDefine(BlitFrameBufferCMD.GAMMAOUT),r.getSubShaderAt(this._subShader)._passes,ScreenQuad.instance.invertY=!1,o.destTarget=a,o._contextOBJ.applyContext(Camera._updateMark),o.drawRenderElement(this._renderElement)}recover(){BlitFrameBufferCMD._pool.push(this),this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,this._viewPort=null}}BlitFrameBufferCMD._pool=[],BlitFrameBufferCMD._defaultOffsetScale=new t.Vector4(0,0,1,1);class SceneRenderManager{constructor(){this._sceneManagerOBJ=t.LayaGL.renderOBJCreate.createSceneRenderManager()}get list(){return this._sceneManagerOBJ.list}set list(e){this._sceneManagerOBJ.list=e}addRenderObject(e){this._sceneManagerOBJ.addRenderObject(e)}removeRenderObject(e){this._sceneManagerOBJ.removeRenderObject(e)}removeMotionObject(e){this._sceneManagerOBJ.removeMotionObject(e)}updateMotionObjects(){this._sceneManagerOBJ.updateMotionObjects()}addMotionObject(e){this._sceneManagerOBJ.addMotionObject(e)}destroy(){this._sceneManagerOBJ.destroy()}}class UI3DManager{constructor(){this._UI3Dlist=new t.SingletonList}add(e){this._UI3Dlist.add(e)}remove(e){this._UI3Dlist.remove(e)}update(){let e=this._UI3Dlist.elements;for(var t=0,a=this._UI3Dlist.length;t<a;t++)e[t]._submitRT()}rayCast(e){let t=e.origin;this._UI3Dlist.clean(),this._UI3Dlist.elements.sort(((e,a)=>e._getCameraDistance(t)-a._getCameraDistance(t)));let a=this._UI3Dlist.elements;for(var r=0,i=this._UI3Dlist.length;r<i;r++){let t=a[r]._checkUIPos(e);if(t)return t}return null}destory(){this._UI3Dlist.destroy()}}class BVHSpatialManager{constructor(){this.cellCount=0,this.bvhManager=new Map,this.updateBVHBoxList=new t.SingletonList}clear(){this.cellCount=0,this.updateBVHBoxList.clear()}destroy(){this.bvhManager=null,this.updateBVHBoxList.destroy()}}class BVHSpatialConfig{constructor(){this.max_SpatialCount=7,this.limit_size=32,this.Min_BVH_Build_Nums=10}}class BVHSpatialBox{static sciContainsBox(e,t){const a=BVHSpatialBox._tempV3,r=BVHSpatialBox._tempV3_2,i=e.min,n=e.max;let s=ContainmentType.Contains;for(let e=0,o=t.cullPlaneCount;e<o;e++){const o=t.cullPlanes[e],l=o.normal;if(l.x>=0?(a.x=n.x,r.x=i.x):(a.x=i.x,r.x=n.x),l.y>=0?(a.y=n.y,r.y=i.y):(a.y=i.y,r.y=n.y),l.z>=0?(a.z=n.z,r.z=i.z):(a.z=i.z,r.z=n.z),CollisionUtils.intersectsPlaneAndPoint(o,a)===Plane.PlaneIntersectionType_Back)return ContainmentType.Disjoint;CollisionUtils.intersectsPlaneAndPoint(o,r)===Plane.PlaneIntersectionType_Back&&(s=ContainmentType.Intersects)}return s}static sciIntersectsBox(e,t){const a=t.cullPlaneCount,r=t.cullPlanes,i=e.min,n=e.max,s=i.x,o=i.y,l=i.z,h=n.x,c=n.y,d=n.z;let u=!0;for(let e=0;e<a;e++){const t=r[e],a=t.normal;if(t.distance+a.x*(a.x<0?s:h)+a.y*(a.y<0?o:c)+a.z*(a.z<0?l:d)<0){u=!1;break}}return u}constructor(e,a){this._bounds=new Bounds(new t.Vector3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),new t.Vector3(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)),this._cellList=[],this._cellCount=0,this._bvhmanager=e,this._config=a}set parent(e){this._parent=e}get parent(){return this._parent}_isRepeat(e){return-1!=this._cellList.indexOf(e)}_addOneCell(e){this._cellList.push(e),this._cellCount++,this._bvhmanager.bvhManager.set(e.id,this),this._bvhmanager.cellCount++}_removeOneCell(e){let t=this._cellList.indexOf(e);return-1!=t&&(this._cellCount--,this._cellList.splice(t,1),this._bvhmanager.bvhManager.delete(e.id),this._bvhmanager.cellCount--,!0)}_clearList(){this._bvhmanager.cellCount-=this._cellCount,this._cellCount=0,this._cellList=null}_isFloatMax(e,t){return e-t>1e-4}_isBoundsContainedBySpatialBox(e){let t=e.bounds.getMin(),a=e.bounds.getMax(),r=this._bounds.getMin(),i=this._bounds.getMax();return!(this._isFloatMax(t.x,r.x)&&this._isFloatMax(t.y,r.y)&&this._isFloatMax(t.z,r.z)&&this._isFloatMax(i.x,a.x)&&this._isFloatMax(i.y,a.y)&&this._isFloatMax(i.z,a.z))}_addBounds(e){this._boundchanged=this._isBoundsContainedBySpatialBox(e)}_removeBounds(e){this._boundchanged=this._isBoundsContainedBySpatialBox(e)}getList(){return this._cellList}getchild0(){return this._children0}getchild1(){return this._children1}fillCell(e){this._isRepeat(e)||(this._addOneCell(e),this._boundchanged=!0,this._bvhmanager.updateBVHBoxList.add(this))}fillRemove(e){this._isRepeat(e)&&(this._removeOneCell(e),this._boundchanged=!0,this._bvhmanager.updateBVHBoxList.add(this))}addCell(e){this._isRepeat(e)||(this._addOneCell(e),this._addBounds(e))}removeCell(e){this._removeOneCell(e)&&this._removeBounds(e)}splitBox(){if(!this.isContentBox())return this._children0&&this._children0.splitBox(),void(this._children1&&this._children1.splitBox());let e=this._bounds.getExtent();if(this._config.max_SpatialCount>this._cellCount&&this._config.limit_size>=2*Math.max(e.x,e.y,e.z)||this._cellCount<=1)return;e.x>e.y&&e.x>e.z?this._cellList.sort(((e,t)=>e&&t?e.bounds.getCenter().x-t.bounds.getCenter().x:0)):e.y>e.x&&e.y>e.z?this._cellList.sort(((e,t)=>e&&t?e.bounds.getCenter().y-t.bounds.getCenter().y:0)):e.z>e.x&&e.z>e.y&&this._cellList.sort(((e,t)=>e&&t?e.bounds.getCenter().z-t.bounds.getCenter().z:0));const t=this._cellCount/2|0;this._children0=this._creatChildNode(),this._children0.parent=this;for(let e=0;e<t;e++){const t=this._cellList[e];this._children0.fillCell(t),Bounds.merge(this._children0._bounds,t.bounds,this._children0._bounds)}this._children0._boundchanged=!1,this._children0.splitBox(),this._children1=this._creatChildNode(),this._children1.parent=this;for(let e=t;e<this._cellCount;e++){const t=this._cellList[e];this._children1.fillCell(t),Bounds.merge(this._children1._bounds,t.bounds,this._children1._bounds)}this._children1._boundchanged=!1,this._children1.splitBox(),this._clearList()}getNearlist(e){if(this.isContentBox())return this;{let a=this._children0._bounds.getCenter(),r=this._children1._bounds.getCenter();return t.Vector3.distanceSquared(a,e)<t.Vector3.distanceSquared(r,e)?this._children0.getNearlist(e):this._children1.getNearlist(e)}}traverseBoundsCell(e){if(this.isContentBox())for(var t=0;t<this._cellCount;t++)e.add(this._cellList[t]);else this._children0&&this._children0.traverseBoundsCell(e),this._children1&&this._children1.traverseBoundsCell(e)}_creatChildNode(){return new BVHSpatialBox(this._bvhmanager,this._config)}getItemByCameraCullInfo(e,t){var a=e.boundFrustum;const r=a.containsBoundBox(this._bounds);if(1==r)this.traverseBoundsCell(t);else if(2==r)if(this.isContentBox())for(let e=0;e<this._cellList.length;e++)a.intersects(this._cellList[e].bounds)&&t.add(this._cellList[e]);else this._children0.getItemByCameraCullInfo(e,t),this._children1.getItemByCameraCullInfo(e,t)}getItemByFrustum(e,t){const a=e.containsBoundBox(this._bounds);if(1==a)this.traverseBoundsCell(t);else if(2==a)if(this.isContentBox())for(let a=0;a<this._cellList.length;a++)e.intersects(this._cellList[a].bounds)&&t.add(this._cellList[a]);else this._children0.getItemByFrustum(e,t),this._children1.getItemByFrustum(e,t)}getItemBySCI(e,t){const a=BVHSpatialBox.sciContainsBox(this._bounds,e);if(1==a)this.traverseBoundsCell(t);else if(2==a)if(this.isContentBox())for(let a=0;a<this._cellList.length;a++)BVHSpatialBox.sciIntersectsBox(this._cellList[a].bounds,e)&&t.add(this._cellList[a]);else this._children0.getItemBySCI(e,t),this._children1.getItemBySCI(e,t)}recaculateBox(){if(this._children0&&this._children1)Bounds.merge(this._children0._bounds,this._children1._bounds,this._bounds);else if(this._cellList&&this._cellList.length>=1){this._cellList[0].bounds.cloneTo(this._bounds);for(var e=0,t=this._cellList.length;e<t;e++)Bounds.merge(this._cellList[e].bounds,this._bounds,this._bounds)}else console.error("BVHSpatialBox is illegal");this.parent&&this.parent.recaculateBox(),this._boundchanged=!1}isRoot(){return!this._parent}isContentBox(){return 0!=this._cellCount}destroy(){this.isContentBox()?this._cellList=null:(this._children0&&this._children0.destroy(),this._children1&&this._children1.destroy(),this._children0=null,this._children1=null),this._bounds=null,this._config=null,this._bvhmanager=null}}BVHSpatialBox._tempV3=new t.Vector3,BVHSpatialBox._tempV3_2=new t.Vector3;class BVHSpatial{_creatChildNode(){return new BVHSpatialBox(this._BVHManager,this._BVHConfig)}constructor(e=null,t=null){this._isBuild=!1,this._BVHConfig=e||new BVHSpatialConfig,this._BVHManager=t||new BVHSpatialManager,this._BVHSpatialBox=this._creatChildNode()}get bvhSpatialBox(){return this._BVHSpatialBox}cellLegal(e){let t=e.bounds.getExtent();return this._BVHConfig.limit_size>2*Math.max(t.x,t.y,t.z)}addOne(e){if(!this.cellLegal(e))return!1;if(this._isBuild){let t=this._BVHSpatialBox.getNearlist(e.bounds.getCenter());t.addCell(e),this._BVHManager.updateBVHBoxList.add(t)}else this._BVHSpatialBox.fillCell(e);return!0}removeOne(e){if(!this._BVHManager.bvhManager.has(e.id))return!1;if(this._isBuild){let t=this._BVHManager.bvhManager.get(e.id);t.removeCell(e),this._BVHManager.updateBVHBoxList.add(t)}else this._BVHSpatialBox.fillRemove(e);return!0}motionOne(e){this._BVHSpatialBox.getNearlist(e.bounds.getCenter())!=this._BVHManager.bvhManager.get(e.id)&&(this.removeOne(e),this.addOne(e))}getItemByCameraCullInfo(e,t){this._BVHManager.updateBVHBoxList.length>0&&this.update(),this._isBuild?this._BVHSpatialBox.getItemByCameraCullInfo(e,t):this._BVHSpatialBox.traverseBoundsCell(t)}getItemByFrustum(e,t){this._BVHManager.updateBVHBoxList.length>0&&this.update(),this._isBuild?this._BVHSpatialBox.getItemByFrustum(e,t):this._BVHSpatialBox.traverseBoundsCell(t)}getItemBySCI(e,t){this._BVHManager.updateBVHBoxList.length>0&&this.update(),this._isBuild?this._BVHSpatialBox.getItemBySCI(e,t):this._BVHSpatialBox.traverseBoundsCell(t)}update(){if(this._isBuild){let e=this._BVHManager.updateBVHBoxList;for(let t=0,a=e.length;t<a;t++){let a=e.elements[t];a._boundchanged&&a.recaculateBox(),a.splitBox()}e.length=0}else this._BVHManager.cellCount>this._BVHConfig.Min_BVH_Build_Nums&&(this._BVHSpatialBox.recaculateBox(),this._BVHSpatialBox.splitBox(),this._BVHManager.updateBVHBoxList.remove(this._BVHSpatialBox),this._isBuild=!0),this._BVHManager.updateBVHBoxList.length=0}rebuild(){if(this._isBuild){let e=new t.SingletonList;this._BVHSpatialBox.traverseBoundsCell(e),this._BVHSpatialBox.destroy(),this._BVHManager.clear(),this._isBuild=!1,this._BVHSpatialBox=this._creatChildNode();for(let t=0,a=e.length;t<a;t++)this.addOne(e.elements[t]);this._BVHSpatialBox.recaculateBox(),this._BVHSpatialBox.splitBox()}}destroy(){this._BVHSpatialBox.destroy(),this._BVHManager.destroy()}}class BVHRenderBox extends BVHSpatialBox{_creatChildNode(){return new BVHRenderBox(this._bvhmanager,this._config)}getItemByCameraCullInfo(e,a){var r=e.boundFrustum;const i=r.containsBoundBox(this._bounds);if(1==i)this.traverseBoundsCell(a),t.Stat.frustumCulling++;else if(2==i)if(this.isContentBox()){var n=e.cullingMask;let i=e.staticMask,s=RenderContext3D._instance;for(let o=0;o<this._cellList.length;o++){let l=this._cellList[o];0!=(Math.pow(2,l.renderNode.layer)&n)&&l._enabled&&0==l.renderbitFlag&&0!=(l.renderNode.staticMask&i)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!l._needRender(r,s)||a.add(l))}}else this._children0.getItemByCameraCullInfo(e,a),this._children1.getItemByCameraCullInfo(e,a)}getItemBySCI(e,a){const r=BVHSpatialBox.sciContainsBox(this._bounds,e);if(1==r)this.traverseBoundsCell(a);else if(2==r)if(this.isContentBox())for(let r=0;r<this._cellList.length;r++){var i=this._cellList[r];if(i.castShadow&&i._enabled&&0==i.renderbitFlag){t.Stat.frustumCulling++,FrustumCulling.cullingRenderBounds(i.bounds,e)&&a.add(i)}}else this._children0.getItemBySCI(e,a),this._children1.getItemBySCI(e,a)}}class BVHRenderSpatial extends BVHSpatial{_creatChildNode(){return new BVHRenderBox(this._BVHManager,this._BVHConfig)}cellLegal(t){return!(t.renderNode.staticMask!=e.StaticFlag.StaticBatch||!super.cellLegal(t))}}class BVHSceneRenderManager extends SceneRenderManager{constructor(e=null){super(),this._bvhRenderSpatial=new BVHRenderSpatial(e),this._allRenderList=new t.SingletonList}get list(){return this._allRenderList}set list(e){for(let t=0,a=e.length;t<a;t++){let a=e.elements[t];this.addRenderObject(a)}}get bvhSpatial(){return this._bvhRenderSpatial}get otherList(){return this._sceneManagerOBJ.list}addRenderObject(e){this._bvhRenderSpatial.addOne(e)||this._sceneManagerOBJ.addRenderObject(e),this._allRenderList.add(e)}removeRenderObject(e){this._bvhRenderSpatial.removeOne(e)||this._sceneManagerOBJ.removeRenderObject(e),this._allRenderList.remove(e)}removeMotionObject(e){this._sceneManagerOBJ.removeMotionObject(e)}updateMotionObjects(){this._bvhRenderSpatial.update(),this._sceneManagerOBJ.updateMotionObjects()}addMotionObject(e){this._bvhRenderSpatial.cellLegal(e)?this._bvhRenderSpatial.motionOne(e):this._sceneManagerOBJ.addMotionObject(e)}destroy(){this._sceneManagerOBJ.destroy(),this._bvhRenderSpatial.destroy(),this._allRenderList.destroy()}}class CullPassBase{constructor(){this._cullList=new t.SingletonList}get cullList(){return this._cullList}static cullDistanceVolume(e,a){let r=e.camera;if(!r||!r.transform)return!1;let i=a.bounds,n=i.getCenter(),s=i.getExtent(),o=t.Vector3.distance(r.transform.position,n);return!(Math.max(s.x,s.y,s.z)/o<a._ratioIgnor)}cullByCameraCullInfo(e,a){this._cullList.length=0;var r=a.list.elements,i=e.boundFrustum,n=e.cullingMask;let s=e.staticMask,o=RenderContext3D._instance;for(var l=0,h=a.list.length;l<h;l++){var c=r[l];0!=(Math.pow(2,c.renderNode.layer)&n)&&c._enabled&&0==c.renderbitFlag&&0!=(c.renderNode.staticMask&s)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!c._needRender(i,o)||this.cullList.add(c))}}cullByShadowCullInfo(e,a){this._cullList.length=0;for(var r=a.list,i=r.elements,n=0,s=r.length;n<s;n++){var o=i[n];if(o.castShadow&&o._enabled&&0==o.renderbitFlag){t.Stat.frustumCulling++,FrustumCulling.cullingRenderBounds(o.bounds,e)&&this._cullList.add(o)}}}cullingSpotShadow(e,a){this._cullList.length=0;let r=a.list.elements,i=e.boundFrustum,n=RenderContext3D._instance;for(let e=0,s=a.list.length;e<s;e++){let a=r[e];a.castShadow&&a._enabled&&0==a.renderbitFlag&&(t.Stat.frustumCulling++,a._needRender(i,n)&&this._cullList.add(a))}}}class BVHCullPass extends CullPassBase{constructor(){super(...arguments),this._cullList=new t.SingletonList}get cullList(){return this._cullList}cullByCameraCullInfo(e,a){this._cullList.length=0,a.bvhSpatial.getItemByCameraCullInfo(e,this._cullList);var r=a.otherList,i=r.elements,n=e.boundFrustum,s=e.cullingMask;let o=e.staticMask,l=RenderContext3D._instance;for(var h=0,c=r.length;h<c;h++){var d=i[h];0!=(Math.pow(2,d.renderNode.layer)&s)&&d._enabled&&0==d.renderbitFlag&&0!=(d.renderNode.staticMask&o)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!d._needRender(n,l)||this.cullList.add(d))}}cullByShadowCullInfo(e,a){this._cullList.length=0,a.bvhSpatial.getItemBySCI(e,this._cullList);for(var r=a.otherList,i=r.elements,n=0,s=r.length;n<s;n++){var o=i[n];if(o.castShadow&&o._enabled&&0==o.renderbitFlag){t.Stat.frustumCulling++,FrustumCulling.cullingRenderBounds(o.bounds,e)&&this._cullList.add(o)}}}cullingSpotShadow(e,t){}}e.FogMode=void 0,(T=e.FogMode||(e.FogMode={}))[T.Linear=0]="Linear",T[T.EXP=1]="EXP",T[T.EXP2=2]="EXP2";class Scene3D extends t.Sprite{static set _updateMark(e){Scene3D.__updateMark=e}static get _updateMark(){return Scene3D.__updateMark}static shaderValueInit(){Scene3DShaderDeclaration.SHADERDEFINE_FOG=t.Shader3D.getDefineByName("FOG"),Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR=t.Shader3D.getDefineByName("FOG_LINEAR"),Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP=t.Shader3D.getDefineByName("FOG_EXP"),Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2=t.Shader3D.getDefineByName("FOG_EXP2"),Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT=t.Shader3D.getDefineByName("DIRECTIONLIGHT"),Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT=t.Shader3D.getDefineByName("POINTLIGHT"),Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT=t.Shader3D.getDefineByName("SPOTLIGHT"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW=t.Shader3D.getDefineByName("SHADOW"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE=t.Shader3D.getDefineByName("SHADOW_CASCADE"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW=t.Shader3D.getDefineByName("SHADOW_SOFT_SHADOW_LOW"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH=t.Shader3D.getDefineByName("SHADOW_SOFT_SHADOW_HIGH"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT=t.Shader3D.getDefineByName("SHADOW_SPOT"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW=t.Shader3D.getDefineByName("SHADOW_SPOT_SOFT_SHADOW_LOW"),Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH=t.Shader3D.getDefineByName("SHADOW_SPOT_SOFT_SHADOW_HIGH"),Scene3D.FOGCOLOR=t.Shader3D.propertyNameToID("u_FogColor"),Scene3D.FOGPARAMS=t.Shader3D.propertyNameToID("u_FogParams"),Scene3D.DIRECTIONLIGHTCOUNT=t.Shader3D.propertyNameToID("u_DirationLightCount"),Scene3D.LIGHTBUFFER=t.Shader3D.propertyNameToID("u_LightBuffer"),Scene3D.CLUSTERBUFFER=t.Shader3D.propertyNameToID("u_LightClusterBuffer"),Scene3D.TIME=t.Shader3D.propertyNameToID("u_Time"),Scene3D.GIRotate=t.Shader3D.propertyNameToID("u_GIRotate"),Scene3D.SCENEUNIFORMBLOCK=t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SCENE);let e=Scene3D.sceneUniformMap=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Scene3D");e.addShaderUniform(Scene3D.FOGCOLOR,"u_FogColor"),e.addShaderUniform(Scene3D.FOGPARAMS,"u_FogParams"),e.addShaderUniform(Scene3D.DIRECTIONLIGHTCOUNT,"u_DirationLightCount"),e.addShaderUniform(Scene3D.LIGHTBUFFER,"u_LightBuffer"),e.addShaderUniform(Scene3D.CLUSTERBUFFER,"u_LightClusterBuffer"),e.addShaderUniform(Scene3D.TIME,"u_Time"),e.addShaderUniform(Scene3D.GIRotate,"u_GIRotate"),e.addShaderUniform(Scene3D.SCENEUNIFORMBLOCK,t.UniformBufferObject.UBONAME_SCENE)}static legacyLightingValueInit(){Scene3D.LIGHTDIRECTION=t.Shader3D.propertyNameToID("u_DirectionLight.direction"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.LIGHTDIRECTION,"u_DirectionLight.direction"),Scene3D.LIGHTDIRCOLOR=t.Shader3D.propertyNameToID("u_DirectionLight.color"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.LIGHTDIRCOLOR,"u_DirectionLight.color"),Scene3D.LIGHTMODE=t.Shader3D.propertyNameToID("u_DirectionLight.lightMode"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.LIGHTMODE,"u_DirectionLight.lightMode"),Scene3D.POINTLIGHTPOS=t.Shader3D.propertyNameToID("u_PointLight.position"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTPOS,"u_PointLight.position"),Scene3D.POINTLIGHTRANGE=t.Shader3D.propertyNameToID("u_PointLight.range"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTRANGE,"u_PointLight.range"),Scene3D.POINTLIGHTATTENUATION=t.Shader3D.propertyNameToID("u_PointLight.attenuation"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTATTENUATION,"u_PointLight.attenuation"),Scene3D.POINTLIGHTCOLOR=t.Shader3D.propertyNameToID("u_PointLight.color"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTCOLOR,"u_PointLight.color"),Scene3D.POINTLIGHTMODE=t.Shader3D.propertyNameToID("u_PointLight.lightMode"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTMODE,"u_PointLight.lightMode"),Scene3D.SPOTLIGHTPOS=t.Shader3D.propertyNameToID("u_SpotLight.position"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTPOS,"u_SpotLight.position"),Scene3D.SPOTLIGHTDIRECTION=t.Shader3D.propertyNameToID("u_SpotLight.direction"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTDIRECTION,"u_SpotLight.direction"),Scene3D.SPOTLIGHTSPOTANGLE=t.Shader3D.propertyNameToID("u_SpotLight.spot"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTSPOTANGLE,"u_SpotLight.spot"),Scene3D.SPOTLIGHTRANGE=t.Shader3D.propertyNameToID("u_SpotLight.range"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTRANGE,"u_SpotLight.range"),Scene3D.SPOTLIGHTCOLOR=t.Shader3D.propertyNameToID("u_SpotLight.color"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTCOLOR,"u_SpotLight.color"),Scene3D.SPOTLIGHTMODE=t.Shader3D.propertyNameToID("u_SpotLight.lightMode"),Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTMODE,"u_SpotLight.lightMode")}static createSceneUniformBlock(){let e=new Map;e.set("u_Time",t.UniformBufferParamsType.Number),e.set("u_FogParams",t.UniformBufferParamsType.Vector4),e.set("u_FogColor",t.UniformBufferParamsType.Vector4);let a=new Map;return e.forEach(((e,r)=>{a.set(t.Shader3D.propertyNameToID(r),e)})),new t.UnifromBufferData(a)}static __init__(){if(t.Config3D._multiLighting){const r=4;var e=t.Config3D.maxLightCount,a=t.Config3D.lightClusterCount;Cluster.instance=new Cluster(a.x,a.y,a.z,Math.min(t.Config3D.maxLightCount,t.Config3D._maxAreaLightCountPerClusterAverage)),Scene3D._lightTexture=Utils3D._createFloatTextureBuffer(r,e),Scene3D._lightTexture.lock=!0,Scene3D._lightPixles=new Float32Array(e*r*4)}Scene3D.shaderValueInit();var r=t.Shader3D._configDefineValues;t.Config3D._multiLighting||(r.add(t.Shader3D.SHADERDEFINE_LEGACYSINGALLIGHTING),Scene3D.legacyLightingValueInit()),Scene3D._shadowCasterPass=new ShadowCasterPass,t.LayaGL.renderEngine.getCapable(t.RenderCapable.GRAPHICS_API_GLES3)?r.add(t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES3):r.add(t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES2),t.Config3D._uniformBlock&&r.add(t.Shader3D.SHADERDEFINE_ENUNIFORMBLOCK),Physics3D._bullet&&(Scene3D.physicsSettings=new PhysicsSettings),t.LayaGL.renderEngine.getCapable(t.RenderCapable.TextureFormat_R32G32B32A32)&&r.add(t.Shader3D.SHADERDEFINE_FLOATTEXTURE),t.LayaGL.renderEngine.getCapable(t.RenderCapable.Texture_FloatLinearFiltering)&&r.add(t.Shader3D.SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR)}static load(e,a){t.ILaya.loader.load(e).then((e=>{if(a){let r;if(e){let a=e.create();r=a instanceof t.Scene?a._scene3D:a}a.runWith([r])}}))}set sceneRenderableManager(e){e.list=this._sceneRenderManager.list,this._sceneRenderManager=e}get sceneRenderableManager(){return this._sceneRenderManager}set cullPass(e){this._cullPass=e}get enableFog(){return this._enableFog}set enableFog(e){this._enableFog!==e&&(this._enableFog=e,e?this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG):this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG))}get fogMode(){return this._fogMode}set fogMode(t){switch(this._fogMode=t,t){case e.FogMode.Linear:this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR),this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP),this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2);break;case e.FogMode.EXP:this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP),this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR),this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2);break;case e.FogMode.EXP2:this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2),this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR),this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP)}}get fogColor(){return this._shaderValues.getColor(Scene3D.FOGCOLOR)}set fogColor(e){this._shaderValues.setColor(Scene3D.FOGCOLOR,e)}get fogStart(){return this._fogParams.x}set fogStart(e){this._fogParams.x=e,this.fogParams=this._fogParams}get fogEnd(){return this._fogParams.y}set fogEnd(e){this._fogParams.y=e,this.fogParams=this._fogParams}get fogDensity(){return this._fogParams.z}set fogDensity(e){this._fogParams.z=e,this.fogParams=this._fogParams}get fogParams(){return this._shaderValues.getVector(Scene3D.FOGPARAMS)}set fogParams(e){this._shaderValues.setVector(Scene3D.FOGPARAMS,e)}set GIRotate(e){this._shaderValues.setNumber(Scene3D.GIRotate,e)}get GIRotate(){return this._shaderValues.getNumber(Scene3D.GIRotate)}get ambientMode(){return this._sceneReflectionProb.ambientMode}set ambientMode(e){this._sceneReflectionProb.ambientMode=e}get sceneReflectionProb(){return this._sceneReflectionProb}set sceneReflectionProb(e){this._sceneReflectionProb=e}get ambientColor(){return this._sceneReflectionProb.ambientColor}set ambientColor(e){this._sceneReflectionProb.ambientColor=e}get ambientIntensity(){return this._sceneReflectionProb.ambientIntensity}set ambientIntensity(e){this._sceneReflectionProb.ambientIntensity=e}get reflectionIntensity(){return this._sceneReflectionProb.reflectionIntensity}set reflectionIntensity(e){this._sceneReflectionProb.reflectionIntensity=e}get ambientSH(){return this._sceneReflectionProb.ambientSH}set ambientSH(e){this._sceneReflectionProb.ambientSH=e}get iblTex(){return this._sceneReflectionProb.iblTex}set iblTex(e){this._sceneReflectionProb.iblTex=e}get iblTexRGBD(){return this._sceneReflectionProb.iblTexRGBD}set iblTexRGBD(e){this._sceneReflectionProb.iblTexRGBD=e}get skyRenderer(){return this._skyRenderer}get physicsSimulation(){return this._physicsSimulation}get timer(){return this._timer}set timer(e){this._timer=e}get lightmaps(){return this._lightmaps.slice()}set lightmaps(e){var t=this._lightmaps;if(t)for(var a=0,r=t.length;a<r;a++){(n=t[a]).lightmapColor&&n.lightmapColor._removeReference(),n.lightmapDirection&&n.lightmapDirection._removeReference()}if(e){var i=e.length;for(t.length=i,a=0;a<i;a++){var n;(n=e[a]).lightmapColor&&n.lightmapColor._addReference(),n.lightmapDirection&&n.lightmapDirection._addReference(),t[a]=n}}else t.length=0}get shadowMapFrequency(){return this._ShadowMapupdateFrequency}set shadowMapFrequency(e){this._ShadowMapupdateFrequency=e}constructor(){if(super(),this._reflectionsSource=0,this._reflectionsResolution="256",this._reflectionsIblSamples=128,this._lightCount=0,this._pointLights=new LightQueue,this._spotLights=new LightQueue,this._directionLights=new LightQueue,this._alternateLights=new AlternateLightQueue,this._lightmaps=[],this._skyRenderer=new SkyRenderer,this._time=0,this._sunColor=new t.Color(1,1,1),this._sundir=new t.Vector3,this._id=Scene3D.sceneID++,this._physicsdisableSimulation=!1,this._collsionTestList=[],this._key=new t.SubmitKey,this._opaqueQueue=t.LayaGL.renderOBJCreate.createBaseRenderQueue(!1),this._transparentQueue=t.LayaGL.renderOBJCreate.createBaseRenderQueue(!0),this._cameraPool=[],this._UI3DManager=new UI3DManager,this.currentCreationLayer=Math.pow(2,0),this.enableLight=!0,this._ShadowMapupdateFrequency=1,this._is3D=!0,this._componentDriver=new t.ComponentDriver,this._timer=t.ILaya.timer,t.LayaEnv.isConch&&!window.conchConfig.conchWebGL&&(this._nativeObj=new window.conchSubmitScene3D(this.renderSubmit.bind(this))),Physics3D._bullet&&(this._physicsSimulation=new PhysicsSimulation(Scene3D.physicsSettings)),this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(null),this._shaderValues._defineDatas.addDefineDatas(t.Shader3D._configDefineValues),t.Config3D._uniformBlock&&(this._sceneUniformObj=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_SCENE,0),this._sceneUniformData=Scene3D.createSceneUniformBlock(),this._sceneUniformObj||(this._sceneUniformObj=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_SCENE,t.BufferUsage.Dynamic,this._sceneUniformData.getbyteLength(),!0)),this._shaderValues._addCheckUBO(t.UniformBufferObject.UBONAME_SCENE,this._sceneUniformObj,this._sceneUniformData),this._shaderValues.setUniformBuffer(Scene3D.SCENEUNIFORMBLOCK,this._sceneUniformObj),this._shaderValues._addCheckUBO(t.UniformBufferObject.UBONAME_SHADOW,Scene3D._shadowCasterPass._castDepthBufferOBJ,Scene3D._shadowCasterPass._castDepthBufferData),this._shaderValues.setUniformBuffer(t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SHADOW),Scene3D._shadowCasterPass._castDepthBufferOBJ)),this._fogParams=new t.Vector4(300,1e3,.01,0),this.enableFog=!1,this.fogStart=300,this.fogEnd=1e3,this.fogDensity=.01,this.fogColor=new t.Color(.7,.7,.7),this.fogMode=e.FogMode.Linear,this.GIRotate=0,this._scene=this,t.Config3D.useBVHCull){let e=new BVHSpatialConfig;e.Min_BVH_Build_Nums=t.Config3D.BVH_Min_Build_nums,e.limit_size=t.Config3D.BVH_limit_size,e.max_SpatialCount=t.Config3D.BVH_max_SpatialCount,this._sceneRenderManager=new BVHSceneRenderManager(e),this._cullPass=new BVHCullPass}else this._sceneRenderManager=new SceneRenderManager,this._cullPass=t.LayaGL.renderOBJCreate.createCullPass();t.Config3D.debugFrustumCulling,this._volumeManager=new VolumeManager,this._UI3DManager=new UI3DManager,this.sceneReflectionProb=this._volumeManager.reflectionProbeManager.sceneReflectionProbe,this._sceneReflectionProb.reflectionIntensity=1,this.ambientColor=new t.Color(.212,.227,.259)}_update(){var e=this.timer._delta/1e3;this._time+=e,this._shaderValues.setNumber(Scene3D.TIME,this._time);let a=this._physicsSimulation;t.LayaEnv.isPlaying&&Physics3D._enablePhysics&&!PhysicsSimulation.disableSimulation&&t.Stat.enablePhysicsUpdate&&(a._updatePhysicsTransformFromRender(),PhysicsComponent._addUpdateList=!1,a._simulate(e),a._updateCharacters(),PhysicsComponent._addUpdateList=!0,a._updateCollisions(),a.dispatchCollideEvent()),this._volumeManager.needreCaculateAllRenderObjects()?this._volumeManager.reCaculateAllRenderObjects(this._sceneRenderManager.list):this._volumeManager.handleMotionlist(),this._componentDriver.callStart(),this._componentDriver.callUpdate(),this._componentDriver.callLateUpdate(),this._componentDriver.callDestroy(),this._sceneRenderManager.updateMotionObjects(),this._renderByEditor||this._UI3DManager.update()}_binarySearchIndexInCameraPool(e){for(var t,a=0,r=this._cameraPool.length-1;a<=r;){t=Math.floor((a+r)/2);var i=this._cameraPool[t]._renderingOrder;if(i==e._renderingOrder)return t;i>e._renderingOrder?r=t-1:a=t+1}return a}_getGroup(){return this._group}_setGroup(e){this._group=e}_onActive(){super._onActive(),t.ILaya.stage._scene3Ds.push(this)}_onInActive(){super._onInActive();var e=t.ILaya.stage._scene3Ds;e.splice(e.indexOf(this),1)}_prepareSceneToRender(){var e=this._shaderValues;if(t.Config3D._multiLighting&&t.Stat.enableMulLight){var a=Scene3D._lightTexture,r=Scene3D._lightPixles;const C=a.width,A=4*C;var i=0,n=t.Stat.enableLight?this._directionLights._length:0,s=this._directionLights._elements;if(n>0){var o=this._directionLights.getBrightestLight();this._mainDirectionLight=s[o],this._directionLights.normalLightOrdering(o);for(var l=0;l<n;l++,i++){var h=(T=s[l])._direction,c=A*i;(p=T._intensityColor).x=t.Color.gammaToLinearSpace(T.color.r),p.y=t.Color.gammaToLinearSpace(T.color.g),p.z=t.Color.gammaToLinearSpace(T.color.b),t.Vector3.scale(p,T._intensity,p),T.owner.transform.worldMatrix.getForward(h),t.Vector3.normalize(h,h),r[c]=p.x,r[c+1]=p.y,r[c+2]=p.z,r[c+3]=T._lightmapBakedType,r[c+4]=h.x,r[c+5]=h.y,r[c+6]=h.z,0==l&&(this._sunColor=T.color,this._sundir=h)}e.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT)}else e.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT);var d=t.Stat.enableLight?this._pointLights._length:0;if(d>0){var u=this._pointLights._elements,_=this._pointLights.getBrightestLight();this._mainPointLight=u[_],this._pointLights.normalLightOrdering(_);for(l=0;l<d;l++,i++){var m=(E=u[l]).owner.transform.position;c=A*i;(p=E._intensityColor).x=t.Color.gammaToLinearSpace(E.color.r),p.y=t.Color.gammaToLinearSpace(E.color.g),p.z=t.Color.gammaToLinearSpace(E.color.b),t.Vector3.scale(p,E._intensity,p),r[c]=p.x,r[c+1]=p.y,r[c+2]=p.z,r[c+3]=E.range,r[c+4]=m.x,r[c+5]=m.y,r[c+6]=m.z,r[c+7]=E._lightmapBakedType}e.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT)}else e.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);var f=t.Stat.enableLight?this._spotLights._length:0;if(f>0){var S=this._spotLights._elements,g=this._spotLights.getBrightestLight();this._mainSpotLight=S[g],this._spotLights.normalLightOrdering(g);for(l=0;l<f;l++,i++){var p,D=S[l];h=D._direction,m=D.owner.transform.position,c=A*i;(p=D._intensityColor).x=t.Color.gammaToLinearSpace(D.color.r),p.y=t.Color.gammaToLinearSpace(D.color.g),p.z=t.Color.gammaToLinearSpace(D.color.b),t.Vector3.scale(p,D._intensity,p),D.owner.transform.worldMatrix.getForward(h),t.Vector3.normalize(h,h),r[c]=p.x,r[c+1]=p.y,r[c+2]=p.z,r[c+3]=D.range,r[c+4]=m.x,r[c+5]=m.y,r[c+6]=m.z,r[c+7]=D.spotAngle*Math.PI/180,r[c+8]=h.x,r[c+9]=h.y,r[c+10]=h.z,r[c+11]=D._lightmapBakedType}e.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT)}else e.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT);i>0&&a.setSubPixelsData(0,0,C,i,r,0,!1,!1,!1),e.setTexture(Scene3D.LIGHTBUFFER,a),e.setInt(Scene3D.DIRECTIONLIGHTCOUNT,this._directionLights._length),e.setTexture(Scene3D.CLUSTERBUFFER,Cluster.instance._clusterTexture)}else{if(this._directionLights._length>0&&t.Stat.enableLight){var T=this._directionLights._elements[0];this._mainDirectionLight=T,T._intensityColor.x=t.Color.gammaToLinearSpace(T.color.r),T._intensityColor.y=t.Color.gammaToLinearSpace(T.color.g),T._intensityColor.z=t.Color.gammaToLinearSpace(T.color.b),t.Vector3.scale(T._intensityColor,T._intensity,T._intensityColor),T.owner.transform.worldMatrix.getForward(T._direction),t.Vector3.normalize(T._direction,T._direction),e.setVector3(Scene3D.LIGHTDIRCOLOR,T._intensityColor),e.setVector3(Scene3D.LIGHTDIRECTION,T._direction),e.setInt(Scene3D.LIGHTMODE,T._lightmapBakedType),0==l&&(this._sunColor=T.color,this._sundir=T._direction),e.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT)}else e.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT);if(this._pointLights._length>0&&t.Stat.enableLight){var E=this._pointLights._elements[0];this._mainPointLight=E,E._intensityColor.x=t.Color.gammaToLinearSpace(E.color.r),E._intensityColor.y=t.Color.gammaToLinearSpace(E.color.g),E._intensityColor.z=t.Color.gammaToLinearSpace(E.color.b),t.Vector3.scale(E._intensityColor,E._intensity,E._intensityColor),e.setVector3(Scene3D.POINTLIGHTCOLOR,E._intensityColor),e.setVector3(Scene3D.POINTLIGHTPOS,E.owner.transform.position),e.setNumber(Scene3D.POINTLIGHTRANGE,E.range),e.setInt(Scene3D.POINTLIGHTMODE,E._lightmapBakedType),e.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT)}else e.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);if(this._spotLights._length>0&&t.Stat.enableLight){var C=this._spotLights._elements[0];this._mainSpotLight=C,C._intensityColor.x=t.Color.gammaToLinearSpace(C.color.r),C._intensityColor.y=t.Color.gammaToLinearSpace(C.color.g),C._intensityColor.z=t.Color.gammaToLinearSpace(C.color.b),t.Vector3.scale(C._intensityColor,C._intensity,C._intensityColor),e.setVector3(Scene3D.SPOTLIGHTCOLOR,C._intensityColor),e.setVector3(Scene3D.SPOTLIGHTPOS,C.owner.transform.position),C.owner.transform.worldMatrix.getForward(C._direction),t.Vector3.normalize(C._direction,C._direction),e.setVector3(Scene3D.SPOTLIGHTDIRECTION,C._direction),e.setNumber(Scene3D.SPOTLIGHTRANGE,C.range),e.setNumber(Scene3D.SPOTLIGHTSPOTANGLE,C.spotAngle*Math.PI/180),e.setInt(Scene3D.SPOTLIGHTMODE,C._lightmapBakedType),e.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT)}else e.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT)}}get cullInfoCamera(){return this._cullInfoCamera}_setCullCamera(e){this._cullInfoCamera=e}recaculateCullCamera(){this._cullInfoCamera=this._cameraPool[0],this._cameraPool.forEach((e=>{this.cullInfoCamera.maxlocalYDistance<e.maxlocalYDistance&&(this._cullInfoCamera=e)}))}_addCamera(e){for(var t=this._binarySearchIndexInCameraPool(e),a=e._renderingOrder,r=this._cameraPool.length;t<r&&this._cameraPool[t]._renderingOrder<=a;)t++;this._cameraPool.splice(t,0,e)}_removeCamera(e){this._cameraPool.splice(this._cameraPool.indexOf(e),1)}_preCulling(e,a){this._clearRenderQueue();var r=FrustumCulling._cameraCullInfo,i=r.position=a._transform.position;r.cullingMask=a.cullingMask,r.staticMask=a.staticMask,r.boundFrustum=a.boundFrustum,r.useOcclusionCulling=a.useOcclusionCulling,this._cullPass.cullByCameraCullInfo(r,this.sceneRenderableManager);let n=this._cullPass.cullList,s=n.elements;for(let a=0;a<n.length;a++){let r=s[a];r.distanceForSort=t.Vector3.distance(r.bounds.getCenter(),i);for(var o=r._renderElements,l=0,h=o.length;l<h;l++)o[l]._update(this,e,e.customShader,e.replaceTag)}}_directLightShadowCull(e,a){this._clearRenderQueue();const r=e.position;this._cullPass.cullByShadowCullInfo(e,this.sceneRenderableManager);let i=this._cullPass.cullList,n=i.elements;for(let e=0;e<i.length;e++){let i=n[e];i.distanceForSort=t.Vector3.distance(i.bounds.getCenter(),r);for(var s=i._renderElements,o=0,l=s.length;o<l;o++)s[o]._update(this,a,null,null)}}_sportLightShadowCull(e,a){this._clearRenderQueue(),this._cullPass.cullingSpotShadow(e,this.sceneRenderableManager);let r=this._cullPass.cullList,i=r.elements;for(var n=0,s=r.length;n<s;n++){var o=i[n];o.distanceForSort=t.Vector3.distance(o.bounds.getCenter(),e.position);for(var l=o._renderElements,h=0,c=l.length;h<c;h++)l[h]._update(this,a,null,null)}}_clear(a){var r,i,n=a.viewport,s=a.camera,o=s._getRenderTexture(),l=n.width,h=n.height;s._needInternalRenderTexture()?(r=0,i=0):s.renderTarget?(r=n.x,i=n.y):(r=n.x,i=s._getCanvasHeight()-n.y-h),t.LayaGL.renderEngine.viewport(r,i,l,h),t.LayaGL.renderEngine.scissor(r,i,l,h),a.changeViewport(r,i,l,h),a.changeScissor(r,i,l,h),Camera._context3DViewPortCatch.set(r,i,l,h),Camera._contextScissorPortCatch.setValue(r,i,l,h);var c=s.clearFlag;c!==e.CameraClearFlags.Sky||s.skyRenderer._isAvailable()||this._skyRenderer._isAvailable()||(c=e.CameraClearFlags.SolidColor);let d=0,u=o.depthStencilFormat==t.RenderTargetFormat.DEPTHSTENCIL_24_8?t.RenderClearFlag.Stencil:0;switch(c){case e.CameraClearFlags.SolidColor:d=t.RenderClearFlag.Color|t.RenderClearFlag.Depth|u;break;case e.CameraClearFlags.DepthOnly:case e.CameraClearFlags.Sky:d=t.RenderClearFlag.Depth|u;break;case e.CameraClearFlags.Nothing:d=0;break;case e.CameraClearFlags.ColorOnly:d=t.RenderClearFlag.Color}t.LayaGL.renderEngine.clearRenderTexture(d,s._linearClearColor,1)}_renderScene(a,r){var i=a.camera;switch(r){case Scene3D.SCENERENDERFLAG_RENDERQPAQUE:t.Stat.opaqueDrawCall+=this._opaqueQueue.renderQueue(a);break;case Scene3D.SCENERENDERFLAG_SKYBOX:i.clearFlag===e.CameraClearFlags.Sky&&(i.skyRenderer._isAvailable()?i.skyRenderer._render(a):this._skyRenderer._isAvailable()&&this._skyRenderer._render(a));break;case Scene3D.SCENERENDERFLAG_RENDERTRANSPARENT:t.Stat.transDrawCall+=this._transparentQueue.renderQueue(a),t.Config3D.debugFrustumCulling}}_parse(a,r){var i=a.lightmaps;if(i){for(var n=i.length,s=new Array(n),o=0;o<n;o++){var l=new Lightmap,h=i[o];h.path?l.lightmapColor=t.Loader.getTexture2D(h.path):(l.lightmapColor=t.Loader.getTexture2D(h.color.path),h.direction&&(l.lightmapDirection=t.Loader.getTexture2D(h.direction.path))),s[o]=l}this.lightmaps=s}var c=a.sky;if(c)switch(this._skyRenderer.material=t.Loader.getRes(c.material.path),c.mesh){case"SkyBox":this._skyRenderer.mesh=SkyBox.instance;break;case"SkyDome":this._skyRenderer.mesh=SkyDome.instance;break;default:this.skyRenderer.mesh=SkyBox.instance}this.enableFog=a.enableFog,this.fogStart=a.fogStart,this.fogRange=a.fogRange;var d=a.fogColor;if(d){var u=this.fogColor;u.fromArray(d),this.fogColor=u}var _=a.ambientMode,m=a.ambientColor;if(m){var f=this.ambientColor;f.fromArray(m),this.ambientColor=f}if(_==e.AmbientMode.TripleColor){let e=a.ambientSkyColor,r=new t.Vector3;r.fromArray(e);let i=a.ambientEquatorColor,n=new t.Vector3;n.fromArray(i);let s=a.ambientGroundColor,o=new t.Vector3;o.fromArray(s),this._sceneReflectionProb.setGradientAmbient(r,n,o)}var S=a.ambientSphericalHarmonics;if(S){var g=new SphericalHarmonicsL2;for(o=0;o<3;o++){var p=9*o;g.setCoefficients(o,S[p],S[p+1],S[p+2],S[p+3],S[p+4],S[p+5],S[p+6],S[p+7],S[p+8])}this._sceneReflectionProb.ambientSphericalHarmonics=g}null!=_&&(this.ambientMode=_);var D=a.reflection;null!=D&&(this._sceneReflectionProb.reflectionTexture=t.Loader.getRes(D));var T=a.reflectionDecodingFormat;null!=T&&(this._sceneReflectionProb.reflectionDecodingFormat=T);var E=a.ambientSphericalHarmonicsIntensity;null!=E&&(this._sceneReflectionProb.ambientIntensity=E);var C=a.reflectionIntensity;null!=C&&(this._sceneReflectionProb.reflectionIntensity=C)}_addRenderObject(e){this._sceneRenderManager.addRenderObject(e),e._addReflectionProbeUpdate()}_removeRenderObject(e){this._sceneRenderManager.removeRenderObject(e)}_getRenderQueue(e){return e<=2500?this._opaqueQueue:this._transparentQueue}_clearRenderQueue(){this._opaqueQueue.clear(),this._transparentQueue.clear()}destroy(e=!0){if(!this._destroyed){super.destroy(e),this._nativeObj=null,this._skyRenderer.destroy(),this._skyRenderer=null,this._directionLights=null,this._pointLights=null,this._spotLights=null,this._alternateLights=null,this._shaderValues.destroy(),this._opaqueQueue.destroy(),this._transparentQueue.destroy(),RenderContext3D._instance.scene==this&&(RenderContext3D._instance.scene=null),this._shaderValues=null,this.sceneRenderableManager.destroy(),this._sceneRenderManager=null,this._cameraPool=null,this._physicsSimulation&&this._physicsSimulation._destroy();var t=this._lightmaps;if(t)for(var a=0,r=t.length;a<r;a++){var i=t[a];i.lightmapColor&&i.lightmapColor._removeReference(),i.lightmapDirection&&i.lightmapDirection._removeReference()}this._lightmaps=null,this._volumeManager.destroy(),this._componentDriver.callDestroy()}}render(e){this._children.length>0&&e.addRenderObject3D(this)}renderSubmit(){if(this._renderByEditor)return 1;var e,a;for(t.BufferState._curBindedBufferState&&t.BufferState._curBindedBufferState.unBind(),this._prepareSceneToRender(),Scene3D._updateMark++,e=0,a=this._cameraPool.length;e<a;e++){var r=this._cameraPool[e];if(r.renderTarget?r.enableBuiltInRenderTexture=!1:r.enableBuiltInRenderTexture=!0,r.enableRender&&r.render(),Scene3D._blitTransRT=null,r.enableRender&&!r.renderTarget){Scene3D._blitTransRT=r._internalRenderTexture;var i=r._getCanvasWidth(),n=r._getCanvasHeight();Scene3D._blitOffset.setValue(r.viewport.x/i,r.viewport.y/n,r.viewport.width/i,r.viewport.height/n),this.blitMainCanvans(Scene3D._blitTransRT,r.normalizedViewport,r)}r._cacheDepth||r.enableRender&&r._needInternalRenderTexture()&&!r._internalRenderTexture._inPool&&t.RenderTexture.recoverToPool(r._internalRenderTexture)}return t.Context.set2DRenderConfig(),t.RenderTexture.clearPool(),1}blitMainCanvans(e,a,r){if(e){Scene3D.mainCavansViewPort.x=RenderContext3D.clientWidth*a.x|0,Scene3D.mainCavansViewPort.y=RenderContext3D.clientHeight*a.y|0,Scene3D.mainCavansViewPort.width=RenderContext3D.clientWidth*a.width|0,Scene3D.mainCavansViewPort.height=RenderContext3D.clientHeight*a.height|0,e.filterMode=t.FilterMode.Bilinear,r.fxaa&&BlitFrameBufferCMD.shaderdata.addDefine(BaseCamera.SHADERDEFINE_FXAA);var i=BlitFrameBufferCMD.create(e,null,Scene3D.mainCavansViewPort,null,null,BlitFrameBufferCMD.shaderdata);i.run(),i.recover(),BlitFrameBufferCMD.shaderdata.removeDefine(BaseCamera.SHADERDEFINE_FXAA)}}getRenderType(){return 0}releaseRender(){}reUse(e,t){return 0}setGlobalShaderValue(e,a,r){var i=t.Shader3D.propertyNameToID(e);this._shaderValues.setShaderData(i,a,r)}get fogRange(){return this._fogParams.y-this.fogParams.x}set fogRange(e){this._fogParams.y=e+this.fogParams.x,this.fogParams=this._fogParams}setlightmaps(e){for(var t=this._lightmaps,a=0,r=t.length;a<r;a++)t[a].lightmapColor._removeReference();if(!e)throw new Error("Scene3D: value value can't be null.");var i=e.length;for(t.length=i,a=0;a<i;a++){var n=e[a];n._addReference(),t[a]||(t[a]=new Lightmap),t[a].lightmapColor=n}}getlightmaps(){for(var e=new Array(this._lightmaps.length),t=0;t<this._lightmaps.length;t++)e[t]=this._lightmaps[t].lightmapColor;return e}}Scene3D.REFLECTIONMODE_SKYBOX=0,Scene3D.REFLECTIONMODE_CUSTOM=1,Scene3D.SCENERENDERFLAG_RENDERQPAQUE=0,Scene3D.SCENERENDERFLAG_SKYBOX=1,Scene3D.SCENERENDERFLAG_RENDERTRANSPARENT=2,Scene3D.__updateMark=0,Scene3D._blitOffset=new t.Vector4,Scene3D.mainCavansViewPort=new Viewport(0,0,1,1),e.CameraClearFlags=void 0,(E=e.CameraClearFlags||(e.CameraClearFlags={}))[E.SolidColor=0]="SolidColor",E[E.Sky=1]="Sky",E[E.DepthOnly=2]="DepthOnly",E[E.Nothing=3]="Nothing",E[E.ColorOnly=4]="ColorOnly",e.CameraEventFlags=void 0,(C=e.CameraEventFlags||(e.CameraEventFlags={}))[C.BeforeForwardOpaque=0]="BeforeForwardOpaque",C[C.BeforeSkyBox=2]="BeforeSkyBox",C[C.BeforeTransparent=4]="BeforeTransparent",C[C.BeforeImageEffect=6]="BeforeImageEffect",C[C.AfterEveryThing=8]="AfterEveryThing";class Camera extends BaseCamera{static set _updateMark(e){Camera.__updateMark=e}static get _updateMark(){return Camera.__updateMark}static drawRenderTextureByScene(e,a,r,i=null,n=null){if(!r)return null;Scene3D._updateMark++,a._prepareSceneToRender(),a._setCullCamera(e);let s=e.renderTarget;e.renderTarget=r;var o=e.viewport,l=e._needInternalRenderTexture(),h=RenderContext3D._instance;a=h.scene=a;h.pipelineMode=h.configPipeLineMode,h.replaceTag=n,h.customShader=i,l?(e._internalRenderTexture=t.RenderTexture.createFromPool(o.width,o.height,e._getRenderTextureFormat(),e.depthTextureFormat,!1,e.msaa?4:1,!1,e._needRenderGamma(e._getRenderTextureFormat())),e._internalRenderTexture.filterMode=t.FilterMode.Bilinear):e._internalRenderTexture=null,a._componentDriver.callPreRender();var c=e._renderShadowMap(a,h);return e._preRenderMainPass(h,a,l,o),e._renderMainPass(h,o,a,i,n,l),e._aftRenderMainPass(c),e.renderTarget=s,a.recaculateCullCamera(),a._componentDriver.callPostRender(),e._internalRenderTexture&&!e._internalRenderTexture._inPool&&t.RenderTexture.recoverToPool(e._internalRenderTexture),r}static getTexturePixel(e){let a=e.filterMode;e.filterMode=t.FilterMode.Point;let r,i=t.RenderTargetFormat.R8G8B8,n=e.width*e.height;switch(e.format){case t.TextureFormat.R32G32B32A32:case t.TextureFormat.R16G16B16A16:i=t.RenderTargetFormat.R32G32B32A32,r=new Float32Array(4*n);break;case t.TextureFormat.R32G32B32:case t.TextureFormat.R16G16B16:i=t.RenderTargetFormat.R32G32B32,r=new Float32Array(3*n);break;case t.TextureFormat.R5G6B5:case t.TextureFormat.R8G8B8:i=t.RenderTargetFormat.R8G8B8,r=new Uint8Array(3*n);break;default:i=t.RenderTargetFormat.R8G8B8A8,r=new Uint8Array(4*n)}let s=new t.RenderTexture(e.width,e.height,i,t.RenderTargetFormat.None,!1,0,!1);var o=BlitScreenQuadCMD.create(e,s);return o.setContext(RenderContext3D._instance),o.run(),o.recover(),e.filterMode=a,s.getData(0,0,e.width,e.height,r),s.destroy(),r}static drawTextureCubePixelByScene(e,a,r,i,n){let s,o,l=t.RenderTargetFormat.R8G8B8,h=r*r;switch(i){case t.TextureFormat.R32G32B32A32:case t.TextureFormat.R16G16B16A16:l=t.RenderTargetFormat.R32G32B32A32,h*=4,o=4;break;case t.TextureFormat.R32G32B32:case t.TextureFormat.R16G16B16:l=t.RenderTargetFormat.R32G32B32,h*=3,o=4;break;case t.TextureFormat.R5G6B5:case t.TextureFormat.R8G8B8:l=t.RenderTargetFormat.R8G8B8,h*=3,o=1;break;case t.TextureFormat.R8G8B8A8:l=t.RenderTargetFormat.R8G8B8A8,s=new Uint8Array(4*h),h*=4,o=1;break;default:throw"Type is not supported"}let c=new t.RenderTexture(r,r,l,t.RenderTargetFormat.DEPTH_16,!1,0,!1,!1);e.fieldOfView=90,e.cullingMask=n;let d=[],u=[new t.Quaternion(0,1,0,0),new t.Quaternion(0,0,0,1),new t.Quaternion(0,.7071068,0,.7071068),new t.Quaternion(0,.7071068,0,-.7071068),new t.Quaternion(0,.7071068,-.7071068,0),new t.Quaternion(0,-.7071068,-.7071068,0)];for(var _=0;_<6;_++)e.transform.rotation=u[_],this.drawRenderTextureByScene(e,a,c),s=4==o?new Float32Array(h):new Uint8Array(h),d[_]=c.getData(0,0,r,r,s);return c.destroy(),d}static drawTextureCubeByScene(e,a,r,i,n,s=0){e.transform.position=a;let o=this.drawTextureCubePixelByScene(e,r,i,n,s);switch(n){case t.TextureFormat.R32G32B32A32:case t.TextureFormat.R16G16B16A16:t.TextureFormat.R32G32B32A32;break;case t.TextureFormat.R32G32B32:case t.TextureFormat.R16G16B16:t.TextureFormat.R32G32B32;break;case t.TextureFormat.R5G6B5:case t.TextureFormat.R8G8B8:t.TextureFormat.R8G8B8;break;case t.TextureFormat.R8G8B8A8:t.TextureFormat.R8G8B8A8;break;default:throw"Type is not supported"}let l=new t.TextureCube(i,n,!0,!1);return l.setPixelsData(o,!1,!1),l}static __init__(){Camera.depthPass=new DepthPass}get aspectRatio(){if(0===this._aspectRatio){var e=this.viewport;return e.width/e.height}return this._aspectRatio}set aspectRatio(e){if(e<0)throw new Error("Camera: the aspect ratio has to be a positive real number.");this._aspectRatio=e,this._calculateProjectionMatrix()}get viewport(){return this._offScreenRenderTexture?this._calculationViewport(this._normalizedViewport,this._offScreenRenderTexture.width,this._offScreenRenderTexture.height):this._calculationViewport(this._normalizedViewport,this.clientWidth,this.clientHeight),this._viewport}set viewport(e){var t,a;this._offScreenRenderTexture?(t=this._offScreenRenderTexture.width,a=this._offScreenRenderTexture.height):(t=this.clientWidth,a=this.clientHeight),this._normalizedViewport.x=e.x/t,this._normalizedViewport.y=e.y/a,this._normalizedViewport.width=e.width/t,this._normalizedViewport.height=e.height/a,this._calculationViewport(this._normalizedViewport,t,a),this._calculateProjectionMatrix()}get clientWidth(){return t.ILaya.stage.needUpdateCanvasSize(),t.Config3D.customResolution?t.Config3D.pixelRatio*t.Config3D._resoluWidth|0:RenderContext3D.clientWidth*t.Config3D.pixelRatio|0}get clientHeight(){return t.ILaya.stage.needUpdateCanvasSize(),t.Config3D.customResolution?t.Config3D.pixelRatio*t.Config3D._resoluHeight|0:RenderContext3D.clientHeight*t.Config3D.pixelRatio|0}set msaa(e){t.LayaGL.renderEngine.getCapable(t.RenderCapable.MSAA)?this._msaa=e:this._msaa=!1}get msaa(){return this._msaa&&t.Stat.enablemsaa}set fxaa(e){this._fxaa=e}get fxaa(){return this._fxaa}get normalizedViewport(){return this._normalizedViewport}set normalizedViewport(e){var t,a;this._offScreenRenderTexture?(t=this._offScreenRenderTexture.width,a=this._offScreenRenderTexture.height):(t=this.clientWidth,a=this.clientHeight),this._normalizedViewport!==e&&e.cloneTo(this._normalizedViewport),this._calculationViewport(e,t,a),this._calculateProjectionMatrix()}get viewMatrix(){if(this._updateViewMatrix){var e=this.transform.getWorldLossyScale(),t=e.x,a=e.y,r=e.z,i=this._viewMatrix.elements;this.transform.worldMatrix.cloneTo(this._viewMatrix),i[0]/=t,i[1]/=t,i[2]/=t,i[4]/=a,i[5]/=a,i[6]/=a,i[8]/=r,i[9]/=r,i[10]/=r,this._viewMatrix.invert(this._viewMatrix),this._updateViewMatrix=!1}return this._viewMatrix}get projectionMatrix(){return this._projectionMatrix}set projectionMatrix(e){this._projectionMatrix=e,this._useUserProjectionMatrix=!0}get projectionViewMatrix(){return t.Matrix4x4.multiply(this.projectionMatrix,this.viewMatrix,this._projectionViewMatrix),this._projectionViewMatrix}get boundFrustum(){return this._boundFrustum.matrix=this.projectionViewMatrix,this._boundFrustum}get renderTarget(){return this._offScreenRenderTexture}set renderTarget(e){var t=this._offScreenRenderTexture;t!==e&&(t&&(t._isCameraTarget=!1),e&&(e._isCameraTarget=!0),this._offScreenRenderTexture=e,this._calculateProjectionMatrix())}get postProcess(){return this._postProcess}set postProcess(e){this._postProcess=e}get enableHDR(){return this._enableHDR}set enableHDR(e){!e||t.LayaGL.renderEngine.getCapable(t.RenderCapable.RenderTextureFormat_R16G16B16A16)?this._enableHDR=e:console.warn("Camera:can't enable HDR in this device.")}get enableBuiltInRenderTexture(){return this._needBuiltInRenderTexture}set enableBuiltInRenderTexture(e){this._needBuiltInRenderTexture=e}get depthTextureMode(){return this._depthTextureMode}set depthTextureMode(e){this._depthTextureMode=e}set opaquePass(e){e!=this._opaquePass&&(e||(this._shaderValues.setTexture(BaseCamera.OPAQUETEXTURE,null),this._opaqueTexture&&t.RenderTexture.recoverToPool(this._opaqueTexture)),this._opaquePass=e)}get opaquePass(){return this._opaquePass}get depthTextureFormat(){return this._depthTextureFormat}set depthTextureFormat(e){this._depthTextureFormat=e}set enableBlitDepth(e){e!=this._canBlitDepth&&(this._canBlitDepth=e,this._cacheDepth=e,e?this._internalRenderTexture&&(this._internalRenderTexture.generateDepthTexture=!0):(this._internalRenderTexture&&(this._internalRenderTexture.generateDepthTexture=!1),this._cacheDepthTexture&&!this._cacheDepthTexture._inPool&&t.RenderTexture.recoverToPool(this._cacheDepthTexture)))}get enableBlitDepth(){return this._canBlitDepth}get canblitDepth(){return this._canBlitDepth&&this._internalRenderTexture&&null!=this._internalRenderTexture.depthStencilFormat}constructor(a=0,r=.3,i=1e3){super(r,i),this._updateViewMatrix=!0,this._postProcess=null,this._enableHDR=!1,this._viewportParams=new t.Vector4,this._projectionParams=new t.Vector4,this._needBuiltInRenderTexture=!1,this._msaa=!1,this._fxaa=!1,this._offScreenRenderTexture=null,this._internalRenderTexture=null,this._canBlitDepth=!1,this._internalCommandBuffer=new CommandBuffer,this._depthTextureFormat=t.RenderTargetFormat.DEPTH_16,this._cameraEventCommandBuffer={},this._shadowCasterCommanBuffer=[],this._clusterPlaneCacheFlag=new t.Vector2(-1,-1),this._screenOffsetScale=new t.Vector4,this.enableRender=!0,this.clearFlag=e.CameraClearFlags.SolidColor,this._viewMatrix=new t.Matrix4x4,this._projectionMatrix=new t.Matrix4x4,this._projectionViewMatrix=new t.Matrix4x4,this._viewport=new Viewport(0,0,0,0),this._normalizedViewport=new Viewport(0,0,1,1),this._rayViewport=new Viewport(0,0,0,0),this._aspectRatio=a,this._boundFrustum=new BoundFrustum(new t.Matrix4x4),this._depthTextureMode=0,this._calculateProjectionMatrix(),t.ILaya.stage.on(t.Event.RESIZE,this,this._onScreenSizeChanged),this.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged)}_calculationViewport(e,t,a){var r=e.x*t,i=e.y*a,n=r+Math.max(e.width*t,0),s=i+Math.max(e.height*a,0),o=Math.ceil(r),l=Math.ceil(i),h=Math.floor(n),c=Math.floor(s),d=o-r>=.5?Math.floor(r):o,u=l-i>=.5?Math.floor(i):l,_=n-h>=.5?Math.ceil(n):h,m=s-c>=.5?Math.ceil(s):c;this._viewport.x=d,this._viewport.y=u,this._viewport.width=_-d,this._viewport.height=m-u}_calculateProjectionMatrix(){if(!this._useUserProjectionMatrix)if(this._orthographic){var e=.5*this.orthographicVerticalSize,a=e*this.aspectRatio;t.Matrix4x4.createOrthoOffCenter(-a,a,-e,e,this.nearPlane,this.farPlane,this._projectionMatrix)}else t.Matrix4x4.createPerspective(3.1416*this.fieldOfView/180,this.aspectRatio,this.nearPlane,this.farPlane,this._projectionMatrix)}_isLayerVisible(e){return 0!=(Math.pow(2,e)&this.cullingMask)}_onTransformChanged(e){(e&=Transform3D.TRANSFORM_WORLDMATRIX)&&(this._updateViewMatrix=!0)}_parse(e,t){super._parse(e,t);var a=e.clearFlag;void 0!==a&&(this.clearFlag=a);var r=e.viewport;this.normalizedViewport=new Viewport(r[0],r[1],r[2],r[3]);var i=e.enableHDR;void 0!==i&&(this.enableHDR=i)}clone(){let e=super.clone();return e.clearFlag=this.clearFlag,this.clearColor.cloneTo(e.clearColor),e.clearColor=e.clearColor,e.viewport=this.viewport,this.normalizedViewport.cloneTo(e.normalizedViewport),e.enableHDR=this.enableHDR,e.farPlane=this.farPlane,e.nearPlane=this.nearPlane,e.fieldOfView=this.fieldOfView,e.orthographic=this.orthographic,e._cameraEventCommandBuffer=this._cameraEventCommandBuffer,e}_getCanvasWidth(){return this._offScreenRenderTexture?this._offScreenRenderTexture.width:this.clientWidth}_getCanvasHeight(){return this._offScreenRenderTexture?this._offScreenRenderTexture.height:this.clientHeight}_getRenderTexture(){return this._internalRenderTexture||this._offScreenRenderTexture}_needRenderGamma(e){switch(e){case t.RenderTargetFormat.R8G8B8:case t.RenderTargetFormat.R8G8B8A8:return!0;default:return!1}}_needInternalRenderTexture(){return!!(this._postProcess&&this._postProcess.enable||this._enableHDR||this._needBuiltInRenderTexture)}_getRenderTextureFormat(){return this._enableHDR?t.RenderTargetFormat.R16G16B16A16:t.RenderTargetFormat.R8G8B8A8}_updateCameraRenderData(e){this._prepareCameraToRender(),this._applyViewProject(e,this.viewMatrix,this._projectionMatrix)}_prepareCameraToRender(){super._prepareCameraToRender();var e=this.viewport;this._viewportParams.setValue(e.x,e.y,e.width,e.height),this._projectionParams.setValue(this._nearPlane,this._farPlane,RenderContext3D._instance.invertY?-1:1,1/this.farPlane),this._shaderValues.setVector(BaseCamera.VIEWPORT,this._viewportParams),this._shaderValues.setVector(BaseCamera.PROJECTION_PARAMS,this._projectionParams)}_applyViewProject(e,a,r){var i;e.invertY?(t.Matrix4x4.multiply(BaseCamera._invertYScaleMatrix,r,BaseCamera._invertYProjectionMatrix),t.Matrix4x4.multiply(BaseCamera._invertYProjectionMatrix,a,BaseCamera._invertYProjectionViewMatrix),r=BaseCamera._invertYProjectionMatrix,i=BaseCamera._invertYProjectionViewMatrix):(t.Matrix4x4.multiply(r,a,this._projectionViewMatrix),i=this._projectionViewMatrix),e.viewMatrix=a,e.projectionMatrix=r,e.projectionViewMatrix=i,this._shaderValues.setMatrix4x4(BaseCamera.VIEWMATRIX,a),this._shaderValues.setMatrix4x4(BaseCamera.PROJECTMATRIX,r),this._shaderValues.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX,i)}_updateClusterPlaneXY(){var e=this.fieldOfView,a=this.aspectRatio;if(this._clusterPlaneCacheFlag.x!==e||this._clusterPlaneCacheFlag.y!==a){var r=t.Config3D.lightClusterCount,i=r.x,n=r.y,s=i+1,o=n+1,l=this._clusterXPlanes,h=this._clusterYPlanes;if(!l){l=this._clusterXPlanes=new Array(s),h=this._clusterYPlanes=new Array(o);for(var c=0;c<s;c++)l[c]=new t.Vector3;for(c=0;c<o;c++)h[c]=new t.Vector3}var d=Math.tan(this.fieldOfView/2*Math.PI/180),u=this.aspectRatio*d,_=2*d/n,m=2*u/i;for(c=0;c<s;c++){var f=m*c-u,S=1/Math.sqrt(1+f*f);l[c].setValue(S,0,-f*S)}for(c=0;c<o;c++){f=d-_*c;var g=-1/Math.sqrt(1+f*f);h[c].setValue(0,g,-f*g)}this._clusterPlaneCacheFlag.x=e,this._clusterPlaneCacheFlag.y=a}}_applyCommandBuffer(e,a){if(t.Stat.enableCameraCMD){var r=this._cameraEventCommandBuffer[e];r&&0!=r.length&&(r.forEach((function(e){e._context=a,e._apply()})),t.RenderTexture.currentActive&&t.RenderTexture.currentActive._end(),this._internalRenderTexture||this._offScreenRenderTexture?this._getRenderTexture()._start():t.LayaGL.textureContext.bindoutScreenTarget(),t.LayaGL.renderEngine.viewport(0,0,a.viewport.width,a.viewport.height))}}_applyCasterPassCommandBuffer(e){this._shadowCasterCommanBuffer&&0!=this._shadowCasterCommanBuffer.length&&this._shadowCasterCommanBuffer.forEach((function(t){t._context=e,t._apply()}))}_addCasterShadowCommandBuffer(e){this._shadowCasterCommanBuffer.indexOf(e)<0&&this._shadowCasterCommanBuffer.push(e)}_removeCasterShadowCommandBuffer(e){var t=this._shadowCasterCommanBuffer.indexOf(e);-1!=t&&this._shadowCasterCommanBuffer.splice(t,1)}_renderShadowMap(a,r){if(Scene3D._updateMark%a._ShadowMapupdateFrequency!=0)return!1;var i,n=a._mainDirectionLight,s=n&&n.shadowMode!==e.ShadowMode.None&&ShadowUtils.supportShadow()&&t.Stat.enableShadow;s?(a._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),a._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),(i=ILaya3D.Scene3D._shadowCasterPass).update(this,n,e.ShadowLightType.DirectionLight),i.render(r,a,e.ShadowLightType.DirectionLight,this)):a._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW);var o=a._mainSpotLight,l=o&&o.shadowMode!==e.ShadowMode.None&&ShadowUtils.supportShadow()&&t.Stat.enableShadow;return l?(a._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),a._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),(i=ILaya3D.Scene3D._shadowCasterPass).update(this,o,e.ShadowLightType.SpotLight),i.render(r,a,e.ShadowLightType.SpotLight,this)):a._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),s&&a._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),l&&a._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),s||l}_preRenderMainPass(a,r,i,n){if(a.camera=this,a.cameraShaderValue=this._shaderValues,Camera._updateMark++,i&&!this._offScreenRenderTexture&&(this.clearFlag==e.CameraClearFlags.DepthOnly||this.clearFlag==e.CameraClearFlags.Nothing))if(t.RenderTexture.bindCanvasRender)t.RenderTexture.bindCanvasRender!=this._internalRenderTexture&&((s=BlitScreenQuadCMD.create(t.RenderTexture.bindCanvasRender,this._internalRenderTexture)).setContext(a),s.run(),s.recover());else if(this._enableHDR){var s,o=t.RenderTexture.createFromPool(n.width,n.height,t.RenderTargetFormat.R8G8B8,t.RenderTargetFormat.DEPTH_16,!1,1);o.filterMode=t.FilterMode.Bilinear,this._renderEngine.copySubFrameBuffertoTex(o,0,0,0,n.x,RenderContext3D.clientHeight-(n.y+n.height),n.width,n.height),(s=BlitScreenQuadCMD.create(o,this._internalRenderTexture)).setContext(a),s.run(),s.recover(),t.RenderTexture.recoverToPool(o)}}_renderMainPass(a,r,i,n,s,o){var l=this._getRenderTexture();if(l&&l._isCameraTarget?a.invertY=!0:a.invertY=!1,a.viewport=r,a.destTarget=l,this._prepareCameraToRender(),t.Config3D._multiLighting&&Cluster.instance.update(this,i),a.customShader=n,a.replaceTag=s,i._preCulling(a,this),this._applyViewProject(a,this.viewMatrix,this._projectionMatrix),this._cameraUniformData&&this._cameraUniformUBO&&this._cameraUniformUBO.setDataByUniformBufferData(this._cameraUniformData),this._renderDepthMode(a),l&&l._start(),i._clear(a),this._applyCommandBuffer(e.CameraEventFlags.BeforeForwardOpaque,a),this.recoverRenderContext3D(a,l),t.Stat.enableOpaque&&i._renderScene(a,ILaya3D.Scene3D.SCENERENDERFLAG_RENDERQPAQUE),this._applyCommandBuffer(e.CameraEventFlags.BeforeSkyBox,a),this._opaquePass&&this._createOpaqueTexture(l,a),this.recoverRenderContext3D(a,l),i._renderScene(a,ILaya3D.Scene3D.SCENERENDERFLAG_SKYBOX),this._applyCommandBuffer(e.CameraEventFlags.BeforeTransparent,a),this.recoverRenderContext3D(a,l),t.Stat.enableTransparent&&i._renderScene(a,ILaya3D.Scene3D.SCENERENDERFLAG_RENDERTRANSPARENT),this._applyCommandBuffer(e.CameraEventFlags.BeforeImageEffect,a),l&&l._end(),o&&t.Stat.enablePostprocess)if(this._postProcess&&this._postProcess.enable)this._postProcess.commandContext=a,this._postProcess._render(this),this._postProcess._applyPostProcessCommandBuffers();else if(this._enableHDR||this._needBuiltInRenderTexture){var h=this._getCanvasWidth(),c=this._getCanvasHeight();this._offScreenRenderTexture&&(this._screenOffsetScale.setValue(r.x/h,(c-r.y-r.height)/c,r.width/h,r.height/c),this._internalCommandBuffer._camera=this,this._internalCommandBuffer._context=a,this._internalCommandBuffer.blitScreenQuad(this._internalRenderTexture,this._offScreenRenderTexture,this._screenOffsetScale,null,null,0),this._internalCommandBuffer._apply(),this._internalCommandBuffer.clear())}this._offScreenRenderTexture?t.RenderTexture.bindCanvasRender=null:t.RenderTexture.bindCanvasRender=this._internalRenderTexture,this._applyCommandBuffer(e.CameraEventFlags.AfterEveryThing,a)}recoverRenderContext3D(e,t){const a=Camera._context3DViewPortCatch,r=Camera._contextScissorPortCatch;e.changeViewport(a.x,a.y,a.width,a.height),e.changeScissor(r.x,r.y,r.z,r.w),e.destTarget=t}_renderDepthMode(t){var a=this._depthTextureMode;this._postProcess&&this._postProcess.enable&&(a|=this._postProcess.cameraDepthTextureMode),0!=(a&e.DepthTextureMode.Depth)&&(this.canblitDepth&&this._internalRenderTexture.depthStencilTexture?(this.depthTexture=this._cacheDepthTexture.depthStencilTexture,Camera.depthPass._depthTexture=this.depthTexture,Camera.depthPass._setupDepthModeShaderValue(e.DepthTextureMode.Depth,this)):(Camera.depthPass.update(this,e.DepthTextureMode.Depth,this._depthTextureFormat),Camera.depthPass.render(t,e.DepthTextureMode.Depth))),0!=(a&e.DepthTextureMode.DepthNormals)&&(Camera.depthPass.update(this,e.DepthTextureMode.DepthNormals,this._depthTextureFormat),Camera.depthPass.render(t,e.DepthTextureMode.DepthNormals))}get depthTexture(){return this._depthTexture}set depthTexture(e){this._depthTexture=e}get depthNormalTexture(){return this._depthNormalsTexture}set depthNormalTexture(e){this._depthNormalsTexture=e}_aftRenderMainPass(e){this._cacheDepth&&this._internalRenderTexture&&(this._cacheDepthTexture&&!this._cacheDepthTexture._inPool&&t.RenderTexture.recoverToPool(this._cacheDepthTexture),this._cacheDepthTexture=this._internalRenderTexture),Camera.depthPass.cleanUp()}_createOpaqueTexture(e,a){if(!this._opaqueTexture){let e=this._getRenderTexture();this._opaqueTexture=t.RenderTexture.createFromPool(e.width,e.height,e.colorFormat,t.RenderTargetFormat.None,!1,1,!1,!0),this._shaderValues.setTexture(BaseCamera.OPAQUETEXTURE,this._opaqueTexture)}var r=BlitScreenQuadCMD.create(e,this._opaqueTexture);r.setContext(a),r.run(),r.recover()}render(e=null,a=null){if(!this.activeInHierarchy)return;var r=this.viewport,i=this._needInternalRenderTexture(),n=RenderContext3D._instance,s=n.scene=this._scene;s._setCullCamera(this),n.pipelineMode=n.configPipeLineMode,n.replaceTag=a,n.customShader=e;let o=this._getRenderTextureFormat();i?this.msaa?(this._internalRenderTexture=t.RenderTexture.createFromPool(r.width,r.height,o,this._depthTextureFormat,!1,4,this.canblitDepth,this._needRenderGamma(o)),this._internalRenderTexture.filterMode=t.FilterMode.Bilinear):(this._internalRenderTexture=t.RenderTexture.createFromPool(r.width,r.height,o,this._depthTextureFormat,!1,1,this.canblitDepth,this._needRenderGamma(o)),this._internalRenderTexture.filterMode=t.FilterMode.Bilinear):this._internalRenderTexture=null,s._componentDriver.callPreRender();var l=this._renderShadowMap(s,n);this._preRenderMainPass(n,s,i,r),this._renderMainPass(n,r,s,e,a,i),this._aftRenderMainPass(l),s._componentDriver.callPostRender()}viewportPointToRay(e,a){this._rayViewport.x=this.viewport.x,this._rayViewport.y=this.viewport.y,this._rayViewport.width=t.ILaya.stage._width,this._rayViewport.height=t.ILaya.stage._height,Picker.calculateCursorRay(e,this._rayViewport,this._projectionMatrix,this.viewMatrix,null,a)}normalizedViewportPointToRay(e,a){var r=Camera._tempVector20,i=this.normalizedViewport;e.x=e.x*t.Config3D.pixelRatio,e.y=e.y*t.Config3D.pixelRatio,r.x=e.x*i.width,r.y=e.y*i.height,Picker.calculateCursorRay(r,this.viewport,this._projectionMatrix,this.viewMatrix,null,a)}worldToViewportPoint(e,a){t.Matrix4x4.multiply(this._projectionMatrix,this._viewMatrix,this._projectionViewMatrix),this.viewport.project(e,this._projectionViewMatrix,a);var r=t.Config3D.pixelRatio;let i=(a.x-this.viewport.x)/r,n=(a.y-this.viewport.y)/r;a.x=i+this.viewport.x,a.y=n+this.viewport.y,a.x=a.x/t.ILaya.stage.clientScaleX|0,a.y=a.y/t.ILaya.stage.clientScaleY|0}worldToNormalizedViewportPoint(e,a){this.worldToViewportPoint(e,a),a.x=a.x/t.ILaya.stage.width,a.y=a.y/t.ILaya.stage.height}convertScreenCoordToOrthographicCoord(e,a){if(this._orthographic){var r=this.clientWidth,i=this.clientHeight,n=this.orthographicVerticalSize*this.aspectRatio/r,s=this.orthographicVerticalSize/i;return a.x=(-r/2+e.x*t.ILaya.stage.clientScaleX)*n,a.y=(i/2-e.y*t.ILaya.stage.clientScaleY)*s,a.z=(this.nearPlane-this.farPlane)*(e.z+1)/2-this.nearPlane,t.Vector3.transformCoordinate(a,this.transform.worldMatrix,a),!0}return!1}destroy(e=!0){this._needInternalRenderTexture()&&!this._internalRenderTexture._inPool&&t.RenderTexture.recoverToPool(this._internalRenderTexture),this._offScreenRenderTexture=null,this.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged),t.ILaya.stage.off(t.Event.RESIZE,this,this._onScreenSizeChanged),this._cameraEventCommandBuffer={},this._shaderValues.destroy(),RenderContext3D._instance.camera==this&&(RenderContext3D._instance.cameraShaderValue=null,RenderContext3D._instance.camera=null),super.destroy(e)}addCommandBuffer(e,t){var a=this._cameraEventCommandBuffer[e];a||(a=this._cameraEventCommandBuffer[e]=[]),a.indexOf(t)<0&&a.push(t),t._camera=this,t.casterShadow&&this._addCasterShadowCommandBuffer(t)}removeCommandBuffer(e,t){var a=this._cameraEventCommandBuffer[e];if(!a)throw"Camera:unknown event.";var r=a.indexOf(t);-1!=r&&a.splice(r,1),t.casterShadow&&this._removeCasterShadowCommandBuffer(t)}removeCommandBuffers(e){this._cameraEventCommandBuffer[e]&&(this._cameraEventCommandBuffer[e].length=0)}_create(){return new Camera}}Camera._tempVector20=new t.Vector2,Camera._context3DViewPortCatch=new Viewport(0,0,0,0),Camera._contextScissorPortCatch=new t.Vector4(0,0,0,0),Camera.__updateMark=0;class GradientMode{}GradientMode.Blend=0,GradientMode.Fixed=1;class Gradient{get mode(){return this._mode}set mode(e){this._mode=e}get colorRGBKeysCount(){return this._colorRGBKeysCount}get colorAlphaKeysCount(){return this._colorAlphaKeysCount}get maxColorRGBKeysCount(){return this._maxColorRGBKeysCount}get maxColorAlphaKeysCount(){return this._maxColorAlphaKeysCount}constructor(e,a){this._mode=0,this._maxColorRGBKeysCount=0,this._maxColorAlphaKeysCount=0,this._colorRGBKeysCount=0,this._colorAlphaKeysCount=0,this._keyRanges=new t.Vector4(1,0,1,0),this._alphaElements=null,this._rgbElements=null,this._maxColorRGBKeysCount=e,this._maxColorAlphaKeysCount=a,this._rgbElements=new Float32Array(4*e),this._alphaElements=new Float32Array(2*a)}addColorRGB(e,t){if(this._colorRGBKeysCount<this._maxColorRGBKeysCount){var a=4*this._colorRGBKeysCount;this._rgbElements[a]=e,this._rgbElements[a+1]=t.r,this._rgbElements[a+2]=t.g,this._rgbElements[a+3]=t.b,this._colorRGBKeysCount++}else console.warn("Gradient:warning:data count must lessEqual than "+this._maxColorRGBKeysCount)}addColorAlpha(e,t){if(this._colorAlphaKeysCount<this._maxColorAlphaKeysCount){var a=2*this._colorAlphaKeysCount;this._alphaElements[a]=e,this._alphaElements[a+1]=t,this._colorAlphaKeysCount++}else console.warn("Gradient:warning:data count must lessEqual than "+this._maxColorAlphaKeysCount)}updateColorRGB(e,t,a){if(e<this._colorRGBKeysCount){var r=4*e;this._rgbElements[r]=t,this._rgbElements[r+1]=a.r,this._rgbElements[r+2]=a.g,this._rgbElements[r+3]=a.b}else console.warn("Gradient:warning:index must lessEqual than colorRGBKeysCount:"+this._colorRGBKeysCount)}updateColorAlpha(e,t,a){if(e<this._colorAlphaKeysCount){var r=2*e;this._alphaElements[r]=t,this._alphaElements[r+1]=a}else console.warn("Gradient:warning:index must lessEqual than colorAlphaKeysCount:"+this._colorAlphaKeysCount)}evaluateColorRGB(e,t,a=0,r=!1){e=Math.min(Math.max(e,0),1);var i=this._rgbElements,n=a;if(r)for(var s=n;s>=0;s--){var o=4*s;if(e===(_=i[o]))return t.r=i[o+1],t.g=i[o+2],t.b=i[o+3],n;switch(this._mode){case GradientMode.Blend:if(e>_){if(e>(u=i[o+4]))throw"Gradient:wrong startSearchIndex.";var l=u-_,h=u-e,c=e-_;return t.r=(h*i[o+1]+c*i[o+5])/l,t.g=(h*i[o+2]+c*i[o+6])/l,t.b=(h*i[o+3]+c*i[o+7])/l,n}n--;continue;case GradientMode.Fixed:if(e>_){if(e>i[o+4])throw"Gradient:wrong startSearchIndex.";return t.r=i[o+5],t.g=i[o+6],t.b=i[o+7],n}n--;continue;default:throw"Gradient:unknown mode."}}else{s=0;for(var d=this._rgbElements.length;s<d;s++){var u;if(e===(u=i[o=4*s]))return t.r=i[o+1],t.g=i[o+2],t.b=i[o+3],n;switch(this._mode){case GradientMode.Blend:if(e<u){var _;if(e<(_=i[o-4]))throw"Gradient:wrong startSearchIndex.";l=u-_,h=u-e,c=e-_;return t.r=(h*i[o-3]+c*i[o+1])/l,t.g=(h*i[o-2]+c*i[o+2])/l,t.b=(h*i[o-1]+c*i[o+3])/l,n}n++;continue;case GradientMode.Fixed:if(e<u){if(e<i[o-4])throw"Gradient:wrong startSearchIndex.";return t.r=i[o+1],t.g=i[o+2],t.b=i[o+3],n}n++;continue;default:throw"Gradient:unknown mode."}}}return n}evaluateColorAlpha(e,t,a=0,r=!1){e=Math.min(Math.max(e,0),1);var i=this._alphaElements,n=a;if(r)for(var s=n;s>=0;s--){if(e===(_=i[d=2*s]))return t.a=i[d+1],n;switch(this._mode){case GradientMode.Blend:if(e>_){if(e>(u=i[d+2]))throw"Gradient:wrong startSearchIndex.";var o=u-_,l=u-e,h=e-_;return t.a=(l*i[d+1]+h*i[d+3])/o,n}n--;continue;case GradientMode.Fixed:if(e>_){if(e>i[d+2])throw"Gradient:wrong startSearchIndex.";return t.a=i[d+3],n}n--;continue;default:throw"Gradient:unknown mode."}}else{s=n;for(var c=this._alphaElements.length;s<c;s++){var d,u;if(e===(u=i[d=2*s]))return t.a=i[d+1],n;switch(this._mode){case GradientMode.Blend:if(e<u){var _;if(e<(_=i[d-2]))throw"Gradient:wrong startSearchIndex.";o=u-_,l=u-e,h=e-_;return t.a=(l*i[d-1]+h*i[d+1])/o,n}n++;continue;case GradientMode.Fixed:if(e<u){if(e<i[d-2])throw"Gradient:wrong startSearchIndex.";return t.a=i[d+1],n}n++;continue;default:throw"Gradient:unknown mode."}}}return n}cloneTo(e){var t,a,r=e;r._colorAlphaKeysCount=this._colorAlphaKeysCount;let i=r._alphaElements=new Float32Array(this._alphaElements.length);for(t=0,a=this._alphaElements.length;t<a;t++)i[t]=this._alphaElements[t];r._colorRGBKeysCount=this._colorRGBKeysCount;var n=r._rgbElements=new Float32Array(this._rgbElements.length);for(t=0,a=this._rgbElements.length;t<a;t++)n[t]=this._rgbElements[t]}clone(){var e=new Gradient(this._maxColorRGBKeysCount,this._maxColorAlphaKeysCount);return this.cloneTo(e),e}}class DirectionLightCom extends Light{get shadowCascadesMode(){return this._shadowCascadesMode}set shadowCascadesMode(e){this._shadowCascadesMode=e}get shadowTwoCascadeSplits(){return this._shadowTwoCascadeSplits}set shadowTwoCascadeSplits(e){this._shadowTwoCascadeSplits=e}get shadowFourCascadeSplits(){return this._shadowFourCascadeSplits}set shadowFourCascadeSplits(e){if(e.x>e.y||e.y>e.z||e.z>1)throw"DiretionLight:Invalid value.";e.cloneTo(this._shadowFourCascadeSplits)}constructor(){super(),this._direction=new t.Vector3,this._shadowCascadesMode=e.ShadowCascadesMode.NoCascades,this._shadowTwoCascadeSplits=1/3,this._shadowFourCascadeSplits=new t.Vector3(1/15,.2,7/15),this._lightType=e.LightType.Directional}_addToLightQueue(){this.owner.scene._directionLights.add(this)}_removeFromLightQueue(){this.owner.scene._directionLights.remove(this)}_create(){return new DirectionLightCom}}class LightSprite extends Sprite3D{get color(){return this._light.color}set color(e){this._light.color=e}get mode(){return this._light.lightmapBakedType}set mode(e){this._light.lightmapBakedType=e}get intensity(){return this._light.intensity}set intensity(e){this._light.intensity=e}get shadowMode(){return this._light.shadowMode}set shadowMode(e){this._light.shadowMode=e}get shadowDistance(){return this._light.shadowDistance}set shadowDistance(e){this._light.shadowDistance=e}get shadowResolution(){return this._light.shadowResolution}set shadowResolution(e){this._light.shadowResolution=e}get shadowDepthBias(){return this._light.shadowDepthBias}set shadowDepthBias(e){this._light.shadowDepthBias=e}get shadowNormalBias(){return this._light.shadowNormalBias}set shadowNormalBias(e){this._light.shadowNormalBias=e}get shadowStrength(){return this._light.shadowStrength}set shadowStrength(e){this._light.shadowStrength=e}get shadowNearPlane(){return this._light.shadowNearPlane}set shadowNearPlane(e){this._light.shadowNearPlane=e}get lightmapBakedType(){return this._light.lightmapBakedType}set lightmapBakedType(e){this._light.lightmapBakedType=e}get lightWorldMatrix(){return this._light.lightWorldMatrix}constructor(){super()}_parse(e,t){super._parse(e,t);var a=e.color;this.color.r=a[0],this.color.g=a[1],this.color.b=a[2],this.intensity=e.intensity,this.lightmapBakedType=e.lightmapBakedType}_cloneTo(e,t,a){super._cloneTo(e,t,a);var r=e;r.color=this.color.clone(),r.intensity=this.intensity,r.lightmapBakedType=this.lightmapBakedType}_addToLightQueue(){}_removeFromLightQueue(){}_create(){return new Sprite3D}}class DirectionLight extends LightSprite{get shadowCascadesMode(){return this._light._shadowCascadesMode}set shadowCascadesMode(e){this._light._shadowCascadesMode=e}get shadowTwoCascadeSplits(){return this._light._shadowTwoCascadeSplits}set shadowTwoCascadeSplits(e){this._light._shadowTwoCascadeSplits=e}get shadowFourCascadeSplits(){return this._light._shadowFourCascadeSplits}set shadowFourCascadeSplits(e){if(e.x>e.y||e.y>e.z||e.z>1)throw"DiretionLight:Invalid value.";e.cloneTo(this._light._shadowFourCascadeSplits)}constructor(){super(),this._light=this.addComponent(DirectionLightCom)}_create(){return new Sprite3D}}class PointLightCom extends Light{get range(){return this._range}set range(e){this._range=e}constructor(){super(),this._range=6,this._lightType=e.LightType.Point}_addToLightQueue(){this.owner.scene._pointLights.add(this)}_removeFromLightQueue(){this.owner.scene._pointLights.remove(this)}_parse(e,t){super._parse(e,t),this.range=e.range}_cloneTo(t){super._cloneTo(t);var a=t;a.range=this.range,a._lightType=e.LightType.Point}_create(){return new PointLightCom}}class PointLight extends LightSprite{get range(){return this._light.range}set range(e){this._light.range=e}constructor(){super(),this._light=this.addComponent(PointLightCom),this._light.range=6}_parse(e,t){super._parse(e,t),this.range=e.range}_cloneTo(e,t,a){super._cloneTo(e,t,a)}_create(){return new Sprite3D}}class SpotLightCom extends Light{get spotAngle(){return this._spotAngle}set spotAngle(e){this._spotAngle=Math.max(Math.min(e,179),0)}get range(){return this._range}set range(e){this._range=e}constructor(){super(),this._spotAngle=30,this._range=10,this._direction=new t.Vector3,this._lightType=e.LightType.Spot}_addToLightQueue(){this.owner.scene._spotLights.add(this)}_removeFromLightQueue(){this.owner.scene._spotLights.remove(this)}_parse(e,t){super._parse(e,t),this.range=e.range,this.spotAngle=e.spotAngle}_cloneTo(e){super._cloneTo(e);var t=e;t.range=this.range,t.spotAngle=this.spotAngle}_create(){return new SpotLightCom}}class SpotLight extends LightSprite{get spotAngle(){return this._light.spotAngle}set spotAngle(e){this._light.spotAngle=Math.max(Math.min(e,179),0)}get range(){return this._light.range}set range(e){this._light.range=e}constructor(){super(),this._light=this.addComponent(SpotLightCom)}_parse(e,t){super._parse(e,t),this.range=e.range,this.spotAngle=e.spotAngle}_cloneTo(e,t,a){super._cloneTo(e,t,a)}_create(){return new Sprite3D}}class UnlitMaterial extends Material{static __initDefine__(){UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE=t.Shader3D.getDefineByName("ALBEDOTEXTURE"),UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR=t.Shader3D.getDefineByName("ENABLEVERTEXCOLOR"),UnlitMaterial.ALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_AlbedoTexture"),UnlitMaterial.ALBEDOCOLOR=t.Shader3D.propertyNameToID("u_AlbedoColor"),UnlitMaterial.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset")}get albedoColor(){return this.getColorByIndex(UnlitMaterial.ALBEDOCOLOR)}set albedoColor(e){this.setColorByIndex(UnlitMaterial.ALBEDOCOLOR,e.scale(this._albedoIntensity))}get albedoIntensity(){return this._albedoIntensity}set albedoIntensity(e){this._albedoIntensity=e}get albedoTexture(){return this.getTextureByIndex(UnlitMaterial.ALBEDOTEXTURE)}set albedoTexture(e){e?this.addDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE):this.removeDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE),this.setTextureByIndex(UnlitMaterial.ALBEDOTEXTURE,e)}get tilingOffset(){return this.getVector4ByIndex(UnlitMaterial.TILINGOFFSET)}set tilingOffset(e){e?this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET,e):this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET,new t.Vector4(1,1,0,0))}get enableVertexColor(){return this.hasDefine(UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR)}set enableVertexColor(e){e?this.addDefine(UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR):this.removeDefine(UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR)}constructor(){super(),this.setShaderName("Unlit"),this.renderMode=UnlitMaterial.RENDERMODE_OPAQUE,this.albedoIntensity=1}clone(){var e=new UnlitMaterial;return this.cloneTo(e),e}set renderMode(e){switch(e){case UnlitMaterial.RENDERMODE_OPAQUE:this.alphaTest=!1,this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case UnlitMaterial.RENDERMODE_CUTOUT:this.renderQueue=Material.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case UnlitMaterial.RENDERMODE_TRANSPARENT:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;default:throw new Error("UnlitMaterial : renderMode value error.")}}}UnlitMaterial.RENDERMODE_OPAQUE=0,UnlitMaterial.RENDERMODE_CUTOUT=1,UnlitMaterial.RENDERMODE_TRANSPARENT=2,UnlitMaterial.RENDERMODE_ADDTIVE=3;class EffectMaterial extends Material{get color(){return this.getColorByIndex(UnlitMaterial.ALBEDOCOLOR)}set color(e){this.setColorByIndex(UnlitMaterial.ALBEDOCOLOR,e)}get texture(){return this.getTextureByIndex(UnlitMaterial.ALBEDOTEXTURE)}set texture(e){e?this.addDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE):this.removeDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE),this.setTextureByIndex(UnlitMaterial.ALBEDOTEXTURE,e)}get tilingOffset(){return this.getVector4ByIndex(UnlitMaterial.TILINGOFFSET)}set tilingOffset(e){e?this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET,e):this.getVector4ByIndex(UnlitMaterial.TILINGOFFSET).setValue(1,1,0,0)}constructor(){super(),this.setShaderName("Unlit"),this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET,new t.Vector4(1,1,0,0)),this.setColorByIndex(UnlitMaterial.ALBEDOCOLOR,new t.Color(1,1,1,1)),this.renderMode=EffectMaterial.RENDERMODE_ADDTIVE}clone(){var e=new EffectMaterial;return this.cloneTo(e),e}set renderMode(e){switch(e){case EffectMaterial.RENDERMODE_ADDTIVE:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL,this.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);break;case EffectMaterial.RENDERMODE_ALPHABLENDED:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL,this.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);break;default:throw new Error("MeshEffectMaterial : renderMode value error.")}}}EffectMaterial.RENDERMODE_ADDTIVE=0,EffectMaterial.RENDERMODE_ALPHABLENDED=1;class ExtendTerrainMaterial extends Material{static __initDefine__(){ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM1"),ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM2"),ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM3"),ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM4"),ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM5"),ExtendTerrainMaterial.SPLATALPHATEXTURE=t.Shader3D.propertyNameToID("u_SplatAlphaTexture"),ExtendTerrainMaterial.DIFFUSETEXTURE1=t.Shader3D.propertyNameToID("u_DiffuseTexture1"),ExtendTerrainMaterial.DIFFUSETEXTURE2=t.Shader3D.propertyNameToID("u_DiffuseTexture2"),ExtendTerrainMaterial.DIFFUSETEXTURE3=t.Shader3D.propertyNameToID("u_DiffuseTexture3"),ExtendTerrainMaterial.DIFFUSETEXTURE4=t.Shader3D.propertyNameToID("u_DiffuseTexture4"),ExtendTerrainMaterial.DIFFUSETEXTURE5=t.Shader3D.propertyNameToID("u_DiffuseTexture5"),ExtendTerrainMaterial.DIFFUSESCALEOFFSET1=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset1"),ExtendTerrainMaterial.DIFFUSESCALEOFFSET2=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset2"),ExtendTerrainMaterial.DIFFUSESCALEOFFSET3=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset3"),ExtendTerrainMaterial.DIFFUSESCALEOFFSET4=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset4"),ExtendTerrainMaterial.DIFFUSESCALEOFFSET5=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset5")}get splatAlphaTexture(){return this._shaderValues.getTexture(ExtendTerrainMaterial.SPLATALPHATEXTURE)}set splatAlphaTexture(e){this._shaderValues.setTexture(ExtendTerrainMaterial.SPLATALPHATEXTURE,e)}get diffuseTexture1(){return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE1)}set diffuseTexture1(e){this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE1,e),this._setDetailNum(1)}get diffuseTexture2(){return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE2)}set diffuseTexture2(e){this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE2,e),this._setDetailNum(2)}get diffuseTexture3(){return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE3)}set diffuseTexture3(e){this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE3,e),this._setDetailNum(3)}get diffuseTexture4(){return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE4)}set diffuseTexture4(e){this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE4,e),this._setDetailNum(4)}get diffuseTexture5(){return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE5)}set diffuseTexture5(e){this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE5,e),this._setDetailNum(5)}set diffuseScaleOffset1(e){this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET1,e)}set diffuseScaleOffset2(e){this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET2,e)}set diffuseScaleOffset3(e){this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET3,e)}set diffuseScaleOffset4(e){this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET4,e)}set diffuseScaleOffset5(e){this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET5,e)}set renderMode(e){switch(e){case ExtendTerrainMaterial.RENDERMODE_OPAQUE:this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case ExtendTerrainMaterial.RENDERMODE_TRANSPARENT:this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL;break;default:throw new Error("ExtendTerrainMaterial:renderMode value error.")}}constructor(){super(),this.setShaderName("ExtendTerrain"),this.renderMode=ExtendTerrainMaterial.RENDERMODE_OPAQUE}_setDetailNum(e){switch(e){case 1:this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);break;case 2:this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);break;case 3:this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);break;case 4:this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);break;case 5:this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4)}}clone(){var e=new ExtendTerrainMaterial;return this.cloneTo(e),e}}ExtendTerrainMaterial.RENDERMODE_OPAQUE=1,ExtendTerrainMaterial.RENDERMODE_TRANSPARENT=2,e.PBRRenderQuality=void 0,(A=e.PBRRenderQuality||(e.PBRRenderQuality={}))[A.High=0]="High",A[A.Low=1]="Low";class PBRDefaultDFG{static get defaultDFG(){return PBRDefaultDFG._defaultDFG}static set defaultDFG(e){PBRDefaultDFG._defaultDFG=e}static DefaultDfgTexture(){let e,a=t.Base64Tool.decode(""),r=t.HDRTextureInfo.getHDRInfo(a),i=t.LayaGL.renderEngine.getCapable(t.RenderCapable.TextureFormat_R32G32B32A32),n=t.LayaGL.renderEngine.getCapable(t.RenderCapable.Texture_FloatLinearFiltering);if(i&&n)e=new t.Texture2D(r.width,r.height,r.format,!1,!1,!1),e.setHDRData(r);else{e=new t.Texture2D(r.width,r.height,t.TextureFormat.R8G8B8A8,!1,!1,!1);let a=r.width*r.height,i=r.readScanLine(),n=new Uint8Array(4*a);for(let e=0;e<a;e++){let t=i[3*e],a=i[3*e+1],r=i[3*e+2],s=Math.max(t,a,r,1e-5),o=Math.max(1,255/s);o=Math.min(1,Math.max(0,o/255)),n[4*e]=255*Math.min(1,Math.max(0,t*o)),n[4*e+1]=255*Math.min(1,Math.max(0,a*o)),n[4*e+2]=255*Math.min(1,Math.max(0,r*o)),n[4*e+3]=255*o}e.setPixelsData(n,!1,!1)}e.lock=!0,e.wrapModeU=t.WrapMode.Clamp,e.wrapModeV=t.WrapMode.Clamp,e.anisoLevel=1,this._defaultDFG=e}}class PBRShaderLib{static init(){PBRShaderLib.DEFINE_EMISSION=t.Shader3D.getDefineByName("EMISSION"),PBRShaderLib.DEFINE_CLEARCOAT=t.Shader3D.getDefineByName("CLEARCOAT"),PBRShaderLib.DEFINE_CLEARCOAT_NORMAL=t.Shader3D.getDefineByName("CLEARCOAT_NORMAL"),PBRShaderLib.DEFINE_ANISOTROPY=t.Shader3D.getDefineByName("ANISOTROPIC"),t.Shader3D.addInclude("BRDF.glsl",'#if !defined(BRDF)\n    #define BRDF\n\n// Specular implementations\nfloat D_GGX(float roughness, float NoH, vec3 h, vec3 n)\n{\n    // todo 精度\n    #if !defined(GL_FRAGMENT_PRECISION_HIGH)\n    vec3 NxH = cross(n, h);\n    float oneMinusNoHSquared = dot(NxH, NxH);\n    #else\n    float oneMinusNoHSquared = 1.0 - NoH * NoH;\n    #endif\n\n    float a = NoH * roughness;\n    float k = roughness / (oneMinusNoHSquared + a * a);\n    float d = k * k * INVERT_PI;\n\n    return saturateMediump(d);\n}\n\nfloat D_GGX_Anisotropic(float NoH, const vec3 h, const vec3 t, const vec3 b, float at, float ab)\n{\n    float ToH = dot(t, h);\n    float BoH = dot(b, h);\n    float a2 = at * ab;\n    highp vec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\n    highp float v2 = dot(v, v);\n    float w2 = a2 / v2;\n    return a2 * w2 * w2 * INVERT_PI;\n}\n\nfloat V_SmithGGXCorrelated(float roughness, float NoV, float NoL)\n{\n    float a2 = roughness * roughness;\n    float lambdaV = NoL * sqrt((NoV - a2 * NoV) * NoV + a2);\n    float lambdaL = NoV * sqrt((NoL - a2 * NoL) * NoL + a2);\n    float v = 0.5 / (lambdaV + lambdaL);\n\n    return saturateMediump(v);\n}\n\nfloat V_kelemen(float LoH)\n{\n    // Kelemen 2001, "A Microfacet Based Coupled Specular-Matte BRDF Model with Importance Sampling"\n    return saturateMediump(0.25 / (LoH * LoH));\n}\n\nfloat V_SmithGGXCorrelated_Anisotropic(float at, float ab, float ToV, float BoV, float ToL, float BoL, float NoV, float NoL)\n{\n    float lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\n    float lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\n    float v = 0.5 / (lambdaV + lambdaL);\n    return saturateMediump(v);\n}\n\nvec3 F_Schlick(vec3 f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\nvec3 F_Schlick(vec3 f0, float VoH)\n{\n    return f0 + (1.0 - f0) * pow5(1.0 - VoH);\n}\n\nfloat F_Schlick(float f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\nvec3 F_Schlick(vec3 f0, vec3 f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\n// Specular dispatch\n\n// D\nfloat distribution(float roughness, float NoH, vec3 h, vec3 n)\n{\n    return D_GGX(roughness, NoH, h, n);\n}\n\n// V\nfloat visibility(float roughness, float NoV, float NoL)\n{\n    return V_SmithGGXCorrelated(roughness, NoV, NoL);\n}\n\n// F\nvec3 fresnel(vec3 f0, float LoH)\n{\n    float f90 = saturate(dot(f0, vec3(50.0 * 0.33)));\n    return F_Schlick(f0, f90, LoH);\n\n    // return F_Schlick(f0, LoH);\n}\n\n// diffuse BRDF implementations\n\nfloat Fd_Lambert()\n{\n    // https://seblagarde.wordpress.com/2012/01/08/pi-or-not-to-pi-in-game-lighting-equation/\n    // return INVERT_PI;\n    return 1.0;\n}\n\nfloat Fd_Burley(float roughness, float NoV, float NoL, float LoH)\n{\n    float f90 = 0.5 + 2.0 * roughness * LoH * LoH;\n    float lightScatter = F_Schlick(1.0, f90, NoL);\n    float veiwScatter = F_Schlick(1.0, f90, NoV);\n    return lightScatter * veiwScatter * INVERT_PI;\n}\n\n// diffuse dispatch\nfloat diffuse()\n{\n    return Fd_Lambert();\n}\n\n#endif // BRDF'),t.Shader3D.addInclude("PBRGI.glsl",'#if !defined(pbrGI_lib)\n    #define pbrGI_lib\n\n    #include "globalIllumination.glsl";\n\n    #ifdef ANISOTROPIC\nvec3 anisotropyBentNormal(const in Surface surface, const in PixelInfo info)\n{\n    float anisotropy = surface.anisotropy;\n    vec3 anisotropyDirection = info.anisotropicB;\n\n    vec3 n = info.normalWS;\n    vec3 v = info.viewDir;\n\n    // float tangentRoughness = mix(roughness, 1.0, anisotropy * anisotropy);\n    float roughness = surface.perceptualRoughness;\n    vec3 anisotropicTangent = cross(anisotropyDirection, v);\n    vec3 anisotropicNormal = cross(anisotropicTangent, anisotropyDirection);\n    float bendFactor = 1.0 - anisotropy * (1.0 - roughness);\n    float bendFactorPow4 = pow2(bendFactor) * pow2(bendFactor);\n    vec3 bentNormal = normalize(mix(anisotropicNormal, n, bendFactorPow4));\n\n    return bentNormal;\n}\n    #endif // ANISOTROPIC\n\n// 获取反射向量\nvec3 getReflectedVector(const in vec3 n, const in vec3 v, const in vec3 positionWS)\n{\n    vec3 r;\n    r = reflect(-v, n);\n\n    #ifdef SPECCUBE_BOX_PROJECTION\n    r = getBoxProjectionReflectedVector(r, positionWS);\n    #endif // SPECCUBE_BOX_PROJECTION\n\n    return r;\n}\n\n    #ifdef CLEARCOAT\nvoid clearCoatIBL(const in Surface surface, const in PixelInfo info, inout vec3 Fd, inout vec3 Fr)\n{\n    vec3 v = info.viewDir;\n    vec3 n = info.clearCoatNormal;\n    float NoV = info.clearCoatNoV;\n    vec3 positionWS = info.positionWS;\n\n    float clearCoat = surface.clearCoat;\n    float roughness = surface.clearCoatPerceptualRoughness;\n    float occlusion = surface.occlusion;\n\n    float Fc = F_Schlick(0.04, 1.0, NoV) * clearCoat;\n    float attenuation = 1.0 - Fc;\n    Fd *= attenuation;\n    Fr *= attenuation;\n\n    vec3 r = getReflectedVector(n, v, positionWS);\n    vec3 indirectSpecular = specularRadiance(r, roughness);\n\n    Fr += indirectSpecular * Fc * occlusion;\n}\n    #endif // CLEARCOAT\n\nvoid baseIBL(const in Surface surface, const in PixelInfo info, in vec3 E, inout vec3 Fd, inout vec3 Fr)\n{\n    vec3 dfg = info.dfg;\n    float NoV = info.NoV;\n    vec3 n = info.normalWS;\n    vec3 v = info.viewDir;\n    vec3 positionWS = info.positionWS;\n\n    vec3 diffuseColor = surface.diffuseColor;\n    float roughness = surface.perceptualRoughness;\n    vec3 f0 = surface.f0;\n    float occlusion = surface.occlusion;\n\n    #ifdef ANISOTROPIC\n    vec3 bentNormal = anisotropyBentNormal(surface, info);\n    vec3 r = getReflectedVector(bentNormal, v, positionWS);\n    #else // ANISOTROPIC\n    vec3 r = getReflectedVector(n, v, positionWS);\n    #endif // ANISOTROPIC\n\n    vec3 indirectSpecular = specularRadiance(r, roughness);\n\n    Fr += E * indirectSpecular * occlusion * info.energyCompensation;\n\n    #if defined(USELIGHTMAP)\n\n    vec2 lightmapUV = info.lightmapUV;\n    vec3 bakedlight = getBakedLightmapColor(lightmapUV, n);\n    Fd += bakedlight * diffuseColor;\n\n    #else // USELIGHTMAP\n\n    vec3 irradiance = diffuseIrradiance(n, positionWS, info.viewDir);\n    Fd += diffuseColor * irradiance * (1.0 - E) * occlusion;\n\n    #endif // USELIGHTMAP\n}\n\nvec3 getE(const in Surface surface, const in PixelInfo info)\n{\n    vec3 dfg = info.dfg;\n    vec3 f0 = surface.f0;\n    vec3 E = mix(dfg.xxx, dfg.yyy, f0);\n\n    return E;\n}\n\nvec3 PBRGI(const in Surface surface, const in PixelInfo info)\n{\n    vec3 Fd = vec3(0.0);\n    vec3 Fr = vec3(0.0);\n\n    vec3 E = getE(surface, info);\n\n    baseIBL(surface, info, E, Fd, Fr);\n\n    // clear coat\n    #ifdef CLEARCOAT\n    clearCoatIBL(surface, info, Fd, Fr);\n    #endif // CLEARCOAT\n\n    vec3 gi = Fd + Fr;\n\n    return gi;\n}\n\n#endif // pbrGI_lib'),t.Shader3D.addInclude("PBRCommon.glsl","#if !defined(pbrCommon_lib)\n    #define pbrCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\n\n// todo\nvarying vec3 v_NormalWS;\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n\n    vec3 positionWS;\n\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n#endif // pbrCommon_lib"),t.Shader3D.addInclude("PBRVertex.glsl",'#if !defined(pbrVertex_lib)\n    #define pbrVertex_lib\n\n    #include "ShadingVertex.glsl";\n\nvoid initPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    shadingPixelParams(params, vertex);\n    sharePixelParams(params);\n}\n\n#endif // pbrVertex_lib'),t.Shader3D.addInclude("PBRFrag.glsl",'#if !defined(pbrFrag_lib)\n    #define pbrFrag_lib\n\n    #include "PBRLighting.glsl";\n\nvoid getPixelInfo(inout PixelInfo info, const in PixelParams pixel, const in Surface surface)\n{\n    info.positionWS = pixel.positionWS;\n    info.vertexNormalWS = pixel.normalWS;\n\n    #ifdef TANGENT\n    info.normalWS = normalize(pixel.TBN * surface.normalTS);\n    #else // TANGENT\n    info.normalWS = pixel.normalWS;\n    #endif // TANGENT\n\n    info.tangentWS = pixel.tangentWS;\n    info.biNormalWS = pixel.biNormalWS;\n\n    info.viewDir = normalize(u_CameraPos - info.positionWS);\n    info.NoV = min(max(dot(info.normalWS, info.viewDir), MIN_N_DOT_V), 1.0);\n\n    info.dfg = prefilteredDFG_LUT(surface.perceptualRoughness, info.NoV);\n\n    info.energyCompensation = (1.0 + surface.f0 * (1.0 / info.dfg.y - 1.0));\n\n    #ifdef CLEARCOAT\n\t#ifdef CLEARCOAT_NORMAL\n    info.clearCoatNormal = normalize(pixel.TBN * surface.clearCoatNormalTS);\n\t#else // CLEARCOAT_NORMAL\n    info.clearCoatNormal = info.vertexNormalWS;\n\t#endif // CLEARCOAT_NORMAL\n    info.clearCoatNoV = min(max(dot(info.clearCoatNormal, info.viewDir), MIN_N_DOT_V), 1.0);\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    mat3 anisotripyTBN = mat3(info.tangentWS, info.biNormalWS * -1.0, info.normalWS);\n    info.anisotropicT = anisotripyTBN * normalize(vec3(surface.anisotropyDirection, 0.0));\n    info.anisotropicB = cross(info.vertexNormalWS, info.anisotropicT);\n    info.ToV = dot(info.anisotropicT, info.viewDir);\n    info.BoV = dot(info.anisotropicB, info.viewDir);\n    info.at = mix(surface.perceptualRoughness, 1.0, pow2(surface.anisotropy));\n    info.ab = surface.perceptualRoughness;\n    #endif // ANISOTROPIC\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    info.lightmapUV = pixel.uv1;\n\t#endif // UV1\n    #endif // LIGHTMAP\n}\n\nvec3 PBRLighting(const in Surface surface, const in PixelInfo info)\n{\n    vec3 lightColor = vec3(0.0);\n    #ifdef DIRECTIONLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= DirectionCount)\n\t\tbreak;\n\t    DirectionLight directionLight = getDirectionLight(i, info.positionWS);\n\t    if (directionLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(directionLight);\n\t    lightColor += PBRLighting(surface, info, light) * light.attenuation;\n\t}\n    #endif // DIRECTIONLIGHT\n\n    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\n    ivec4 clusterInfo = getClusterInfo(u_View, u_Viewport, info.positionWS, gl_FragCoord, u_ProjectionParams);\n    #endif // POINTLIGHT || SPOTLIGHT\n\n    #ifdef POINTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.x)\n\t\tbreak;\n\t    PointLight pointLight = getPointLight(i, clusterInfo, info.positionWS);\n\t    if (pointLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(pointLight, info.normalWS, info.positionWS);\n\t    lightColor += PBRLighting(surface, info, light) * light.attenuation;\n\t}\n    #endif // POINTLIGHT\n\n    #ifdef SPOTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.y)\n\t\tbreak;\n\t    SpotLight spotLight = getSpotLight(i, clusterInfo, info.positionWS);\n\t    if (spotLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(spotLight, info.normalWS, info.positionWS);\n\t    lightColor += PBRLighting(surface, info, light) * light.attenuation;\n\t}\n    #endif // SPOTLIGHT\n\n    vec3 giColor = PBRGI(surface, info);\n\n    return lightColor + giColor;\n}\n\n#endif // pbrFrag_lib'),PBRDefaultDFG.DefaultDfgTexture(),t.SubShader.regIncludeBindUnifrom("PBRGI.glsl",{u_IBLDFG:t.ShaderDataType.Texture2D},{u_IBLDFG:PBRDefaultDFG.defaultDFG}),t.Shader3D.addInclude("PBRMetallicFrag.glsl",'#if !defined(PBRMetallic_lib)\n    #define PBRMetallic_lib\n\n    #include "ShadingFrag.glsl";\n\n    #include "PBRFrag.glsl";\n\nstruct SurfaceInputs {\n    vec3 diffuseColor;\n    float alpha;\n    float alphaTest;\n    float metallic;\n    float smoothness;\n    float occlusion;\n    vec3 emissionColor;\n    vec3 normalTS;\n\n    #ifdef CLEARCOAT\n    float clearCoat;\n    float clearCoatRoughness;\n\t#ifdef CLEARCOAT_NORMAL\n    vec3 clearCoatNormalTS;\n\t#endif // CLEARCOAT_NORMAL\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    float anisotropy;\n    vec2 anisotropyDirection;\n    #endif // ANISOTROPIC\n};\n\nvoid initSurface(inout Surface surface, const in SurfaceInputs inputs, const in PixelParams pixel)\n{\n    surface.alpha = inputs.alpha;\n\n    surface.normalTS = inputs.normalTS;\n\n    vec3 baseColor = inputs.diffuseColor;\n    float metallic = inputs.metallic;\n    float perceptualRoughness = 1.0 - inputs.smoothness;\n\n    float ior = 1.5;\n    vec3 f0 = vec3(pow2((ior - 1.0) / (ior + 1.0)));\n\n    surface.perceptualRoughness = clamp(perceptualRoughness, MIN_PERCEPTUAL_ROUGHNESS, 1.0);\n    surface.roughness = surface.perceptualRoughness * surface.perceptualRoughness;\n    surface.diffuseColor = (1.0 - metallic) * baseColor;\n    surface.f0 = mix(f0, baseColor, metallic);\n\n    surface.occlusion = inputs.occlusion;\n\n    #ifdef CLEARCOAT\n    surface.clearCoat = inputs.clearCoat;\n    surface.clearCoatPerceptualRoughness = clamp(inputs.clearCoatRoughness, MIN_PERCEPTUAL_ROUGHNESS, 1.0);\n    surface.clearCoatRoughness = surface.clearCoatPerceptualRoughness * surface.clearCoatPerceptualRoughness;\n\t#ifdef CLEARCOAT_NORMAL\n    surface.clearCoatNormalTS = inputs.clearCoatNormalTS;\n\t#endif // CLEARCOAT_NORMAL\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    surface.anisotropy = inputs.anisotropy;\n    surface.anisotropyDirection = inputs.anisotropyDirection;\n    #endif // ANISOTROPIC\n}\n\nvec4 PBR_Metallic_Flow(const in SurfaceInputs inputs, in PixelParams pixel)\n{\n    #ifdef ALPHATEST\n    if (inputs.alpha < inputs.alphaTest)\n\t{\n\t    discard;\n\t}\n    #endif // ALPHATEST\n\n    Surface surface;\n    initSurface(surface, inputs, pixel);\n\n    PixelInfo info;\n    getPixelInfo(info, pixel, surface);\n\n    vec3 surfaceColor = vec3(0.0);\n    surfaceColor += PBRLighting(surface, info);\n\n    // todo emission calculate\n    #ifdef EMISSION\n    surfaceColor += inputs.emissionColor;\n    #endif // EMISSION\n\n    return vec4(surfaceColor, surface.alpha);\n}\n\n#endif // PBRMetallic_lib\n')}}var R,x,M,y,I;e.PBRRenderMode=void 0,(R=e.PBRRenderMode||(e.PBRRenderMode={}))[R.Opaque=0]="Opaque",R[R.Cutout=1]="Cutout",R[R.Fade=2]="Fade",R[R.Transparent=3]="Transparent";class PBRMaterial extends Material{static __init__(){PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE=t.Shader3D.getDefineByName("ALBEDOTEXTURE"),PBRMaterial.SHADERDEFINE_NORMALTEXTURE=t.Shader3D.getDefineByName("NORMALTEXTURE"),PBRMaterial.SHADERDEFINE_PARALLAXTEXTURE=t.Shader3D.getDefineByName("PARALLAXTEXTURE"),PBRMaterial.SHADERDEFINE_OCCLUSIONTEXTURE=t.Shader3D.getDefineByName("OCCLUSIONTEXTURE"),PBRMaterial.SHADERDEFINE_EMISSIONTEXTURE=t.Shader3D.getDefineByName("EMISSIONTEXTURE"),PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND=t.Shader3D.getDefineByName("TRANSPARENTBLEND"),PBRMaterial.SHADERDEFINE_LAYA_PBR_BRDF_HIGH=t.Shader3D.getDefineByName("LAYA_PBR_BRDF_HIGH"),PBRMaterial.SHADERDEFINE_LAYA_PBR_BRDF_LOW=t.Shader3D.getDefineByName("LAYA_PBR_BRDF_LOW"),PBRMaterial.SHADERDEFINE_DETAILALBEDO=t.Shader3D.getDefineByName("DETAILTEXTURE"),PBRMaterial.SHADERDEFINE_DETAILNORMAL=t.Shader3D.getDefineByName("DETAILNORMAL"),PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR=t.Shader3D.getDefineByName("ENABLEVERTEXCOLOR"),PBRMaterial.ALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_AlbedoTexture"),PBRMaterial.ALBEDOCOLOR=t.Shader3D.propertyNameToID("u_AlbedoColor"),PBRMaterial.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset"),PBRMaterial.NORMALTEXTURE=t.Shader3D.propertyNameToID("u_NormalTexture"),PBRMaterial.NORMALSCALE=t.Shader3D.propertyNameToID("u_NormalScale"),PBRMaterial.SMOOTHNESS=t.Shader3D.propertyNameToID("u_Smoothness"),PBRMaterial.OCCLUSIONTEXTURE=t.Shader3D.propertyNameToID("u_OcclusionTexture"),PBRMaterial.OCCLUSIONSTRENGTH=t.Shader3D.propertyNameToID("u_OcclusionStrength"),PBRMaterial.PARALLAXTEXTURE=t.Shader3D.propertyNameToID("u_ParallaxTexture"),PBRMaterial.PARALLAXSCALE=t.Shader3D.propertyNameToID("u_ParallaxScale"),PBRMaterial.EMISSIONTEXTURE=t.Shader3D.propertyNameToID("u_EmissionTexture"),PBRMaterial.EMISSIONCOLOR=t.Shader3D.propertyNameToID("u_EmissionColor"),PBRMaterial.EMISSIONIntensity=t.Shader3D.propertyNameToID("u_EmissionIntensity"),PBRMaterial.DETAILALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_DetailAlbedoTexture"),PBRMaterial.DETAILNORMALTEXTURE=t.Shader3D.propertyNameToID("u_DetailNormalTexture"),PBRMaterial.DETAILTILLINGOFFSET=t.Shader3D.propertyNameToID("u_DetailTillingOffset"),PBRMaterial.DETAILNORMALSCALE=t.Shader3D.propertyNameToID("u_DetailNormalScale"),PBRMaterial.CLEARCOAT=t.Shader3D.propertyNameToID("u_ClearCoatFactor"),PBRMaterial.SHADERDEFINE_CLEARCOATTEXTURE=t.Shader3D.getDefineByName("CLEARCOATMAP"),PBRMaterial.CLEARCOATTEXTURE=t.Shader3D.propertyNameToID("u_ClearCoatTexture"),PBRMaterial.CLEARCOATROUGHNESS=t.Shader3D.propertyNameToID("u_ClearCoatRoughness"),PBRMaterial.SHADERDEFINE_CLEARCOATROUGHNESSTEXTURE=t.Shader3D.getDefineByName("CLEARCOAT_ROUGHNESSMAP"),PBRMaterial.CLEARCOATROUGHNESSTEXTURE=t.Shader3D.propertyNameToID("u_ClearCoatRoughnessTexture"),PBRMaterial.CLEARCOATNORMALTEXTURE=t.Shader3D.propertyNameToID("u_ClearCoatNormalTexture"),PBRMaterial.ANISOTROPY=t.Shader3D.propertyNameToID("u_AnisotropyStrength"),PBRMaterial.SHADERDEFINE_ANISOTROPYTEXTURE=t.Shader3D.getDefineByName("ANISOTROPYMAP"),PBRMaterial.ANISOTROPYTEXTURE=t.Shader3D.propertyNameToID("u_AnisotropyTexture"),PBRMaterial.ANISOTROPYROTATION=t.Shader3D.propertyNameToID("u_AnisotropyRotation")}get albedoColor(){return this._shaderValues.getColor(PBRMaterial.ALBEDOCOLOR)}set albedoColor(e){this._shaderValues.setColor(PBRMaterial.ALBEDOCOLOR,e)}get albedoTexture(){return this.hasDefine(PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE)?this._shaderValues.getTexture(PBRMaterial.ALBEDOTEXTURE):null}set albedoTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE),this._shaderValues.setTexture(PBRMaterial.ALBEDOTEXTURE,e)}get normalTexture(){return this.hasDefine(PBRMaterial.SHADERDEFINE_NORMALTEXTURE)?this._shaderValues.getTexture(PBRMaterial.NORMALTEXTURE):null}set normalTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_NORMALTEXTURE):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_NORMALTEXTURE),this._shaderValues.setTexture(PBRMaterial.NORMALTEXTURE,e)}get normalTextureScale(){return this._shaderValues.getNumber(PBRMaterial.NORMALSCALE)}set normalTextureScale(e){this._shaderValues.setNumber(PBRMaterial.NORMALSCALE,e)}get parallaxTexture(){return this._shaderValues.getTexture(PBRMaterial.PARALLAXTEXTURE)}set parallaxTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_PARALLAXTEXTURE):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_PARALLAXTEXTURE),this._shaderValues.setTexture(PBRMaterial.PARALLAXTEXTURE,e)}get parallaxTextureScale(){return this._shaderValues.getNumber(PBRMaterial.PARALLAXSCALE)}set parallaxTextureScale(e){this._shaderValues.setNumber(PBRMaterial.PARALLAXSCALE,Math.max(.005,Math.min(.08,e)))}get occlusionTexture(){return this._shaderValues.getTexture(PBRMaterial.OCCLUSIONTEXTURE)}set occlusionTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_OCCLUSIONTEXTURE):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_OCCLUSIONTEXTURE),this._shaderValues.setTexture(PBRMaterial.OCCLUSIONTEXTURE,e)}get occlusionTextureStrength(){return this._shaderValues.getNumber(PBRMaterial.OCCLUSIONSTRENGTH)}set occlusionTextureStrength(e){this._shaderValues.setNumber(PBRMaterial.OCCLUSIONSTRENGTH,Math.max(0,Math.min(1,e)))}get smoothness(){return this._shaderValues.getNumber(PBRMaterial.SMOOTHNESS)}set smoothness(e){this._shaderValues.setNumber(PBRMaterial.SMOOTHNESS,Math.max(0,Math.min(1,e)))}get enableVertexColor(){return this.hasDefine(PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR)}set enableVertexColor(e){e?this.addDefine(PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR):this.removeDefine(PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR)}get enableEmission(){return this._shaderValues.hasDefine(PBRShaderLib.DEFINE_EMISSION)}set enableEmission(e){e?this._shaderValues.addDefine(PBRShaderLib.DEFINE_EMISSION):this._shaderValues.removeDefine(PBRShaderLib.DEFINE_EMISSION)}get emissionColor(){return this._shaderValues.getColor(PBRMaterial.EMISSIONCOLOR)}set emissionColor(e){this._shaderValues.setColor(PBRMaterial.EMISSIONCOLOR,e)}set emissionIntensity(e){this._shaderValues.setNumber(PBRMaterial.EMISSIONIntensity,e)}get emissionIntensity(){return this._shaderValues.getNumber(PBRMaterial.EMISSIONIntensity)}get emissionTexture(){return this._shaderValues.getTexture(PBRMaterial.EMISSIONTEXTURE)}set emissionTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_EMISSIONTEXTURE):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_EMISSIONTEXTURE),this._shaderValues.setTexture(PBRMaterial.EMISSIONTEXTURE,e)}get tilingOffset(){return this._shaderValues.getVector(PBRMaterial.TILINGOFFSET)}set tilingOffset(e){e?this._shaderValues.setVector(PBRMaterial.TILINGOFFSET,e):this._shaderValues.getVector(PBRMaterial.TILINGOFFSET).setValue(1,1,0,0)}get detailAlbedoTexture(){return this._shaderValues.getTexture(PBRMaterial.DETAILALBEDOTEXTURE)}set detailAlbedoTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_DETAILALBEDO):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_DETAILALBEDO),this._shaderValues.setTexture(PBRMaterial.DETAILALBEDOTEXTURE,e)}get detailNormalTexture(){return this._shaderValues.getTexture(PBRMaterial.DETAILNORMALTEXTURE)}set detailNormalTexture(e){e?this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_DETAILNORMAL):this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_DETAILNORMAL),this._shaderValues.setTexture(PBRMaterial.DETAILNORMALTEXTURE,e)}get detailTilingOffset(){return this._shaderValues.getVector(PBRMaterial.DETAILTILLINGOFFSET)}set detailTilingOffset(e){e?this._shaderValues.setVector(PBRMaterial.DETAILTILLINGOFFSET,e):this._shaderValues.getVector(PBRMaterial.DETAILTILLINGOFFSET).setValue(1,1,0,0)}get detailNormalScale(){return this._shaderValues.getNumber(PBRMaterial.DETAILNORMALSCALE)}set detailNormalScale(e){this._shaderValues.setNumber(PBRMaterial.DETAILNORMALSCALE,e)}set renderMode(a){switch(a){case e.PBRRenderMode.Opaque:this.alphaTest=!1,this.renderQueue=Material.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);break;case e.PBRRenderMode.Cutout:this.renderQueue=Material.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);break;case e.PBRRenderMode.Fade:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);break;case e.PBRRenderMode.Transparent:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_ONE,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);break;default:throw new Error("PBRMaterial:unknown renderMode value.")}}get anisotropyEnable(){return this.shaderData.hasDefine(PBRShaderLib.DEFINE_ANISOTROPY)}set anisotropyEnable(e){e?this.shaderData.addDefine(PBRShaderLib.DEFINE_ANISOTROPY):this.shaderData.removeDefine(PBRShaderLib.DEFINE_ANISOTROPY)}get anisotropy(){return this.getFloatByIndex(PBRMaterial.ANISOTROPY)}set anisotropy(e){this.setFloatByIndex(PBRMaterial.ANISOTROPY,Math.min(1,Math.max(-1,e)))}get anisotropyTexture(){return this.getTextureByIndex(PBRMaterial.ANISOTROPYTEXTURE)}set anisotropyTexture(e){this.setTextureByIndex(PBRMaterial.ANISOTROPYTEXTURE,e),e?this.addDefine(PBRMaterial.SHADERDEFINE_ANISOTROPYTEXTURE):this.removeDefine(PBRMaterial.SHADERDEFINE_ANISOTROPYTEXTURE)}get anisotropyRotation(){return this.getFloatByIndex(PBRMaterial.ANISOTROPYROTATION)}set anisotropyRotation(e){e=Math.max(Math.min(e,1),0),this.setFloatByIndex(PBRMaterial.ANISOTROPYROTATION,e)}get clearCoatEnable(){return this.shaderData.hasDefine(PBRShaderLib.DEFINE_CLEARCOAT)}set clearCoatEnable(e){e?this.shaderData.addDefine(PBRShaderLib.DEFINE_CLEARCOAT):this.shaderData.removeDefine(PBRShaderLib.DEFINE_CLEARCOAT)}get clearCoat(){return this.shaderData.getNumber(PBRMaterial.CLEARCOAT)}set clearCoat(e){this.shaderData.setNumber(PBRMaterial.CLEARCOAT,e)}get clearCoatTexture(){return this.shaderData.getTexture(PBRMaterial.CLEARCOATTEXTURE)}set clearCoatTexture(e){e?this.shaderData.addDefine(PBRMaterial.SHADERDEFINE_CLEARCOATTEXTURE):this.shaderData.removeDefine(PBRMaterial.SHADERDEFINE_CLEARCOATTEXTURE),this.shaderData.setTexture(PBRMaterial.CLEARCOATTEXTURE,e)}get clearCoatRoughness(){return this.shaderData.getNumber(PBRMaterial.CLEARCOATROUGHNESS)}set clearCoatRoughness(e){this.shaderData.setNumber(PBRMaterial.CLEARCOATROUGHNESS,e)}get clearCoatRoughnessTexture(){return this.shaderData.getTexture(PBRMaterial.CLEARCOATROUGHNESSTEXTURE)}set clearCoatRoughnessTexture(e){e?this.shaderData.addDefine(PBRMaterial.SHADERDEFINE_CLEARCOATROUGHNESSTEXTURE):this.shaderData.removeDefine(PBRMaterial.SHADERDEFINE_CLEARCOATROUGHNESSTEXTURE),this.shaderData.setTexture(PBRMaterial.CLEARCOATROUGHNESSTEXTURE,e)}get clearCoatNormalTexture(){return this.shaderData.getTexture(PBRMaterial.CLEARCOATNORMALTEXTURE)}set clearCoatNormalTexture(e){e?this.shaderData.addDefine(PBRShaderLib.DEFINE_CLEARCOAT_NORMAL):this.shaderData.removeDefine(PBRShaderLib.DEFINE_CLEARCOAT_NORMAL),this.shaderData.setTexture(PBRMaterial.CLEARCOATNORMALTEXTURE,e)}constructor(){super(),this._shaderValues.setColor(PBRMaterial.ALBEDOCOLOR,new t.Color(1,1,1,1)),this._shaderValues.setColor(PBRMaterial.EMISSIONCOLOR,new t.Color(1,1,1,1)),this._shaderValues.setVector(PBRMaterial.TILINGOFFSET,new t.Vector4(1,1,0,0)),this._shaderValues.setNumber(PBRMaterial.SMOOTHNESS,.5),this._shaderValues.setNumber(PBRMaterial.OCCLUSIONSTRENGTH,1),this._shaderValues.setNumber(PBRMaterial.NORMALSCALE,1),this._shaderValues.setNumber(PBRMaterial.PARALLAXSCALE,.001),this._shaderValues.setNumber(Material.ALPHATESTVALUE,.5),this.renderMode=e.PBRRenderMode.Opaque}get smoothnessTextureScale(){return this._shaderValues.getNumber(PBRMaterial.SMOOTHNESS)}set smoothnessTextureScale(e){this._shaderValues.setNumber(PBRMaterial.SMOOTHNESS,Math.max(0,Math.min(1,e)))}}PBRMaterial.renderQuality=e.PBRRenderQuality.High,e.PBRMetallicSmoothnessSource=void 0,(x=e.PBRMetallicSmoothnessSource||(e.PBRMetallicSmoothnessSource={}))[x.MetallicGlossTextureAlpha=0]="MetallicGlossTextureAlpha",x[x.AlbedoTextureAlpha=1]="AlbedoTextureAlpha";class PBRStandardMaterial extends PBRMaterial{static __init__(){PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE=t.Shader3D.getDefineByName("METALLICGLOSSTEXTURE"),PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA=t.Shader3D.getDefineByName("SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA"),PBRStandardMaterial.METALLICGLOSSTEXTURE=t.Shader3D.propertyNameToID("u_MetallicGlossTexture"),PBRStandardMaterial.METALLIC=t.Shader3D.propertyNameToID("u_Metallic")}get metallicGlossTexture(){return this._shaderValues.getTexture(PBRStandardMaterial.METALLICGLOSSTEXTURE)}set metallicGlossTexture(e){e?this._shaderValues.addDefine(PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE):this._shaderValues.removeDefine(PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE),this._shaderValues.setTexture(PBRStandardMaterial.METALLICGLOSSTEXTURE,e)}get metallic(){return this._shaderValues.getNumber(PBRStandardMaterial.METALLIC)}set metallic(e){this._shaderValues.setNumber(PBRStandardMaterial.METALLIC,Math.max(0,Math.min(1,e)))}get smoothnessSource(){return this._smoothnessSource}set smoothnessSource(e){e?this._shaderValues.addDefine(PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA):this._shaderValues.removeDefine(PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA),this._smoothnessSource=e}constructor(){super(),this._smoothnessSource=0,this.setShaderName("PBR")}clone(){var e=new PBRStandardMaterial;return this.cloneTo(e),e}}class SkyBoxMaterial extends Material{static __initDefine__(){SkyBoxMaterial.TINTCOLOR=t.Shader3D.propertyNameToID("u_TintColor"),SkyBoxMaterial.EXPOSURE=t.Shader3D.propertyNameToID("u_Exposure"),SkyBoxMaterial.ROTATION=t.Shader3D.propertyNameToID("u_Rotation"),SkyBoxMaterial.TEXTURECUBE=t.Shader3D.propertyNameToID("u_CubeTexture")}get tintColor(){return this._shaderValues.getColor(SkyBoxMaterial.TINTCOLOR)}set tintColor(e){this._shaderValues.setColor(SkyBoxMaterial.TINTCOLOR,e)}get exposure(){return this._shaderValues.getNumber(SkyBoxMaterial.EXPOSURE)}set exposure(e){this._shaderValues.setNumber(SkyBoxMaterial.EXPOSURE,e)}get rotation(){return this._shaderValues.getNumber(SkyBoxMaterial.ROTATION)}set rotation(e){this._shaderValues.setNumber(SkyBoxMaterial.ROTATION,e)}get textureCube(){return this._shaderValues.getTexture(SkyBoxMaterial.TEXTURECUBE)}set textureCube(e){this._shaderValues.setTexture(SkyBoxMaterial.TEXTURECUBE,e)}clone(){var e=new SkyBoxMaterial;return this.cloneTo(e),e}constructor(){super(),this.setShaderName("SkyBox")}}class SkyPanoramicMaterial extends Material{static __init__(){SkyPanoramicMaterial.TINTCOLOR=t.Shader3D.propertyNameToID("u_TintColor"),SkyPanoramicMaterial.EXPOSURE=t.Shader3D.propertyNameToID("u_Exposure"),SkyPanoramicMaterial.ROTATION=t.Shader3D.propertyNameToID("u_Rotation"),SkyPanoramicMaterial.TEXTURE=t.Shader3D.propertyNameToID("u_Texture"),SkyPanoramicMaterial.TEXTURE_HDR_PARAMS=t.Shader3D.propertyNameToID("u_Texture_HDR_params")}get tintColor(){return this.getColorByIndex(SkyPanoramicMaterial.TINTCOLOR)}set tintColor(e){this.setColorByIndex(SkyPanoramicMaterial.TINTCOLOR,e)}get exposure(){return this.getFloatByIndex(SkyPanoramicMaterial.EXPOSURE)}set exposure(e){this.setFloatByIndex(SkyPanoramicMaterial.EXPOSURE,e)}get rotation(){return this.getFloatByIndex(SkyPanoramicMaterial.ROTATION)}set rotation(e){this.setFloatByIndex(SkyPanoramicMaterial.ROTATION,e)}get panoramicTexture(){return this.getTextureByIndex(SkyPanoramicMaterial.TEXTURE)}set panoramicTexture(e){this.setTextureByIndex(SkyPanoramicMaterial.TEXTURE,e)}constructor(){super(),this._textureHDRParams=new t.Vector4(1,0,0,1),this.setShaderName("SkyPanoramic"),this.setColorByIndex(SkyPanoramicMaterial.TINTCOLOR,new t.Color(.5,.5,.5,.5)),this.setFloatByIndex(SkyPanoramicMaterial.ROTATION,0),this.setVector4ByIndex(SkyPanoramicMaterial.TEXTURE_HDR_PARAMS,this._textureHDRParams),this.exposure=1.3}}class SkyProceduralMaterial extends Material{static __initDefine__(){SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY=t.Shader3D.getDefineByName("SUN_HIGH_QUALITY"),SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE=t.Shader3D.getDefineByName("SUN_SIMPLE"),SkyProceduralMaterial.SUNSIZE=t.Shader3D.propertyNameToID("u_SunSize"),SkyProceduralMaterial.SUNSIZECONVERGENCE=t.Shader3D.propertyNameToID("u_SunSizeConvergence"),SkyProceduralMaterial.ATMOSPHERETHICKNESS=t.Shader3D.propertyNameToID("u_AtmosphereThickness"),SkyProceduralMaterial.SKYTINT=t.Shader3D.propertyNameToID("u_SkyTint"),SkyProceduralMaterial.GROUNDTINT=t.Shader3D.propertyNameToID("u_GroundTint"),SkyProceduralMaterial.EXPOSURE=t.Shader3D.propertyNameToID("u_Exposure")}get sunDisk(){return this._sunDisk}set sunDisk(e){switch(e){case SkyProceduralMaterial.SUN_HIGH_QUALITY:this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE),this._shaderValues.addDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY);break;case SkyProceduralMaterial.SUN_SIMPLE:this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY),this._shaderValues.addDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE);break;case SkyProceduralMaterial.SUN_NODE:this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY),this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE);break;default:throw"SkyBoxProceduralMaterial: unknown sun value."}this._sunDisk=e}get sunSize(){return this._shaderValues.getNumber(SkyProceduralMaterial.SUNSIZE)}set sunSize(e){e=Math.min(Math.max(0,e),1),this._shaderValues.setNumber(SkyProceduralMaterial.SUNSIZE,e)}get sunSizeConvergence(){return this._shaderValues.getNumber(SkyProceduralMaterial.SUNSIZECONVERGENCE)}set sunSizeConvergence(e){e=Math.min(Math.max(0,e),20),this._shaderValues.setNumber(SkyProceduralMaterial.SUNSIZECONVERGENCE,e)}get atmosphereThickness(){return this._shaderValues.getNumber(SkyProceduralMaterial.ATMOSPHERETHICKNESS)}set atmosphereThickness(e){e=Math.min(Math.max(0,e),5),this._shaderValues.setNumber(SkyProceduralMaterial.ATMOSPHERETHICKNESS,e)}get skyTint(){return this._shaderValues.getColor(SkyProceduralMaterial.SKYTINT)}set skyTint(e){this._shaderValues.setColor(SkyProceduralMaterial.SKYTINT,e)}get groundTint(){return this._shaderValues.getColor(SkyProceduralMaterial.GROUNDTINT)}set groundTint(e){this._shaderValues.setColor(SkyProceduralMaterial.GROUNDTINT,e)}get exposure(){return this._shaderValues.getNumber(SkyProceduralMaterial.EXPOSURE)}set exposure(e){e=Math.min(Math.max(0,e),8),this._shaderValues.setNumber(SkyProceduralMaterial.EXPOSURE,e)}constructor(){super(),this.setShaderName("SkyProcedural"),this.sunDisk=SkyProceduralMaterial.SUN_HIGH_QUALITY,this.sunSize=.04,this.sunSizeConvergence=5,this.atmosphereThickness=1,this.skyTint=new t.Color(.5,.5,.5,1),this.groundTint=new t.Color(.369,.349,.341,1),this.exposure=1.3}clone(){var e=new SkyProceduralMaterial;return this.cloneTo(e),e}}SkyProceduralMaterial.SUN_NODE=0,SkyProceduralMaterial.SUN_SIMPLE=1,SkyProceduralMaterial.SUN_HIGH_QUALITY=2;class WaterPrimaryMaterial extends Material{static __initDefine__(){WaterPrimaryMaterial.SHADERDEFINE_MAINTEXTURE=t.Shader3D.getDefineByName("MAINTEXTURE"),WaterPrimaryMaterial.SHADERDEFINE_NORMALTEXTURE=t.Shader3D.getDefineByName("NORMALTEXTURE"),WaterPrimaryMaterial.HORIZONCOLOR=t.Shader3D.propertyNameToID("u_HorizonColor"),WaterPrimaryMaterial.MAINTEXTURE=t.Shader3D.propertyNameToID("u_MainTexture"),WaterPrimaryMaterial.NORMALTEXTURE=t.Shader3D.propertyNameToID("u_NormalTexture"),WaterPrimaryMaterial.WAVESCALE=t.Shader3D.propertyNameToID("u_WaveScale"),WaterPrimaryMaterial.WAVESPEED=t.Shader3D.propertyNameToID("u_WaveSpeed")}get horizonColor(){return this._shaderValues.getVector(WaterPrimaryMaterial.HORIZONCOLOR)}set horizonColor(e){this._shaderValues.setVector(WaterPrimaryMaterial.HORIZONCOLOR,e)}get mainTexture(){return this._shaderValues.getTexture(WaterPrimaryMaterial.MAINTEXTURE)}set mainTexture(e){e?this._shaderValues.addDefine(WaterPrimaryMaterial.SHADERDEFINE_MAINTEXTURE):this._shaderValues.removeDefine(WaterPrimaryMaterial.SHADERDEFINE_MAINTEXTURE),this._shaderValues.setTexture(WaterPrimaryMaterial.MAINTEXTURE,e)}get normalTexture(){return this._shaderValues.getTexture(WaterPrimaryMaterial.NORMALTEXTURE)}set normalTexture(e){e?this._shaderValues.addDefine(WaterPrimaryMaterial.SHADERDEFINE_NORMALTEXTURE):this._shaderValues.removeDefine(WaterPrimaryMaterial.SHADERDEFINE_NORMALTEXTURE),this._shaderValues.setTexture(WaterPrimaryMaterial.NORMALTEXTURE,e)}get waveScale(){return this._shaderValues.getNumber(WaterPrimaryMaterial.WAVESCALE)}set waveScale(e){this._shaderValues.setNumber(WaterPrimaryMaterial.WAVESCALE,e)}get waveSpeed(){return this._shaderValues.getVector(WaterPrimaryMaterial.WAVESPEED)}set waveSpeed(e){this._shaderValues.setVector(WaterPrimaryMaterial.WAVESPEED,e)}constructor(){super(),this.setShaderName("WaterPrimary"),this._shaderValues.setVector(WaterPrimaryMaterial.HORIZONCOLOR,new t.Vector4(.172,.463,.435,0)),this._shaderValues.setNumber(WaterPrimaryMaterial.WAVESCALE,.15),this._shaderValues.setVector(WaterPrimaryMaterial.WAVESPEED,new t.Vector4(19,9,-16,-7))}clone(){var e=new WaterPrimaryMaterial;return this.cloneTo(e),e}}class MeshSprite3D extends RenderableSprite3D{get meshFilter(){return this._meshFilter}get meshRenderer(){return this._render}constructor(e=null,t=null){super(t),this._meshFilter=this.addComponent(MeshFilter),this._render=this.addComponent(MeshRenderer),e&&(this._meshFilter.sharedMesh=e)}_parse(e,a){super._parse(e,a);var r=this.meshRenderer,i=e.lightmapIndex;null!=i&&(r.lightmapIndex=i);var n=e.lightmapScaleOffset;n&&(r.lightmapScaleOffset=new t.Vector4(n[0],n[1],n[2],n[3])),null!=e.meshPath&&(this.meshFilter.sharedMesh=t.Loader.getRes(e.meshPath)),null!=e.enableRender&&(r._enabled=e.enableRender),null!=e.receiveShadows&&(r.receiveShadow=e.receiveShadows),null!=e.castShadow&&(r.castShadow=e.castShadow);var s=e.materials;if(s){var o=r.sharedMaterials,l=s.length;o.length=l;for(var h=0;h<l;h++)o[h]=t.Loader.getRes(s[h].path);r.sharedMaterials=o}}_cloneTo(e,t,a){super._cloneTo(e,t,a)}_create(){return new Sprite3D}}class Burst{get time(){return this._time}get minCount(){return this._minCount}get maxCount(){return this._maxCount}constructor(e=0,t=0,a=0){this._time=e,this._minCount=t,this._maxCount=a}cloneTo(e){var t=e;t._time=this._time,t._minCount=this._minCount,t._maxCount=this._maxCount}clone(){var e=new Burst(this._time,this._minCount,this._maxCount);return this.cloneTo(e),e}}class GradientColor{static createByConstant(e){var t=new GradientColor;return t._type=0,t._constant=e,t}static createByGradient(e){var t=new GradientColor;return t._type=1,t._gradient=e,t}static createByRandomTwoConstant(e,t){var a=new GradientColor;return a._type=2,a._constantMin=e,a._constantMax=t,a}static createByRandomTwoGradient(e,t){var a=new GradientColor;return a._type=3,a._gradientMin=e,a._gradientMax=t,a}get type(){return this._type}get constant(){return this._constant}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get gradient(){return this._gradient}get gradientMin(){return this._gradientMin}get gradientMax(){return this._gradientMax}constructor(){this._type=0,this._constant=null,this._constantMin=null,this._constantMax=null,this._gradient=null,this._gradientMin=null,this._gradientMax=null}cloneTo(e){var t=e;t._type=this._type,this._constant.cloneTo(t._constant),this._constantMin.cloneTo(t._constantMin),this._constantMax.cloneTo(t._constantMax),this._gradient.cloneTo(t._gradient),this._gradientMin.cloneTo(t._gradientMin),this._gradientMax.cloneTo(t._gradientMax)}clone(){var e=new GradientColor;return this.cloneTo(e),e}}class ColorOverLifetime{get color(){return this._color}constructor(e){this._color=e}cloneTo(e){var t=e;this._color.cloneTo(t._color),t.enable=this.enable}clone(){var e;switch(this._color.type){case 0:e=GradientColor.createByConstant(this._color.constant.clone());break;case 1:e=GradientColor.createByGradient(this._color.gradient.clone());break;case 2:e=GradientColor.createByRandomTwoConstant(this._color.constantMin.clone(),this._color.constantMax.clone());break;case 3:e=GradientColor.createByRandomTwoGradient(this._color.gradientMin.clone(),this._color.gradientMax.clone())}var t=new ColorOverLifetime(e);return t.enable=this.enable,t}}class Emission{set emissionRate(e){if(e<0)throw new Error("ParticleBaseShape:emissionRate value must large or equal than 0.");this._emissionRate=e}get emissionRate(){return this._emissionRate}get emissionRateOverDistance(){return this._emissionRateOverDistance}set emissionRateOverDistance(e){e=Math.max(0,e),this._emissionRateOverDistance=e}get destroyed(){return this._destroyed}constructor(){this._emissionRate=10,this._emissionRateOverDistance=0,this._destroyed=!1,this._bursts=[]}destroy(){this._bursts=null,this._destroyed=!0}getBurstsCount(){return this._bursts.length}getBurstByIndex(e){return this._bursts[e]}addBurst(e){var t=this._bursts.length;if(t>0)for(var a=0;a<t;a++)this._bursts[a].time>e.time&&this._bursts.splice(a,0,e);this._bursts.push(e)}removeBurst(e){var t=this._bursts.indexOf(e);-1!==t&&this._bursts.splice(t,1)}removeBurstByIndex(e){this._bursts.splice(e,1)}clearBurst(){this._bursts.length=0}cloneTo(e){var t=e,a=t._bursts;a.length=this._bursts.length;for(var r=0,i=this._bursts.length;r<i;r++){var n=a[r];n?this._bursts[r].cloneTo(n):a[r]=this._bursts[r].clone()}t._emissionRate=this._emissionRate,t._emissionRateOverDistance=this._emissionRateOverDistance,t.enable=this.enable}clone(){var e=new Emission;return this.cloneTo(e),e}}class FrameOverTime{static createByConstant(e=0){var t=new FrameOverTime;return t._type=0,t._constant=e,t}static createByOverTime(e){var t=new FrameOverTime;return t._type=1,t._overTime=e,t}static createByRandomTwoConstant(e=0,t=0){var a=new FrameOverTime;return a._type=2,a._constantMin=e,a._constantMax=t,a}static createByRandomTwoOverTime(e,t){var a=new FrameOverTime;return a._type=3,a._overTimeMin=e,a._overTimeMax=t,a}get type(){return this._type}get constant(){return this._constant}get frameOverTimeData(){return this._overTime}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get frameOverTimeDataMin(){return this._overTimeMin}get frameOverTimeDataMax(){return this._overTimeMax}constructor(){this._type=0,this._constant=0,this._overTime=null,this._constantMin=0,this._constantMax=0,this._overTimeMin=null,this._overTimeMax=null}cloneTo(e){var t=e;t._type=this._type,t._constant=this._constant,this._overTime&&this._overTime.cloneTo(t._overTime),t._constantMin=this._constantMin,t._constantMax=this._constantMax,this._overTimeMin&&this._overTimeMin.cloneTo(t._overTimeMin),this._overTimeMax&&this._overTimeMax.cloneTo(t._overTimeMax)}clone(){var e=new FrameOverTime;return this.cloneTo(e),e}}class GradientAngularVelocity{static createByConstant(e){var t=new GradientAngularVelocity;return t._type=0,t._separateAxes=!1,t._constant=e,t}static createByConstantSeparate(e){var t=new GradientAngularVelocity;return t._type=0,t._separateAxes=!0,t._constantSeparate=e,t}static createByGradient(e){var t=new GradientAngularVelocity;return t._type=1,t._separateAxes=!1,t._gradient=e,t}static createByGradientSeparate(e,t,a){var r=new GradientAngularVelocity;return r._type=1,r._separateAxes=!0,r._gradientX=e,r._gradientY=t,r._gradientZ=a,r}static createByRandomTwoConstant(e,t){var a=new GradientAngularVelocity;return a._type=2,a._separateAxes=!1,a._constantMin=e,a._constantMax=t,a}static createByRandomTwoConstantSeparate(e,t){var a=new GradientAngularVelocity;return a._type=2,a._separateAxes=!0,a._constantMinSeparate=e,a._constantMaxSeparate=t,a}static createByRandomTwoGradient(e,t){var a=new GradientAngularVelocity;return a._type=3,a._separateAxes=!1,a._gradientMin=e,a._gradientMax=t,a}static createByRandomTwoGradientSeparate(e,t,a,r,i,n,s,o){var l=new GradientAngularVelocity;return l._type=3,l._separateAxes=!0,l._gradientXMin=e,l._gradientXMax=t,l._gradientYMin=a,l._gradientYMax=r,l._gradientZMin=i,l._gradientZMax=n,l._gradientWMin=s,l._gradientWMax=o,l}get type(){return this._type}get separateAxes(){return this._separateAxes}get constant(){return this._constant}get constantSeparate(){return this._constantSeparate}get gradient(){return this._gradient}get gradientX(){return this._gradientX}get gradientY(){return this._gradientY}get gradientZ(){return this._gradientZ}get gradientW(){return this._gradientW}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get constantMinSeparate(){return this._constantMinSeparate}get constantMaxSeparate(){return this._constantMaxSeparate}get gradientMin(){return this._gradientMin}get gradientMax(){return this._gradientMax}get gradientXMin(){return this._gradientXMin}get gradientXMax(){return this._gradientXMax}get gradientYMin(){return this._gradientYMin}get gradientYMax(){return this._gradientYMax}get gradientZMin(){return this._gradientZMin}get gradientZMax(){return this._gradientZMax}get gradientWMin(){return this._gradientWMin}get gradientWMax(){return this._gradientWMax}constructor(){this._type=0,this._separateAxes=!1,this._constant=0,this._constantSeparate=null,this._gradient=null,this._gradientX=null,this._gradientY=null,this._gradientZ=null,this._gradientW=null,this._constantMin=0,this._constantMax=0,this._constantMinSeparate=null,this._constantMaxSeparate=null,this._gradientMin=null,this._gradientMax=null,this._gradientXMin=null,this._gradientXMax=null,this._gradientYMin=null,this._gradientYMax=null,this._gradientZMin=null,this._gradientZMax=null,this._gradientWMin=null,this._gradientWMax=null}cloneTo(e){var t=e;t._type=this._type,t._separateAxes=this._separateAxes,t._constant=this._constant,this._constantSeparate.cloneTo(t._constantSeparate),this._gradient.cloneTo(t._gradient),this._gradientX.cloneTo(t._gradientX),this._gradientY.cloneTo(t._gradientY),this._gradientZ.cloneTo(t._gradientZ),t._constantMin=this._constantMin,t._constantMax=this._constantMax,this._constantMinSeparate.cloneTo(t._constantMinSeparate),this._constantMaxSeparate.cloneTo(t._constantMaxSeparate),this._gradientMin.cloneTo(t._gradientMin),this._gradientMax.cloneTo(t._gradientMax),this._gradientXMin.cloneTo(t._gradientXMin),this._gradientXMax.cloneTo(t._gradientXMax),this._gradientYMin.cloneTo(t._gradientYMin),this._gradientYMax.cloneTo(t._gradientYMax),this._gradientZMin.cloneTo(t._gradientZMin),this._gradientZMax.cloneTo(t._gradientZMax)}clone(){var e=new GradientAngularVelocity;return this.cloneTo(e),e}}class GradientDataInt{get gradientCount(){return this._currentLength/2}constructor(){this._currentLength=0,this._elements=new Float32Array(8)}add(e,t){this._currentLength<8?(6===this._currentLength&&1!==e&&(e=1,console.log("Warning:the forth key is  be force set to 1.")),this._elements[this._currentLength++]=e,this._elements[this._currentLength++]=t):console.log("Warning:data count must lessEqual than 4")}cloneTo(e){var t=e;t._currentLength=this._currentLength;for(var a=t._elements,r=0,i=this._elements.length;r<i;r++)a[r]=this._elements[r]}clone(){var e=new GradientDataInt;return this.cloneTo(e),e}}class GradientDataNumber{get gradientCount(){return this._currentLength/2}constructor(){this._currentLength=0,this._elements=new Float32Array(8)}add(e,t){this._currentLength<8?(6===this._currentLength&&1!==e&&(e=1,console.log("GradientDataNumber warning:the forth key is  be force set to 1.")),this._elements[this._currentLength++]=e,this._elements[this._currentLength++]=t):console.log("GradientDataNumber warning:data count must lessEqual than 4")}getKeyByIndex(e){return this._elements[2*e]}getValueByIndex(e){return this._elements[2*e+1]}getAverageValue(){for(var e=0,t=0,a=0,r=this._currentLength-2;a<r;a+=2){var i=this._elements[a+1];i+=this._elements[a+3],e+=i*=this._elements[a+2]-this._elements[a],t++}return e/t}cloneTo(e){var t=e;t._currentLength=this._currentLength;for(var a=t._elements,r=0,i=this._elements.length;r<i;r++)a[r]=this._elements[r]}clone(){var e=new GradientDataNumber;return this.cloneTo(e),e}}class GradientSize{static createByGradient(e){var t=new GradientSize;return t._type=0,t._separateAxes=!1,t._gradient=e,t}static createByGradientSeparate(e,t,a){var r=new GradientSize;return r._type=0,r._separateAxes=!0,r._gradientX=e,r._gradientY=t,r._gradientZ=a,r}static createByRandomTwoConstant(e,t){var a=new GradientSize;return a._type=1,a._separateAxes=!1,a._constantMin=e,a._constantMax=t,a}static createByRandomTwoConstantSeparate(e,t){var a=new GradientSize;return a._type=1,a._separateAxes=!0,a._constantMinSeparate=e,a._constantMaxSeparate=t,a}static createByRandomTwoGradient(e,t){var a=new GradientSize;return a._type=2,a._separateAxes=!1,a._gradientMin=e,a._gradientMax=t,a}static createByRandomTwoGradientSeparate(e,t,a,r,i,n){var s=new GradientSize;return s._type=2,s._separateAxes=!0,s._gradientXMin=e,s._gradientXMax=t,s._gradientYMin=a,s._gradientYMax=r,s._gradientZMin=i,s._gradientZMax=n,s}get type(){return this._type}get separateAxes(){return this._separateAxes}get gradient(){return this._gradient}get gradientX(){return this._gradientX}get gradientY(){return this._gradientY}get gradientZ(){return this._gradientZ}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get constantMinSeparate(){return this._constantMinSeparate}get constantMaxSeparate(){return this._constantMaxSeparate}get gradientMin(){return this._gradientMin}get gradientMax(){return this._gradientMax}get gradientXMin(){return this._gradientXMin}get gradientXMax(){return this._gradientXMax}get gradientYMin(){return this._gradientYMin}get gradientYMax(){return this._gradientYMax}get gradientZMin(){return this._gradientZMin}get gradientZMax(){return this._gradientZMax}constructor(){this._type=0,this._separateAxes=!1,this._gradient=null,this._gradientX=null,this._gradientY=null,this._gradientZ=null,this._constantMin=0,this._constantMax=0,this._constantMinSeparate=null,this._constantMaxSeparate=null,this._gradientMin=null,this._gradientMax=null,this._gradientXMin=null,this._gradientXMax=null,this._gradientYMin=null,this._gradientYMax=null,this._gradientZMin=null,this._gradientZMax=null}getMaxSizeInGradient(e=!1){var t,a,r=-Number.MAX_VALUE;switch(this._type){case 0:if(this._separateAxes){for(t=0,a=this._gradientX.gradientCount;t<a;t++)r=Math.max(r,this._gradientX.getValueByIndex(t));for(t=0,a=this._gradientY.gradientCount;t<a;t++)r=Math.max(r,this._gradientY.getValueByIndex(t));if(e)for(t=0,a=this._gradientZ.gradientCount;t<a;t++)r=Math.max(r,this._gradientZ.getValueByIndex(t))}else for(t=0,a=this._gradient.gradientCount;t<a;t++)r=Math.max(r,this._gradient.getValueByIndex(t));break;case 1:this._separateAxes?(r=Math.max(this._constantMinSeparate.x,this._constantMaxSeparate.x),r=Math.max(r,this._constantMinSeparate.y),e&&(r=r=Math.max(r,this._constantMaxSeparate.z))):r=Math.max(this._constantMin,this._constantMax);break;case 2:if(this._separateAxes){for(t=0,a=this._gradientXMin.gradientCount;t<a;t++)r=Math.max(r,this._gradientXMin.getValueByIndex(t));for(t=0,a=this._gradientXMax.gradientCount;t<a;t++)r=Math.max(r,this._gradientXMax.getValueByIndex(t));for(t=0,a=this._gradientYMin.gradientCount;t<a;t++)r=Math.max(r,this._gradientYMin.getValueByIndex(t));for(t=0,a=this._gradientZMax.gradientCount;t<a;t++)r=Math.max(r,this._gradientZMax.getValueByIndex(t));if(e){for(t=0,a=this._gradientZMin.gradientCount;t<a;t++)r=Math.max(r,this._gradientZMin.getValueByIndex(t));for(t=0,a=this._gradientZMax.gradientCount;t<a;t++)r=Math.max(r,this._gradientZMax.getValueByIndex(t))}}else{for(t=0,a=this._gradientMin.gradientCount;t<a;t++)r=Math.max(r,this._gradientMin.getValueByIndex(t));for(t=0,a=this._gradientMax.gradientCount;t<a;t++)r=Math.max(r,this._gradientMax.getValueByIndex(t))}}return r}cloneTo(e){var t=e;t._type=this._type,t._separateAxes=this._separateAxes,this._gradient.cloneTo(t._gradient),this._gradientX.cloneTo(t._gradientX),this._gradientY.cloneTo(t._gradientY),this._gradientZ.cloneTo(t._gradientZ),t._constantMin=this._constantMin,t._constantMax=this._constantMax,this._constantMinSeparate.cloneTo(t._constantMinSeparate),this._constantMaxSeparate.cloneTo(t._constantMaxSeparate),this._gradientMin.cloneTo(t._gradientMin),this._gradientMax.cloneTo(t._gradientMax),this._gradientXMin.cloneTo(t._gradientXMin),this._gradientXMax.cloneTo(t._gradientXMax),this._gradientYMin.cloneTo(t._gradientYMin),this._gradientYMax.cloneTo(t._gradientYMax),this._gradientZMin.cloneTo(t._gradientZMin),this._gradientZMax.cloneTo(t._gradientZMax)}clone(){var e=new GradientSize;return this.cloneTo(e),e}}class GradientVelocity{static createByConstant(e){var t=new GradientVelocity;return t._type=0,t._constant=e,t}static createByGradient(e,t,a){var r=new GradientVelocity;return r._type=1,r._gradientX=e,r._gradientY=t,r._gradientZ=a,r}static createByRandomTwoConstant(e,t){var a=new GradientVelocity;return a._type=2,a._constantMin=e,a._constantMax=t,a}static createByRandomTwoGradient(e,t,a,r,i,n){var s=new GradientVelocity;return s._type=3,s._gradientXMin=e,s._gradientXMax=t,s._gradientYMin=a,s._gradientYMax=r,s._gradientZMin=i,s._gradientZMax=n,s}get type(){return this._type}get constant(){return this._constant}get gradientX(){return this._gradientX}get gradientY(){return this._gradientY}get gradientZ(){return this._gradientZ}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get gradientXMin(){return this._gradientXMin}get gradientXMax(){return this._gradientXMax}get gradientYMin(){return this._gradientYMin}get gradientYMax(){return this._gradientYMax}get gradientZMin(){return this._gradientZMin}get gradientZMax(){return this._gradientZMax}constructor(){this._type=0,this._constant=null,this._gradientX=null,this._gradientY=null,this._gradientZ=null,this._constantMin=null,this._constantMax=null,this._gradientXMin=null,this._gradientXMax=null,this._gradientYMin=null,this._gradientYMax=null,this._gradientZMin=null,this._gradientZMax=null}cloneTo(e){var t=e;t._type=this._type,this._constant.cloneTo(t._constant),this._gradientX.cloneTo(t._gradientX),this._gradientY.cloneTo(t._gradientY),this._gradientZ.cloneTo(t._gradientZ),this._constantMin.cloneTo(t._constantMin),this._constantMax.cloneTo(t._constantMax),this._gradientXMin.cloneTo(t._gradientXMin),this._gradientXMax.cloneTo(t._gradientXMax),this._gradientYMin.cloneTo(t._gradientYMin),this._gradientYMax.cloneTo(t._gradientYMax),this._gradientZMin.cloneTo(t._gradientZMin),this._gradientZMax.cloneTo(t._gradientZMax)}clone(){var e=new GradientVelocity;return this.cloneTo(e),e}}class RotationOverLifetime{get angularVelocity(){return this._angularVelocity}constructor(e){this._angularVelocity=e}cloneTo(e){var t=e;this._angularVelocity.cloneTo(t._angularVelocity),t.enable=this.enable}clone(){var e;switch(this._angularVelocity.type){case 0:e=this._angularVelocity.separateAxes?GradientAngularVelocity.createByConstantSeparate(this._angularVelocity.constantSeparate.clone()):GradientAngularVelocity.createByConstant(this._angularVelocity.constant);break;case 1:e=this._angularVelocity.separateAxes?GradientAngularVelocity.createByGradientSeparate(this._angularVelocity.gradientX.clone(),this._angularVelocity.gradientY.clone(),this._angularVelocity.gradientZ.clone()):GradientAngularVelocity.createByGradient(this._angularVelocity.gradient.clone());break;case 2:e=this._angularVelocity.separateAxes?GradientAngularVelocity.createByRandomTwoConstantSeparate(this._angularVelocity.constantMinSeparate.clone(),this._angularVelocity.constantMaxSeparate.clone()):GradientAngularVelocity.createByRandomTwoConstant(this._angularVelocity.constantMin,this._angularVelocity.constantMax);break;case 3:e=this._angularVelocity.separateAxes?GradientAngularVelocity.createByRandomTwoGradientSeparate(this._angularVelocity.gradientXMin.clone(),this._angularVelocity.gradientYMin.clone(),this._angularVelocity.gradientZMin.clone(),this._angularVelocity.gradientWMin.clone(),this._angularVelocity.gradientXMax.clone(),this._angularVelocity.gradientYMax.clone(),this._angularVelocity.gradientZMax.clone(),this._angularVelocity.gradientWMax.clone()):GradientAngularVelocity.createByRandomTwoGradient(this._angularVelocity.gradientMin.clone(),this._angularVelocity.gradientMax.clone())}var t=new RotationOverLifetime(e);return t.enable=this.enable,t}}class BoundBox{constructor(e,t){this.min=e,this.max=t}_rotateExtents(e,t,a){var r=e.x,i=e.y,n=e.z,s=t.elements;a.x=Math.abs(s[0]*r)+Math.abs(s[4]*i)+Math.abs(s[8]*n),a.y=Math.abs(s[1]*r)+Math.abs(s[5]*i)+Math.abs(s[9]*n),a.z=Math.abs(s[2]*r)+Math.abs(s[6]*i)+Math.abs(s[10]*n)}getCorners(e){e.length=8;var a=this.min.x,r=this.min.y,i=this.min.z,n=this.max.x,s=this.max.y,o=this.max.z;e[0]=new t.Vector3(a,s,o),e[1]=new t.Vector3(n,s,o),e[2]=new t.Vector3(n,r,o),e[3]=new t.Vector3(a,r,o),e[4]=new t.Vector3(a,s,i),e[5]=new t.Vector3(n,s,i),e[6]=new t.Vector3(n,r,i),e[7]=new t.Vector3(a,r,i)}getCenter(e){t.Vector3.add(this.min,this.max,e),t.Vector3.scale(e,.5,e)}getExtent(e){t.Vector3.subtract(this.max,this.min,e),t.Vector3.scale(e,.5,e)}setCenterAndExtent(e,a){t.Vector3.subtract(e,a,this.min),t.Vector3.add(e,a,this.max)}tranform(e,a){var r=BoundBox._tempVector30,i=BoundBox._tempVector31;this.getCenter(r),this.getExtent(i),t.Vector3.transformCoordinate(r,e,r),this._rotateExtents(i,e,i),a.setCenterAndExtent(r,i)}toDefault(){this.min.toDefault(),this.max.toDefault()}static createfromPoints(e,a){if(null==e)throw new Error("points");var r=a.min,i=a.max;r.x=Number.MAX_VALUE,r.y=Number.MAX_VALUE,r.z=Number.MAX_VALUE,i.x=-Number.MAX_VALUE,i.y=-Number.MAX_VALUE,i.z=-Number.MAX_VALUE;for(var n=0,s=e.length;n<s;++n)t.Vector3.min(r,e[n],r),t.Vector3.max(i,e[n],i)}static merge(e,a,r){t.Vector3.min(e.min,a.min,r.min),t.Vector3.max(e.max,a.max,r.max)}cloneTo(e){var t=e;this.min.cloneTo(t.min),this.max.cloneTo(t.max)}clone(){var e=new BoundBox(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}BoundBox._tempVector30=new t.Vector3,BoundBox._tempVector31=new t.Vector3,e.ParticleSystemShapeType=void 0,(M=e.ParticleSystemShapeType||(e.ParticleSystemShapeType={}))[M.Box=0]="Box",M[M.Circle=1]="Circle",M[M.Cone=2]="Cone",M[M.Hemisphere=3]="Hemisphere",M[M.Sphere=4]="Sphere";class BaseShape{constructor(){this.enable=!0,this.randomDirection=0}_getShapeBoundBox(e){throw new Error("BaseShape: must override it.")}_getSpeedBoundBox(e){throw new Error("BaseShape: must override it.")}generatePositionAndDirection(e,t,a=null,r=null){throw new Error("BaseShape: must override it.")}_calculateProceduralBounds(e,a,r){this._getShapeBoundBox(e);var i=e.min,n=e.max;t.Vector3.multiply(i,a,i),t.Vector3.multiply(n,a,n);var s=new BoundBox(new t.Vector3,new t.Vector3);this.randomDirection?(s.min=new t.Vector3(-1,-1,-1),s.max=new t.Vector3(1,1,1)):this._getSpeedBoundBox(s);var o=new BoundBox(new t.Vector3,new t.Vector3),l=o.min,h=o.max;t.Vector3.scale(s.min,r.y,l),t.Vector3.scale(s.max,r.y,h),t.Vector3.add(e.min,l,l),t.Vector3.add(e.max,h,h),t.Vector3.min(e.min,l,e.min),t.Vector3.max(e.max,l,e.max);var c=new BoundBox(new t.Vector3,new t.Vector3),d=c.min,u=c.max;t.Vector3.scale(s.min,r.x,d),t.Vector3.scale(s.max,r.x,u),t.Vector3.min(c.min,u,l),t.Vector3.max(c.min,u,h),t.Vector3.min(e.min,l,e.min),t.Vector3.max(e.max,l,e.max)}cloneTo(e){e.enable=this.enable}clone(){var e=new BaseShape;return this.cloneTo(e),e}}class ShapeUtils{static _randomPointUnitArcCircle(e,t,a=null){var r;r=a?a.getFloat()*e:Math.random()*e,t.x=Math.cos(r),t.y=Math.sin(r)}static _randomPointInsideUnitArcCircle(e,t,a=null){var r;ShapeUtils._randomPointUnitArcCircle(e,t,a),r=a?Math.pow(a.getFloat(),.5):Math.pow(Math.random(),.5),t.x=t.x*r,t.y=t.y*r}static _randomPointUnitCircle(e,t=null){var a;a=t?t.getFloat()*Math.PI*2:Math.random()*Math.PI*2,e.x=Math.cos(a),e.y=Math.sin(a)}static _randomPointInsideUnitCircle(e,t=null){var a;ShapeUtils._randomPointUnitCircle(e),a=t?Math.pow(t.getFloat(),.5):Math.pow(Math.random(),.5),e.x=e.x*a,e.y=e.y*a}static _randomPointUnitSphere(e,t=null){var a,r;t?(a=e.z=2*t.getFloat()-1,r=t.getFloat()*Math.PI*2):(a=e.z=2*Math.random()-1,r=Math.random()*Math.PI*2);var i=Math.sqrt(1-a*a);e.x=i*Math.cos(r),e.y=i*Math.sin(r)}static _randomPointInsideUnitSphere(e,t=null){var a;ShapeUtils._randomPointUnitSphere(e),a=t?Math.pow(t.getFloat(),1/3):Math.pow(Math.random(),1/3),e.x=e.x*a,e.y=e.y*a,e.z=e.z*a}static _randomPointInsideHalfUnitBox(e,t=null){t?(e.x=t.getFloat()-.5,e.y=t.getFloat()-.5,e.z=t.getFloat()-.5):(e.x=Math.random()-.5,e.y=Math.random()-.5,e.z=Math.random()-.5)}constructor(){}}class BoxShape extends BaseShape{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Box,this.x=1,this.y=1,this.z=1}_getShapeBoundBox(e){var t=e.min;t.x=.5*-this.x,t.y=.5*-this.y,t.z=.5*-this.z;var a=e.max;a.x=.5*this.x,a.y=.5*this.y,a.z=.5*this.z}_getSpeedBoundBox(e){var t=e.min;t.x=0,t.y=0,t.z=0;var a=e.max;a.x=0,a.y=1,a.z=0}generatePositionAndDirection(e,t,a=null,r=null){a?(a.seed=r[16],ShapeUtils._randomPointInsideHalfUnitBox(e,a),r[16]=a.seed):ShapeUtils._randomPointInsideHalfUnitBox(e),e.x=this.x*e.x,e.y=this.y*e.y,e.z=this.z*e.z,this.randomDirection?a?(a.seed=r[17],ShapeUtils._randomPointUnitSphere(t,a),r[17]=a.seed):ShapeUtils._randomPointUnitSphere(t):(t.x=0,t.y=0,t.z=1)}cloneTo(e){super.cloneTo(e);var t=e;t.x=this.x,t.y=this.y,t.z=this.z,t.randomDirection=this.randomDirection}clone(){var e=new BoxShape;return this.cloneTo(e),e}}class CircleShape extends BaseShape{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Circle,this.radius=1,this.arc=2*Math.PI,this.emitFromEdge=!1}set arcDEG(e){this.arc=e/180*Math.PI}get arcDEG(){return 180*this.arc/Math.PI}_getShapeBoundBox(e){var t=e.min;t.x=t.z=-this.radius,t.y=0;var a=e.max;a.x=a.z=this.radius,a.y=0}_getSpeedBoundBox(e){var t=e.min;t.x=t.y=-1,t.z=0;var a=e.max;a.x=a.y=1,a.z=0}generatePositionAndDirection(e,a,r=null,i=null){var n=CircleShape._tempPositionPoint;r?(r.seed=i[16],this.emitFromEdge?ShapeUtils._randomPointUnitArcCircle(this.arc,CircleShape._tempPositionPoint,r):ShapeUtils._randomPointInsideUnitArcCircle(this.arc,CircleShape._tempPositionPoint,r),i[16]=r.seed):this.emitFromEdge?ShapeUtils._randomPointUnitArcCircle(this.arc,CircleShape._tempPositionPoint):ShapeUtils._randomPointInsideUnitArcCircle(this.arc,CircleShape._tempPositionPoint),e.x=-n.x,e.y=n.y,e.z=0,t.Vector3.scale(e,this.radius,e),this.randomDirection?r?(r.seed=i[17],ShapeUtils._randomPointUnitSphere(a,r),i[17]=r.seed):ShapeUtils._randomPointUnitSphere(a):e.cloneTo(a)}cloneTo(e){super.cloneTo(e);var t=e;t.radius=this.radius,t.arc=this.arc,t.emitFromEdge=this.emitFromEdge,t.randomDirection=this.randomDirection}clone(){var e=new CircleShape;return this.cloneTo(e),e}}CircleShape._tempPositionPoint=new t.Vector2;class ConeShape extends BaseShape{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Cone,this.angle=25/180*Math.PI,this.radius=1,this.length=5,this.emitType=0}set angleDEG(e){this.angle=e/180*Math.PI}get angleDEG(){return 180*this.angle/Math.PI}_getShapeBoundBox(e){const t=this.radius+this.length*Math.sin(this.angle),a=this.length*Math.cos(this.angle);var r=e.min;r.x=r.y=-t,r.z=0;var i=e.max;i.x=i.y=t,i.z=a}_getSpeedBoundBox(e){const t=Math.sin(this.angle);var a=e.min;a.x=a.y=-t,a.z=0;var r=e.max;r.x=r.y=t,r.z=1}generatePositionAndDirection(e,a,r=null,i=null){var n,s,o,l=ConeShape._tempPositionPoint,h=Math.cos(this.angle),c=Math.sin(this.angle);switch(this.emitType){case 0:r?(r.seed=i[16],ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint,r),i[16]=r.seed):ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint),n=l.x,s=l.y,e.x=n*this.radius,e.y=s*this.radius,e.z=0,this.randomDirection?(r?(r.seed=i[17],ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint,r),i[17]=r.seed):ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint),o=ConeShape._tempDirectionPoint,a.x=o.x*c,a.y=o.y*c):(a.x=n*c,a.y=s*c),a.z=h;break;case 1:r?(r.seed=i[16],ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint,r),i[16]=r.seed):ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint),n=l.x,s=l.y,e.x=n*this.radius,e.y=s*this.radius,e.z=0,this.randomDirection?(r?(r.seed=i[17],ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint,r),i[17]=r.seed):ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint),o=ConeShape._tempDirectionPoint,a.x=o.x*c,a.y=o.y*c):(a.x=n*c,a.y=s*c),a.z=h;break;case 2:r?(r.seed=i[16],ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint,r)):ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint),n=l.x,s=l.y,e.x=n*this.radius,e.y=s*this.radius,e.z=0,a.x=n*c,a.y=s*c,a.z=h,t.Vector3.normalize(a,a),r?(t.Vector3.scale(a,this.length*r.getFloat(),a),i[16]=r.seed):t.Vector3.scale(a,this.length*Math.random(),a),t.Vector3.add(e,a,e),this.randomDirection&&(r?(r.seed=i[17],ShapeUtils._randomPointUnitSphere(a,r),i[17]=r.seed):ShapeUtils._randomPointUnitSphere(a));break;case 3:r?(r.seed=i[16],ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint,r)):ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint),n=l.x,s=l.y,e.x=n*this.radius,e.y=s*this.radius,e.z=0,a.x=n*c,a.y=s*c,a.z=h,t.Vector3.normalize(a,a),r?(t.Vector3.scale(a,this.length*r.getFloat(),a),i[16]=r.seed):t.Vector3.scale(a,this.length*Math.random(),a),t.Vector3.add(e,a,e),this.randomDirection&&(r?(r.seed=i[17],ShapeUtils._randomPointUnitSphere(a,r),i[17]=r.seed):ShapeUtils._randomPointUnitSphere(a));break;default:throw new Error("ConeShape:emitType is invalid.")}}cloneTo(e){super.cloneTo(e);var t=e;t.angle=this.angle,t.radius=this.radius,t.length=this.length,t.emitType=this.emitType,t.randomDirection=this.randomDirection}clone(){var e=new ConeShape;return this.cloneTo(e),e}}ConeShape._tempPositionPoint=new t.Vector2,ConeShape._tempDirectionPoint=new t.Vector2;class HemisphereShape extends BaseShape{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Hemisphere,this.radius=1,this.emitFromShell=!1}_getShapeBoundBox(e){var t=e.min;t.x=t.y=t.z=-this.radius;var a=e.max;a.x=a.y=this.radius,a.z=0}_getSpeedBoundBox(e){var t=e.min;t.x=t.y=-1,t.z=0;var a=e.max;a.x=a.y=a.z=1}generatePositionAndDirection(e,a,r=null,i=null){r?(r.seed=i[16],this.emitFromShell?ShapeUtils._randomPointUnitSphere(e,r):ShapeUtils._randomPointInsideUnitSphere(e,r),i[16]=r.seed):this.emitFromShell?ShapeUtils._randomPointUnitSphere(e):ShapeUtils._randomPointInsideUnitSphere(e),t.Vector3.scale(e,this.radius,e);var n=e.z;n<0&&(e.z=-1*n),this.randomDirection?r?(r.seed=i[17],ShapeUtils._randomPointUnitSphere(a,r),i[17]=r.seed):ShapeUtils._randomPointUnitSphere(a):e.cloneTo(a)}cloneTo(e){super.cloneTo(e);var t=e;t.radius=this.radius,t.emitFromShell=this.emitFromShell,t.randomDirection=this.randomDirection}clone(){var e=new HemisphereShape;return this.cloneTo(e),e}}class SphereShape extends BaseShape{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Sphere,this.radius=1,this.emitFromShell=!1}_getShapeBoundBox(e){var t=e.min;t.x=t.y=t.z=-this.radius;var a=e.max;a.x=a.y=a.z=this.radius}_getSpeedBoundBox(e){var t=e.min;t.x=t.y=t.z=-1;var a=e.max;a.x=a.y=a.z=1}generatePositionAndDirection(e,a,r=null,i=null){r?(r.seed=i[16],this.emitFromShell?ShapeUtils._randomPointUnitSphere(e,r):ShapeUtils._randomPointInsideUnitSphere(e,r),i[16]=r.seed):this.emitFromShell?ShapeUtils._randomPointUnitSphere(e):ShapeUtils._randomPointInsideUnitSphere(e),t.Vector3.scale(e,this.radius,e),this.randomDirection?r?(r.seed=i[17],ShapeUtils._randomPointUnitSphere(a,r),i[17]=r.seed):ShapeUtils._randomPointUnitSphere(a):e.cloneTo(a)}cloneTo(e){super.cloneTo(e);var t=e;t.radius=this.radius,t.emitFromShell=this.emitFromShell,t.randomDirection=this.randomDirection}clone(){var e=new SphereShape;return this.cloneTo(e),e}}class SizeOverLifetime{get size(){return this._size}constructor(e){this._size=e}cloneTo(e){var t=e;this._size.cloneTo(t._size),t.enable=this.enable}clone(){var e;switch(this._size.type){case 0:e=this._size.separateAxes?GradientSize.createByGradientSeparate(this._size.gradientX.clone(),this._size.gradientY.clone(),this._size.gradientZ.clone()):GradientSize.createByGradient(this._size.gradient.clone());break;case 1:e=this._size.separateAxes?GradientSize.createByRandomTwoConstantSeparate(this._size.constantMinSeparate.clone(),this._size.constantMaxSeparate.clone()):GradientSize.createByRandomTwoConstant(this._size.constantMin,this._size.constantMax);break;case 2:e=this._size.separateAxes?GradientSize.createByRandomTwoGradientSeparate(this._size.gradientXMin.clone(),this._size.gradientYMin.clone(),this._size.gradientZMin.clone(),this._size.gradientXMax.clone(),this._size.gradientYMax.clone(),this._size.gradientZMax.clone()):GradientSize.createByRandomTwoGradient(this._size.gradientMin.clone(),this._size.gradientMax.clone())}var t=new SizeOverLifetime(e);return t.enable=this.enable,t}}class StartFrame{static createByConstant(e=0){var t=new StartFrame;return t._type=0,t._constant=e,t}static createByRandomTwoConstant(e=0,t=0){var a=new StartFrame;return a._type=1,a._constantMin=e,a._constantMax=t,a}get type(){return this._type}get constant(){return this._constant}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}constructor(){this._type=0,this._constant=0,this._constantMin=0,this._constantMax=0}cloneTo(e){var t=e;t._type=this._type,t._constant=this._constant,t._constantMin=this._constantMin,t._constantMax=this._constantMax}clone(){var e=new StartFrame;return this.cloneTo(e),e}}class TextureSheetAnimation{get frame(){return this._frame}get startFrame(){return this._startFrame}constructor(e,a){this.type=0,this.randomRow=!1,this.rowIndex=0,this.cycles=0,this.enableUVChannels=0,this.enable=!1,this.tiles=new t.Vector2(1,1),this.type=0,this.randomRow=!0,this.rowIndex=0,this.cycles=1,this.enableUVChannels=1,this._frame=e,this._startFrame=a}cloneTo(e){var t=e;this.tiles.cloneTo(t.tiles),t.type=this.type,t.randomRow=this.randomRow,t.rowIndex=this.rowIndex,t.cycles=this.cycles,t.enableUVChannels=this.enableUVChannels,t.enable=this.enable,this._frame.cloneTo(t._frame),this._startFrame.cloneTo(t._startFrame)}clone(){var e,t;switch(this._frame.type){case 0:e=FrameOverTime.createByConstant(this._frame.constant);break;case 1:e=FrameOverTime.createByOverTime(this._frame.frameOverTimeData.clone());break;case 2:e=FrameOverTime.createByRandomTwoConstant(this._frame.constantMin,this._frame.constantMax);break;case 3:e=FrameOverTime.createByRandomTwoOverTime(this._frame.frameOverTimeDataMin.clone(),this._frame.frameOverTimeDataMax.clone())}switch(this._startFrame.type){case 0:t=StartFrame.createByConstant(this._startFrame.constant);break;case 1:t=StartFrame.createByRandomTwoConstant(this._startFrame.constantMin,this._startFrame.constantMax)}var a=new TextureSheetAnimation(e,t);return this.cloneTo(a),a}}class VelocityOverLifetime{get velocity(){return this._velocity}constructor(e){this.enable=!1,this.space=0,this._velocity=e}cloneTo(e){var t=e;this._velocity.cloneTo(t._velocity),t.enable=this.enable,t.space=this.space}clone(){var e;switch(this._velocity.type){case 0:e=GradientVelocity.createByConstant(this._velocity.constant.clone());break;case 1:e=GradientVelocity.createByGradient(this._velocity.gradientX.clone(),this._velocity.gradientY.clone(),this._velocity.gradientZ.clone());break;case 2:e=GradientVelocity.createByRandomTwoConstant(this._velocity.constantMin.clone(),this._velocity.constantMax.clone());break;case 3:e=GradientVelocity.createByRandomTwoGradient(this._velocity.gradientXMin.clone(),this._velocity.gradientXMax.clone(),this._velocity.gradientYMin.clone(),this._velocity.gradientYMax.clone(),this._velocity.gradientZMin.clone(),this._velocity.gradientZMax.clone())}var t=new VelocityOverLifetime(e);return t.enable=this.enable,t.space=this.space,t}}class VertexShuriKenParticle{constructor(){}}VertexShuriKenParticle.PARTICLE_DIRECTIONTIME=0,VertexShuriKenParticle.PARTICLE_POSITION0=1,VertexShuriKenParticle.PARTICLE_COLOR0=2,VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0=3,VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME=4,VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0=5,VertexShuriKenParticle.PARTICLE_STARTCOLOR0=6,VertexShuriKenParticle.PARTICLE_ENDCOLOR0=7,VertexShuriKenParticle.PARTICLE_STARTSIZE=8,VertexShuriKenParticle.PARTICLE_STARTROTATION=9,VertexShuriKenParticle.PARTICLE_STARTSPEED=10,VertexShuriKenParticle.PARTICLE_RANDOM0=11,VertexShuriKenParticle.PARTICLE_RANDOM1=12,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION=13,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION=14,VertexShuriKenParticle.PARTICLE_SIMULATIONUV=15;class VertexShurikenParticleBillboard extends VertexShuriKenParticle{static get vertexDeclaration(){return VertexShurikenParticleBillboard._vertexDeclaration}static get vertexInstanceMeshDeclaration(){return VertexShurikenParticleBillboard._vertexInstanceMeshDeclaration}static get vertexInstanceParticleDeclaration(){return VertexShurikenParticleBillboard._vertexInstanceParticleDeclaration}static get billboardVertexArray(){return VertexShurikenParticleBillboard._billboardVertexArray}static get billboardIndexArray(){return VertexShurikenParticleBillboard._billboardIndexArray}static set billboardIndexArray(e){VertexShurikenParticleBillboard._billboardIndexArray=e}static __init__(){VertexShurikenParticleBillboard._vertexDeclaration=new t.VertexDeclaration(168,[new t.VertexElement(0,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0),new t.VertexElement(16,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(32,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),new t.VertexElement(48,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_STARTCOLOR0),new t.VertexElement(64,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTSIZE),new t.VertexElement(76,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTROTATION),new t.VertexElement(88,t.VertexElementFormat.Single,VertexShuriKenParticle.PARTICLE_STARTSPEED),new t.VertexElement(92,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM0),new t.VertexElement(108,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM1),new t.VertexElement(124,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(136,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(152,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONUV)]),VertexShurikenParticleBillboard._vertexInstanceMeshDeclaration=new t.VertexDeclaration(16,[new t.VertexElement(0,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0)]),VertexShurikenParticleBillboard._vertexInstanceParticleDeclaration=new t.VertexDeclaration(152,[new t.VertexElement(0,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(16,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),new t.VertexElement(32,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_STARTCOLOR0),new t.VertexElement(48,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTSIZE),new t.VertexElement(60,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTROTATION),new t.VertexElement(72,t.VertexElementFormat.Single,VertexShuriKenParticle.PARTICLE_STARTSPEED),new t.VertexElement(76,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM0),new t.VertexElement(92,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM1),new t.VertexElement(108,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(120,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(136,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONUV)]),VertexShurikenParticleBillboard._billboardIndexArray=new Uint16Array([0,2,1,0,3,2]),VertexShurikenParticleBillboard._billboardVertexArray=new Float32Array([-.5,-.5,0,1,.5,-.5,1,1,.5,.5,1,0,-.5,.5,0,0])}get cornerTextureCoordinate(){return this._cornerTextureCoordinate}get positionStartLifeTime(){return this._positionStartLifeTime}get velocity(){return this._velocity}get startColor(){return this._startColor}get startSize(){return this._startSize}get startRotation0(){return this._startRotation0}get startRotation1(){return this._startRotation1}get startRotation2(){return this._startRotation2}get startLifeTime(){return this._startLifeTime}get time(){return this._time}get startSpeed(){return this._startSpeed}get random0(){return this._randoms0}get random1(){return this._randoms1}get simulationWorldPostion(){return this._simulationWorldPostion}constructor(e,t,a,r,i,n,s,o,l,h,c,d,u,_){super(),this._cornerTextureCoordinate=e,this._positionStartLifeTime=t,this._velocity=a,this._startColor=r,this._startSize=i,this._startRotation0=n,this._startRotation1=s,this._startRotation2=o,this._startLifeTime=l,this._time=h,this._startSpeed=c,this._randoms0=d,this._randoms1=u,this._simulationWorldPostion=_}}class VertexShurikenParticleMesh extends VertexShuriKenParticle{static __init__(){VertexShurikenParticleMesh._vertexDeclaration=new t.VertexDeclaration(188,[new t.VertexElement(0,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_COLOR0),new t.VertexElement(28,t.VertexElementFormat.Vector2,VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0),new t.VertexElement(36,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(52,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),new t.VertexElement(68,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_STARTCOLOR0),new t.VertexElement(84,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTSIZE),new t.VertexElement(96,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTROTATION),new t.VertexElement(108,t.VertexElementFormat.Single,VertexShuriKenParticle.PARTICLE_STARTSPEED),new t.VertexElement(112,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM0),new t.VertexElement(128,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM1),new t.VertexElement(144,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(156,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(172,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONUV)]),VertexShurikenParticleMesh._vertexInstanceMeshDeclaration=new t.VertexDeclaration(36,[new t.VertexElement(0,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_COLOR0),new t.VertexElement(28,t.VertexElementFormat.Vector2,VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0)]),VertexShurikenParticleMesh._vertexInstanceParticleDeclaration=new t.VertexDeclaration(152,[new t.VertexElement(0,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(16,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),new t.VertexElement(32,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_STARTCOLOR0),new t.VertexElement(48,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTSIZE),new t.VertexElement(60,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_STARTROTATION),new t.VertexElement(72,t.VertexElementFormat.Single,VertexShuriKenParticle.PARTICLE_STARTSPEED),new t.VertexElement(76,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM0),new t.VertexElement(92,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_RANDOM1),new t.VertexElement(108,t.VertexElementFormat.Vector3,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(120,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(136,t.VertexElementFormat.Vector4,VertexShuriKenParticle.PARTICLE_SIMULATIONUV)])}static get vertexDeclaration(){return VertexShurikenParticleMesh._vertexDeclaration}static get vertexInstanceMeshDeclaration(){return VertexShurikenParticleMesh._vertexInstanceMeshDeclaration}static get vertexInstanceParticleDeclaration(){return VertexShurikenParticleMesh._vertexInstanceParticleDeclaration}get cornerTextureCoordinate(){return this._cornerTextureCoordinate}get position(){return this._positionStartLifeTime}get velocity(){return this._velocity}get startColor(){return this._startColor}get startSize(){return this._startSize}get startRotation0(){return this._startRotation0}get startRotation1(){return this._startRotation1}get startRotation2(){return this._startRotation2}get startLifeTime(){return this._startLifeTime}get time(){return this._time}get startSpeed(){return this._startSpeed}get random0(){return this._randoms0}get random1(){return this._randoms1}get simulationWorldPostion(){return this._simulationWorldPostion}constructor(e,t,a,r,i,n,s,o,l,h,c,d,u,_){super(),this._cornerTextureCoordinate=e,this._positionStartLifeTime=t,this._velocity=a,this._startColor=r,this._startSize=i,this._startRotation0=n,this._startRotation1=s,this._startRotation2=o,this._startLifeTime=l,this._time=h,this._startSpeed=c,this._randoms0=d,this._randoms1=u,this._simulationWorldPostion=_}}class Rand{static getFloatFromInt(e){return 1/8388607*(8388607&e)}static getByteFromInt(e){return(8388607&e)>>>15}get seed(){return this.seeds[0]}set seed(e){this.seeds[0]=e,this.seeds[1]=1812433253*this.seeds[0]+1,this.seeds[2]=1812433253*this.seeds[1]+1,this.seeds[3]=1812433253*this.seeds[2]+1}constructor(e){this._temp=new Uint32Array(1),this.seeds=new Uint32Array(4),this.seeds[0]=e,this.seeds[1]=1812433253*this.seeds[0]+1,this.seeds[2]=1812433253*this.seeds[1]+1,this.seeds[3]=1812433253*this.seeds[2]+1}getUint(){return this._temp[0]=this.seeds[0]^this.seeds[0]<<11,this.seeds[0]=this.seeds[1],this.seeds[1]=this.seeds[2],this.seeds[2]=this.seeds[3],this.seeds[3]=this.seeds[3]^this.seeds[3]>>>19^this._temp[0]^this._temp[0]>>>8,this.seeds[3]}getFloat(){return this.getUint(),(8388607&this.seeds[3])*(1/8388607)}getSignedFloat(){return 2*this.getFloat()-1}}class ShuriKenParticle3DShaderDeclaration{static __init__(){ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_BILLBOARD=t.Shader3D.getDefineByName("SPHERHBILLBOARD"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD=t.Shader3D.getDefineByName("STRETCHEDBILLBOARD"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD=t.Shader3D.getDefineByName("HORIZONTALBILLBOARD"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD=t.Shader3D.getDefineByName("VERTICALBILLBOARD"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8=t.Shader3D.getDefineByName("COLORKEYCOUNT_8"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME=t.Shader3D.getDefineByName("COLOROVERLIFETIME"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME=t.Shader3D.getDefineByName("RANDOMCOLOROVERLIFETIME"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMECONSTANT"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMECURVE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMERANDOMCONSTANT"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMERANDOMCURVE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE=t.Shader3D.getDefineByName("TEXTURESHEETANIMATIONCURVE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE=t.Shader3D.getDefineByName("TEXTURESHEETANIMATIONRANDOMCURVE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIME"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMESEPERATE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMECONSTANT"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMECURVE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMERANDOMCONSTANTS"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMERANDOMCURVES"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE=t.Shader3D.getDefineByName("SIZEOVERLIFETIMECURVE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE=t.Shader3D.getDefineByName("SIZEOVERLIFETIMECURVESEPERATE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES=t.Shader3D.getDefineByName("SIZEOVERLIFETIMERANDOMCURVES"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE=t.Shader3D.getDefineByName("SIZEOVERLIFETIMERANDOMCURVESSEPERATE"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_MESH=t.Shader3D.getDefineByName("RENDERMODE_MESH"),ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SHAPE=t.Shader3D.getDefineByName("SHAPE"),ShuriKenParticle3DShaderDeclaration.WORLDPOSITION=t.Shader3D.propertyNameToID("u_WorldPosition"),ShuriKenParticle3DShaderDeclaration.WORLDROTATION=t.Shader3D.propertyNameToID("u_WorldRotation"),ShuriKenParticle3DShaderDeclaration.POSITIONSCALE=t.Shader3D.propertyNameToID("u_PositionScale"),ShuriKenParticle3DShaderDeclaration.SIZESCALE=t.Shader3D.propertyNameToID("u_SizeScale"),ShuriKenParticle3DShaderDeclaration.SCALINGMODE=t.Shader3D.propertyNameToID("u_ScalingMode"),ShuriKenParticle3DShaderDeclaration.GRAVITY=t.Shader3D.propertyNameToID("u_Gravity"),ShuriKenParticle3DShaderDeclaration.THREEDSTARTROTATION=t.Shader3D.propertyNameToID("u_ThreeDStartRotation"),ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDLENGTHSCALE=t.Shader3D.propertyNameToID("u_StretchedBillboardLengthScale"),ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDSPEEDSCALE=t.Shader3D.propertyNameToID("u_StretchedBillboardSpeedScale"),ShuriKenParticle3DShaderDeclaration.SIMULATIONSPACE=t.Shader3D.propertyNameToID("u_SimulationSpace"),ShuriKenParticle3DShaderDeclaration.CURRENTTIME=t.Shader3D.propertyNameToID("u_CurrentTime"),ShuriKenParticle3DShaderDeclaration.DRAG=t.Shader3D.propertyNameToID("u_DragConstanct"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST=t.Shader3D.propertyNameToID("u_VOLVelocityConst"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientX"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY=t.Shader3D.propertyNameToID("u_VOLVelocityGradientY"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ=t.Shader3D.propertyNameToID("u_VOLVelocityGradientZ"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONSTMAX=t.Shader3D.propertyNameToID("u_VOLVelocityConstMax"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientMaxX"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientMaxY"),ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientMaxZ"),ShuriKenParticle3DShaderDeclaration.VOLSPACETYPE=t.Shader3D.propertyNameToID("u_VOLSpaceType"),ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS=t.Shader3D.propertyNameToID("u_ColorOverLifeGradientAlphas"),ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS=t.Shader3D.propertyNameToID("u_ColorOverLifeGradientColors"),ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES=t.Shader3D.propertyNameToID("u_ColorOverLifeGradientRanges"),ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS=t.Shader3D.propertyNameToID("u_MaxColorOverLifeGradientAlphas"),ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS=t.Shader3D.propertyNameToID("u_MaxColorOverLifeGradientColors"),ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES=t.Shader3D.propertyNameToID("u_MaxColorOverLifeGradientRanges"),ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT=t.Shader3D.propertyNameToID("u_SOLSizeGradient"),ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX=t.Shader3D.propertyNameToID("u_SOLSizeGradientX"),ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY=t.Shader3D.propertyNameToID("u_SOLSizeGradientY"),ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ=t.Shader3D.propertyNameToID("u_SOLSizeGradientZ"),ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax=t.Shader3D.propertyNameToID("u_SOLSizeGradientMax"),ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX=t.Shader3D.propertyNameToID("u_SOLSizeGradientMaxX"),ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX=t.Shader3D.propertyNameToID("u_SOLSizeGradientMaxY"),ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX=t.Shader3D.propertyNameToID("u_SOLSizeGradientMaxZ"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConst"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConstSeprarate"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradient"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientX"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientY"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientZ"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConstMax"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAXSEPRARATE=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConstMaxSeprarate"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMax"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxX"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxY"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxZ"),ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTWMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxW"),ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONCYCLES=t.Shader3D.propertyNameToID("u_TSACycles"),ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONSUBUVLENGTH=t.Shader3D.propertyNameToID("u_TSASubUVLength"),ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS=t.Shader3D.propertyNameToID("u_TSAGradientUVs"),ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS=t.Shader3D.propertyNameToID("u_TSAMaxGradientUVs");let e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.WORLDPOSITION,"u_WorldPosition"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.WORLDROTATION,"u_WorldRotation"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE,"u_PositionScale"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SIZESCALE,"u_SizeScale"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SCALINGMODE,"u_ScalingMode"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.GRAVITY,"u_Gravity"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.THREEDSTARTROTATION,"u_ThreeDStartRotation"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDLENGTHSCALE,"u_StretchedBillboardLengthScale"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDSPEEDSCALE,"u_StretchedBillboardSpeedScale"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SIMULATIONSPACE,"u_SimulationSpace"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.CURRENTTIME,"u_CurrentTime"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS,"u_ColorOverLifeGradientAlphas"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS,"u_ColorOverLifeGradientColors"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES,"u_ColorOverLifeGradientRanges"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS,"u_MaxColorOverLifeGradientAlphas"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS,"u_MaxColorOverLifeGradientColors"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES,"u_MaxColorOverLifeGradientRanges"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST,"u_VOLVelocityConst"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX,"u_VOLVelocityGradientX"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY,"u_VOLVelocityGradientY"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ,"u_VOLVelocityGradientZ"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONSTMAX,"u_VOLVelocityConstMax"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX,"u_VOLVelocityGradientMaxX"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX,"u_VOLVelocityGradientMaxY"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX,"u_VOLVelocityGradientMaxZ"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLSPACETYPE,"u_VOLSpaceType"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT,"u_SOLSizeGradient"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX,"u_SOLSizeGradientX"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY,"u_SOLSizeGradientY"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ,"u_SOLSizeGradientZ"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax,"u_SOLSizeGradientMax"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX,"u_SOLSizeGradientMaxX"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX,"u_SOLSizeGradientMaxY"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX,"u_SOLSizeGradientMaxZ"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST,"u_ROLAngularVelocityConst"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE,"u_ROLAngularVelocityConstSeprarate"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT,"u_ROLAngularVelocityGradient"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX,"u_ROLAngularVelocityGradientX"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY,"u_ROLAngularVelocityGradientY"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ,"u_ROLAngularVelocityGradientZ"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAX,"u_ROLAngularVelocityConstMax"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAXSEPRARATE,"u_ROLAngularVelocityConstMaxSeprarate"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX,"u_ROLAngularVelocityGradientMax"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX,"u_ROLAngularVelocityGradientMaxX"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX,"u_ROLAngularVelocityGradientMaxY"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX,"u_ROLAngularVelocityGradientMaxZ"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTWMAX,"u_ROLAngularVelocityGradientMaxW"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONCYCLES,"u_TSACycles"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONSUBUVLENGTH,"u_TSASubUVLength"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS,"u_TSAGradientUVs"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS,"u_TSAMaxGradientUVs"),e.addShaderUniform(ShuriKenParticle3DShaderDeclaration.DRAG,"u_DragConstanct")}}class ShurikenParticleData{constructor(){}static _getStartLifetimeFromGradient(e,a){for(var r=1,i=e.gradientCount;r<i;r++){var n=e.getKeyByIndex(r);if(n>=a){var s=e.getKeyByIndex(r-1),o=(a-s)/(n-s);return t.MathUtil.lerp(e.getValueByIndex(r-1),e.getValueByIndex(r),o)}}throw new Error("ShurikenParticleData: can't get value foam startLifeTimeGradient.")}static _randomInvertRoationArray(e,t,a,r,i){var n;r?(r.seed=i[6],n=r.getFloat(),i[6]=r.seed):n=Math.random(),n<a?(t.x=-e.x,t.y=-e.y,t.z=-e.z):(t.x=e.x,t.y=e.y,t.z=e.z)}static _randomInvertRoation(e,t,a,r){var i;return a?(a.seed=r[6],i=a.getFloat(),r[6]=a.seed):i=Math.random(),i<t&&(e=-e),e}static create(e,a){var r=e.autoRandomSeed,i=e._rand,n=e._randomSeeds;switch(e.startColorType){case 0:var s=e.startColorConstant;ShurikenParticleData.startColor.x=s.x,ShurikenParticleData.startColor.y=s.y,ShurikenParticleData.startColor.z=s.z,ShurikenParticleData.startColor.w=s.w;break;case 2:r?t.Vector4.lerp(e.startColorConstantMin,e.startColorConstantMax,Math.random(),ShurikenParticleData.startColor):(i.seed=n[3],t.Vector4.lerp(e.startColorConstantMin,e.startColorConstantMax,i.getFloat(),ShurikenParticleData.startColor),n[3]=i.seed)}var o=e.colorOverLifetime;if(o&&o.enable){var l=o.color;switch(l.type){case 0:ShurikenParticleData.startColor.x=ShurikenParticleData.startColor.x*l.constant.x,ShurikenParticleData.startColor.y=ShurikenParticleData.startColor.y*l.constant.y,ShurikenParticleData.startColor.z=ShurikenParticleData.startColor.z*l.constant.z,ShurikenParticleData.startColor.w=ShurikenParticleData.startColor.w*l.constant.w;break;case 2:var h;r?h=Math.random():(i.seed=n[10],h=i.getFloat(),n[10]=i.seed);var c=l.constantMin,d=l.constantMax;ShurikenParticleData.startColor.x=ShurikenParticleData.startColor.x*t.MathUtil.lerp(c.x,d.x,h),ShurikenParticleData.startColor.y=ShurikenParticleData.startColor.y*t.MathUtil.lerp(c.y,d.y,h),ShurikenParticleData.startColor.z=ShurikenParticleData.startColor.z*t.MathUtil.lerp(c.z,d.z,h),ShurikenParticleData.startColor.w=ShurikenParticleData.startColor.w*t.MathUtil.lerp(c.w,d.w,h)}}var u=ShurikenParticleData.startSize;switch(e.startSizeType){case 0:if(e.threeDStartSize){var _=e.startSizeConstantSeparate;u[0]=_.x,u[1]=_.y,u[2]=_.z}else u[0]=u[1]=u[2]=e.startSizeConstant;break;case 2:if(e.threeDStartSize){var m=e.startSizeConstantMinSeparate,f=e.startSizeConstantMaxSeparate;r?(u[0]=t.MathUtil.lerp(m.x,f.x,Math.random()),u[1]=t.MathUtil.lerp(m.y,f.y,Math.random()),u[2]=t.MathUtil.lerp(m.z,f.z,Math.random())):(i.seed=n[4],u[0]=t.MathUtil.lerp(m.x,f.x,i.getFloat()),u[1]=t.MathUtil.lerp(m.y,f.y,i.getFloat()),u[2]=t.MathUtil.lerp(m.z,f.z,i.getFloat()),n[4]=i.seed)}else r?u[0]=u[1]=u[2]=t.MathUtil.lerp(e.startSizeConstantMin,e.startSizeConstantMax,Math.random()):(i.seed=n[4],u[0]=u[1]=u[2]=t.MathUtil.lerp(e.startSizeConstantMin,e.startSizeConstantMax,i.getFloat()),n[4]=i.seed)}var S=e.sizeOverLifetime;if(S&&S.enable&&1===S.size.type){var g,p=S.size;if(p.separateAxes)r?(u[0]=u[0]*t.MathUtil.lerp(p.constantMinSeparate.x,p.constantMaxSeparate.x,Math.random()),u[1]=u[1]*t.MathUtil.lerp(p.constantMinSeparate.y,p.constantMaxSeparate.y,Math.random()),u[2]=u[2]*t.MathUtil.lerp(p.constantMinSeparate.z,p.constantMaxSeparate.z,Math.random())):(i.seed=n[11],u[0]=u[0]*t.MathUtil.lerp(p.constantMinSeparate.x,p.constantMaxSeparate.x,i.getFloat()),u[1]=u[1]*t.MathUtil.lerp(p.constantMinSeparate.y,p.constantMaxSeparate.y,i.getFloat()),u[2]=u[2]*t.MathUtil.lerp(p.constantMinSeparate.z,p.constantMaxSeparate.z,i.getFloat()),n[11]=i.seed);else r?g=t.MathUtil.lerp(p.constantMin,p.constantMax,Math.random()):(i.seed=n[11],g=t.MathUtil.lerp(p.constantMin,p.constantMax,i.getFloat()),n[11]=i.seed),u[0]=u[0]*g,u[1]=u[1]*g,u[2]=u[2]*g}var D=a.renderMode;if(1!==D)switch(e.startRotationType){case 0:if(e.threeDStartRotation){var T=e.startRotationConstantSeparate,E=ShurikenParticleData._tempVector30;ShurikenParticleData._randomInvertRoationArray(T,E,e.randomizeRotationDirection,r?null:i,n),ShurikenParticleData.startRotation[0]=E.x,ShurikenParticleData.startRotation[1]=E.y,ShurikenParticleData.startRotation[2]=4!==D?-E.z:E.z}else ShurikenParticleData.startRotation[0]=ShurikenParticleData._randomInvertRoation(e.startRotationConstant,e.randomizeRotationDirection,r?null:i,n),ShurikenParticleData.startRotation[1]=0,ShurikenParticleData.startRotation[2]=0;break;case 2:if(e.threeDStartRotation){var C=e.startRotationConstantMinSeparate,A=e.startRotationConstantMaxSeparate,R=ShurikenParticleData._tempVector30;r?(R.x=t.MathUtil.lerp(C.x,A.x,Math.random()),R.y=t.MathUtil.lerp(C.y,A.y,Math.random()),R.z=t.MathUtil.lerp(C.z,A.z,Math.random())):(i.seed=n[5],R.x=t.MathUtil.lerp(C.x,A.x,i.getFloat()),R.y=t.MathUtil.lerp(C.y,A.y,i.getFloat()),R.z=t.MathUtil.lerp(C.z,A.z,i.getFloat()),n[5]=i.seed),ShurikenParticleData._randomInvertRoationArray(R,R,e.randomizeRotationDirection,r?null:i,n),ShurikenParticleData.startRotation[0]=R.x,ShurikenParticleData.startRotation[1]=R.y,ShurikenParticleData.startRotation[2]=4!==D?-R.z:R.z}else r?ShurikenParticleData.startRotation[0]=ShurikenParticleData._randomInvertRoation(t.MathUtil.lerp(e.startRotationConstantMin,e.startRotationConstantMax,Math.random()),e.randomizeRotationDirection,r?null:i,n):(i.seed=n[5],ShurikenParticleData.startRotation[0]=ShurikenParticleData._randomInvertRoation(t.MathUtil.lerp(e.startRotationConstantMin,e.startRotationConstantMax,i.getFloat()),e.randomizeRotationDirection,r?null:i,n),n[5]=i.seed)}switch(e.startLifetimeType){case 0:ShurikenParticleData.startLifeTime=e.startLifetimeConstant;break;case 1:ShurikenParticleData.startLifeTime=ShurikenParticleData._getStartLifetimeFromGradient(e.startLifeTimeGradient,e.emissionTime);break;case 2:r?ShurikenParticleData.startLifeTime=t.MathUtil.lerp(e.startLifetimeConstantMin,e.startLifetimeConstantMax,Math.random()):(i.seed=n[7],ShurikenParticleData.startLifeTime=t.MathUtil.lerp(e.startLifetimeConstantMin,e.startLifetimeConstantMax,i.getFloat()),n[7]=i.seed);break;case 3:var x=e.emissionTime;r?ShurikenParticleData.startLifeTime=t.MathUtil.lerp(ShurikenParticleData._getStartLifetimeFromGradient(e.startLifeTimeGradientMin,x),ShurikenParticleData._getStartLifetimeFromGradient(e.startLifeTimeGradientMax,x),Math.random()):(i.seed=n[7],ShurikenParticleData.startLifeTime=t.MathUtil.lerp(ShurikenParticleData._getStartLifetimeFromGradient(e.startLifeTimeGradientMin,x),ShurikenParticleData._getStartLifetimeFromGradient(e.startLifeTimeGradientMax,x),i.getFloat()),n[7]=i.seed)}var M=e.textureSheetAnimation;if(M&&M.enable){var y,I=M.tiles,v=I.x,L=I.y,b=1/v,P=1/L,O=M.startFrame;switch(O.type){case 0:y=O.constant;break;case 1:r?y=t.MathUtil.lerp(O.constantMin,O.constantMax,Math.random()):(i.seed=n[14],y=t.MathUtil.lerp(O.constantMin,O.constantMax,i.getFloat()),n[14]=i.seed)}var B=M.frame,V=M.cycles;switch(B.type){case 0:y+=B.constant*V;break;case 2:r?y+=t.MathUtil.lerp(B.constantMin,B.constantMax,Math.random())*V:(i.seed=n[15],y+=t.MathUtil.lerp(B.constantMin,B.constantMax,i.getFloat())*V,n[15]=i.seed)}var w=0;switch(M.type){case 0:w=Math.floor(y/v);break;case 1:M.randomRow?r?w=Math.floor(Math.random()*L):(i.seed=n[13],w=Math.floor(i.getFloat()*L),n[13]=i.seed):w=M.rowIndex}var N=Math.floor(y%v);ShurikenParticleData.startUVInfo=ShurikenParticleData.startUVInfo,ShurikenParticleData.startUVInfo[0]=b,ShurikenParticleData.startUVInfo[1]=P,ShurikenParticleData.startUVInfo[2]=N*b,ShurikenParticleData.startUVInfo[3]=w*P}else ShurikenParticleData.startUVInfo=ShurikenParticleData.startUVInfo,ShurikenParticleData.startUVInfo[0]=1,ShurikenParticleData.startUVInfo[1]=1,ShurikenParticleData.startUVInfo[2]=0,ShurikenParticleData.startUVInfo[3]=0}}ShurikenParticleData._tempVector30=new t.Vector3,ShurikenParticleData.startColor=new t.Vector4,ShurikenParticleData.startSize=new Float32Array(3),ShurikenParticleData.startRotation=new Float32Array(3),ShurikenParticleData.startUVInfo=new Float32Array(4);class ShurikenParticleSystem extends GeometryElement{get maxParticles(){return this._bufferMaxParticles-1}set maxParticles(e){var t=e+1;t!==this._bufferMaxParticles&&(this._bufferMaxParticles=t,this._initBufferDatas()),this._updateParticlesSimulationRestart(0)}get emission(){return this._emission}get aliveParticleCount(){return this._firstNewElement>=this._firstRetiredElement?this._firstNewElement-this._firstRetiredElement:this._bufferMaxParticles-this._firstRetiredElement+this._firstNewElement}get emissionTime(){return this._emissionTime>this.duration?this.duration:this._emissionTime}get shape(){return this._shape}set shape(e){this._shape!==e&&(e&&e.enable?this._ownerRender._shaderValues.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SHAPE):this._ownerRender._shaderValues.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SHAPE),this._shape=e)}get isAlive(){return!!(this._isPlaying||this.aliveParticleCount>0)}get isEmitting(){return this._isEmitting}get isPlaying(){return this._isPlaying}get isPaused(){return this._isPaused}get startLifetimeType(){return this._startLifetimeType}set startLifetimeType(e){var t,a;switch(this.startLifetimeType){case 0:this._maxStartLifetime=this.startLifetimeConstant;break;case 1:this._maxStartLifetime=-Number.MAX_VALUE;var r=r;for(t=0,a=r.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,r.getValueByIndex(t));break;case 2:this._maxStartLifetime=Math.max(this.startLifetimeConstantMin,this.startLifetimeConstantMax);break;case 3:this._maxStartLifetime=-Number.MAX_VALUE;var i=i;for(t=0,a=i.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,i.getValueByIndex(t));var n=n;for(t=0,a=n.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,n.getValueByIndex(t))}this._startLifetimeType=e}get startLifetimeConstant(){return this._startLifetimeConstant}set startLifetimeConstant(e){0===this._startLifetimeType&&(this._maxStartLifetime=e),this._startLifetimeConstant=e}get startLifeTimeGradient(){return this._startLifeTimeGradient}set startLifeTimeGradient(e){if(1===this._startLifetimeType){this._maxStartLifetime=-Number.MAX_VALUE;for(var t=0,a=e.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,e.getValueByIndex(t))}this._startLifeTimeGradient=e}get startLifetimeConstantMin(){return this._startLifetimeConstantMin}set startLifetimeConstantMin(e){2===this._startLifetimeType&&(this._maxStartLifetime=Math.max(e,this._startLifetimeConstantMax)),this._startLifetimeConstantMin=e}get startLifetimeConstantMax(){return this._startLifetimeConstantMax}set startLifetimeConstantMax(e){2===this._startLifetimeType&&(this._maxStartLifetime=Math.max(this._startLifetimeConstantMin,e)),this._startLifetimeConstantMax=e}get startLifeTimeGradientMin(){return this._startLifeTimeGradientMin}set startLifeTimeGradientMin(e){if(3===this._startLifetimeType){var t,a;for(this._maxStartLifetime=-Number.MAX_VALUE,t=0,a=e.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,e.getValueByIndex(t));for(t=0,a=this._startLifeTimeGradientMax.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,this._startLifeTimeGradientMax.getValueByIndex(t))}this._startLifeTimeGradientMin=e}get startLifeTimeGradientMax(){return this._startLifeTimeGradientMax}set startLifeTimeGradientMax(e){if(3===this._startLifetimeType){var t,a;for(this._maxStartLifetime=-Number.MAX_VALUE,t=0,a=this._startLifeTimeGradientMin.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,this._startLifeTimeGradientMin.getValueByIndex(t));for(t=0,a=e.gradientCount;t<a;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,e.getValueByIndex(t))}this._startLifeTimeGradientMax=e}get velocityOverLifetime(){return this._velocityOverLifetime}set velocityOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var a=e.velocity,r=a.type;if(e.enable)switch(r){case 0:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT);break;case 1:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE);break;case 2:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT);break;case 3:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE)}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);switch(r){case 0:t.setVector3(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST,a.constant);break;case 1:t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX,a.gradientX._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY,a.gradientY._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ,a.gradientZ._elements);break;case 2:t.setVector3(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST,a.constantMin),t.setVector3(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONSTMAX,a.constantMax);break;case 3:t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX,a.gradientXMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX,a.gradientXMax._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY,a.gradientYMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX,a.gradientYMax._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ,a.gradientZMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX,a.gradientZMax._elements)}t.setInt(ShuriKenParticle3DShaderDeclaration.VOLSPACETYPE,e.space)}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);this._velocityOverLifetime=e}get colorOverLifetime(){return this._colorOverLifetime}set colorOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var a=e.color;if(e.enable)switch(a.type){case 1:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);break;case 3:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME)}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);switch(a.type){case 1:var r=a.gradient;t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS,r._alphaElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS,r._rgbElements);let e=r._keyRanges;e.setValue(1,0,1,0);for(let t=0;t<r.colorRGBKeysCount;t++){let a=r._rgbElements[4*t];e.x=Math.min(e.x,a),e.y=Math.max(e.y,a)}for(let t=0;t<r.colorAlphaKeysCount;t++){let a=r._alphaElements[2*t];e.z=Math.min(e.z,a),e.w=Math.max(e.w,a)}t.setVector(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES,e),8==r.maxColorAlphaKeysCount?t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8):t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8);break;case 3:var i=a.gradientMin,n=a.gradientMax;t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS,i._alphaElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS,i._rgbElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS,n._alphaElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS,n._rgbElements);let s=i._keyRanges;s.setValue(1,0,1,0);for(let e=0;e<i.colorRGBKeysCount;e++){let t=i._rgbElements[4*e];s.x=Math.min(s.x,t),s.y=Math.max(s.y,t)}for(let e=0;e<i.colorAlphaKeysCount;e++){let t=i._alphaElements[2*e];s.z=Math.min(s.z,t),s.w=Math.max(s.w,t)}t.setVector(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES,s);let o=n._keyRanges;o.setValue(1,0,1,0);for(let e=0;e<n.colorRGBKeysCount;e++){let t=n._rgbElements[4*e];o.x=Math.min(o.x,t),o.y=Math.max(o.y,t)}for(let e=0;e<n.colorAlphaKeysCount;e++){let t=n._alphaElements[2*e];o.z=Math.min(o.z,t),o.w=Math.max(o.w,t)}t.setVector(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES,o),8==Math.max(i.maxColorAlphaKeysCount,n.maxColorAlphaKeysCount)?t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8):t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8)}}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME),t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS,r._alphaElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS,r._rgbElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS,i._alphaElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS,i._rgbElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS,n._alphaElements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS,n._rgbElements);this._colorOverLifetime=e}get sizeOverLifetime(){return this._sizeOverLifetime}set sizeOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var a=e.size,r=a.separateAxes,i=a.type;if(e.enable)switch(i){case 0:r?t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE):t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE);break;case 2:r?t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE):t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES)}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);switch(i){case 0:r?(t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX,a.gradientX._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY,a.gradientY._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ,a.gradientZ._elements)):t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT,a.gradient._elements);break;case 2:r?(t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX,a.gradientXMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX,a.gradientXMax._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY,a.gradientYMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX,a.gradientYMax._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ,a.gradientZMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX,a.gradientZMax._elements)):(t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT,a.gradientMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax,a.gradientMax._elements))}}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);this._sizeOverLifetime=e}get rotationOverLifetime(){return this._rotationOverLifetime}set rotationOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var a=e.angularVelocity;if(!a)return;var r=a.separateAxes,i=a.type;if(e.enable)switch(r?(t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME)):(t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE)),i){case 0:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);break;case 1:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);break;case 2:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);break;case 3:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE)}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);switch(i){case 0:r?t.setVector3(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE,a.constantSeparate):t.setNumber(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST,a.constant);break;case 1:r?(t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX,a.gradientX._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY,a.gradientY._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ,a.gradientZ._elements)):t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT,a.gradient._elements);break;case 2:r?(t.setVector3(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE,a.constantMinSeparate),t.setVector3(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAXSEPRARATE,a.constantMaxSeparate)):(t.setNumber(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST,a.constantMin),t.setNumber(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAX,a.constantMax));break;case 3:r?(t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX,a.gradientXMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX,a.gradientXMax._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY,a.gradientYMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX,a.gradientYMax._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ,a.gradientZMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX,a.gradientZMax._elements)):(t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT,a.gradientMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX,a.gradientMax._elements))}}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);this._rotationOverLifetime=e}get textureSheetAnimation(){return this._textureSheetAnimation}set textureSheetAnimation(e){var t=this._ownerRender._shaderValues;if(e){var a=e.frame,r=a.type;if(e.enable)switch(r){case 1:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);break;case 3:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE)}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);if(1===r||3===r){t.setNumber(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONCYCLES,e.cycles);var i=e.tiles,n=this._uvLength;n.x=1/i.x,n.y=1/i.y,t.setVector2(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONSUBUVLENGTH,this._uvLength)}switch(r){case 1:t.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS,a.frameOverTimeData._elements);break;case 3:t.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS,a.frameOverTimeDataMin._elements),t.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS,a.frameOverTimeDataMax._elements)}}else t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE),t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);this._textureSheetAnimation=e}constructor(e,a=t.MeshTopology.Triangles,r=t.DrawType.DrawElement){super(a,r),this._bounds=null,this._gravityOffset=new t.Vector2,this._customBounds=null,this._useCustomBounds=!1,this._owner=null,this._ownerRender=null,this._vertices=null,this._floatCountPerVertex=0,this._startLifeTimeIndex=0,this._timeIndex=0,this._simulationUV_Index=0,this._simulateUpdate=!1,this._firstActiveElement=0,this._firstNewElement=0,this._firstFreeElement=0,this._firstRetiredElement=0,this._drawCounter=0,this._bufferMaxParticles=0,this._emission=null,this._shape=null,this._isEmitting=!1,this._isPlaying=!1,this._isPaused=!1,this._playStartDelay=0,this._frameRateTime=0,this._emissionTime=0,this._totalDelayTime=0,this._emissionDistance=0,this._emissionLastPosition=new t.Vector3,this._burstsIndex=0,this._velocityOverLifetime=null,this._colorOverLifetime=null,this._sizeOverLifetime=null,this._rotationOverLifetime=null,this._textureSheetAnimation=null,this._startLifetimeType=0,this._startLifetimeConstant=0,this._startLifeTimeGradient=null,this._startLifetimeConstantMin=0,this._startLifetimeConstantMax=0,this._startLifeTimeGradientMin=null,this._startLifeTimeGradientMax=null,this._maxStartLifetime=0,this._uvLength=new t.Vector2,this._vertexStride=0,this._indexStride=0,this._vertexBuffer=null,this._indexBuffer=null,this._bufferState=new t.BufferState,this._updateMask=0,this._currentTime=0,this._startUpdateLoopCount=0,this._rand=null,this._randomSeeds=null,this.duration=0,this.looping=!1,this.prewarm=!1,this.startDelayType=0,this.startDelay=0,this.startDelayMin=0,this.startDelayMax=0,this.startSpeedType=0,this.startSpeedConstant=0,this.startSpeedConstantMin=0,this.startSpeedConstantMax=0,this.dragType=0,this.dragConstant=0,this.dragSpeedConstantMin=0,this.dragSpeedConstantMax=0,this.threeDStartSize=!1,this.startSizeType=0,this.startSizeConstant=0,this.startSizeConstantSeparate=null,this.startSizeConstantMin=0,this.startSizeConstantMax=0,this.startSizeConstantMinSeparate=null,this.startSizeConstantMaxSeparate=null,this.threeDStartRotation=!1,this.startRotationType=0,this.startRotationConstant=0,this.startRotationConstantSeparate=null,this.startRotationConstantMin=0,this.startRotationConstantMax=0,this.startRotationConstantMinSeparate=null,this.startRotationConstantMaxSeparate=null,this.randomizeRotationDirection=0,this.startColorType=0,this.startColorConstant=new t.Vector4(1,1,1,1),this.startColorConstantMin=new t.Vector4(0,0,0,0),this.startColorConstantMax=new t.Vector4(1,1,1,1),this.gravityModifier=0,this.simulationSpace=0,this.simulationSpeed=1,this.scaleMode=1,this.playOnAwake=!1,this.randomSeed=null,this.autoRandomSeed=!1,this.isPerformanceMode=!1,this.indexFormat=t.IndexFormat.UInt16,this._firstActiveElement=0,this._firstNewElement=0,this._firstFreeElement=0,this._firstRetiredElement=0,this._owner=e.owner,this._ownerRender=e,this._useCustomBounds=!1,this._currentTime=0,this._bounds=new Bounds(new t.Vector3(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),new t.Vector3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)),this.bufferState=this._bufferState=new t.BufferState,this._isEmitting=!1,this._isPlaying=!1,this._isPaused=!1,this._burstsIndex=0,this._frameRateTime=0,this._emissionTime=0,this._totalDelayTime=0,this._simulateUpdate=!1,this._bufferMaxParticles=1,this.duration=5,this.looping=!0,this.prewarm=!1,this.startDelayType=0,this.startDelay=0,this.startDelayMin=0,this.startDelayMax=0,this._startLifetimeType=0,this._startLifetimeConstant=5,this._startLifeTimeGradient=new GradientDataNumber,this._startLifetimeConstantMin=0,this._startLifetimeConstantMax=5,this._startLifeTimeGradientMin=new GradientDataNumber,this._startLifeTimeGradientMax=new GradientDataNumber,this._maxStartLifetime=5,this.startSpeedType=0,this.startSpeedConstant=5,this.startSpeedConstantMin=0,this.startSpeedConstantMax=5,this.dragType=0,this.dragConstant=0,this.dragSpeedConstantMin=0,this.dragSpeedConstantMax=0,this.threeDStartSize=!1,this.startSizeType=0,this.startSizeConstant=1,this.startSizeConstantSeparate=new t.Vector3(1,1,1),this.startSizeConstantMin=0,this.startSizeConstantMax=1,this.startSizeConstantMinSeparate=new t.Vector3(0,0,0),this.startSizeConstantMaxSeparate=new t.Vector3(1,1,1),this.threeDStartRotation=!1,this.startRotationType=0,this.startRotationConstant=0,this.startRotationConstantSeparate=new t.Vector3(0,0,0),this.startRotationConstantMin=0,this.startRotationConstantMax=0,this.startRotationConstantMinSeparate=new t.Vector3(0,0,0),this.startRotationConstantMaxSeparate=new t.Vector3(0,0,0),this.gravityModifier=0,this.simulationSpace=1,this.scaleMode=1,this.playOnAwake=!0,this._rand=new Rand(0),this.autoRandomSeed=!0,this.randomSeed=new Uint32Array(1),this._randomSeeds=new Uint32Array(ShurikenParticleSystem._RANDOMOFFSET.length),this.isPerformanceMode=!0,this._emission=new Emission,this._emission.enable=!0}_getVertexBuffer(e=0){return 0===e?this._vertexBuffer:null}_getIndexBuffer(){return this._indexBuffer}_generateBounds(){var a=this._ownerRender,r=this._bounds.getMin(),i=this._bounds.getMax(),n=0;switch(this.startLifetimeType){case 0:n=this._startLifetimeConstant;break;case 2:n=this._startLifetimeConstantMax}var s=0;switch(this.startSpeedType){case 0:s=this.startSpeedConstant;break;case 2:s=this.startSpeedConstantMax}var o=0;if(this.threeDStartSize)switch(this.startSizeType){case 0:o=Math.max(this.startSizeConstantSeparate.x,this.startSizeConstantSeparate.y,this.startSizeConstantSeparate.z);break;case 2:o=Math.max(this.startSizeConstantMaxSeparate.x,this.startSizeConstantMaxSeparate.y,this.startSizeConstantMaxSeparate.z)}else switch(this.startSizeType){case 0:o=this.startSizeConstant;break;case 2:o=this.startSizeConstantMax}var l=ShurikenParticleSystem._tempVector30,h=ShurikenParticleSystem._tempVector31,c=ShurikenParticleSystem._tempVector32,d=ShurikenParticleSystem._tempVector33;if(l.setValue(0,0,1),h.setValue(0,0,0),c.setValue(0,0,0),d.setValue(0,0,0),this.shape&&this.shape.enable)switch(this.shape.shapeType){case e.ParticleSystemShapeType.Sphere:var u=this.shape;l.setValue(1,1,1),h.setValue(1,1,1),c.setValue(u.radius,u.radius,u.radius),d.setValue(u.radius,u.radius,u.radius);break;case e.ParticleSystemShapeType.Hemisphere:var _=this.shape;l.setValue(1,1,1),h.setValue(1,1,1),c.setValue(_.radius,_.radius,_.radius),d.setValue(_.radius,_.radius,0);break;case e.ParticleSystemShapeType.Cone:var m=this.shape;if(0==m.emitType||1==m.emitType){var f=m.angle,S=Math.sin(f);l.setValue(S,S,1),h.setValue(S,S,0),c.setValue(m.radius,m.radius,0),d.setValue(m.radius,m.radius,0);break}if(2==m.emitType||3==m.emitType){f=m.angle,S=Math.sin(f);var g=m.length;l.setValue(S,S,1),h.setValue(S,S,0);var p=Math.tan(f),D=m.radius+g*p;c.setValue(D,D,g),d.setValue(D,D,0)}break;case e.ParticleSystemShapeType.Box:var T=this.shape;0!=this.shape.randomDirection&&(l.setValue(1,1,1),h.setValue(1,1,1)),c.setValue(T.x/2,T.y/2,T.z/2),d.setValue(T.x/2,T.y/2,T.z/2);break;case e.ParticleSystemShapeType.Circle:var E=this.shape;l.setValue(1,1,1),h.setValue(1,1,1),c.setValue(E.radius,E.radius,0),d.setValue(E.radius,E.radius,0)}var C=0,A=4==a.renderMode;switch(a.renderMode){case 0:case 1:case 2:case 3:C=ShurikenParticleSystem.halfKSqrtOf2;break;case 4:var R=a.mesh.bounds;C=Math.sqrt(Math.pow(R.getExtent().x,2)+Math.pow(R.getExtent().y,2)+Math.pow(R.getExtent().z,2))}var x=ShurikenParticleSystem._tempVector36;if(x.setValue(1,1,1),this.sizeOverLifetime&&this.sizeOverLifetime.enable){var M=this.sizeOverLifetime.size.getMaxSizeInGradient(A);x.setValue(M,M,M)}var y=C*o;t.Vector3.scale(x,y,x);var I=ShurikenParticleSystem._tempVector34,v=ShurikenParticleSystem._tempVector35;if(s>0?(t.Vector3.scale(l,s,I),t.Vector3.scale(h,s,v)):(t.Vector3.scale(l,-s,v),t.Vector3.scale(h,-s,I)),this.velocityOverLifetime&&this.velocityOverLifetime.enable){var L=this.velocityOverLifetime.velocity,b=ShurikenParticleSystem._tempVector37;switch(b.setValue(0,0,0),L.type){case 0:L.constant.cloneTo(b);break;case 2:L.constantMax.cloneTo(b);break;case 1:var P=L.gradientX.getAverageValue(),O=L.gradientY.getAverageValue(),B=L.gradientZ.getAverageValue();b.setValue(P,O,B);break;case 3:var V=L.gradientXMax.getAverageValue(),w=L.gradientYMax.getAverageValue(),N=L.gradientZMax.getAverageValue();b.setValue(V,w,N)}1==this.velocityOverLifetime.space&&t.Vector3.transformV3ToV3(b,this._owner.transform.worldMatrix,b),t.Vector3.add(I,b,I),t.Vector3.subtract(v,b,v),t.Vector3.max(I,t.Vector3.ZERO,I),t.Vector3.max(v,t.Vector3.ZERO,v)}t.Vector3.scale(I,n,I),t.Vector3.scale(v,n,v);var F=this.gravityModifier;if(0!=F){var U=.5*ShurikenParticleSystem.g*F*n*n,G=I.y-U,H=v.y+U;G=G>0?G:0,H=H>0?H:0,this._gravityOffset.setValue(I.y-G,H-v.y)}t.Vector3.add(I,x,i),t.Vector3.add(i,c,i),t.Vector3.add(v,x,r),t.Vector3.add(r,d,r),t.Vector3.scale(r,-1,r),this._bounds.setMin(r),this._bounds.setMax(i)}get customBounds(){return this._customBounds}set customBounds(e){e?(this._useCustomBounds=!0,this._customBounds||(this._customBounds=new Bounds(new t.Vector3,new t.Vector3),this._ownerRender.geometryBounds=this._customBounds),this._customBounds=e):(this._useCustomBounds=!1,this._customBounds=null,this._ownerRender.geometryBounds=null)}_simulationSupported(){return!(0==this.simulationSpace&&this.emission.emissionRateOverDistance>0)}_updateEmission(){if(this.isAlive)if(this._simulateUpdate)this._simulateUpdate=!1;else{var e=this._startUpdateLoopCount!==t.Stat.loopCount&&!this._isPaused&&this._owner._scene?this._owner._scene.timer._delta/1e3:0;e=Math.min(ShurikenParticleSystem._maxElapsedTime,e*this.simulationSpeed),this._updateParticles(e)}}_updateParticles(e){(4!==this._ownerRender.renderMode||this._ownerRender.mesh)&&(this._currentTime+=e,this._retireActiveParticles(),this._freeRetiredParticles(),this._totalDelayTime+=e,this._totalDelayTime<this._playStartDelay||this._emission.enable&&this._isEmitting&&!this._isPaused&&(this._advanceTime(e,this._currentTime),this.emission.emissionRateOverDistance>0&&this._advanceDistance(this._currentTime)))}_updateParticlesSimulationRestart(e){this._firstActiveElement=0,this._firstNewElement=0,this._firstFreeElement=0,this._firstRetiredElement=0,this._burstsIndex=0,this._frameRateTime=e,this._emissionTime=0,this._emissionDistance=0,this._totalDelayTime=0,this._currentTime=e;var t=e;t<this._playStartDelay?this._totalDelayTime=t:this._emission.enable&&(this._advanceTime(e,e),this.emission.emissionRateOverDistance>0&&this._advanceDistance(this._currentTime))}_retireActiveParticles(){for(;this._firstActiveElement!=this._firstNewElement;){var e=this._firstActiveElement*this._floatCountPerVertex*this._vertexStride,t=e+this._timeIndex;if(this._currentTime-this._vertices[t]+1e-4<this._vertices[e+this._startLifeTimeIndex])break;this._vertices[t]=this._drawCounter,this._firstActiveElement++,this._firstActiveElement>=this._bufferMaxParticles&&(this._firstActiveElement=0)}}_freeRetiredParticles(){for(;this._firstRetiredElement!=this._firstActiveElement;)this._drawCounter,this._vertices[this._firstRetiredElement*this._floatCountPerVertex*this._vertexStride+this._timeIndex],this._firstRetiredElement++,this._firstRetiredElement>=this._bufferMaxParticles&&(this._firstRetiredElement=0)}_burst(e,a){for(var r=0,i=this._emission._bursts,n=i.length;this._burstsIndex<n;this._burstsIndex++){var s,o=i[this._burstsIndex],l=o.time;if(!(e<=l&&l<a))break;this.autoRandomSeed?s=t.MathUtil.lerp(o.minCount,o.maxCount,Math.random()):(this._rand.seed=this._randomSeeds[0],s=t.MathUtil.lerp(o.minCount,o.maxCount,this._rand.getFloat()),this._randomSeeds[0]=this._rand.seed),r+=s}return r}_advanceTime(e,t){var a,r=this._emissionTime;this._emissionTime+=e;var i=0;if(this._emissionTime>this.duration){if(!this.looping){for(i=Math.min(this.maxParticles-this.aliveParticleCount,i),a=0;a<i;a++)this.emit(t);return this._isPlaying=!1,void this.stop()}i+=this._burst(r,this._emissionTime),this._emissionTime-=this.duration,this._burstsIndex=0,i+=this._burst(0,this._emissionTime)}else i+=this._burst(r,this._emissionTime);for(i=Math.min(this.maxParticles-this.aliveParticleCount,i),a=0;a<i;a++)this.emit(t);var n=this.emission.emissionRate;if(n>0){var s=1/n;for(this._frameRateTime+=s,this._frameRateTime=this._currentTime-(this._currentTime-this._frameRateTime)%this._maxStartLifetime;this._frameRateTime<=t&&this.emit(this._frameRateTime);)this._frameRateTime+=s;this._frameRateTime=Math.floor(t/s)*s}}_advanceDistance(e){let a=this._owner.transform.position,r=t.Vector3.distance(a,this._emissionLastPosition),i=this.emission.emissionRateOverDistance,n=this._emissionDistance+r;if(n>1/i){let t=n*i;t=Math.floor(t),t=Math.min(this.maxParticles-this.aliveParticleCount,t);for(let a=0;a<t;a++)this.emit(e);this._emissionDistance=0}else this._emissionDistance=n;a.cloneTo(this._emissionLastPosition)}_initBufferDatas(){if(this._vertexBuffer){var e=this._vertexBuffer._byteLength+2*this._indexBuffer.indexCount;this._vertexBuffer.destroy(),this._indexBuffer.destroy(),t.Resource._addMemory(-e,-e)}var a=this._ownerRender,r=a.renderMode;if(-1!==r&&this.maxParticles>0){var i,n,s,o,l,h,c,d=0,u=(e=0,a.mesh);if(4===r){if(u){c=VertexShurikenParticleMesh.vertexDeclaration,this._floatCountPerVertex=c.vertexStride/4,this._simulationUV_Index=c.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset/4,this._startLifeTimeIndex=12,this._timeIndex=16,this._vertexStride=u._vertexCount;var _=this._bufferMaxParticles*this._vertexStride,m=_%65535;if(Math.floor(_/65535)+1>1)throw new Error("ShurikenParticleSystem:the maxParticleCount multiply mesh vertexCount is large than 65535.");d=c.vertexStride*m,this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(d,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=c,this._vertices=new Float32Array(this._floatCountPerVertex*m),this._indexStride=u._indexBuffer.indexCount;var f=u._indexBuffer.getData(),S=this._bufferMaxParticles*this._indexStride;for(this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,S,t.BufferUsage.Static,!1),i=new Uint16Array(S),e=d+2*S,l=0,n=0;n<this._bufferMaxParticles;n++){var g=n*this._vertexStride;for(s=0,o=f.length;s<o;s++)i[l++]=g+f[s]}this._indexBuffer.setData(i),this._bufferState.applyState([this._vertexBuffer],this._indexBuffer),this.bufferState=this._bufferState}}else{for(c=VertexShurikenParticleBillboard.vertexDeclaration,this._floatCountPerVertex=c.vertexStride/4,this._startLifeTimeIndex=7,this._simulationUV_Index=c.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset/4,this._timeIndex=11,this._vertexStride=4,d=c.vertexStride*this._bufferMaxParticles*this._vertexStride,this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(d,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=c,this._vertices=new Float32Array(this._floatCountPerVertex*this._bufferMaxParticles*this._vertexStride),n=0;n<this._bufferMaxParticles;n++)h=n*this._floatCountPerVertex*this._vertexStride,this._vertices[h]=-.5,this._vertices[h+1]=-.5,this._vertices[h+2]=0,this._vertices[h+3]=1,h+=this._floatCountPerVertex,this._vertices[h]=.5,this._vertices[h+1]=-.5,this._vertices[h+2]=1,this._vertices[h+3]=1,h+=this._floatCountPerVertex,this._vertices[h]=.5,this._vertices[h+1]=.5,this._vertices[h+2]=1,this._vertices[h+3]=0,h+=this._floatCountPerVertex,this._vertices[h]=-.5,this._vertices[h+1]=.5,this._vertices[h+2]=0,this._vertices[h+3]=0;for(this._indexStride=6,this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,6*this._bufferMaxParticles,t.BufferUsage.Static,!1),i=new Uint16Array(6*this._bufferMaxParticles),n=0;n<this._bufferMaxParticles;n++){l=6*n;var p=n*this._vertexStride,D=p+2;i[l++]=p,i[l++]=D,i[l++]=p+1,i[l++]=p,i[l++]=p+3,i[l++]=D}this._indexBuffer.setData(i),e=d+6*this._bufferMaxParticles*2,this._bufferState.applyState([this._vertexBuffer],this._indexBuffer),this.bufferState=this._bufferState}t.Resource._addMemory(e,e)}}destroy(){if(super.destroy(),this._vertexBuffer){var e=this._vertexBuffer._byteLength;t.Resource._addMemory(-e,-e),this._vertexBuffer.destroy(),this._vertexBuffer=null}if(this._indexBuffer){e=this._indexBuffer._byteLength;t.Resource._addMemory(-e,-e),this._indexBuffer.destroy(),this._indexBuffer=null}this._emission.destroy(),this._bounds=null,this._customBounds=null,this._bufferState=null,this._owner=null,this._vertices=null,this._indexBuffer=null,this._emission=null,this._shape=null,this.startLifeTimeGradient=null,this.startLifeTimeGradientMin=null,this.startLifeTimeGradientMax=null,this.startSizeConstantSeparate=null,this.startSizeConstantMinSeparate=null,this.startSizeConstantMaxSeparate=null,this.startRotationConstantSeparate=null,this.startRotationConstantMinSeparate=null,this.startRotationConstantMaxSeparate=null,this.startColorConstant=null,this.startColorConstantMin=null,this.startColorConstantMax=null,this._velocityOverLifetime=null,this._colorOverLifetime=null,this._sizeOverLifetime=null,this._rotationOverLifetime=null,this._textureSheetAnimation=null}emit(e){var t=ShurikenParticleSystem._tempPosition,a=ShurikenParticleSystem._tempDirection;return this._shape&&this._shape.enable?this.autoRandomSeed?this._shape.generatePositionAndDirection(t,a):this._shape.generatePositionAndDirection(t,a,this._rand,this._randomSeeds):(t.x=t.y=t.z=0,a.x=a.y=0,a.z=1),this.addParticle(t,a,e)}addParticle(e,a,r){t.Vector3.normalize(a,a);var i=this._firstFreeElement+1;if(i>=this._bufferMaxParticles&&(i=0),i===this._firstRetiredElement)return!1;var n,s,o,l,h,c,d,u,_,m,f=this._owner.transform;if(ShurikenParticleData.create(this,this._ownerRender),this._currentTime-r>=ShurikenParticleData.startLifeTime)return!0;switch(0==this.simulationSpace&&(n=f.position,s=f.rotation),this.startSpeedType){case 0:o=this.startSpeedConstant;break;case 2:this.autoRandomSeed?o=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,Math.random()):(this._rand.seed=this._randomSeeds[8],o=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,this._rand.getFloat()),this._randomSeeds[8]=this._rand.seed)}var S=this._velocityOverLifetime&&this._velocityOverLifetime.enable;if(S){var g=this._velocityOverLifetime.velocity.type;2===g||3===g?this.autoRandomSeed?(l=Math.random(),h=Math.random(),c=Math.random()):(this._rand.seed=this._randomSeeds[9],l=this._rand.getFloat(),h=this._rand.getFloat(),c=this._rand.getFloat(),this._randomSeeds[9]=this._rand.seed):S=!1}else S=!1;var p=this._colorOverLifetime&&this._colorOverLifetime.enable;p?3===this._colorOverLifetime.color.type?this.autoRandomSeed?d=Math.random():(this._rand.seed=this._randomSeeds[10],d=this._rand.getFloat(),this._randomSeeds[10]=this._rand.seed):p=!1:p=!1;var D=this._sizeOverLifetime&&this._sizeOverLifetime.enable;D?3===this._sizeOverLifetime.size.type?this.autoRandomSeed?u=Math.random():(this._rand.seed=this._randomSeeds[11],u=this._rand.getFloat(),this._randomSeeds[11]=this._rand.seed):D=!1:D=!1;var T=this._rotationOverLifetime&&this._rotationOverLifetime.enable;if(T){var E=this._rotationOverLifetime.angularVelocity.type;2===E||3===E?this.autoRandomSeed?_=Math.random():(this._rand.seed=this._randomSeeds[12],_=this._rand.getFloat(),this._randomSeeds[12]=this._rand.seed):T=!1}else T=!1;var C=this._textureSheetAnimation&&this._textureSheetAnimation.enable;C?3===this._textureSheetAnimation.frame.type?this.autoRandomSeed?m=Math.random():(this._rand.seed=this._randomSeeds[15],m=this._rand.getFloat(),this._randomSeeds[15]=this._rand.seed):C=!1:C=!1;var A,R,x,M,y,I,v=this._firstFreeElement*this._floatCountPerVertex*this._vertexStride,L=ShurikenParticleData.startUVInfo[0],b=ShurikenParticleData.startUVInfo[1],P=ShurikenParticleData.startUVInfo[2],O=ShurikenParticleData.startUVInfo[3],B=this._ownerRender;if(4===B.renderMode){var V=B.mesh._vertexBuffer;A=V.getFloat32Data();var w=V.vertexDeclaration;x=w.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0)._offset/4;var N=w.getVertexElementByUsage(t.VertexMesh.MESH_COLOR0);M=N?N._offset/4:-1;var F=w.getVertexElementByUsage(t.VertexMesh.MESH_TEXTURECOORDINATE0);y=F?F._offset/4:-1,R=w.vertexStride/4,I=0}for(var U=v,G=v+this._floatCountPerVertex*this._vertexStride;U<G;U+=this._floatCountPerVertex){var H;if(4===B.renderMode){H=U;var k=R*I++,z=k+x;this._vertices[H++]=A[z++],this._vertices[H++]=A[z++],this._vertices[H++]=A[z],-1===M?(this._vertices[H++]=1,this._vertices[H++]=1,this._vertices[H++]=1,this._vertices[H++]=1):(z=k+M,this._vertices[H++]=A[z++],this._vertices[H++]=A[z++],this._vertices[H++]=A[z++],this._vertices[H++]=A[z]),-1===y?(this._vertices[H++]=0,this._vertices[H++]=0):(z=k+y,this._vertices[H++]=A[z++],this._vertices[H++]=A[z])}else H=U+4;switch(this._vertices[H++]=e.x,this._vertices[H++]=e.y,this._vertices[H++]=e.z,this._vertices[H++]=ShurikenParticleData.startLifeTime,this._vertices[H++]=a.x,this._vertices[H++]=a.y,this._vertices[H++]=a.z,this._vertices[H++]=r,this._vertices[H++]=ShurikenParticleData.startColor.x,this._vertices[H++]=ShurikenParticleData.startColor.y,this._vertices[H++]=ShurikenParticleData.startColor.z,this._vertices[H++]=ShurikenParticleData.startColor.w,this._vertices[H++]=ShurikenParticleData.startSize[0],this._vertices[H++]=ShurikenParticleData.startSize[1],this._vertices[H++]=ShurikenParticleData.startSize[2],this._vertices[H++]=ShurikenParticleData.startRotation[0],this._vertices[H++]=ShurikenParticleData.startRotation[1],this._vertices[H++]=ShurikenParticleData.startRotation[2],this._vertices[H++]=o,p&&(this._vertices[H+1]=d),D&&(this._vertices[H+2]=u),T&&(this._vertices[H+3]=_),C&&(this._vertices[H+4]=m),S&&(this._vertices[H+5]=l,this._vertices[H+6]=h,this._vertices[H+7]=c),this.simulationSpace){case 0:H+=8,this._vertices[H++]=n.x,this._vertices[H++]=n.y,this._vertices[H++]=n.z,this._vertices[H++]=s.x,this._vertices[H++]=s.y,this._vertices[H++]=s.z,this._vertices[H++]=s.w;break;case 1:break;default:throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")}H=U+this._simulationUV_Index,this._vertices[H++]=P,this._vertices[H++]=O,this._vertices[H++]=L,this._vertices[H]=b}return this._firstFreeElement=i,!0}addNewParticlesToVertexBuffer(){var e,t=this._vertexStride*this._floatCountPerVertex*4;this._firstNewElement<this._firstFreeElement?(e=this._firstNewElement*t,this._vertexBuffer.setData(this._vertices.buffer,e,e,(this._firstFreeElement-this._firstNewElement)*t)):(e=this._firstNewElement*t,this._vertexBuffer.setData(this._vertices.buffer,e,e,(this._bufferMaxParticles-this._firstNewElement)*t),this._firstFreeElement>0&&this._vertexBuffer.setData(this._vertices.buffer,0,0,this._firstFreeElement*t)),this._firstNewElement=this._firstFreeElement}_getType(){return ShurikenParticleSystem._type}_prepareRender(e){return this._updateMask!=t.Stat.loopCount&&(this._updateMask=t.Stat.loopCount,this._updateEmission(),this._firstNewElement!=this._firstFreeElement&&this.addNewParticlesToVertexBuffer(),this._drawCounter++),this._firstActiveElement!=this._firstFreeElement}_updateRenderParams(e){var t;this.clearRenderParams(),this._firstActiveElement<this._firstFreeElement?(t=(this._firstFreeElement-this._firstActiveElement)*this._indexStride,this.setDrawElemenParams(t,2*this._firstActiveElement*this._indexStride)):(t=(this._bufferMaxParticles-this._firstActiveElement)*this._indexStride,this.setDrawElemenParams(t,2*this._firstActiveElement*this._indexStride),this._firstFreeElement>0&&(t=this._firstFreeElement*this._indexStride,this.setDrawElemenParams(t,0)))}play(){if(this._burstsIndex=0,this._isEmitting=!0,this._isPlaying=!0,this._isPaused=!1,this._emissionTime=0,this._emissionDistance=0,this._owner.transform.position.cloneTo(this._emissionLastPosition),this._totalDelayTime=0,!this.autoRandomSeed)for(var e=0,a=this._randomSeeds.length;e<a;e++)this._randomSeeds[e]=this.randomSeed[0]+ShurikenParticleSystem._RANDOMOFFSET[e];switch(this.startDelayType){case 0:this._playStartDelay=this.startDelay;break;case 1:this.autoRandomSeed?this._playStartDelay=t.MathUtil.lerp(this.startDelayMin,this.startDelayMax,Math.random()):(this._rand.seed=this._randomSeeds[2],this._playStartDelay=t.MathUtil.lerp(this.startDelayMin,this.startDelayMax,this._rand.getFloat()),this._randomSeeds[2]=this._rand.seed);break;default:throw new Error("Utils3D: startDelayType is invalid.")}this._frameRateTime=this._currentTime+this._playStartDelay,this._startUpdateLoopCount=t.Stat.loopCount}pause(){this._isPaused=!0}simulate(e,t=!0){this._simulateUpdate=!0,t?this._updateParticlesSimulationRestart(e):(this._isPaused=!1,this._updateParticles(e)),this.pause()}stop(){this._burstsIndex=0,this._isEmitting=!1,this._emissionTime=0}cloneTo(e){var t=e;t._useCustomBounds=this._useCustomBounds,this._customBounds&&this._customBounds.cloneTo(t._customBounds),t.duration=this.duration,t.looping=this.looping,t.prewarm=this.prewarm,t.startDelayType=this.startDelayType,t.startDelay=this.startDelay,t.startDelayMin=this.startDelayMin,t.startDelayMax=this.startDelayMax,t._maxStartLifetime=this._maxStartLifetime,t.startLifetimeType=this.startLifetimeType,t.startLifetimeConstant=this.startLifetimeConstant,this.startLifeTimeGradient.cloneTo(t.startLifeTimeGradient),t.startLifetimeConstantMin=this.startLifetimeConstantMin,t.startLifetimeConstantMax=this.startLifetimeConstantMax,this.startLifeTimeGradientMin.cloneTo(t.startLifeTimeGradientMin),this.startLifeTimeGradientMax.cloneTo(t.startLifeTimeGradientMax),t.startSpeedType=this.startSpeedType,t.startSpeedConstant=this.startSpeedConstant,t.startSpeedConstantMin=this.startSpeedConstantMin,t.startSpeedConstantMax=this.startSpeedConstantMax,t.dragType=this.dragType,t.dragConstant=this.dragConstant,t.dragSpeedConstantMax=this.dragSpeedConstantMax,t.dragSpeedConstantMin=this.dragSpeedConstantMin,t.threeDStartSize=this.threeDStartSize,t.startSizeType=this.startSizeType,t.startSizeConstant=this.startSizeConstant,this.startSizeConstantSeparate.cloneTo(t.startSizeConstantSeparate),t.startSizeConstantMin=this.startSizeConstantMin,t.startSizeConstantMax=this.startSizeConstantMax,this.startSizeConstantMinSeparate.cloneTo(t.startSizeConstantMinSeparate),this.startSizeConstantMaxSeparate.cloneTo(t.startSizeConstantMaxSeparate),t.threeDStartRotation=this.threeDStartRotation,t.startRotationType=this.startRotationType,t.startRotationConstant=this.startRotationConstant,this.startRotationConstantSeparate.cloneTo(t.startRotationConstantSeparate),t.startRotationConstantMin=this.startRotationConstantMin,t.startRotationConstantMax=this.startRotationConstantMax,this.startRotationConstantMinSeparate.cloneTo(t.startRotationConstantMinSeparate),this.startRotationConstantMaxSeparate.cloneTo(t.startRotationConstantMaxSeparate),t.randomizeRotationDirection=this.randomizeRotationDirection,t.startColorType=this.startColorType,this.startColorConstant.cloneTo(t.startColorConstant),this.startColorConstantMin.cloneTo(t.startColorConstantMin),this.startColorConstantMax.cloneTo(t.startColorConstantMax),t.gravityModifier=this.gravityModifier,t.simulationSpace=this.simulationSpace,t.simulationSpeed=this.simulationSpeed,t.scaleMode=this.scaleMode,t.playOnAwake=this.playOnAwake,t.autoRandomSeed=this.autoRandomSeed,t.randomSeed[0]=this.randomSeed[0],t.maxParticles=this.maxParticles,this._emission&&(t._emission=this._emission.clone()),this.shape&&(t.shape=this.shape.clone()),this.velocityOverLifetime&&(t.velocityOverLifetime=this.velocityOverLifetime.clone()),this.colorOverLifetime&&(t.colorOverLifetime=this.colorOverLifetime.clone()),this.sizeOverLifetime&&(t.sizeOverLifetime=this.sizeOverLifetime.clone()),this.rotationOverLifetime&&(t.rotationOverLifetime=this.rotationOverLifetime.clone()),this.textureSheetAnimation&&(t.textureSheetAnimation=this.textureSheetAnimation.clone()),t.isPerformanceMode=this.isPerformanceMode,t._isEmitting=this._isEmitting,t._isPlaying=this._isPlaying,t._isPaused=this._isPaused,t._playStartDelay=this._playStartDelay,t._frameRateTime=this._frameRateTime,t._emissionTime=this._emissionTime,t._totalDelayTime=this._totalDelayTime,t._burstsIndex=this._burstsIndex}clone(){var e=new ShurikenParticleSystem(null);return this.cloneTo(e),e}}ShurikenParticleSystem._RANDOMOFFSET=new Uint32Array([592910910,3276756734,322376503,306581307,1793934638,3737431713,2527743459,2368504881,4085612399,3774601268,326370691,1494990940,1089181156,3159510623,2941263940,2786374529,271901988,4233252447]),ShurikenParticleSystem.halfKSqrtOf2=.71,ShurikenParticleSystem.g=9.8,ShurikenParticleSystem._maxElapsedTime=1/3,ShurikenParticleSystem._tempVector30=new t.Vector3,ShurikenParticleSystem._tempVector31=new t.Vector3,ShurikenParticleSystem._tempVector32=new t.Vector3,ShurikenParticleSystem._tempVector33=new t.Vector3,ShurikenParticleSystem._tempVector34=new t.Vector3,ShurikenParticleSystem._tempVector35=new t.Vector3,ShurikenParticleSystem._tempVector36=new t.Vector3,ShurikenParticleSystem._tempVector37=new t.Vector3,ShurikenParticleSystem._tempPosition=new t.Vector3,ShurikenParticleSystem._tempDirection=new t.Vector3,ShurikenParticleSystem._type=GeometryElement._typeCounter++;class ShurikenParticleInstanceSystem extends ShurikenParticleSystem{constructor(e){super(e,t.MeshTopology.Triangles,t.DrawType.DrawElementInstance),this._instanceParticleVertexBuffer=null,this._instanceVertex=null}_initMeshVertex(e,a){let r=a._vertexBuffer,i=r.getFloat32Data(),n=r.vertexDeclaration,s=n.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0)._offset/4,o=n.getVertexElementByUsage(t.VertexMesh.MESH_COLOR0),l=o?o._offset/4:-1,h=n.getVertexElementByUsage(t.VertexMesh.MESH_TEXTURECOORDINATE0),c=h?h._offset/4:-1,d=n.vertexStride/4,u=0,_=a.vertexCount,m=this._vertexBuffer.vertexDeclaration.vertexStride/4;for(let t=0;t<_;t++){let a=t*m,r=d*u++,n=r+s;if(e[a++]=i[n++],e[a++]=i[n++],e[a++]=i[n++],-1==l)e[a++]=1,e[a++]=1,e[a++]=1,e[a++]=1;else{let t=r+l;e[a++]=i[t++],e[a++]=i[t++],e[a++]=i[t++],e[a++]=i[t++]}if(-1==c)e[a++]=0,e[a++]=0;else{let t=r+c;e[a++]=i[t++],e[a++]=i[t++]}}}_initBufferDatas(){this._vertexBuffer&&(this._vertexBuffer.destroy(),this._instanceParticleVertexBuffer.destroy(),this._indexBuffer.destroy());let e=this._ownerRender,a=e.renderMode;if(!(-1==a||this.maxParticles<=0))if(4==a){let a=e.mesh;if(a){let e=VertexShurikenParticleMesh.vertexInstanceMeshDeclaration,r=VertexShurikenParticleMesh.vertexInstanceParticleDeclaration;this._meshIndexCount=a.indexCount,this._simulationUV_Index=r.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset/4,this._floatCountPerParticleData=r.vertexStride/4,this._startLifeTimeIndex=r.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME)._offset/4+3,this._timeIndex=r.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_DIRECTIONTIME)._offset/4+3;let i=a.indexCount;this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(a.indexFormat,i,t.BufferUsage.Static,!1),this._indexBuffer.setData(a._indexBuffer.getData());let n=a.vertexCount,s=e.vertexStride*n;this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(s,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=e;let o=new Float32Array(s/4);this._initMeshVertex(o,a),this._vertexBuffer.setData(o.buffer);let l=this._bufferMaxParticles*r.vertexStride;this._instanceVertex=new Float32Array(l/4),this._instanceParticleVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(l,t.BufferUsage.Dynamic,!1),this._instanceParticleVertexBuffer.vertexDeclaration=r,this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer),this._instanceParticleVertexBuffer.instanceBuffer=!0,this._bufferState.applyState([this._vertexBuffer,this._instanceParticleVertexBuffer],this._indexBuffer)}}else{let e=VertexShurikenParticleBillboard.vertexInstanceMeshDeclaration,a=VertexShurikenParticleBillboard.vertexInstanceParticleDeclaration;this._meshIndexCount=6,this._simulationUV_Index=a.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset/4,this._floatCountPerParticleData=a.vertexStride/4,this._startLifeTimeIndex=a.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME)._offset/4+3,this._timeIndex=a.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_DIRECTIONTIME)._offset/4+3;let r=VertexShurikenParticleBillboard.billboardIndexArray,i=r.length;this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,i,t.BufferUsage.Static,!1),this._indexBuffer.setData(r);let n=this._meshIndexCount*e.vertexStride;this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(n,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=e,this._vertexBuffer.setData(VertexShurikenParticleBillboard.billboardVertexArray.buffer);let s=this._bufferMaxParticles*a.vertexStride;this._instanceVertex=new Float32Array(s/4),this._instanceParticleVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(s,t.BufferUsage.Dynamic,!1),this._instanceParticleVertexBuffer.vertexDeclaration=a,this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer),this._instanceParticleVertexBuffer.instanceBuffer=!0,this._bufferState.applyState([this._vertexBuffer,this._instanceParticleVertexBuffer],this._indexBuffer)}}_retireActiveParticles(){let e=this._firstActiveElement;for(;this._firstActiveElement!=this._firstNewElement;){let e=this._firstActiveElement*this._floatCountPerParticleData,t=e+this._timeIndex;if(this._currentTime-this._instanceVertex[t]+1e-4<this._instanceVertex[e+this._startLifeTimeIndex])break;this._instanceVertex[t]=this._drawCounter,this._firstActiveElement++,this._firstActiveElement>=this._bufferMaxParticles&&(this._firstActiveElement=0)}if(this._firstActiveElement!=e){let e=4*this._floatCountPerParticleData;if(this._firstActiveElement<this._firstFreeElement){let t=this._firstActiveElement*e;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,(this._firstFreeElement-this._firstActiveElement)*e)}else{let t=this._firstActiveElement*e,a=this._bufferMaxParticles-this._firstActiveElement;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,a*e),this._firstFreeElement>0&&this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,a*e,0,this._firstFreeElement*e)}}}_freeRetiredParticles(){for(;this._firstRetiredElement!=this._firstActiveElement;)this._drawCounter,this._instanceVertex[this._firstRetiredElement*this._floatCountPerParticleData+this._timeIndex],this._firstRetiredElement++,this._firstRetiredElement>=this._bufferMaxParticles&&(this._firstRetiredElement=0)}addParticle(e,a,r){t.Vector3.normalize(a,a);let i=this._firstFreeElement+1;if(i>=this._bufferMaxParticles&&(i=0),i==this._firstRetiredElement)return!1;let n,s,o=this._owner.transform;if(ShurikenParticleData.create(this,this._ownerRender),this._currentTime-r>=ShurikenParticleData.startLifeTime)return!0;0==this.simulationSpace&&(n=o.position,s=o.rotation);let l,h,c,d=0;switch(this.startSpeedType){case 0:d=this.startSpeedConstant;break;case 2:this.autoRandomSeed?d=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,Math.random()):(this._rand.seed=this._randomSeeds[8],d=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,this._rand.getFloat()),this._randomSeeds[8]=this._rand.seed)}let u,_=this._velocityOverLifetime&&this._velocityOverLifetime.enable;if(_){let e=this._velocityOverLifetime.velocity.type;2==e||3==e?this.autoRandomSeed?(l=Math.random(),h=Math.random(),c=Math.random()):(this._rand.seed=this._randomSeeds[9],l=this._rand.getFloat(),h=this._rand.getFloat(),c=this._rand.getFloat(),this._randomSeeds[9]=this._rand.seed):_=!1}else _=!1;let m,f=this._colorOverLifetime&&this._colorOverLifetime.enable;if(f){3==this._colorOverLifetime.color.type?this.autoRandomSeed?u=Math.random():(this._rand.seed=this._randomSeeds[10],u=this._rand.getFloat(),this._randomSeeds[10]=this._rand.seed):f=!1}else f=!1;let S,g=this._sizeOverLifetime&&this._sizeOverLifetime.enable;if(g){3==this._sizeOverLifetime.size.type?this.autoRandomSeed?m=Math.random():(this._rand.seed=this._randomSeeds[11],m=this._rand.getFloat(),this.randomSeed[11]=this._rand.seed):g=!1}else g=!1;let p,D=this._rotationOverLifetime&&this._rotationOverLifetime.enable;if(D){let e=this._rotationOverLifetime.angularVelocity.type;2==e||3==e?this.autoRandomSeed?S=Math.random():(this._rand.seed=this._randomSeeds[12],S=this._rand.getFloat(),this._randomSeeds[12]=this._rand.seed):D=!1}else D=!1;let T=this._textureSheetAnimation&&this._textureSheetAnimation.enable;if(T){3==this._textureSheetAnimation.frame.type?this.autoRandomSeed?p=Math.random():(this._rand.seed=this._randomSeeds[15],p=this._rand.getFloat(),this._randomSeeds[15]=this._rand.seed):T=!1}else T=!1;let E=ShurikenParticleData.startUVInfo[0],C=ShurikenParticleData.startUVInfo[1],A=ShurikenParticleData.startUVInfo[2],R=ShurikenParticleData.startUVInfo[3];this._ownerRender.renderMode;let x=this._firstFreeElement*this._floatCountPerParticleData,M=x;switch(this._instanceVertex[M++]=e.x,this._instanceVertex[M++]=e.y,this._instanceVertex[M++]=e.z,this._instanceVertex[M++]=ShurikenParticleData.startLifeTime,this._instanceVertex[M++]=a.x,this._instanceVertex[M++]=a.y,this._instanceVertex[M++]=a.z,this._instanceVertex[M++]=r,this._instanceVertex[M++]=ShurikenParticleData.startColor.x,this._instanceVertex[M++]=ShurikenParticleData.startColor.y,this._instanceVertex[M++]=ShurikenParticleData.startColor.z,this._instanceVertex[M++]=ShurikenParticleData.startColor.w,this._instanceVertex[M++]=ShurikenParticleData.startSize[0],this._instanceVertex[M++]=ShurikenParticleData.startSize[1],this._instanceVertex[M++]=ShurikenParticleData.startSize[2],this._instanceVertex[M++]=ShurikenParticleData.startRotation[0],this._instanceVertex[M++]=ShurikenParticleData.startRotation[1],this._instanceVertex[M++]=ShurikenParticleData.startRotation[2],this._instanceVertex[M++]=d,f&&(this._instanceVertex[M+1]=u),g&&(this._instanceVertex[M+2]=m),D&&(this._instanceVertex[M+3]=S),T&&(this._instanceVertex[M+4]=p),_&&(this._instanceVertex[M+5]=l,this._instanceVertex[M+6]=h,this._instanceVertex[M+7]=c),this.simulationSpace){case 0:M+=8,this._instanceVertex[M++]=n.x,this._instanceVertex[M++]=n.y,this._instanceVertex[M++]=n.z,this._instanceVertex[M++]=s.x,this._instanceVertex[M++]=s.y,this._instanceVertex[M++]=s.z,this._instanceVertex[M++]=s.w;break;case 1:break;default:throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")}return M=x+this._simulationUV_Index,this._instanceVertex[M++]=A,this._instanceVertex[M++]=R,this._instanceVertex[M++]=E,this._instanceVertex[M++]=C,this._firstFreeElement=i,!0}addNewParticlesToVertexBuffer(){let e=4*this._floatCountPerParticleData;if(this._firstActiveElement<this._firstFreeElement){let t=this._firstActiveElement*e;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,(this._firstFreeElement-this._firstActiveElement)*e)}else{let t=this._firstActiveElement*e,a=this._bufferMaxParticles-this._firstActiveElement;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,a*e),this._firstFreeElement>0&&this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,a*e,0,this._firstFreeElement*e)}this._firstNewElement=this._firstFreeElement}_updateRenderParams(e){if(this.clearRenderParams(),this._firstActiveElement<this._firstFreeElement){let e=this._firstFreeElement-this._firstActiveElement;this.setDrawElemenParams(this._meshIndexCount,0),this.instanceCount=e}else{let e=this._bufferMaxParticles-this._firstActiveElement;this._firstFreeElement>0&&(e+=this._firstFreeElement),this.setDrawElemenParams(this._meshIndexCount,0),this.instanceCount=e}}destroy(){super.destroy(),this._indexBuffer&&this._indexBuffer.destroy(),this._vertexBuffer&&this._vertexBuffer.destroy(),this._instanceParticleVertexBuffer&&this._instanceParticleVertexBuffer.destroy(),this._instanceVertex=null,this._meshIndexCount=null,this._meshFloatCountPreVertex=null}}class ShurikenParticleMaterial extends Material{static __initDefine__(){ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP=t.Shader3D.getDefineByName("DIFFUSEMAP"),ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR=t.Shader3D.getDefineByName("TINTCOLOR"),ShurikenParticleMaterial.SHADERDEFINE_ADDTIVEFOG=t.Shader3D.getDefineByName("ADDTIVEFOG"),ShurikenParticleMaterial.DIFFUSETEXTURE=t.Shader3D.propertyNameToID("u_texture"),ShurikenParticleMaterial.TINTCOLOR=t.Shader3D.propertyNameToID("u_Tintcolor"),ShurikenParticleMaterial.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset")}get color(){return this._shaderValues.getColor(ShurikenParticleMaterial.TINTCOLOR)}set color(e){e?this._shaderValues.addDefine(ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR):this._shaderValues.removeDefine(ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR),this._shaderValues.setColor(ShurikenParticleMaterial.TINTCOLOR,e)}get tilingOffset(){return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET)}set tilingOffset(e){e?this._shaderValues.setVector(ShurikenParticleMaterial.TILINGOFFSET,e):this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).setValue(1,1,0,0)}get texture(){return this._shaderValues.getTexture(ShurikenParticleMaterial.DIFFUSETEXTURE)}set texture(e){e?this._shaderValues.addDefine(ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP):this._shaderValues.removeDefine(ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP),this._shaderValues.setTexture(ShurikenParticleMaterial.DIFFUSETEXTURE,e)}constructor(){super(),this.setShaderName("PARTICLESHURIKEN"),this.renderMode=ShurikenParticleMaterial.RENDERMODE_ALPHABLENDED}clone(){var e=new ShurikenParticleMaterial;return this.cloneTo(e),e}set renderMode(e){switch(e){case ShurikenParticleMaterial.RENDERMODE_ADDTIVE:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.alphaTest=!1,this._shaderValues.addDefine(ShurikenParticleMaterial.SHADERDEFINE_ADDTIVEFOG);break;case ShurikenParticleMaterial.RENDERMODE_ALPHABLENDED:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.alphaTest=!1,this._shaderValues.removeDefine(ShurikenParticleMaterial.SHADERDEFINE_ADDTIVEFOG);break;default:throw new Error("ShurikenParticleMaterial : renderMode value error.")}}get tilingOffsetX(){return this._MainTex_STX}set tilingOffsetX(e){this._MainTex_STX=e}get tilingOffsetY(){return this._MainTex_STY}set tilingOffsetY(e){this._MainTex_STY=e}get tilingOffsetZ(){return this._MainTex_STZ}set tilingOffsetZ(e){this._MainTex_STZ=e}get tilingOffsetW(){return this._MainTex_STW}set tilingOffsetW(e){this._MainTex_STW=e}get _TintColor(){return this.color}set _TintColor(e){this.color=e}get _TintColorR(){return this.color.r}set _TintColorR(e){this.color.r=e}get _TintColorG(){return this.color.g}set _TintColorG(e){this.color.g=e}get _TintColorB(){return this.color.b}set _TintColorB(e){this.color.b=e}get _TintColorA(){return this.color.a}set _TintColorA(e){this.color.a=e}get _MainTex_ST(){return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET)}set _MainTex_ST(e){var t=this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);t.setValue(e.x,e.y,e.z,e.w),this.tilingOffset=t}get _MainTex_STX(){return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).x}set _MainTex_STX(e){var t=this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);t.x=e,this.tilingOffset=t}get _MainTex_STY(){return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).y}set _MainTex_STY(e){var t=this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);t.y=e,this.tilingOffset=t}get _MainTex_STZ(){return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).z}set _MainTex_STZ(e){var t=this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);t.z=e,this.tilingOffset=t}get _MainTex_STW(){return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).w}set _MainTex_STW(e){var t=this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);t.w=e,this.tilingOffset=t}get colorR(){return this._TintColorR}set colorR(e){this._TintColorR=e}get colorG(){return this._TintColorG}set colorG(e){this._TintColorG=e}get colorB(){return this._TintColorB}set colorB(e){this._TintColorB=e}get colorA(){return this._TintColorA}set colorA(e){this._TintColorA=e}}ShurikenParticleMaterial.RENDERMODE_ALPHABLENDED=0,ShurikenParticleMaterial.RENDERMODE_ADDTIVE=1;class ShurikenParticleRenderer extends BaseRender{get particleSystem(){return this._particleSystem}get renderMode(){return this._renderMode}set renderMode(e){if(this._renderMode!==e){var t=this._shaderValues;switch(this._renderMode){case 0:t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_BILLBOARD);break;case 1:t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);break;case 2:t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);break;case 3:t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);break;case 4:t.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_MESH)}switch(this._renderMode=e,e){case 0:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_BILLBOARD);break;case 1:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);break;case 2:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);break;case 3:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);break;case 4:t.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_MESH);break;default:throw new Error("ShurikenParticleRender: unknown renderMode Value.")}var a=this._particleSystem;a&&a._initBufferDatas()}}get mesh(){return this._mesh}set mesh(e){this._mesh!==e&&(this._mesh&&this._mesh._removeReference(),this._mesh=e,e&&e._addReference(),this._particleSystem._initBufferDatas())}constructor(){super(),this._finalGravity=new t.Vector3,this._dragConstant=new t.Vector2,this._mesh=null,this.stretchedBillboardCameraSpeedScale=0,this.stretchedBillboardSpeedScale=0,this.stretchedBillboardLengthScale=2,this.renderMode=0,this._supportOctree=!1}_onAdded(){super._onAdded(),t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance)?this._particleSystem=new ShurikenParticleInstanceSystem(this):this._particleSystem=new ShurikenParticleSystem(this);var e=this._renderElements[0]=new RenderElement;e.setTransform(this.owner._transform),e.render=this,e.setGeometry(this._particleSystem),e.material=ShurikenParticleMaterial.defaultMaterial}_onEnable(){super._onEnable(),t.Stat.particleRenderNode++,this._particleSystem.playOnAwake&&t.LayaEnv.isPlaying&&this._particleSystem.play()}_onDisable(){super._onDisable(),t.Stat.particleRenderNode--,this._particleSystem.isAlive&&this._particleSystem.simulate(0,!0)}_calculateBoundingBox(){var e=this._particleSystem;if(e._useCustomBounds)e.customBounds._tranform(this.owner.transform.worldMatrix,this._bounds);else if(e._simulationSupported()){if(e._generateBounds(),e._bounds._tranform(this.owner.transform.worldMatrix,this._bounds),0!=e.gravityModifier){var t=this._bounds.getMax(),a=this._bounds.getMin(),r=e._gravityOffset;t.y-=r.x,a.y-=r.y,this._bounds.setMax(t),this._bounds.setMin(a)}}else{(a=this._bounds.getMin()).setValue(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._bounds.setMin(a),(t=this._bounds.getMax()).setValue(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._bounds.setMax(t)}}_needRender(e,a){return!!t.Stat.enableParticle&&(!e||!!e.intersects(this.bounds)&&!!this._particleSystem.isAlive)}_renderUpdate(e,a){var r=this._particleSystem,i=this._shaderValues,n=this.owner.transform;switch(r.simulationSpace){case 0:break;case 1:i.setVector3(ShuriKenParticle3DShaderDeclaration.WORLDPOSITION,n.position),i.setShaderData(ShuriKenParticle3DShaderDeclaration.WORLDROTATION,t.ShaderDataType.Vector4,n.rotation);break;default:throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")}switch(r.scaleMode){case 0:var s=n.getWorldLossyScale();i.setVector3(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE,s),i.setVector3(ShuriKenParticle3DShaderDeclaration.SIZESCALE,s);break;case 1:var o=n.localScale;i.setVector3(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE,o),i.setVector3(ShuriKenParticle3DShaderDeclaration.SIZESCALE,o);break;case 2:i.setVector3(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE,n.getWorldLossyScale()),i.setVector3(ShuriKenParticle3DShaderDeclaration.SIZESCALE,t.Vector3.ONE)}switch(r.dragType){case 0:this._dragConstant.setValue(r.dragSpeedConstantMin,r.dragSpeedConstantMin),i.setVector2(ShuriKenParticle3DShaderDeclaration.DRAG,this._dragConstant);break;case 2:this._dragConstant.setValue(r.dragSpeedConstantMin,r.dragSpeedConstantMax),i.setVector2(ShuriKenParticle3DShaderDeclaration.DRAG,this._dragConstant);break;default:this._dragConstant.setValue(0,0)}t.Vector3.scale(Physics3DUtils.gravity,r.gravityModifier,this._finalGravity),i.setVector3(ShuriKenParticle3DShaderDeclaration.GRAVITY,this._finalGravity),i.setInt(ShuriKenParticle3DShaderDeclaration.SIMULATIONSPACE,r.simulationSpace),i.setBool(ShuriKenParticle3DShaderDeclaration.THREEDSTARTROTATION,r.threeDStartRotation),i.setInt(ShuriKenParticle3DShaderDeclaration.SCALINGMODE,r.scaleMode),i.setNumber(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDLENGTHSCALE,this.stretchedBillboardLengthScale),i.setNumber(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDSPEEDSCALE,this.stretchedBillboardSpeedScale),i.setNumber(ShuriKenParticle3DShaderDeclaration.CURRENTTIME,r._currentTime)}get bounds(){return this.boundsChange&&(this._calculateBoundingBox(),this.boundsChange=!1),this._bounds}_cloneTo(e){let t=e;this._particleSystem.cloneTo(t._particleSystem),t.sharedMaterial=this.sharedMaterial,t.renderMode=this.renderMode,t.mesh=this.mesh,t.stretchedBillboardCameraSpeedScale=this.stretchedBillboardCameraSpeedScale,t.stretchedBillboardSpeedScale=this.stretchedBillboardSpeedScale,t.stretchedBillboardLengthScale=this.stretchedBillboardLengthScale,t.sortingFudge=this.sortingFudge}_onDestroy(){this._mesh&&(this._mesh._removeReference(),this._mesh=null),this._particleSystem.destroy(),this._particleSystem=null,super._onDestroy()}}class ShuriKenParticle3D extends RenderableSprite3D{get particleSystem(){return this._particleSystem}get particleRenderer(){return this._render}constructor(){super(null),this._render=this.addComponent(ShurikenParticleRenderer),this._particleSystem=this._render._particleSystem}_parseModule(e,a){for(var r in a)switch(r){case"bases":var i=a.bases;for(var n in i)e[n]=i[n];break;case"vector2s":var s=a.vector2s;for(var n in s){var o=e[n],l=s[n];o.setValue(l[0],l[1]),e[n]=o}break;case"vector3s":var h=a.vector3s;for(var n in h){var c=e[n],d=h[n];c.setValue(d[0],d[1],d[2]),e[n]=c}break;case"vector4s":var u=a.vector4s;for(var n in u){var _=e[n],m=u[n];_.setValue(m[0],m[1],m[2],m[3]),e[n]=_}break;case"gradientDataNumbers":var f=a.gradientDataNumbers;for(var n in f){for(var S=e[n],g=a[n],p=0,D=g.length;p<D;p++){var T=g[p];S.add(T.key,T.value)}e[n]=S}break;case"resources":var E=a.resources;for(var n in E){let a=t.Loader.getRes(E[n]);a&&a instanceof t.Texture&&(a=a.bitmap),e[n]=a}break;case"bursts":var C=a.bursts;for(p=0,D=C.length;p<D;p++){var A=C[p];e.addBurst(new Burst(A.time,A.min,A.max))}break;case"randomSeed":e.randomSeed[0]=a.randomSeed;break;case"shapeType":case"type":case"color":case"size":case"frame":case"startFrame":case"angularVelocity":case"velocity":break;default:throw"ShurikenParticle3D:unknown type."}}_parse(e,a){if(super._parse(e,a),e.main){var r=this.particleSystem,i=this.particleRenderer;this._parseModule(i,e.renderer),this._parseModule(r,e.main),this._parseModule(r.emission,e.emission);var n=e.shape;if(n){var s;switch(n.shapeType){case 0:s=new SphereShape;break;case 1:s=new HemisphereShape;break;case 2:s=new ConeShape;break;case 3:s=new BoxShape;break;case 7:s=new CircleShape;break;default:throw"ShuriKenParticle3D:unknown shape type."}this._parseModule(s,n),r.shape=s}var o=e.velocityOverLifetime;if(o){var l,h=o.velocity;switch(h.type){case 0:var c=h.constant;l=GradientVelocity.createByConstant(c?new t.Vector3(c[0],c[1],c[2]):new t.Vector3(0,0,0));break;case 1:l=GradientVelocity.createByGradient(this._initParticleVelocity(h.gradientX),this._initParticleVelocity(h.gradientY),this._initParticleVelocity(h.gradientZ));break;case 2:var d=h.constantMin,u=h.constantMax;l=GradientVelocity.createByRandomTwoConstant(d?new t.Vector3(d[0],d[1],d[2]):new t.Vector3(0,0,0),u?new t.Vector3(u[0],u[1],u[2]):new t.Vector3(0,0,0));break;case 3:l=GradientVelocity.createByRandomTwoGradient(this._initParticleVelocity(h.gradientXMin),this._initParticleVelocity(h.gradientXMax),this._initParticleVelocity(h.gradientYMin),this._initParticleVelocity(h.gradientYMax),this._initParticleVelocity(h.gradientZMin),this._initParticleVelocity(h.gradientZMax))}var _=new VelocityOverLifetime(l);this._parseModule(_,o),r.velocityOverLifetime=_}var m=e.colorOverLifetime;if(m){var f=m.color;let e=f.maxKeyCount;var S;switch(f.type){case 0:var g=f.constant;S=GradientColor.createByConstant(g?new t.Vector4(g[0],g[1],g[2],g[3]):new t.Vector4(0,0,0,0));break;case 1:S=GradientColor.createByGradient(this._initParticleColor(f.gradient,e));break;case 2:var p=f.constantMin,D=f.constantMax;S=GradientColor.createByRandomTwoConstant(p?new t.Vector4(p[0],p[1],p[2],p[3]):new t.Vector4(0,0,0,0),p?new t.Vector4(D[0],D[1],D[2],D[3]):new t.Vector4(0,0,0,0));break;case 3:S=GradientColor.createByRandomTwoGradient(this._initParticleColor(f.gradientMin,e),this._initParticleColor(f.gradientMax,e))}var T=new ColorOverLifetime(S);this._parseModule(T,m),r.colorOverLifetime=T}var E=e.sizeOverLifetime;if(E){var C,A=E.size;switch(A.type){case 0:C=A.separateAxes?GradientSize.createByGradientSeparate(this._initParticleSize(A.gradientX),this._initParticleSize(A.gradientY),this._initParticleSize(A.gradientZ)):GradientSize.createByGradient(this._initParticleSize(A.gradient));break;case 1:if(A.separateAxes){var R=A.constantMinSeparate,x=A.constantMaxSeparate;C=GradientSize.createByRandomTwoConstantSeparate(R?new t.Vector3(R[0],R[1],R[2]):new t.Vector3(0,0,0),x?new t.Vector3(x[0],x[1],x[2]):new t.Vector3(0,0,0))}else C=GradientSize.createByRandomTwoConstant(A.constantMin||0,A.constantMax||0);break;case 2:C=A.separateAxes?GradientSize.createByRandomTwoGradientSeparate(this._initParticleSize(A.gradientXMin),this._initParticleSize(A.gradientYMin),this._initParticleSize(A.gradientZMin),this._initParticleSize(A.gradientXMax),this._initParticleSize(A.gradientYMax),this._initParticleSize(A.gradientZMax)):GradientSize.createByRandomTwoGradient(this._initParticleSize(A.gradientMin),this._initParticleSize(A.gradientMax))}var M=new SizeOverLifetime(C);this._parseModule(M,E),r.sizeOverLifetime=M}var y=e.rotationOverLifetime;if(y){var I,v=y.angularVelocity;switch(v.type){case 0:if(v.separateAxes){var L=v.constantSeparate;I=GradientAngularVelocity.createByConstantSeparate(L?new t.Vector3(L[0],L[1],L[2]):new t.Vector3(0,0,Math.PI/4))}else I=GradientAngularVelocity.createByConstant(v.constant||Math.PI/4);break;case 1:I=v.separateAxes?GradientAngularVelocity.createByGradientSeparate(this._initParticleRotation(v.gradientX),this._initParticleRotation(v.gradientY),this._initParticleRotation(v.gradientZ)):GradientAngularVelocity.createByGradient(this._initParticleRotation(v.gradient));break;case 2:if(v.separateAxes){var b=v.constantMinSeparate,P=v.constantMaxSeparate;I=GradientAngularVelocity.createByRandomTwoConstantSeparate(b?new t.Vector3(b[0],b[1],b[2]):new t.Vector3(0,0,0),P?new t.Vector3(P[0],P[1],P[2]):new t.Vector3(0,0,Math.PI/4))}else I=GradientAngularVelocity.createByRandomTwoConstant(v.constantMin||0,v.constantMax||Math.PI/4);break;case 3:v.separateAxes||(I=GradientAngularVelocity.createByRandomTwoGradient(this._initParticleRotation(v.gradientMin),this._initParticleRotation(v.gradientMax)))}var O=new RotationOverLifetime(I);this._parseModule(O,y),r.rotationOverLifetime=O}var B=e.textureSheetAnimation;if(B){var V,w=B.frame;switch(w.type){case 0:V=FrameOverTime.createByConstant(w.constant);break;case 1:V=FrameOverTime.createByOverTime(this._initParticleFrame(w.overTime));break;case 2:V=FrameOverTime.createByRandomTwoConstant(w.constantMin,w.constantMax);break;case 3:V=FrameOverTime.createByRandomTwoOverTime(this._initParticleFrame(w.overTimeMin),this._initParticleFrame(w.overTimeMax))}var N,F=B.startFrame;switch(F.type){case 0:N=StartFrame.createByConstant(F.constant);break;case 1:N=StartFrame.createByRandomTwoConstant(F.constantMin,F.constantMax)}var U=new TextureSheetAnimation(V,N);this._parseModule(U,B),r.textureSheetAnimation=U}}else this._parseOld(e)}destroy(e=!0){this._destroyed||super.destroy(e)}_create(){return new Sprite3D}_parseOld(e){const a=Math.PI/180;var r,i,n,s=this.particleRenderer,o=e.material;o&&(n=t.Loader.getRes(o.path)),s.sharedMaterial=n;var l=e.meshPath;l&&(s.mesh=t.Loader.getRes(l)),s.renderMode=e.renderMode,s.stretchedBillboardCameraSpeedScale=e.stretchedBillboardCameraSpeedScale,s.stretchedBillboardSpeedScale=e.stretchedBillboardSpeedScale,s.stretchedBillboardLengthScale=e.stretchedBillboardLengthScale,s.sortingFudge=e.sortingFudge?e.sortingFudge:0;var h=this.particleSystem;h.isPerformanceMode=e.isPerformanceMode,h.duration=e.duration,h.looping=e.looping,h.prewarm=e.prewarm,h.startDelayType=e.startDelayType,h.startDelay=e.startDelay,h.startDelayMin=e.startDelayMin,h.startDelayMax=e.startDelayMax,h.startLifetimeType=e.startLifetimeType,h.startLifetimeConstant=e.startLifetimeConstant,h.startLifeTimeGradient=ShuriKenParticle3D._initStartLife(e.startLifetimeGradient),h.startLifetimeConstantMin=e.startLifetimeConstantMin,h.startLifetimeConstantMax=e.startLifetimeConstantMax,h.startLifeTimeGradientMin=ShuriKenParticle3D._initStartLife(e.startLifetimeGradientMin),h.startLifeTimeGradientMax=ShuriKenParticle3D._initStartLife(e.startLifetimeGradientMax),h.startSpeedType=e.startSpeedType,h.startSpeedConstant=e.startSpeedConstant,h.startSpeedConstantMin=e.startSpeedConstantMin,h.startSpeedConstantMax=e.startSpeedConstantMax,h.threeDStartSize=e.threeDStartSize,h.startSizeType=e.startSizeType,h.startSizeConstant=e.startSizeConstant;var c=e.startSizeConstantSeparate,d=h.startSizeConstantSeparate;d.x=c[0],d.y=c[1],d.z=c[2],h.startSizeConstantMin=e.startSizeConstantMin,h.startSizeConstantMax=e.startSizeConstantMax;var u=e.startSizeConstantMinSeparate,_=h.startSizeConstantMinSeparate;_.x=u[0],_.y=u[1],_.z=u[2];var m=e.startSizeConstantMaxSeparate,f=h.startSizeConstantMaxSeparate;f.x=m[0],f.y=m[1],f.z=m[2],h.threeDStartRotation=e.threeDStartRotation,h.startRotationType=e.startRotationType,h.startRotationConstant=e.startRotationConstant*a;var S=e.startRotationConstantSeparate,g=h.startRotationConstantSeparate;g.x=S[0]*a,g.y=S[1]*a,g.z=S[2]*a,h.startRotationConstantMin=e.startRotationConstantMin*a,h.startRotationConstantMax=e.startRotationConstantMax*a;var p=e.startRotationConstantMinSeparate,D=h.startRotationConstantMinSeparate;D.x=p[0]*a,D.y=p[1]*a,D.z=p[2]*a;var T=e.startRotationConstantMaxSeparate,E=h.startRotationConstantMaxSeparate;E.x=T[0]*a,E.y=T[1]*a,E.z=T[2]*a,h.randomizeRotationDirection=e.randomizeRotationDirection,h.startColorType=e.startColorType;var C=e.startColorConstant,A=h.startColorConstant;A.x=C[0],A.y=C[1],A.z=C[2],A.w=C[3];var R=e.startColorConstantMin,x=h.startColorConstantMin;x.x=R[0],x.y=R[1],x.z=R[2],x.w=R[3];var M=e.startColorConstantMax,y=h.startColorConstantMax;y.x=M[0],y.y=M[1],y.z=M[2],y.w=M[3],h.gravityModifier=e.gravityModifier,h.simulationSpace=e.simulationSpace,void 0!==e.simulationSpeed&&(h.simulationSpeed=e.simulationSpeed),h.scaleMode=e.scaleMode,h.playOnAwake=e.playOnAwake,h.maxParticles=e.maxParticles;var I=e.autoRandomSeed;null!=I&&(h.autoRandomSeed=I);var v=e.randomSeed;null!=v&&(h.randomSeed[0]=v);var L=e.emission,b=h.emission;if(L){b.emissionRate=L.emissionRate;var P=L.bursts;if(P)for(r=0,i=P.length;r<i;r++){var O=P[r];b.addBurst(new Burst(O.time,O.min,O.max))}b.enable=L.enable}else b.enable=!1;var B=e.shape;if(B){var V;switch(B.shapeType){case 0:var w;V=w=new SphereShape,w.radius=B.sphereRadius,w.emitFromShell=B.sphereEmitFromShell,w.randomDirection=B.sphereRandomDirection;break;case 1:var N;V=N=new HemisphereShape,N.radius=B.hemiSphereRadius,N.emitFromShell=B.hemiSphereEmitFromShell,N.randomDirection=B.hemiSphereRandomDirection;break;case 2:var F;V=F=new ConeShape,F.angle=B.coneAngle*a,F.radius=B.coneRadius,F.length=B.coneLength,F.emitType=B.coneEmitType,F.randomDirection=B.coneRandomDirection;break;case 3:var U;V=U=new BoxShape,U.x=B.boxX,U.y=B.boxY,U.z=B.boxZ,U.randomDirection=B.boxRandomDirection;break;case 7:var G;V=G=new CircleShape,G.radius=B.circleRadius,G.arc=B.circleArc*a,G.emitFromEdge=B.circleEmitFromEdge,G.randomDirection=B.circleRandomDirection;break;default:var H;V=H=new CircleShape,H.radius=B.circleRadius,H.arc=B.circleArc*a,H.emitFromEdge=B.circleEmitFromEdge,H.randomDirection=B.circleRandomDirection}V.enable=B.enable,h.shape=V}var k=e.velocityOverLifetime;if(k){var z,W=k.velocity;switch(W.type){case 0:var Y=W.constant;z=GradientVelocity.createByConstant(new t.Vector3(Y[0],Y[1],Y[2]));break;case 1:z=GradientVelocity.createByGradient(this._initParticleVelocity(W.gradientX),this._initParticleVelocity(W.gradientY),this._initParticleVelocity(W.gradientZ));break;case 2:var X=W.constantMin,Q=W.constantMax;z=GradientVelocity.createByRandomTwoConstant(new t.Vector3(X[0],X[1],X[2]),new t.Vector3(Q[0],Q[1],Q[2]));break;case 3:z=GradientVelocity.createByRandomTwoGradient(this._initParticleVelocity(W.gradientXMin),this._initParticleVelocity(W.gradientXMax),this._initParticleVelocity(W.gradientYMin),this._initParticleVelocity(W.gradientYMax),this._initParticleVelocity(W.gradientZMin),this._initParticleVelocity(W.gradientZMax))}var K=new VelocityOverLifetime(z);K.space=k.space,K.enable=k.enable,h.velocityOverLifetime=K}var j=e.colorOverLifetime;if(j){var J,Z=j.color;switch(Z.type){case 0:var q=Z.constant;J=GradientColor.createByConstant(new t.Vector4(q[0],q[1],q[2],q[3]));break;case 1:J=GradientColor.createByGradient(this._initParticleColor(Z.gradient));break;case 2:var $=Z.constantMin,ee=Z.constantMax;J=GradientColor.createByRandomTwoConstant(new t.Vector4($[0],$[1],$[2],$[3]),new t.Vector4(ee[0],ee[1],ee[2],ee[3]));break;case 3:J=GradientColor.createByRandomTwoGradient(this._initParticleColor(Z.gradientMin),this._initParticleColor(Z.gradientMax))}var te=new ColorOverLifetime(J);te.enable=j.enable,h.colorOverLifetime=te}var ae=e.sizeOverLifetime;if(ae){var re,ie=ae.size;switch(ie.type){case 0:re=ie.separateAxes?GradientSize.createByGradientSeparate(this._initParticleSize(ie.gradientX),this._initParticleSize(ie.gradientY),this._initParticleSize(ie.gradientZ)):GradientSize.createByGradient(this._initParticleSize(ie.gradient));break;case 1:if(ie.separateAxes){var ne=ie.constantMinSeparate,se=ie.constantMaxSeparate;re=GradientSize.createByRandomTwoConstantSeparate(new t.Vector3(ne[0],ne[1],ne[2]),new t.Vector3(se[0],se[1],se[2]))}else re=GradientSize.createByRandomTwoConstant(ie.constantMin,ie.constantMax);break;case 2:re=ie.separateAxes?GradientSize.createByRandomTwoGradientSeparate(this._initParticleSize(ie.gradientXMin),this._initParticleSize(ie.gradientYMin),this._initParticleSize(ie.gradientZMin),this._initParticleSize(ie.gradientXMax),this._initParticleSize(ie.gradientYMax),this._initParticleSize(ie.gradientZMax)):GradientSize.createByRandomTwoGradient(this._initParticleSize(ie.gradientMin),this._initParticleSize(ie.gradientMax))}var oe=new SizeOverLifetime(re);oe.enable=ae.enable,h.sizeOverLifetime=oe}var le=e.rotationOverLifetime;if(le){var he,ce=le.angularVelocity;switch(ce.type){case 0:if(ce.separateAxes){var de=ce.constantSeparate;he=GradientAngularVelocity.createByConstantSeparate(new t.Vector3(de[0]*a,de[1]*a,de[2]*a))}else he=GradientAngularVelocity.createByConstant(ce.constant*a);break;case 1:he=ce.separateAxes?GradientAngularVelocity.createByGradientSeparate(this._initParticleRotation(ce.gradientX),this._initParticleRotation(ce.gradientY),this._initParticleRotation(ce.gradientZ)):GradientAngularVelocity.createByGradient(this._initParticleRotation(ce.gradient));break;case 2:if(ce.separateAxes){var ue=ce.constantMinSeparate,_e=ce.constantMaxSeparate;he=GradientAngularVelocity.createByRandomTwoConstantSeparate(new t.Vector3(ue[0]*a,ue[1]*a,ue[2]*a),new t.Vector3(_e[0]*a,_e[1]*a,_e[2]*a))}else he=GradientAngularVelocity.createByRandomTwoConstant(ce.constantMin*a,ce.constantMax*a);break;case 3:ce.separateAxes||(he=GradientAngularVelocity.createByRandomTwoGradient(this._initParticleRotation(ce.gradientMin),this._initParticleRotation(ce.gradientMax)))}var me=new RotationOverLifetime(he);me.enable=le.enable,h.rotationOverLifetime=me}var fe=e.textureSheetAnimation;if(fe){var Se,ge=fe.frame;switch(ge.type){case 0:Se=FrameOverTime.createByConstant(ge.constant);break;case 1:Se=FrameOverTime.createByOverTime(this._initParticleFrame(ge.overTime));break;case 2:Se=FrameOverTime.createByRandomTwoConstant(ge.constantMin,ge.constantMax);break;case 3:Se=FrameOverTime.createByRandomTwoOverTime(this._initParticleFrame(ge.overTimeMin),this._initParticleFrame(ge.overTimeMax))}var pe,De=fe.startFrame;switch(De.type){case 0:pe=StartFrame.createByConstant(De.constant);break;case 1:pe=StartFrame.createByRandomTwoConstant(De.constantMin,De.constantMax)}var Te=new TextureSheetAnimation(Se,pe);Te.enable=fe.enable;var Ee=fe.tiles;Te.tiles=new t.Vector2(Ee[0],Ee[1]),Te.type=fe.type,Te.randomRow=fe.randomRow;var Ce=fe.rowIndex;void 0!==Ce&&(Te.rowIndex=Ce),Te.cycles=fe.cycles,h.textureSheetAnimation=Te}}_initParticleColor(e,a=4){var r=new Gradient(a,a);if(e){var i,n,s=e.alphas;if(s)for(i=0,n=s.length;i<n;i++){i==a-1&&n>a&&(i=n-1,console.warn(`GradientDataColor warning:alpha data length is large than ${a}, will ignore the middle data.`));var o=s[i];r.addColorAlpha(o.key,o.value)}else r.addColorAlpha(0,1),r.addColorAlpha(1,1);var l=e.rgbs;if(l)for(i=0,n=l.length;i<n;i++){i==a-1&&n>a&&(i=n-1,console.warn(`GradientDataColor warning:rgb data length is large than ${a}, will ignore the middle data.`));var h=l[i],c=h.value;r.addColorRGB(h.key,new t.Color(c[0],c[1],c[2],1))}else r.addColorRGB(0,new t.Color(1,1,1,1)),r.addColorRGB(1,new t.Color(1,1,1,1))}else r.addColorAlpha(0,1),r.addColorAlpha(1,1),r.addColorRGB(0,new t.Color(1,1,1,1)),r.addColorRGB(1,new t.Color(1,1,1,1));return r}_initParticleFrame(e){var t=new GradientDataInt;if(e)for(var a=e.frames,r=0,i=a.length;r<i;r++){var n=a[r];t.add(n.key,n.value)}else t.add(0,0),t.add(1,1);return t}static _initStartLife(e){for(var t=new GradientDataNumber,a=e.startLifetimes,r=0,i=a.length;r<i;r++){var n=a[r];t.add(n.key,n.value)}return t}_initParticleVelocity(e){for(var t=new GradientDataNumber,a=e.velocitys,r=0,i=a.length;r<i;r++){var n=a[r];t.add(n.key,n.value)}return t}_initParticleSize(e){var t=new GradientDataNumber;if(e)for(var a=e.sizes,r=0,i=a.length;r<i;r++){var n=a[r];t.add(n.key,n.value)}else t.add(0,0),t.add(1,1);return t}_initParticleRotation(e){for(var t=new GradientDataNumber,a=e.angularVelocitys,r=0,i=a.length;r<i;r++){var n=a[r];t.add(n.key,n.value/180*Math.PI)}return t}}class SkinnedMeshSprite3DShaderDeclaration{}class SkinRenderElement extends RenderElement{set render(e){this._baseRender=e,this._renderElementOBJ._renderShaderData=e._shaderValues}get render(){return this._baseRender}setSkinData(e){this._renderElementOBJ.skinnedData=e}constructor(){super()}_createRenderElementOBJ(){this._renderElementOBJ=t.LayaGL.renderOBJCreate.createSkinRenderElement()}_render(e){this._renderElementOBJ._render(e)}}class SkinnedMeshRenderer extends MeshRenderer{get localBounds(){return this._localBounds}set localBounds(e){this._localBounds=e,this.geometryBounds=this._localBounds}get rootBone(){return this._cacheRootBone}set rootBone(e){if(this._cacheRootBone!=e){this._cacheRootBone?this._cacheRootBone.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange):this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),e?e.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange):this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this._cacheRootBone=e,this._onWorldMatNeedChange(Transform3D.TRANSFORM_WORLDPOSITION|Transform3D.TRANSFORM_WORLDQUATERNION|Transform3D.TRANSFORM_WORLDSCALE);let r=this._renderElements.length;for(var a=0;a<r;a++){this._renderElements[a].setTransform(e.transform)}}}get bones(){return this._bones}constructor(){super(),this._bones=[],this._inverseBindPosesBufferForNative=null,this._skinnedMatrixCachesBufferForNative=null,this._bonesTransformForNative=null,this._localBounds=new Bounds(t.Vector3.ZERO,t.Vector3.ZERO),this._shaderValues.addDefine(SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_BONE)}_computeSkinnedData(){if(this._cacheMesh)for(var e=this._cacheMesh._inverseBindPoses,t=this._cacheMesh._skinnedMatrixCaches,a=0,r=this._cacheMesh.subMeshCount;a<r;a++)for(var i=this._cacheMesh.getSubMesh(a)._boneIndicesList,n=this._skinnedData[a],s=0,o=i.length;s<o;s++){var l=i[s];this._computeSubSkinnedData(e,l,n[s],t)}}_computeSubSkinnedData(e,a,r,i){for(let n=0,s=a.length;n<s;n++){let s=a[n];if(this._skinnedDataLoopMarks[s]===t.Stat.loopCount){let e=i[s],t=this._skinnedData[e.subMeshIndex][e.batchIndex],a=16*e.batchBoneIndex,o=16*n;for(let e=0;e<16;e++)r[o+e]=t[a+e]}else{let a=this._bones[s];a&&Utils3D._mulMatrixArray(a.transform.worldMatrix.elements,e[s].elements,0,r,16*n),this._skinnedDataLoopMarks[s]=t.Stat.loopCount}}}_computeSkinnedDataForNative(){if(this._cacheMesh){var e=this._cacheMesh._inverseBindPoses,t=this._cacheMesh._skinnedMatrixCaches;if(null==this._inverseBindPosesBufferForNative){this._inverseBindPosesBufferForNative=new Float32Array(16*e.length);for(var a=0,r=0,i=e.length;r<i;r++)this._inverseBindPosesBufferForNative.set(e[r].elements,a),a+=16}if(null==this._skinnedMatrixCachesBufferForNative){this._skinnedMatrixCachesBufferForNative=new Int32Array(3*t.length);var n=0;for(r=0,i=t.length;r<i&&t[r];r++)this._skinnedMatrixCachesBufferForNative[n]=t[r].subMeshIndex,this._skinnedMatrixCachesBufferForNative[n+1]=t[r].batchIndex,this._skinnedMatrixCachesBufferForNative[n+2]=t[r].batchBoneIndex,n+=3}if(null==this._bonesTransformForNative){this._bonesTransformForNative=[];for(r=0,i=this._bones.length;r<i;r++){let e=this._bones[r];this._bonesTransformForNative[r]=e?e.transform._nativeObj:null}}for(r=0,i=this._cacheMesh.subMeshCount;r<i;r++)for(var s=this._cacheMesh.getSubMesh(r)._boneIndicesList,o=this._skinnedData[r],l=(n=0,s.length);n<l;n++){var h=s[n];window.conch.computeSubSkinnedDataForNative(this._inverseBindPosesBufferForNative,h,o[n],this._skinnedMatrixCachesBufferForNative,this._bonesTransformForNative,this._skinnedDataLoopMarks,this._skinnedData)}}}_needRender(e,a){return!!t.Stat.enableSkin&&super._needRender(e,a)}_createRenderElement(){return new SkinRenderElement}_onSkinMeshChange(e){if(e&&this._mesh!=e){this._changeVertexDefine(e),this._changeMorphData(e),this._mesh=e;var t=e.subMeshCount;this._renderElements.length=t;for(var a=0;a<t;a++){var r=this._renderElements[a];if(!r){var i=this.sharedMaterials[a];r=this._renderElements[a]=this._renderElements[a]?this._renderElements[a]:this._createRenderElement(),this._cacheRootBone?r.setTransform(this._cacheRootBone._transform):r.setTransform(this.owner._transform),r.render=this,r.material=i||BlinnPhongMaterial.defaultMaterial}r.setGeometry(e.getSubMesh(a))}}else e||(this._renderElements.length=0,this._mesh=null,this._changeVertexDefine(null),this._changeMorphData(null));this.boundsChange=!0}_onMeshChange(e){if(this._onSkinMeshChange(e),e){this._cacheMesh=e;var t=e.subMeshCount;this._skinnedData=[],this._skinnedDataLoopMarks=new Uint32Array(e._inverseBindPoses.length);for(var a=0;a<t;a++){for(var r=e.getSubMesh(a)._boneIndicesList,i=r.length,n=this._skinnedData[a]=[],s=0;s<i;s++)n[s]=new Float32Array(16*r[s].length);this._renderElements[a].setSkinData(n)}}}_calculateBoundingBox(){this._cacheRootBone?this._localBounds._tranform(this._cacheRootBone.transform.worldMatrix,this._bounds):this._localBounds._tranform(this.owner.transform.worldMatrix,this._bounds)}_setBelongScene(e){super._setBelongScene(e),t.Stat.skinRenderNode++}_setUnBelongScene(){super._setUnBelongScene(),t.Stat.skinRenderNode--}_renderUpdate(e,a){this._applyReflection(),this.bones.length>0?(this._computeSkinnedData(),this._shaderValues.setMatrix4x4(Sprite3D.WORLDMATRIX,t.Matrix4x4.DEFAULT),this._worldParams.x=1,this._shaderValues.setVector(Sprite3D.WORLDINVERTFRONT,this._worldParams)):(this._shaderValues.setMatrix4x4(Sprite3D.WORLDMATRIX,a.worldMatrix),this._worldParams.x=a.getFrontFaceValue(),this._shaderValues.setVector(Sprite3D.WORLDINVERTFRONT,this._worldParams)),this._applyMorphdata()}_cloneTo(e){let t=e;t._inverseBindPosesBufferForNative=null,t._skinnedMatrixCachesBufferForNative=null,t._bonesTransformForNative=null;let cloneHierachFun=(e,t,a)=>{let r=((e,t)=>{let a=[],r=e;for(;r;)r instanceof Sprite3D&&a.push(r),r=r.parent;let i=t;for(;i&&-1==a.indexOf(i);)i=i.parent;return i})(e,t);if(!r)return null;let i=[];Utils3D._getHierarchyPath(r,e,i);let n=[];Utils3D._getHierarchyPath(r,t,n);let s=Utils3D._getParentNodeByHierarchyPath(a,i);return s?Utils3D._getNodeByHierarchyPath(s,n):null};var a=this.rootBone;if(a){let e=cloneHierachFun(this.owner,this.rootBone,t.owner);t.rootBone=e||a}var r=this.bones,i=t.bones;let n=i.length=r.length;for(var s=0;s<n;s++){let e=r[s];i[s]=cloneHierachFun(this.owner,e,t.owner)}var o=this.localBounds;o&&o.cloneTo(t.localBounds),t.localBounds&&(t.localBounds=t.localBounds),super._cloneTo(e)}_onDestroy(){this._cacheRootBone?!this._cacheRootBone._destroyed&&this._cacheRootBone.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange):this.owner&&!this.owner._destroyed&&this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),super._onDestroy()}}class SimpleSkinnedMeshRenderer extends SkinnedMeshRenderer{get simpleAnimatorTexture(){return this._simpleAnimatorTexture}set simpleAnimatorTexture(e){this._simpleAnimatorTexture=e,this._simpleAnimatorTextureSize=e.width,this._shaderValues.setTexture(SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORTEXTURE,e),e._addReference(),this._shaderValues.setNumber(SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORTEXTURESIZE,this._simpleAnimatorTextureSize)}get simpleAnimatorOffset(){return this._simpleAnimatorOffset}set simpleAnimatorOffset(e){e.cloneTo(this._simpleAnimatorOffset)}constructor(){super(),this._simpleAnimatorParams=new t.Vector4,this._simpleAnimatorOffset=new t.Vector2,this._shaderValues.addDefine(SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_SIMPLEBONE),this._shaderValues.addDefine(SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_BONE)}_createRenderElement(){return new SubMeshRenderElement}_computeAnimatorParamsData(){this._cacheMesh&&(this._simpleAnimatorParams.x=this._simpleAnimatorOffset.x,this._simpleAnimatorParams.y=Math.round(this._simpleAnimatorOffset.y)*this._bonesNums*4)}_onMeshChange(e){this._onSkinMeshChange(e),e&&(this._cacheMesh=e)}_renderUpdate(e,a){if(e.renderElement.renderType===RenderElement.RENDERTYPE_NORMAL){if(this.rootBone){var r=this.rootBone.transform.worldMatrix;if(this._subUniformBufferData){let e=this._shaderValues.getMatrix4x4(Sprite3D.WORLDMATRIX);this._subUniformBufferData._needUpdate=!e||!e.equalsOtherMatrix(r)}this._setShaderValue(Sprite3D.WORLDMATRIX,t.ShaderDataType.Matrix4x4,r),this._worldParams.x=this.rootBone.transform.getFrontFaceValue(),this._setShaderValue(Sprite3D.WORLDINVERTFRONT,t.ShaderDataType.Vector4,this._worldParams)}else this._setShaderValue(Sprite3D.WORLDMATRIX,t.ShaderDataType.Matrix4x4,a.worldMatrix),this._worldParams.x=a.getFrontFaceValue(),this._setShaderValue(Sprite3D.WORLDINVERTFRONT,t.ShaderDataType.Vector4,this._worldParams);this._computeAnimatorParamsData(),this._shaderValues.setVector(SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORPARAMS,this._simpleAnimatorParams)}}_renderUpdateWithCamera(e,t){}_cloneTo(e){let t=e;t.simpleAnimatorOffset=this.simpleAnimatorOffset,t.simpleAnimatorTexture=this.simpleAnimatorTexture,t._bonesNums=this._bonesNums,super._cloneTo(e)}_onDestroy(){this._cacheRootBone&&!this._cacheRootBone._destroyed&&this._cacheRootBone.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this._simpleAnimatorTexture&&this._simpleAnimatorTexture._removeReference(),this._simpleAnimatorTexture=null,super._onDestroy()}}class SimpleSkinnedMeshSprite3D extends RenderableSprite3D{static __init__(){SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORPARAMS=SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS,SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORTEXTURE=SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURE,SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORTEXTURESIZE=SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURESIZE,SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURE=t.Shader3D.propertyNameToID("u_SimpleAnimatorTexture"),SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS=t.Shader3D.propertyNameToID("u_SimpleAnimatorParams"),SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURESIZE=t.Shader3D.propertyNameToID("u_SimpleAnimatorTextureSize");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURE,"u_SimpleAnimatorTexture"),e.addShaderUniform(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS,"u_SimpleAnimatorParams"),e.addShaderUniform(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURESIZE,"u_SimpleAnimatorTextureSize")}get meshFilter(){return this._meshFilter}get simpleSkinnedMeshRenderer(){return this._render}constructor(e=null,t=null){super(t),this._meshFilter=this.addComponent(MeshFilter),this._render=this.addComponent(SimpleSkinnedMeshRenderer),e&&(this._meshFilter.sharedMesh=e)}_parse(e,a){super._parse(e,a);var r=this.simpleSkinnedMeshRenderer,i=e.lightmapIndex;null!=i&&(r.lightmapIndex=i);var n=e.lightmapScaleOffset;n&&(r.lightmapScaleOffset=new t.Vector4(n[0],n[1],n[2],n[3])),null!=e.enableRender&&(r.enabled=e.enableRender),null!=e.receiveShadows&&(r.receiveShadow=e.receiveShadows),null!=e.castShadow&&(r.castShadow=e.castShadow);let s=e.meshPath;if(s){let e=t.Loader.getRes(s);e&&(this.meshFilter.sharedMesh=e)}var o=e.materials;if(o){let e=r.sharedMaterials,a=o.length;e.length=a;for(let r=0;r<a;r++)e[r]=t.Loader.getRes(o[r].path);r.sharedMaterials=e}var l=e.boundBox,h=l.min,c=l.max;if(r.localBounds.setMin(new t.Vector3(h[0],h[1],h[2])),r.localBounds.setMax(new t.Vector3(c[0],c[1],c[2])),r.localBounds=r.localBounds,a){let t=e.rootBone;r.rootBone=a[t];let i=e.bones;for(let e=0,t=i.length;e<t;e++)r.bones.push(a[i[e]]);r._bonesNums=e.bonesNums?e.bonesNums:r.bones.length}var d=e.animatorTexture;if(d){let e=t.Loader.getRes(d,t.Loader.TEXTURE2D);r.simpleAnimatorTexture=e}}_cloneTo(e,t,a){super._cloneTo(e,t,a)}destroy(e=!0){this._destroyed||(super.destroy(e),this._meshFilter.destroy())}_create(){return new Sprite3D}}SimpleSkinnedMeshSprite3D._tempArray0=[];class SkinnedMeshSprite3D extends RenderableSprite3D{static __init__(){SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_BONE=t.Shader3D.getDefineByName("BONE"),SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_SIMPLEBONE=t.Shader3D.getDefineByName("SIMPLEBONE");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Custom");SkinnedMeshSprite3D.BONES=t.Shader3D.propertyNameToID("u_Bones"),e.addShaderUniform(SkinnedMeshSprite3D.BONES,"u_Bones")}get meshFilter(){return this._meshFilter}get skinnedMeshRenderer(){return this._render}constructor(e=null,t=null){super(t),this._meshFilter=this.addComponent(MeshFilter),this._render=this.addComponent(SkinnedMeshRenderer),e&&(this._meshFilter.sharedMesh=e)}_parse(e,a){super._parse(e,a);var r=this.skinnedMeshRenderer,i=e.lightmapIndex;null!=i&&(r.lightmapIndex=i);var n,s=e.lightmapScaleOffset;if(s&&(r.lightmapScaleOffset=new t.Vector4(s[0],s[1],s[2],s[3])),null!=e.enableRender&&(r.enabled=e.enableRender),null!=e.receiveShadows&&(r.receiveShadow=e.receiveShadows),null!=e.castShadow&&(r.castShadow=e.castShadow),n=e.meshPath){var o=t.Loader.getRes(n);o&&(this.meshFilter.sharedMesh=o)}var l=e.materials;if(l){var h=r.sharedMaterials,c=l.length;h.length=c;for(var d=0;d<c;d++)h[d]=t.Loader.getRes(l[d].path);r.sharedMaterials=h}var u=e.boundBox,_=u.min,m=u.max;if(r.localBounds.setMin(new t.Vector3(_[0],_[1],_[2])),r.localBounds.setMax(new t.Vector3(m[0],m[1],m[2])),r.localBounds=r.localBounds,a){var f=e.rootBone;r.rootBone=a[f];var S,g=e.bones;for(d=0,S=g.length;d<S;d++)r.bones.push(a[g[d]])}}_cloneTo(e,t,a){super._cloneTo(e,t,a)}destroy(e=!0){this._destroyed||(super.destroy(e),this._meshFilter.destroy())}_create(){return new Sprite3D}}SkinnedMeshSprite3D._tempArray0=[];class TrailTextureMode{}TrailTextureMode.Stretch=0,TrailTextureMode.Tile=1,e.TrailAlignment=void 0,(y=e.TrailAlignment||(e.TrailAlignment={}))[y.View=0]="View",y[y.TransformZ=1]="TransformZ";class VertexTrail{static get vertexDeclaration1(){return VertexTrail._vertexDeclaration1}static get vertexDeclaration2(){return VertexTrail._vertexDeclaration2}get vertexDeclaration(){return VertexTrail._vertexDeclaration1}static __init__(){VertexTrail._vertexDeclaration1=new t.VertexDeclaration(32,[new t.VertexElement(0,t.VertexElementFormat.Vector3,VertexTrail.TRAIL_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector3,VertexTrail.TRAIL_OFFSETVECTOR),new t.VertexElement(24,t.VertexElementFormat.Single,VertexTrail.TRAIL_TIME0),new t.VertexElement(28,t.VertexElementFormat.Single,VertexTrail.TRAIL_TEXTURECOORDINATE0Y)]),VertexTrail._vertexDeclaration2=new t.VertexDeclaration(20,[new t.VertexElement(0,t.VertexElementFormat.Single,VertexTrail.TRAIL_TEXTURECOORDINATE0X),new t.VertexElement(4,t.VertexElementFormat.Color,VertexTrail.TRAIL_COLOR)])}}VertexTrail.TRAIL_POSITION0=0,VertexTrail.TRAIL_OFFSETVECTOR=1,VertexTrail.TRAIL_TIME0=2,VertexTrail.TRAIL_TEXTURECOORDINATE0Y=3,VertexTrail.TRAIL_TEXTURECOORDINATE0X=4,VertexTrail.TRAIL_COLOR=5;class TrailGeometry extends GeometryElement{constructor(e){super(t.MeshTopology.TriangleStrip,t.DrawType.DrawArray),this._floatCountPerVertices1=8,this._floatCountPerVertices2=5,this._increaseSegementCount=16,this._activeIndex=0,this._endIndex=0,this._needAddFirstVertex=!1,this._isTempEndVertex=!1,this._vertices1=null,this._vertices2=null,this._lastFixedVertexPosition=new t.Vector3,this.tmpColor=new t.Color,this._disappearBoundsMode=!1,this._owner=e,this.bufferState=new t.BufferState,this._segementCount=this._increaseSegementCount,this._resizeData(this._segementCount,this.bufferState)}_resizeData(e,a){this._subBirthTime=new Float32Array(e),this._subDistance=new Float64Array(e);var r=2*e,i=VertexTrail.vertexDeclaration1,n=VertexTrail.vertexDeclaration2,s=[],o=r*i.vertexStride,l=r*n.vertexStride,h=o+l;this._vertices1=new Float32Array(r*this._floatCountPerVertices1),this._vertices2=new Float32Array(r*this._floatCountPerVertices2),this._vertexBuffer1=t.LayaGL.renderOBJCreate.createVertexBuffer3D(o,t.BufferUsage.Dynamic,!1),this._vertexBuffer1.vertexDeclaration=i,this._vertexBuffer2=t.LayaGL.renderOBJCreate.createVertexBuffer3D(l,t.BufferUsage.Dynamic,!1),this._vertexBuffer2.vertexDeclaration=n,s.push(this._vertexBuffer1),s.push(this._vertexBuffer2),a.applyState(s,null),t.Resource._addMemory(h,h)}_resetData(){var e=this._endIndex-this._activeIndex,a=new Float32Array(this._vertices1.buffer,2*this._floatCountPerVertices1*this._activeIndex*4,2*this._floatCountPerVertices1*e),r=new Float32Array(this._vertices2.buffer,2*this._floatCountPerVertices2*this._activeIndex*4,2*this._floatCountPerVertices2*e),i=new Float64Array(this._subDistance.buffer,8*this._activeIndex,e),n=new Float32Array(this._subBirthTime.buffer,4*this._activeIndex,e);if(e===this._segementCount){var s=this._vertexBuffer1._byteLength+this._vertexBuffer2._byteLength;t.Resource._addMemory(-s,-s),this._vertexBuffer1.destroy(),this._vertexBuffer2.destroy(),this._segementCount+=this._increaseSegementCount,this._resizeData(this._segementCount,this.bufferState)}this._vertices1.set(a,0),this._vertices2.set(r,0),this._subDistance.set(i,0),this._subBirthTime.set(n,0),this._endIndex=e,this._activeIndex=0,this._vertexBuffer1.setData(this._vertices1.buffer,0,2*this._floatCountPerVertices1*this._activeIndex*4,2*this._floatCountPerVertices1*e*4),this._vertexBuffer2.setData(this._vertices2.buffer,0,2*this._floatCountPerVertices2*this._activeIndex*4,2*this._floatCountPerVertices2*e*4)}_updateTrail(e,a,r){t.Vector3.equals(a,r)||(this._endIndex-this._activeIndex==0?this._addTrailByFirstPosition(e,r):this._addTrailByNextPosition(e,r))}_addTrailByFirstPosition(e,t){this._endIndex===this._segementCount&&this._resetData(),this._subDistance[this._endIndex]=0,this._subBirthTime[this._endIndex]=this._owner._curtime,this._endIndex++,t.cloneTo(this._lastFixedVertexPosition),this._needAddFirstVertex=!0}_addTrailByNextPosition(a,r){var i=TrailGeometry._tempVector30,n=TrailGeometry._tempVector31;switch(this._owner.alignment){case e.TrailAlignment.View:var s=a.viewMatrix;t.Vector3.transformCoordinate(r,s,TrailGeometry._tempVector33),t.Vector3.transformCoordinate(this._lastFixedVertexPosition,s,TrailGeometry._tempVector34),t.Vector3.subtract(TrailGeometry._tempVector33,TrailGeometry._tempVector34,i),t.Vector3.cross(TrailGeometry._tempVector33,i,n);break;case e.TrailAlignment.TransformZ:t.Vector3.subtract(r,this._lastFixedVertexPosition,i);var o=TrailGeometry._tempVector32;this._owner._ownerRender.owner.transform.getForward(o),t.Vector3.cross(i,o,n)}t.Vector3.normalize(n,n),t.Vector3.scale(n,this._owner.widthMultiplier/2,n);var l,h,c=t.Vector3.scalarLength(i);this._needAddFirstVertex&&(this._updateVerticesByPositionData(r,n,this._endIndex-1),this._needAddFirstVertex=!1),c-this._owner.minVertexDistance>=t.MathUtils3D.zeroTolerance?(this._isTempEndVertex?(l=this._endIndex-1,h=c-this._subDistance[l],this._updateVerticesByPosition(r,n,c,l),this._owner._totalLength+=h):(this._endIndex===this._segementCount&&this._resetData(),this._updateVerticesByPosition(r,n,c,this._endIndex),this._owner._totalLength+=c,this._endIndex++),r.cloneTo(this._lastFixedVertexPosition),this._isTempEndVertex=!1):(this._isTempEndVertex?(l=this._endIndex-1,h=c-this._subDistance[l],this._updateVerticesByPosition(r,n,c,l),this._owner._totalLength+=h):(this._endIndex===this._segementCount&&this._resetData(),this._updateVerticesByPosition(r,n,c,this._endIndex),this._owner._totalLength+=c,this._endIndex++),this._isTempEndVertex=!0)}_updateVerticesByPositionData(e,a,r){var i=2*this._floatCountPerVertices1*r,n=this._owner._curtime;this._vertices1[i]=e.x,this._vertices1[i+1]=e.y,this._vertices1[i+2]=e.z,this._vertices1[i+3]=-a.x,this._vertices1[i+4]=-a.y,this._vertices1[i+5]=-a.z,this._vertices1[i+6]=n,this._vertices1[i+7]=1,this._vertices1[i+8]=e.x,this._vertices1[i+9]=e.y,this._vertices1[i+10]=e.z,this._vertices1[i+11]=a.x,this._vertices1[i+12]=a.y,this._vertices1[i+13]=a.z,this._vertices1[i+14]=n,this._vertices1[i+15]=0;var s=this._owner._ownerRender.bounds,o=s.getMin(),l=s.getMax(),h=TrailGeometry._tempVector35,c=TrailGeometry._tempVector36,d=TrailGeometry._tempVector32;t.Vector3.add(e,a,h),t.Vector3.subtract(e,a,c),t.Vector3.min(c,h,d),t.Vector3.min(o,d,o),s.setMin(o),t.Vector3.max(h,c,d),t.Vector3.max(l,d,l),s.setMax(l);var u=2*this._floatCountPerVertices1;this._vertexBuffer1.setData(this._vertices1.buffer,4*i,4*i,4*u)}_updateVerticesByPosition(e,t,a,r){this._updateVerticesByPositionData(e,t,r),this._subDistance[r]=a,this._subBirthTime[r]=this._owner._curtime}_updateVertexBufferUV(){var e,a,r;if(this._disappearBoundsMode){e=this._owner._ownerRender.bounds;var i=this._owner._ownerRender.owner.transform.position;e.setMin(i),e.setMax(i),a=e.getMin(),r=e.getMax()}for(var n=this._endIndex,s=0,o=this._owner.colorGradient,l=o.colorAlphaKeysCount-1,h=o.colorRGBKeysCount-1,c=this._owner._totalLength,d=2*this._floatCountPerVertices2,u=this._activeIndex;u<n;u++){var _,m;u!==this._activeIndex&&(s+=this._subDistance[u]),this._owner.textureMode==TrailTextureMode.Stretch?m=_=1-s/c:(m=1-s/c,_=1-(c-s)),h=o.evaluateColorRGB(m,this.tmpColor,h,!0),l=o.evaluateColorAlpha(m,this.tmpColor,l,!0);var f=u*d;if(this._vertices2[f+0]=_,this._vertices2[f+1]=this.tmpColor.r,this._vertices2[f+2]=this.tmpColor.g,this._vertices2[f+3]=this.tmpColor.b,this._vertices2[f+4]=this.tmpColor.a,this._vertices2[f+5]=_,this._vertices2[f+6]=this.tmpColor.r,this._vertices2[f+7]=this.tmpColor.g,this._vertices2[f+8]=this.tmpColor.b,this._vertices2[f+9]=this.tmpColor.a,this._disappearBoundsMode){var S=2*this._floatCountPerVertices1*u,g=TrailGeometry._tempVector32,p=TrailGeometry._tempVector33,D=TrailGeometry._tempVector34;g.setValue(this._vertices1[S+0],this._vertices1[S+1],this._vertices1[S+2]),p.setValue(this._vertices1[S+3],this._vertices1[S+4],this._vertices1[S+5]),t.Vector3.add(g,p,D),t.Vector3.min(D,a,a),t.Vector3.max(D,r,r),t.Vector3.subtract(g,p,D),t.Vector3.min(D,a,a),t.Vector3.max(D,r,r)}}this._disappearBoundsMode&&(e.setMin(a),e.setMax(r),this._disappearBoundsMode=!1);var T=this._activeIndex*d;this._vertexBuffer2.setData(this._vertices2.buffer,4*T,4*T,4*(n*d-T))}_updateDisappear(){for(var e=this._endIndex,a=this._activeIndex;a<e&&this._owner._curtime-this._subBirthTime[a]>=this._owner.time+t.MathUtils3D.zeroTolerance;a++){var r=a+1;if(r!==e&&(this._owner._totalLength-=this._subDistance[r]),this._isTempEndVertex&&r===e-1){var i=this._lastFixedVertexPosition;i.x=this._vertices1[0],i.y=this._vertices1[1],i.z=this._vertices1[2],this._isTempEndVertex=!1}this._activeIndex++,this._disappearBoundsMode=!0}}_getType(){return TrailGeometry._type}_prepareRender(e){return this._endIndex-this._activeIndex>1}_updateRenderParams(e){this.clearRenderParams();var t=2*this._activeIndex,a=2*this._endIndex-t;this.setDrawArrayParams(t,a)}destroy(){super.destroy();var e=this._vertexBuffer1._byteLength+this._vertexBuffer2._byteLength;t.Resource._addMemory(-e,-e),this.bufferState.destroy(),this._vertexBuffer1.destroy(),this._vertexBuffer2.destroy(),this.bufferState=null,this._vertices1=null,this._vertexBuffer1=null,this._vertices2=null,this._vertexBuffer2=null,this._subBirthTime=null,this._subDistance=null,this._lastFixedVertexPosition=null,this._disappearBoundsMode=!1}clear(){this._activeIndex=0,this._endIndex=0,this._disappearBoundsMode=!1,this._subBirthTime.fill(0),this._subDistance.fill(0),this._segementCount=0,this._isTempEndVertex=!1,this._needAddFirstVertex=!1,this._lastFixedVertexPosition.setValue(0,0,0)}}TrailGeometry.ALIGNMENT_VIEW=0,TrailGeometry.ALIGNMENT_TRANSFORM_Z=1,TrailGeometry._tempVector30=new t.Vector3,TrailGeometry._tempVector31=new t.Vector3,TrailGeometry._tempVector32=new t.Vector3,TrailGeometry._tempVector33=new t.Vector3,TrailGeometry._tempVector34=new t.Vector3,TrailGeometry._tempVector35=new t.Vector3,TrailGeometry._tempVector36=new t.Vector3,TrailGeometry._type=GeometryElement._typeCounter++;class TrailMaterial extends Material{static __initDefine__(){TrailMaterial.MAINTEXTURE=t.Shader3D.propertyNameToID("u_MainTexture"),TrailMaterial.TINTCOLOR=t.Shader3D.propertyNameToID("u_MainColor"),TrailMaterial.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset")}get color(){return this._shaderValues.getColor(TrailMaterial.TINTCOLOR)}set color(e){this._shaderValues.setColor(TrailMaterial.TINTCOLOR,e)}get texture(){return this._shaderValues.getTexture(TrailMaterial.MAINTEXTURE)}set texture(e){e?this._shaderValues.addDefine(TrailMaterial.SHADERDEFINE_MAINTEXTURE):this._shaderValues.removeDefine(TrailMaterial.SHADERDEFINE_MAINTEXTURE),this._shaderValues.setTexture(TrailMaterial.MAINTEXTURE,e)}get tilingOffset(){return this._shaderValues.getVector(TrailMaterial.TILINGOFFSET)}set tilingOffset(e){e?this._shaderValues.setVector(TrailMaterial.TILINGOFFSET,e):this._shaderValues.getVector(TrailMaterial.TILINGOFFSET).setValue(1,1,0,0)}constructor(){super(),this.setShaderName("Trail"),this.materialRenderMode=e.MaterialRenderMode.RENDERMODE_ALPHABLENDED}clone(){var e=new TrailMaterial;return this.cloneTo(e),e}set renderMode(e){switch(e){case TrailMaterial.RENDERMODE_ADDTIVE:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.alphaTest=!1,this._shaderValues.addDefine(TrailMaterial.SHADERDEFINE_ADDTIVEFOG);break;case TrailMaterial.RENDERMODE_ALPHABLENDED:this.renderQueue=Material.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.alphaTest=!1,this._shaderValues.removeDefine(TrailMaterial.SHADERDEFINE_ADDTIVEFOG);break;default:throw new Error("ShurikenParticleMaterial : renderMode value error.")}}}TrailMaterial.RENDERMODE_ALPHABLENDED=0,TrailMaterial.RENDERMODE_ADDTIVE=1;class TrailFilter{static __init__(){TrailFilter.CURTIME=t.Shader3D.propertyNameToID("u_CurTime"),TrailFilter.LIFETIME=t.Shader3D.propertyNameToID("u_LifeTime"),TrailFilter.WIDTHCURVE=t.Shader3D.propertyNameToID("u_WidthCurve"),TrailFilter.WIDTHCURVEKEYLENGTH=t.Shader3D.propertyNameToID("u_WidthCurveKeyLength");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(TrailFilter.CURTIME,"u_CurTime"),e.addShaderUniform(TrailFilter.LIFETIME,"u_LifeTime"),e.addShaderUniform(TrailFilter.WIDTHCURVE,"u_WidthCurve"),e.addShaderUniform(TrailFilter.WIDTHCURVEKEYLENGTH,"u_WidthCurveKeyLength")}get time(){return this._time}set time(e){this._time=e,this._ownerRender._shaderValues.setNumber(TrailFilter.LIFETIME,e)}get minVertexDistance(){return this._minVertexDistance}set minVertexDistance(e){this._minVertexDistance=e}get widthMultiplier(){return this._widthMultiplier}set widthMultiplier(e){this._widthMultiplier=e}get widthCurve(){return this._widthCurve}set widthCurve(e){this._widthCurve=e;var t,a,r=new Float32Array(4*e.length),i=0;for(t=0,a=e.length;t<a;t++)r[i++]=e[t].time,r[i++]=e[t].inTangent,r[i++]=e[t].outTangent,r[i++]=e[t].value;this._ownerRender._shaderValues.setBuffer(TrailFilter.WIDTHCURVE,r),this._ownerRender._shaderValues.setInt(TrailFilter.WIDTHCURVEKEYLENGTH,e.length)}get colorGradient(){return this._colorGradient}set colorGradient(e){this._colorGradient=e}get textureMode(){return this._textureMode}set textureMode(e){this._textureMode=e}constructor(a){this._textureMode=TrailTextureMode.Stretch,this._totalLength=0,this._lastPosition=new t.Vector3,this._curtime=0,this.alignment=e.TrailAlignment.View,this._ownerRender=a,this._initDefaultData(),this.addRenderElement()}addRenderElement(){var e=this._ownerRender,t=e._renderElements,a=e.sharedMaterials[0];a||(a=TrailMaterial.defaultMaterial);var r=new RenderElement;r.setTransform(this._ownerRender.owner._transform),r.render=e,r.material=a,this._trialGeometry=new TrailGeometry(this),r.setGeometry(this._trialGeometry),t.push(r)}_update(e){var t=this._ownerRender;const a=this._ownerRender.owner.scene;if(a){this._curtime+=a.timer._delta/1e3,t._shaderValues.setNumber(TrailFilter.CURTIME,this._curtime);var r=this._ownerRender.owner.transform.position,i=t._renderElements[0]._geometry;i._updateDisappear(),i._updateTrail(e.camera,this._lastPosition,r),i._updateVertexBufferUV(),r.cloneTo(this._lastPosition)}}_initDefaultData(){this.time=5,this.minVertexDistance=.1,this.widthMultiplier=1,this.textureMode=TrailTextureMode.Stretch;var e=[],a=new FloatKeyframe;a.time=0,a.inTangent=0,a.outTangent=0,a.value=1,e.push(a);var r=new FloatKeyframe;r.time=1,r.inTangent=0,r.outTangent=0,r.value=1,e.push(r),this.widthCurve=e;var i=new Gradient(2,2);i.mode=GradientMode.Blend,i.addColorRGB(0,t.Color.WHITE),i.addColorRGB(1,t.Color.WHITE),i.addColorAlpha(0,1),i.addColorAlpha(1,1),this.colorGradient=i}destroy(){this._trialGeometry.destroy(),this._trialGeometry=null,this._widthCurve=null,this._colorGradient=null}clear(){this._trialGeometry.clear(),this._lastPosition.setValue(0,0,0),this._curtime=0,this._totalLength=0}}class TrailRenderer extends BaseRender{constructor(){super(),this._projectionViewWorldMatrix=new t.Matrix4x4,this._supportOctree=!1}_onAdded(){this._trailFilter=new TrailFilter(this)}get time(){return this._trailFilter.time}set time(e){this._trailFilter.time=e}get minVertexDistance(){return this._trailFilter.minVertexDistance}set minVertexDistance(e){this._trailFilter.minVertexDistance=e}get widthMultiplier(){return this._trailFilter.widthMultiplier}set widthMultiplier(e){this._trailFilter.widthMultiplier=e}get widthCurve(){return this._trailFilter.widthCurve}set widthCurve(e){this._trailFilter.widthCurve=e}get colorGradient(){return this._trailFilter.colorGradient}set colorGradient(e){this._trailFilter.colorGradient=e}get textureMode(){return this._trailFilter.textureMode}set textureMode(e){this._trailFilter.textureMode=e}get alignment(){return this._trailFilter.alignment}set alignment(e){this._trailFilter.alignment=e}_onEnable(){super._onEnable(),this.owner._transform.position.cloneTo(this._trailFilter._lastPosition)}onUpdate(){this._calculateBoundingBox()}get bounds(){return this._bounds}_calculateBoundingBox(){let e=RenderContext3D._instance;this.boundsChange=!1,this._trailFilter._update(e)}_renderUpdate(e,t){super._renderUpdate(e,t)}clear(){this._trailFilter.clear()}_onDestroy(){this._trailFilter.destroy(),super._onDestroy()}_cloneTo(e){super._cloneTo(e);let t=e;t.time=this.time,t.minVertexDistance=this.minVertexDistance;var a=[],r=this.widthCurve;for(let e=0,t=this.widthCurve.length;e<t;e++)a.push(r[e].clone());t.widthCurve=a,t.colorGradient=this.colorGradient.clone(),t.textureMode=this.textureMode,t.alignment=this.alignment}}class TrailSprite3D extends RenderableSprite3D{static __init__(){}get trailFilter(){return this._geometryFilter}get trailRenderer(){return this._render}constructor(e=null){super(e),this._render=this.addComponent(TrailRenderer),this._geometryFilter=this._render._trailFilter}_parse(e,a){super._parse(e,a);var r,i,n=this._render,s=this._geometryFilter,o=e.materials;if(o){var l=n.sharedMaterials,h=o.length;for(l.length=h,r=0;r<h;r++)l[r]=t.Loader.getRes(o[r].path);n.sharedMaterials=l}s.time=e.time,s.minVertexDistance=e.minVertexDistance,s.widthMultiplier=e.widthMultiplier,s.textureMode=e.textureMode,null!=e.alignment&&(s.alignment=e.alignment);var c=[],d=e.widthCurve;for(r=0,i=d.length;r<i;r++){var u=new FloatKeyframe;u.time=d[r].time,u.inTangent=d[r].inTangent,u.outTangent=d[r].outTangent,u.value=d[r].value,c.push(u)}s.widthCurve=c;var _=e.colorGradient,m=_.colorKeys,f=_.alphaKeys,S=new Gradient(m.length,f.length);for(S.mode=_.mode,r=0,i=m.length;r<i;r++){var g=m[r];S.addColorRGB(g.time,new t.Color(g.value[0],g.value[1],g.value[2],1))}for(r=0,i=f.length;r<i;r++){var p=f[r];S.addColorAlpha(p.time,p.value)}s.colorGradient=S}_cloneTo(e,t,a){super._cloneTo(e,t,a)}clear(){this._render.clear()}_create(){return new Sprite3D}}class InstanceRenderElement extends RenderElement{static create(){let e=InstanceRenderElement._pool.length>0?InstanceRenderElement._pool.pop():new InstanceRenderElement;return e._isInPool=!1,e.clear(),e}constructor(){super(),this._InvertFront=!1,this.setGeometry(new MeshInstanceGeometry(null)),this._instanceBatchElementList=new t.SingletonList,this._isUpdataData=!0,this._invertFrontFace=!1}getInvertFront(){return this._invertFrontFace}set InvertFront(e){this._InvertFront=e}_createRenderElementOBJ(){this._renderElementOBJ=t.LayaGL.renderOBJCreate.createInstanceRenderElement()}compileShader(e){var t=this._subShader._passes;this._renderElementOBJ._clearShaderInstance();for(var a=0,r=t.length;a<r;a++){var i=t[a];if(i._pipelineMode===e.pipelineMode){var n=RenderElement._compileDefine;e.sceneShaderData._defineDatas.cloneTo(n),this.render&&n.addDefineDatas(this.render._shaderValues._defineDatas),n.addDefineDatas(this._renderElementOBJ._materialShaderData._defineDatas),n.add(MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE);var s=i.withCompile(n);this._renderElementOBJ._addShaderInstance(s)}}}_renderUpdatePre(e){var t=ILaya3D.Scene3D._updateMark,a=this.transform;e.renderElement=this,!!this.render&&(t!==this.render._sceneUpdateMark||this.renderType!==this.render._updateRenderType)&&(this.render._renderUpdate(e,a),this.render._sceneUpdateMark=t);var r=Camera._updateMark;if(this.render._renderUpdateWithCamera(e,a),this.oriRendertype=this.render._updateRenderType,this.render._updateMark=r,this.render._updateRenderType=this.renderType,this._isUpdataData){let e=this._geometry.subMesh._mesh;this.updateInstanceData(e),this._isUpdataData=!1}const i=!!this.render&&this.render._subUniformBufferData;i&&i._needUpdate&&BaseRender._transLargeUbO.updateSubData(i),this._renderElementOBJ._isRender=this._geometry._prepareRender(e),this._geometry._updateRenderParams(e),this.compileShader(e._contextOBJ),this._geometry.instanceCount=this._instanceBatchElementList.length,this._renderElementOBJ._invertFront=this.getInvertFront()}updateInstanceData(e){switch(e._setInstanceBuffer(),this._renderElementOBJ.clear(),this._geometry.bufferState=e._instanceBufferState,e._instanceBufferStateType){case Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:var t=this._renderElementOBJ.getUpdateData(0,16*InstanceRenderElement.maxInstanceCount);this._renderElementOBJ.addUpdateBuffer(e._instanceWorldVertexBuffer,16);var a=(c=this._instanceBatchElementList).elements,r=c.length;this._renderElementOBJ.drawCount=r;let d=a[0].render.rootBone;if(d)for(var i=0;i<r;i++){var n=a[i].render.rootBone._transform.worldMatrix;t.set(n.elements,16*i)}else for(i=0;i<r;i++)t.set(a[i].transform.worldMatrix.elements,16*i);var s=this._renderElementOBJ.getUpdateData(1,4*InstanceRenderElement.maxInstanceCount);if(d)for(i=0;i<r;i++){var o=a[i].render;o._computeAnimatorParamsData();var l=o._simpleAnimatorParams,h=4*i;s[h]=l.x,s[h+1]=l.y}else for(i=0;i<r;i++)s[h]=0,s[h+1]=0;this._renderElementOBJ.addUpdateBuffer(e._instanceSimpleAniVertexBuffer,4);break;case Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL:t=this._renderElementOBJ.getUpdateData(0,16*InstanceRenderElement.maxInstanceCount);this._renderElementOBJ.addUpdateBuffer(e._instanceWorldVertexBuffer,16);var c;a=(c=this._instanceBatchElementList).elements,r=c.length;this._renderElementOBJ.drawCount=r;for(i=0;i<r;i++)t.set(a[i].transform.worldMatrix.elements,16*i)}}clear(){this._instanceBatchElementList.length=0}recover(){InstanceRenderElement._pool.push(this),this.render._updateRenderType=this.oriRendertype,this._isInPool=!0}}InstanceRenderElement.maxInstanceCount=1024,InstanceRenderElement._pool=[];class SubMesh extends GeometryElement{get indexCount(){return this._indexCount}constructor(e){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this.indexFormat=e.indexFormat,e.indexFormat!==t.IndexFormat.UInt32||t.LayaGL.renderEngine.getCapable(t.RenderCapable.Element_Index_Uint32)?(this._mesh=e,this._boneIndicesList=[],this._subIndexBufferStart=[],this._subIndexBufferCount=[]):console.warn("SubMesh:this device do not support IndexFormat.UInt32.")}_setIndexRange(e,a,r=t.IndexFormat.UInt16){this._indexStart=e,this._indexCount=a,this._indexBuffer.canRead&&(r==t.IndexFormat.UInt16?this._indices=new Uint16Array(this._indexBuffer.getData().buffer,2*e,a):this._indices=new Uint32Array(this._indexBuffer.getData().buffer,4*e,a))}_getType(){return SubMesh._type}_prepareRender(e){return this._mesh._uploadVerticesData(),!0}_updateRenderParams(e){var a,r=this._mesh,i=e.renderElement&&e.renderElement.render?e.renderElement.render._skinnedData:null;switch(r.indexFormat){case t.IndexFormat.UInt32:a=4;break;case t.IndexFormat.UInt16:a=2;break;case t.IndexFormat.UInt8:a=1}if(this.clearRenderParams(),this.bufferState=r._bufferState,i)for(var n=0,s=this._boneIndicesList.length;n<s;n++)this.setDrawElemenParams(this._subIndexBufferCount[n],this._subIndexBufferStart[n]*a);else this.setDrawElemenParams(this._indexCount,this._indexStart*a)}getIndices(){if(this._mesh._isReadable)return this._indices.slice();throw"SubMesh:can't get indices on subMesh,mesh's isReadable must be true."}setIndices(e){this._indexBuffer.setData(e,this._indexStart,0,this._indexCount)}destroy(){this._destroyed||(super.destroy(),this._indexBuffer.destroy(),this._indexBuffer=null,this._mesh=null,this._boneIndicesList=null,this._subIndexBufferStart=null,this._subIndexBufferCount=null)}}SubMesh._type=GeometryElement._typeCounter++;class skinnedMatrixCache{constructor(e,t,a){this.subMeshIndex=e,this.batchIndex=t,this.batchBoneIndex=a}}class Mesh extends t.Resource{static __init__(){var e=Physics3D._bullet;e&&(Mesh._nativeTempVector30=e.btVector3_create(0,0,0),Mesh._nativeTempVector31=e.btVector3_create(0,0,0),Mesh._nativeTempVector32=e.btVector3_create(0,0,0))}static load(e,a){t.ILaya.loader.load(e,a,null,t.Loader.MESH)}get inverseAbsoluteBindPoses(){return this._inverseBindPoses}get vertexCount(){return this._vertexCount}get indexCount(){return this._indexBuffer.indexCount}get subMeshCount(){return this._subMeshes.length}get bounds(){return this._bounds}set bounds(e){this._bounds!==e&&e.cloneTo(this._bounds)}get indexFormat(){return this._indexFormat}set indexFormat(e){this._indexFormat=e,this._subMeshes.forEach((t=>{t.indexFormat=e}))}constructor(e=!0){super(),this._tempVector30=new t.Vector3,this._tempVector31=new t.Vector3,this._tempVector32=new t.Vector3,this._minVerticesUpdate=-1,this._maxVerticesUpdate=-1,this._needUpdateBounds=!0,this._bufferState=new t.BufferState,this._instanceBufferStateType=0,this._vertexBuffer=null,this._indexBuffer=null,this._skinnedMatrixCaches=[],this._vertexCount=0,this._indexFormat=t.IndexFormat.UInt16,this._bounds=new Bounds(new t.Vector3,new t.Vector3),this._isReadable=e,this._subMeshes=[],this.destroyedImmediately=t.Config.destroyResourceImmediatelyDefault}_getPositionElement(e){for(var a=e.vertexDeclaration._vertexElements,r=0,i=a.length;r<i;r++){var n=a[r];if(n._elementFormat===t.VertexElementFormat.Vector3&&n._elementUsage===t.VertexMesh.MESH_POSITION0)return n}return null}_getVerticeElementData(e,a){e.length=this._vertexCount;var r=this._vertexBuffer.vertexDeclaration,i=r.getVertexElementByUsage(a);if(i){var n=this._vertexBuffer.getUint8Data(),s=this._vertexBuffer.getFloat32Data(),o=r.vertexStride,l=o/4,h=i._offset,c=h/4;switch(a){case t.VertexMesh.MESH_TEXTURECOORDINATE0:case t.VertexMesh.MESH_TEXTURECOORDINATE1:for(var d=0;d<this._vertexCount;d++){var u=l*d+c;e[d]=new t.Vector2(s[u],s[u+1])}break;case t.VertexMesh.MESH_POSITION0:case t.VertexMesh.MESH_NORMAL0:for(d=0;d<this._vertexCount;d++){u=l*d+c;e[d]=new t.Vector3(s[u],s[u+1],s[u+2])}break;case t.VertexMesh.MESH_TANGENT0:case t.VertexMesh.MESH_BLENDWEIGHT0:for(d=0;d<this._vertexCount;d++){u=l*d+c;e[d]=new t.Vector4(s[u],s[u+1],s[u+2],s[u+3])}break;case t.VertexMesh.MESH_COLOR0:for(d=0;d<this._vertexCount;d++){u=l*d+c;e[d]=new t.Color(s[u],s[u+1],s[u+2],s[u+3])}break;case t.VertexMesh.MESH_BLENDINDICES0:for(d=0;d<this._vertexCount;d++){u=o*d+h;e[d]=new t.Vector4(n[u],n[u+1],n[u+2],n[u+3])}break;default:throw"Mesh:Unknown elementUsage."}}}_setVerticeElementData(e,a){var r=this._vertexBuffer.vertexDeclaration,i=r.getVertexElementByUsage(a);if(i){var n=this._vertexBuffer.getUint8Data(),s=this._vertexBuffer.getFloat32Data(),o=r.vertexStride,l=o/4,h=i._offset,c=h/4;switch(a){case t.VertexMesh.MESH_TEXTURECOORDINATE0:case t.VertexMesh.MESH_TEXTURECOORDINATE1:for(var d=0,u=e.length;d<u;d++){var _=l*d+c,m=e[d];s[_]=m.x,s[_+1]=m.y}break;case t.VertexMesh.MESH_POSITION0:case t.VertexMesh.MESH_NORMAL0:for(d=0,u=e.length;d<u;d++){_=l*d+c;var f=e[d];s[_]=f.x,s[_+1]=f.y,s[_+2]=f.z}break;case t.VertexMesh.MESH_TANGENT0:case t.VertexMesh.MESH_BLENDWEIGHT0:for(d=0,u=e.length;d<u;d++){_=l*d+c;var S=e[d];s[_]=S.x,s[_+1]=S.y,s[_+2]=S.z,s[_+3]=S.w}break;case t.VertexMesh.MESH_COLOR0:for(d=0,u=e.length;d<u;d++){_=l*d+c;var g=e[d];s[_]=g.r,s[_+1]=g.g,s[_+2]=g.b,s[_+3]=g.a}break;case t.VertexMesh.MESH_BLENDINDICES0:for(d=0,u=e.length;d<u;d++){_=o*d+h,S=e[d];n[_]=S.x,n[_+1]=S.y,n[_+2]=S.z,n[_+3]=S.w}break;default:throw"Mesh:Unknown elementUsage."}this._minVerticesUpdate=0,this._maxVerticesUpdate=Number.MAX_SAFE_INTEGER}else console.warn("Mesh: the mesh don't have  this VertexElement.")}_disposeResource(){for(var e=0,t=this._subMeshes.length;e<t;e++)this._subMeshes[e].destroy();this._btTriangleMesh&&Physics3D._bullet.btStridingMeshInterface_destroy(this._btTriangleMesh),this._vertexBuffer&&this._vertexBuffer.destroy(),this._indexBuffer&&this._indexBuffer.destroy(),this._bufferState.destroy(),this._instanceBufferState&&this._instanceBufferState.destroy(),this._instanceWorldVertexBuffer&&this._instanceWorldVertexBuffer.destroy(),this._instanceSimpleAniVertexBuffer&&this._instanceSimpleAniVertexBuffer.destroy(),this.instanceWorldMatrixData&&(this.instanceWorldMatrixData=null),this.instanceSimpleAnimatorData&&(this.instanceSimpleAnimatorData=null),this._setCPUMemory(0),this._setGPUMemory(0),this._bufferState=null,this._instanceBufferState=null,this._vertexBuffer=null,this._indexBuffer=null,this._subMeshes=null,this._btTriangleMesh=null,this._indexBuffer=null,this._boneNames=null,this._inverseBindPoses=null,this.morphTargetData&&this.morphTargetData.destroy()}_setSubMeshes(e){this._subMeshes=e;for(var t=0,a=e.length;t<a;t++)e[t]._indexInMesh=t}_setBuffer(e,t){this._bufferState.applyState([e],t)}_setInstanceBuffer(){if(this._instanceBufferState)return;var e=this._instanceBufferState=new t.BufferState,a=this._instanceBufferStateType;let r=[];r.push(this._vertexBuffer);let i=this._instanceWorldVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(16*InstanceRenderElement.maxInstanceCount*4,t.BufferUsage.Dynamic,!1);if(i.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,i.instanceBuffer=!0,r.push(i),this.instanceWorldMatrixData=new Float32Array(16*InstanceRenderElement.maxInstanceCount),a===Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR){let e=this._instanceSimpleAniVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*InstanceRenderElement.maxInstanceCount*4,t.BufferUsage.Dynamic,!1);e.vertexDeclaration=t.VertexMesh.instanceSimpleAnimatorDeclaration,e.instanceBuffer=!0,this.instanceSimpleAnimatorData=new Float32Array(4*InstanceRenderElement.maxInstanceCount),r.push(e)}e.applyState(r,this._indexBuffer)}_getPhysicMesh(){for(var e=Physics3D._bullet,t=e.btTriangleMesh_create(),a=Mesh._nativeTempVector30,r=Mesh._nativeTempVector31,i=Mesh._nativeTempVector32,n=this._tempVector30,s=this._tempVector31,o=this._tempVector32,l=this._vertexBuffer,h=this._getPositionElement(l),c=l.getFloat32Data(),d=l.vertexDeclaration.vertexStride/4,u=h._offset/4,_=this._indexBuffer.getData(),m=0,f=_.length;m<f;m+=3){var S=_[m]*d+u,g=_[m+1]*d+u,p=_[m+2]*d+u;n.setValue(c[S],c[S+1],c[S+2]),s.setValue(c[g],c[g+1],c[g+2]),o.setValue(c[p],c[p+1],c[p+2]),Utils3D._convertToBulletVec3(n,a),Utils3D._convertToBulletVec3(s,r),Utils3D._convertToBulletVec3(o,i),e.btTriangleMesh_addTriangle(t,a,r,i,!1)}return this._btTriangleMesh=t,this._btTriangleMesh}_uploadVerticesData(){var e=this._minVerticesUpdate,t=this._maxVerticesUpdate;if(-1!==e&&-1!==t){var a=e;this._vertexBuffer.setData(this._vertexBuffer.getUint8Data().buffer,a,a,t-e),this._minVerticesUpdate=-1,this._maxVerticesUpdate=-1}}getSubMesh(e){return this._subMeshes[e]}getPositions(e){if(!this._isReadable)throw"Mesh:can't get positions on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_POSITION0)}setPositions(e){if(!this._isReadable)throw"Mesh:setPosition() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_POSITION0),this._needUpdateBounds=!0}getColors(e){if(!this._isReadable)throw"Mesh:can't get colors on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_COLOR0)}setColors(e){if(!this._isReadable)throw"Mesh:setColors() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_COLOR0)}getUVs(e,a=0){if(!this._isReadable)throw"Mesh:can't get uvs on mesh,isReadable must be true.";switch(a){case 0:this._getVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE0);break;case 1:this._getVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE1);break;default:throw"Mesh:Invalid channel."}}setUVs(e,a=0){if(!this._isReadable)throw"Mesh:setUVs() need isReadable must be true or use setVertices().";switch(a){case 0:this._setVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE0);break;case 1:this._setVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE1);break;default:throw"Mesh:Invalid channel."}}getNormals(e){if(!this._isReadable)throw"Mesh:can't get colors on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_NORMAL0)}setNormals(e){if(!this._isReadable)throw"Mesh:setNormals() need must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_NORMAL0)}getTangents(e){if(!this._isReadable)throw"Mesh:can't get colors on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_TANGENT0)}setTangents(e){if(!this._isReadable)throw"Mesh:setTangents() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_TANGENT0)}getBoneWeights(e){if(!this._isReadable)throw"Mesh:can't get boneWeights on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_BLENDWEIGHT0)}setBoneWeights(e){if(!this._isReadable)throw"Mesh:setBoneWeights() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_BLENDWEIGHT0)}getBoneIndices(e){if(!this._isReadable)throw"Mesh:can't get boneIndices on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_BLENDINDICES0)}setBoneIndices(e){if(!this._isReadable)throw"Mesh:setBoneIndices() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_BLENDINDICES0)}markAsUnreadbale(){this._uploadVerticesData(),this._vertexBuffer.markAsUnreadbale(),this._isReadable=!1}getVertexDeclaration(){return this._vertexBuffer._vertexDeclaration}getVertices(){if(this._isReadable)return this._vertexBuffer.getUint8Data().buffer.slice(0);throw"Mesh:can't get vertices on mesh,isReadable must be true."}setVertices(e){this._vertexBuffer.setData(e),this._needUpdateBounds=!0}getIndices(){if(this._isReadable)return this._indexBuffer.getData().slice();throw"Mesh:can't get indices on subMesh,mesh's isReadable must be true."}setIndices(e){var a;e instanceof Uint32Array?a=t.IndexFormat.UInt32:e instanceof Uint16Array?a=t.IndexFormat.UInt16:e instanceof Uint8Array&&(a=t.IndexFormat.UInt8);var r=this._indexBuffer;this._indexFormat===a&&r.indexCount===e.length||(r.destroy(),this._indexBuffer=r=t.LayaGL.renderOBJCreate.createIndexBuffer3D(a,e.length,t.BufferUsage.Static,this._isReadable)),r.setData(e),this.indexFormat=a}calculateBounds(){if(!this._isReadable)throw"Mesh:can't calculate bounds on subMesh,mesh's isReadable must be true.";if(this._needUpdateBounds){var e=this._tempVector30,t=this._tempVector31;e.x=e.y=e.z=Number.MAX_VALUE,t.x=t.y=t.z=-Number.MAX_VALUE;for(var a=this._vertexBuffer,r=this._getPositionElement(a),i=a.getFloat32Data(),n=a.vertexDeclaration.vertexStride/4,s=r._offset/4,o=0,l=i.length;o<l;o+=n){var h=o+s,c=i[h],d=i[h+1],u=i[h+2];e.x=Math.min(e.x,c),e.y=Math.min(e.y,d),e.z=Math.min(e.z,u),t.x=Math.max(t.x,c),t.y=Math.max(t.y,d),t.z=Math.max(t.z,u)}this._bounds.setMin(e),this._bounds.setMax(t),this._needUpdateBounds=!1}}cloneTo(e){var a=e,r=this._vertexBuffer,i=t.LayaGL.renderOBJCreate.createVertexBuffer3D(r._byteLength,r.bufferUsage,r.canRead);i.vertexDeclaration=r.vertexDeclaration,i.setData(r.getUint8Data().slice().buffer),a._vertexBuffer=i,a._vertexCount=this._vertexCount;var n,s=this._indexBuffer,o=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,s.indexCount,s.bufferUsage,s.canRead);o.setData(s.getData().slice()),a._indexBuffer=o,a._setBuffer(a._vertexBuffer,o),a._instanceBufferStateType=this._instanceBufferStateType,a._setCPUMemory(this.cpuMemory),a._setGPUMemory(this.gpuMemory);var l=this._boneNames;if(l){var h=a._boneNames=[];for(n=0;n<l.length;n++)h[n]=l[n]}var c=this._inverseBindPoses;if(c){var d=a._inverseBindPoses=[];for(n=0;n<c.length;n++)d[n]=c[n]}var u=this._skinnedMatrixCaches.length;for(a._skinnedMatrixCaches.length=u,n=0;n<u;n++){var _=this._skinnedMatrixCaches[n];_&&(a._skinnedMatrixCaches[n]=new skinnedMatrixCache(_.subMeshIndex,_.batchIndex,_.batchBoneIndex))}for(n=0;n<this.subMeshCount;n++){var m=this._subMeshes[n],f=m._subIndexBufferStart,S=m._subIndexBufferCount,g=m._boneIndicesList,p=new SubMesh(a);p._subIndexBufferStart.length=f.length,p._subIndexBufferCount.length=S.length,p._boneIndicesList.length=g.length;for(var D=0;D<f.length;D++)p._subIndexBufferStart[D]=f[D];for(D=0;D<S.length;D++)p._subIndexBufferCount[D]=S[D];for(D=0;D<g.length;D++)p._boneIndicesList[D]=new Uint16Array(g[D]);p._indexBuffer=o,p._indexStart=m._indexStart,p._indexCount=m._indexCount,p._indices=new Uint16Array(o.getData().buffer,2*m._indexStart,m._indexCount);var T=a._vertexBuffer;p._vertexBuffer=T,a._subMeshes.push(p)}a._setSubMeshes(a._subMeshes),this.morphTargetData&&(a.morphTargetData=this.morphTargetData.clone())}clone(){var e=new Mesh;return this.cloneTo(e),e}}Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL=0,Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR=1;class VolumetricGI extends Volume{get irradiance(){return this._irradiance}set irradiance(e){this._irradiance!=e&&(this._irradiance&&this.irradiance._removeReference(),e&&e._addReference(),this._irradiance=e)}get distance(){return this._distance}set distance(e){this._distance!=e&&(this._distance&&this._distance._removeReference(),e&&e._addReference(),this._distance=e)}constructor(){super(),this._type=VolumeManager.VolumetricGIType,this.probeCounts=new t.Vector3,this.probeStep=new t.Vector3,this._params=new t.Vector4(8,16,0,0)}get normalBias(){return this._params.z}set normalBias(e){this._params.z=e}get viewBias(){return this._params.w}set viewBias(e){this._params.w=e}get irradianceTexel(){return this._params.x}get distanceTexel(){return this._params.y}applyVolumetricGI(e){e.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_VOLUMETRICGI),e.setVector3(RenderableSprite3D.VOLUMETRICGI_PROBECOUNTS,this.probeCounts),e.setVector3(RenderableSprite3D.VOLUMETRICGI_PROBESTEPS,this.probeStep),e.setVector3(RenderableSprite3D.VOLUMETRICGI_PROBESTARTPOS,this.bounds.getMin()),e.setVector(RenderableSprite3D.VOLUMETRICGI_PROBEPARAMS,this._params),e.setTexture(RenderableSprite3D.VOLUMETRICGI_IRRADIANCE,this.irradiance),e.setTexture(RenderableSprite3D.VOLUMETRICGI_DISTANCE,this.distance)}_onDestroy(){this.irradiance=null,this.distance=null}_cloneTo(e){e.irradiance=this.irradiance,e.distance=this.distance,this.probeCounts.cloneTo(e.probeCounts),this.probeStep.cloneTo(e.probeStep),e.normalBias=this.normalBias,e.viewBias=this.viewBias}}e.AreaShape=void 0,(I=e.AreaShape||(e.AreaShape={}))[I.rectangle=0]="rectangle",I[I.ellipse=1]="ellipse";class AreaLightCom extends Light{constructor(){super(),this._lightType=e.LightType.Area,this._lightmapBakedType=e.LightMode.bakeOnly,this._spread=90,this._maxBounces=1024,this._size=new t.Vector2(1,1),this._areaShape=e.AreaShape.rectangle,this._power=100}get lightmapBakedType(){return e.LightMode.bakeOnly}set lightmapBakedType(t){this._lightmapBakedType=e.LightMode.bakeOnly}get shape(){return this._areaShape}set shape(e){this._areaShape=e}set power(e){this._power=e}get power(){return this._power}set size(e){e&&e.cloneTo(this._size)}get size(){return this._size}set spread(e){this._spread=Math.min(Math.max(0,e),180)}get spread(){return this._spread}set maxBounces(e){this._maxBounces=e}get maxBounces(){return this._maxBounces}_addToLightQueue(){}_removeFromLightQueue(){}_parse(e,t){super._parse(e,t)}_cloneTo(e){super._cloneTo(e)}_create(){return new AreaLightCom}}const v=new t.Vector3;new t.Vector3;class LODInfo{constructor(e){this._mincullRate=e,this._renders=[],this._cachSprite3D=[]}set mincullRate(e){this._mincullRate=e}get mincullRate(){return this._mincullRate}set group(e){if(e!=this._group){if(this._group)for(let e=0,a=this._renders.length;e<a;e++){let a=this._renders[e];a.owner.transform.off(t.Event.TRANSFORM_CHANGED,this._group._updateRecaculateFlag),a._LOD=-1}this._group=e;for(let e=0,a=this._renders.length;e<a;e++){let a=this._renders[e];a.owner.transform.on(t.Event.TRANSFORM_CHANGED,this._group,this._group._updateRecaculateFlag),a._LOD=this._lodIndex}}}set renders(e){this._cachSprite3D=e;for(var t=0,a=e.length;t<a;t++)this.addNode(e[t])}get renders(){return this._cachSprite3D}addNode(e){if(!e)return;let a=e;if(a._isRenderNode>0){let r=a.components;for(let e of r)e instanceof BaseRender&&-1==this._renders.indexOf(e)&&this._renders.push(e);this._group&&e.transform.on(t.Event.TRANSFORM_CHANGED,this._group,this._group._updateRecaculateFlag)}for(var r=0,i=e.numChildren;r<i;r++)this.addNode(e.getChildAt(r))}removeNode(a){let r=a;if(r._isRenderNode>0){let i,n=r.components;for(let r of n)r instanceof BaseRender&&-1==(i=this._renders.indexOf(r))&&(this._renders.splice(i,1),r.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!1),this._group&&a.transform.off(t.Event.TRANSFORM_CHANGED,this._group._updateRecaculateFlag))}for(var i=0,n=a.numChildren;i<n;i++)this.removeNode(a.getChildAt(i))}removeAllRender(){this._renders.forEach((t=>{t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!1)}))}}class LODGroup extends t.Component{constructor(){super(),this._needcaculateBounds=!1,this._lods=[],this._visialIndex=-1,this._bounds=new Bounds,this._lodPosition=new t.Vector3,this.runInEditor=!0}get lods(){return this._lods}set lods(e){this._lods=e;for(var t=0,a=this._lods.length;t<a;t++){let e=this._lods[t];e._lodIndex=t,e.group=this}this._updateRecaculateFlag(),this._lodCount=this._lods.length}get nowRate(){return this._nowRate}get bounds(){return this.recalculateBounds(),this._bounds}_onEnable(){super._onEnable();for(var e=0,t=this._lods.length;e<t;e++)this._setLODinvisible(e);this._visialIndex=-1}_onDisable(){super._onDisable(),this._lods.forEach((e=>{e.removeAllRender()}))}_applyVisibleRate(e){for(var t=0;t<this._lodCount;t++){if(e>this._lods[t].mincullRate)return-1==t?(this._setLODvisible(t),void(this._visialIndex=t)):t==this._visialIndex?void 0:(-1!=this._visialIndex&&this._setLODinvisible(this._visialIndex),this._setLODvisible(t),void(this._visialIndex=t))}-1!=this._visialIndex&&(this._setLODinvisible(this._visialIndex),this._visialIndex=-1)}_setLODvisible(t){let a=this._lods[t];for(var r=0,i=a._renders.length;r<i;r++)a._renders[r].setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!1)}_setLODinvisible(t){let a=this._lods[t];for(var r=0,i=a._renders.length;r<i;r++)a._renders[r].setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!0)}onDestroy(){this._lods.forEach((e=>{let t=e._renders;for(var a=0;a<t.length;a++)e.removeNode(t[a].owner)}))}_updateRecaculateFlag(){this._needcaculateBounds=!0}_cloneTo(e){super._cloneTo(e);let cloneHierachFun=(e,t,a)=>{let r=((e,t)=>{let a=[],r=e;for(;r;)r instanceof Sprite3D&&a.push(r),r=r.parent;let i=t;for(;i&&-1==a.indexOf(i);)i=i.parent;return i})(e,t);if(!r)return null;let i=[];Utils3D._getHierarchyPath(r,e,i);let n=[];Utils3D._getHierarchyPath(r,t,n);let s=Utils3D._getParentNodeByHierarchyPath(a,i);return s?Utils3D._getNodeByHierarchyPath(s,n):null},t=[];for(let a=0,r=this._lodCount;a<r;a++){let r=this._lods[a],i=new LODInfo(r.mincullRate);t.push(i),r._renders.forEach((t=>{let a=cloneHierachFun(this.owner,t.owner,e.owner);a&&i.addNode(a)}))}e.lods=t}recalculateBounds(){if(!this._needcaculateBounds)return;let e=!0;for(let t=0,a=this._lods.length;t<a;t++){this._lods[t]._renders.forEach((t=>{e?(t.bounds.cloneTo(this._bounds),e=!1):Bounds.merge(this._bounds,t.bounds,this._bounds)}))}this._lodPosition=this._bounds.getCenter();let t=this._bounds.getExtent();this._size=2*Math.max(t.x,t.y,t.z),this._needcaculateBounds=!1}onPreRender(){this.recalculateBounds();let e=this.owner.scene.cullInfoCamera,a=e.maxlocalYDistance,r=e.boundFrustum;t.Vector3.subtract(this._lodPosition,e.transform.position,v);let i=v.length();if(i>e.farPlane||0==r.containsPoint(this._lodPosition))return;let n=i/e.farPlane*a,s=this._size/n;this._nowRate=s,this._applyVisibleRate(s)}}class PixelLineData{constructor(){this.startPosition=new t.Vector3,this.endPosition=new t.Vector3,this.startColor=new t.Color,this.endColor=new t.Color}cloneTo(e){this.startPosition.cloneTo(e.startPosition),this.endPosition.cloneTo(e.endPosition),this.startColor.cloneTo(e.startColor),this.endColor.cloneTo(e.endColor)}}class PixelLineVertex{static get vertexDeclaration(){return PixelLineVertex._vertexDeclaration}static __init__(){PixelLineVertex._vertexDeclaration=new t.VertexDeclaration(28,[new t.VertexElement(0,t.VertexElementFormat.Vector3,t.VertexMesh.MESH_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector4,t.VertexMesh.MESH_COLOR0)])}get vertexDeclaration(){return PixelLineVertex._vertexDeclaration}constructor(){}}class PixelLineFilter extends GeometryElement{constructor(e,a){super(t.MeshTopology.Lines,t.DrawType.DrawArray),this._floatCountPerVertices=7,this._minUpdate=Number.MAX_VALUE,this._maxUpdate=Number.MIN_VALUE,this._floatBound=new Float32Array(6),this._calculateBound=!1,this._maxLineCount=0,this._lineCount=0;var r=2*a;this._ownerRender=e,this._maxLineCount=a,this._vertices=new Float32Array(r*this._floatCountPerVertices),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(PixelLineVertex.vertexDeclaration.vertexStride*r,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=PixelLineVertex.vertexDeclaration;var i=new t.BufferState;this.bufferState=i,this.bufferState.applyState([this._vertexBuffer],null);var n=PixelLineFilter._tempVector0,s=PixelLineFilter._tempVector1;n.setValue(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),s.setValue(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._bounds=new Bounds(n,s)}_getType(){return PixelLineFilter._type}_resizeLineData(e){var a=2*e,r=this._vertices;this._vertexBuffer.destroy(),this._maxLineCount=e;var i=a*this._floatCountPerVertices;this._vertices=new Float32Array(i),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(PixelLineVertex.vertexDeclaration.vertexStride*a,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=PixelLineVertex.vertexDeclaration,i<r.length?(this._vertices.set(new Float32Array(r.buffer,0,i)),this._vertexBuffer.setData(this._vertices.buffer,0,0,4*i)):(this._vertices.set(r),this._vertexBuffer.setData(this._vertices.buffer,0,0,4*r.length)),this.bufferState.applyState([this._vertexBuffer],null),this._minUpdate=Number.MAX_VALUE,this._maxUpdate=Number.MIN_VALUE}_updateLineVertices(e,a,r,i,n){a&&(this._vertices[e+0]=a.x,this._vertices[e+1]=a.y,this._vertices[e+2]=a.z),i&&(this._vertices[e+3]=i.r,this._vertices[e+4]=i.g,this._vertices[e+5]=i.b,this._vertices[e+6]=i.a),r&&(this._vertices[e+7]=r.x,this._vertices[e+8]=r.y,this._vertices[e+9]=r.z),n&&(this._vertices[e+10]=n.r,this._vertices[e+11]=n.g,this._vertices[e+12]=n.b,this._vertices[e+13]=n.a),this._minUpdate=Math.min(this._minUpdate,e),this._maxUpdate=Math.max(this._maxUpdate,e+2*this._floatCountPerVertices);var s=this._bounds,o=this._floatBound,l=s.getMin(),h=s.getMax();t.Vector3.min(l,a,l),t.Vector3.min(l,r,l),t.Vector3.max(h,a,h),t.Vector3.max(h,r,h),s.setMin(l),s.setMax(h),o[0]=l.x,o[1]=l.y,o[2]=l.z,o[3]=h.x,o[4]=h.y,o[5]=h.z,this._ownerRender.boundsChange=!0}_reCalculateBound(){if(this._calculateBound){var e=this._vertices,t=PixelLineFilter._tempVector0,a=PixelLineFilter._tempVector1;t.setValue(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),a.setValue(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var r=0;r<2*this._lineCount;++r){var i=this._floatCountPerVertices*r,n=e[i+0],s=e[i+1],o=e[i+2];t.x=Math.min(n,t.x),t.y=Math.min(s,t.y),t.z=Math.min(o,t.z),a.x=Math.max(n,a.x),a.y=Math.max(s,a.y),a.z=Math.max(o,a.z)}this._bounds.setMin(t),this._bounds.setMax(a);var l=this._floatBound;l[0]=t.x,l[1]=t.y,l[2]=t.z,l[3]=a.x,l[4]=a.y,l[5]=a.z,this._calculateBound=!1}}_removeLineData(e){var t=2*this._floatCountPerVertices,a=e+1,r=e*t,i=this._vertices,n=new Float32Array(i.buffer,a*t*4,(this._lineCount-a)*t);i.set(n,r),this._minUpdate=Math.min(this._minUpdate,r),this._maxUpdate=Math.max(this._maxUpdate,r+n.length),this._lineCount--;var s=this._floatBound,o=i[r],l=i[r+1],h=i[r+2],c=i[r+7],d=i[r+8],u=i[r+9],_=s[0],m=s[1],f=s[2],S=s[3],g=s[4],p=s[5];o!==_&&o!==S&&l!==m&&l!==g&&h!==f&&h!==p&&c!==_&&c!==S&&d!==m&&d!==g&&u!==f&&u!==p||(this._calculateBound=!0)}_updateLineData(e,t,a,r,i){var n=2*this._floatCountPerVertices;this._updateLineVertices(e*n,t,a,r,i)}_updateLineDatas(e,t){for(var a=2*this._floatCountPerVertices,r=t.length,i=0;i<r;i++){var n=t[i];this._updateLineVertices((e+i)*a,n.startPosition,n.endPosition,n.startColor,n.endColor)}}_getLineData(e,t){var a=t.startPosition,r=t.startColor,i=t.endPosition,n=t.endColor,s=this._vertices,o=e*this._floatCountPerVertices*2;a.x=s[o+0],a.y=s[o+1],a.z=s[o+2],r.r=s[o+3],r.g=s[o+4],r.b=s[o+5],r.a=s[o+6],i.x=s[o+7],i.y=s[o+8],i.z=s[o+9],n.r=s[o+10],n.g=s[o+11],n.b=s[o+12],n.a=s[o+13]}_prepareRender(e){return!0}_updateRenderParams(e){this.clearRenderParams(),this._minUpdate!==Number.MAX_VALUE&&this._maxUpdate!==Number.MIN_VALUE&&(this._vertexBuffer.setData(this._vertices.buffer,4*this._minUpdate,4*this._minUpdate,4*(this._maxUpdate-this._minUpdate)),this._minUpdate=Number.MAX_VALUE,this._maxUpdate=Number.MIN_VALUE),this._lineCount>0&&this.setDrawArrayParams(0,2*this._lineCount)}destroy(){this._destroyed||(super.destroy(),this.bufferState.destroy(),this._vertexBuffer.destroy(),this.bufferState=null,this._vertexBuffer=null,this._vertices=null)}}PixelLineFilter._tempVector0=new t.Vector3,PixelLineFilter._tempVector1=new t.Vector3,PixelLineFilter._type=GeometryElement._typeCounter++;class PixelLineMaterial extends Material{static __initDefine__(){PixelLineMaterial.COLOR=t.Shader3D.propertyNameToID("u_Color")}get color(){return this._shaderValues.getVector(PixelLineMaterial.COLOR)}set color(e){this._shaderValues.setVector(PixelLineMaterial.COLOR,e)}constructor(){super(),this.setShaderName("LineShader"),this._shaderValues.setVector(PixelLineMaterial.COLOR,new t.Vector4(1,1,1,1))}clone(){var e=new PixelLineMaterial;return this.cloneTo(e),e}}class PixelLineRenderer extends BaseRender{constructor(){super(),this._isRenderActive=!1,this._isInRenders=!1,this._needUpdatelines=!1,this._lines=[],this._projectionViewWorldMatrix=new t.Matrix4x4,this._pixelLineFilter=new PixelLineFilter(this,20),this._shaderValues.addDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR)}get pixelLinesDatas(){return this._needUpdatelines&&this._updateLineDatas(),this._lines}set pixelLinesDatas(e){this.clear(),this.addLines(e)}get maxLineCount(){return this._pixelLineFilter._maxLineCount}set maxLineCount(e){this._pixelLineFilter._resizeLineData(e),this._pixelLineFilter._lineCount=Math.min(this._pixelLineFilter._lineCount,e)}get lineCount(){return this._pixelLineFilter._lineCount}_onAdded(){super._onAdded(),this._changeRenderObjects(0,PixelLineMaterial.defaultMaterial)}_onEnable(){this._isRenderActive=!0,0!=this._pixelLineFilter._lineCount&&(this.owner.scene._addRenderObject(this),this._isInRenders=!0),this._setBelongScene(this.owner.scene)}_onDisable(){this._pixelLineFilter&&0!=this._pixelLineFilter._lineCount&&this._isRenderActive&&(this.owner.scene._removeRenderObject(this),this._isInRenders=!1),this._isRenderActive=!1,this._setUnBelongScene()}_calculateBoundingBox(){var e=this.owner.transform.worldMatrix,t=this._pixelLineFilter;t._reCalculateBound(),t._bounds._tranform(e,this._bounds)}_renderUpdateWithCamera(e,a){e.projectionViewMatrix;var r=this._shaderValues;if(a){var i=a.worldMatrix;r.setMatrix4x4(Sprite3D.WORLDMATRIX,i),this._worldParams.x=a.getFrontFaceValue(),r.setVector(Sprite3D.WORLDINVERTFRONT,this._worldParams)}else r.setMatrix4x4(Sprite3D.WORLDMATRIX,t.Matrix4x4.DEFAULT),r.setVector(Sprite3D.WORLDINVERTFRONT,t.Vector4.UnitX)}_changeRenderObjects(e,t){var a=this._renderElements;t||(t=PixelLineMaterial.defaultMaterial);var r=a[e];r||(r=a[e]=new RenderElement),r.setTransform(this.owner._transform),r.setGeometry(this._pixelLineFilter),r.render=this,r.material=t}_pixelLinesDataChange(e){if(null!=e){let t=parseInt(e),a=this._lines[t];a&&this.setLine(t,a.startPosition,a.endPosition,a.startColor,a.endColor)}}addLine(e,t,a,r){if(this._pixelLineFilter._lineCount===this._pixelLineFilter._maxLineCount)throw"PixelLineSprite3D: lineCount has equal with maxLineCount.";this._pixelLineFilter._updateLineData(this._pixelLineFilter._lineCount++,e,t,a,r),this._isRenderActive&&!this._isInRenders&&this._pixelLineFilter._lineCount>0&&(this.owner.scene&&this.owner.scene._addRenderObject(this),this._isInRenders=!0),this._needUpdatelines=!0}addLines(e){var t=this._pixelLineFilter._lineCount,a=e.length;if(t+a>this._pixelLineFilter._maxLineCount)throw"PixelLineSprite3D: lineCount plus lines count must less than maxLineCount.";this._pixelLineFilter._updateLineDatas(t,e),this._pixelLineFilter._lineCount+=a,this._isRenderActive&&!this._isInRenders&&this._pixelLineFilter._lineCount>0&&(this.owner.scene&&this.owner.scene._addRenderObject(this),this._isInRenders=!0),this._needUpdatelines=!0}removeLine(e){if(!(e<this._pixelLineFilter._lineCount))throw"PixelLineSprite3D: index must less than lineCount.";this._pixelLineFilter._removeLineData(e),this._isRenderActive&&this._isInRenders&&0==this._pixelLineFilter._lineCount&&(this.owner.scene&&this.owner.scene._removeRenderObject(this),this._isInRenders=!1),this._needUpdatelines=!0}setLine(e,t,a,r,i){if(!(e<this._pixelLineFilter._lineCount))throw"PixelLineSprite3D: index must less than lineCount.";{this._pixelLineFilter._updateLineData(e,t,a,r,i);let n=this._lines[e];n&&(r.cloneTo(n.startColor),i.cloneTo(n.endColor),t.cloneTo(n.startPosition),a.cloneTo(n.endPosition))}}getLine(e,t){if(!(e<this.lineCount))throw"PixelLineSprite3D: index must less than lineCount.";this._pixelLineFilter._getLineData(e,t)}_updateLineDatas(){let e=this.lineCount;this._lines=[];for(let t=0;t<e;t++){let e=new PixelLineData;this.getLine(t,e),this._lines.push(e)}this._needUpdatelines=!1}clear(){this._pixelLineFilter._lineCount=0,this._isRenderActive&&this._isInRenders&&(this.owner.scene&&this.owner.scene._removeRenderObject(this),this._isInRenders=!1)}_onDestroy(){this._pixelLineFilter.destroy(),this._pixelLineFilter=null,super._onDestroy()}_cloneTo(e){super._cloneTo(e);let t=e;t.maxLineCount=this.maxLineCount;const a=this.lineCount;let r=new PixelLineData;for(let e=0,i=a;e<i;e++)this.getLine(e,r),t.addLine(r.startPosition,r.endPosition,r.startColor,r.endColor)}}class AnimatorPlayState{get currentState(){return this._currentState}set currentState(e){this._currentState=e,this._currentState.curTransition=null}get normalizedTime(){return this._normalizedTime}get duration(){return this._duration}get animatorState(){return this._currentState}constructor(){this._currentState=null}_resetPlayState(e,t){this._finish=!1,this._playEventIndex=0,this._startPlayTime=e,this._elapsedTime=e,this._lastIsFront=!0,this._normalizedTime=this._elapsedTime/t;var a=this._normalizedTime%1;this._normalizedPlayTime=a<0?a+1:a}_cloneTo(e){e._finish=this._finish,e._startPlayTime=this._startPlayTime,e._playEventIndex=this._playEventIndex,e._elapsedTime=this._elapsedTime,e._normalizedTime=this._normalizedTime,e._normalizedPlayTime=this._normalizedPlayTime,e._lastIsFront=this._lastIsFront}}class AnimatorControllerLayer{get defaultState(){return this._defaultState}set defaultState(e){this._defaultState=e}get avatarMask(){return this._avatarMask}set avatarMask(e){this._avatarMask=e}get defaultStateName(){return this._defaultState?this._defaultState.name:null}set defaultStateName(e){if(this._defaultState=this.getAnimatorState(e),null==this._defaultState)if(0==this._states.length)this._defaultStateNameCatch=e;else for(var t=this._states.length-1;t>=0;t--)if(this._states[t].name==e){this._defaultState=this._states[t];break}}get states(){return this._states}set states(e){if(this._states!==e){if(this._states.length>0){let t=this._states.filter((t=>-1==e.indexOf(t)));for(let e of t)this.removeState(e)}if(e.length>0){let t=e.filter((e=>-1==this._states.indexOf(e)));for(let e of t)this.addState(e)}this._states.length=0,this._states.push(...e)}}constructor(e){this._referenceCount=0,this._playType=-1,this._crossDuration=-1,this._crossMark=0,this._crossNodesOwnersCount=0,this._crossNodesOwners=[],this._crossNodesOwnersIndicesMap={},this._srcCrossClipNodeIndices=[],this._destCrossClipNodeIndices=[],this._states=[],this._playStateInfo=new AnimatorPlayState,this._crossPlayStateInfo=new AnimatorPlayState,this.blendingMode=AnimatorControllerLayer.BLENDINGMODE_OVERRIDE,this.defaultWeight=1,this.playOnWake=!0,this.enable=!0,this.name=e}_removeClip(e,t,a){var r=a._clip,i=e[t];if(e.splice(t,1),this._animator){var n=r._nodes,s=i._nodeOwners;r._removeReference();for(var o=0,l=n.count;o<l;o++)this._animator._removeKeyframeNodeOwner(s,n.getNodeByIndex(o))}}_getReferenceCount(){return this._referenceCount}_addReference(e=1){for(var t=0,a=this._states.length;t<a;t++)this._states[t]._addReference(e);this._referenceCount+=e}_removeReference(e=1){for(var t=0,a=this._states.length;t<a;t++)this._states[t]._removeReference(e);this._referenceCount-=e}_clearReference(){this._removeReference(-this._referenceCount)}getCurrentPlayState(){return this._playStateInfo}getAnimatorState(e){var t;for(let a=0;a<this._states.length;a++)if(this._states[a].name==e){t=this._states[a];break}return t||null}addState(e){var t=e.name;if(this.getAnimatorState(t))throw"AnimatorControllerLayer:this stat's name has exist.";this._states.push(e),t==this._defaultStateNameCatch&&(this._defaultState=e,this._defaultStateNameCatch=null),this._animator&&(e._clip&&e._clip._addReference(),this._animator._getOwnersByClip(e))}removeState(e){for(var t=this._states,a=-1,r=0,i=t.length;r<i;r++)if(t[r]===e){a=r;break}-1!==a&&this._removeClip(t,a,e)}destroy(){this._clearReference(),this._states=[],this._playStateInfo=null,this._crossPlayStateInfo=null,this._defaultState=null}cloneTo(e){var t=e;t.name=this.name,t.blendingMode=this.blendingMode,t.defaultWeight=this.defaultWeight,t.playOnWake=this.playOnWake,this.avatarMask&&(t.avatarMask=this._avatarMask.clone())}clone(){var e=new AnimatorControllerLayer(this.name);return this.cloneTo(e),e}}AnimatorControllerLayer.BLENDINGMODE_OVERRIDE=0,AnimatorControllerLayer.BLENDINGMODE_ADDTIVE=1;class AnimatorResource{static getAnimatorResource(e,a){return"simpleSkinnedMeshRenderer"===a?e.getComponent(SimpleSkinnedMeshRenderer):e.getComponent(t.ClassUtils.getClass(a))}}class AnimatorState extends t.EventDispatcher{get clip(){return this._clip}set clip(a){if(this._clip!==a){if(this._clip&&this._referenceCount>0&&this._clip._removeReference(this._referenceCount),a){var r=this._realtimeDatas,i=a._nodes,n=i.count;this._currentFrameIndices=new Int16Array(n),this._resetFrameIndices(),this._referenceCount>0&&a._addReference(this._referenceCount),this._realtimeDatas.length=n;for(var s=0;s<n;s++)switch(i.getNodeByIndex(s).type){case e.KeyFrameValueType.Float:break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:r[s]=new t.Vector3;break;case e.KeyFrameValueType.Rotation:r[s]=new t.Quaternion;break;case e.KeyFrameValueType.Vector2:r[s]=new t.Vector2;break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:r[s]=new t.Vector4;break;default:throw"AnimationClipParser04:unknown type."}}this._clip=a}}get islooping(){return 0!=this._isLooping?1==this._isLooping:this._clip.islooping}get transitions(){return this._transitions}set transitions(e){this._transitions=e}get soloTransitions(){return this._soloTransitions}set soloTransitions(e){this._soloTransitions=e}constructor(){super(),this._referenceCount=0,this._clip=null,this._nodeOwners=[],this._currentFrameIndices=null,this._isLooping=0,this._realtimeDatas=[],this._scripts=null,this._transitions=[],this._soloTransitions=[],this.speed=1,this.clipStart=0,this.clipEnd=1,this.cycleOffset=0}_eventStart(e,t){if(this.event(AnimatorState.EVENT_OnStateEnter),this._scripts)for(var a=0,r=this._scripts.length;a<r;a++)this._scripts[a].setPlayScriptInfo(e,t,this),this._scripts[a].onStateEnter()}_eventExit(){if(this.event(AnimatorState.EVENT_OnStateExit),this.curTransition=null,this._scripts)for(let e=0,t=this._scripts.length;e<t;e++)this._scripts[e].onStateExit()}_eventStateUpdate(e){if(this.event(AnimatorState.EVENT_OnStateUpdate,e),this._scripts)for(var t=0,a=this._scripts.length;t<a;t++)this._scripts[t].onStateUpdate(e)}_eventtransition(e,t){let a=this._soloTransitions.length;if(a>0){for(var r=0;r<a;r++)if(this._soloTransitions[r].check(e,t))return this._soloTransitions[r];return null}let i=this._transitions.length;for(r=0;r<i;r++)if(this._transitions[r].check(e,t))return this._transitions[r];return null}_getReferenceCount(){return this._referenceCount}_addReference(e=1){this._clip&&this._clip._addReference(e),this._referenceCount+=e}_removeReference(e=1){this._clip&&this._clip._removeReference(e),this._referenceCount-=e}_clearReference(){this._removeReference(-this._referenceCount)}_resetFrameIndices(){for(var e=0,t=this._currentFrameIndices.length;e<t;e++)this._currentFrameIndices[e]=-1}addScript(e){var t=new e;return this._scripts=this._scripts||[],this._scripts.push(t),t}getScript(e){if(this._scripts)for(var t=0,a=this._scripts.length;t<a;t++){var r=this._scripts[t];if(r instanceof e)return r}return null}getScripts(e){var t=null;if(this._scripts)for(var a=0,r=this._scripts.length;a<r;a++){var i=this._scripts[a];i instanceof e&&(t=t||[]).push(i)}return t}cloneTo(e){var t=e;t.name=this.name,t.speed=this.speed,t.clipStart=this.clipStart,t.clipEnd=this.clipEnd,t.clip=this._clip}clone(){var e=new AnimatorState;return this.cloneTo(e),e}}AnimatorState.EVENT_OnStateEnter="OnStartEnter",AnimatorState.EVENT_OnStateUpdate="OnStateUpdate",AnimatorState.EVENT_OnStateExit="OnStateExit";class AvatarMask{constructor(e){this._avatarPathMap=(null==e?void 0:e._avatarPathMap)||{}}getTransformActive(e){return this._avatarPathMap[e]}setTransformActive(e,t){this._avatarPathMap[e]=t}getAllTranfromPath(){return this._avatarPathMap}clone(){var e=new AvatarMask;return this.cloneTo(e),e}cloneTo(e){var t=e;for(var a in this._avatarPathMap)t.setTransformActive(a,this._avatarPathMap[a])}}class Animator extends t.Component{set controller(e){this._controller=e,this._controller&&this._controller.updateTo(this)}get controller(){return this._controller}get speed(){return this._speed}set speed(e){this._speed=e}set updateMode(e){this._updateMode=e}set lowUpdateDelty(e){this._lowUpdateDelty=e}get controllerLayerCount(){return this._controllerLayers.length}set animatorParams(e){this._animatorParams=e}get animatorParams(){return this._animatorParams}set sleep(e){this._finishSleep=e}get sleep(){return this._finishSleep}constructor(){super(),this._keyframeNodeOwners=[],this._updateMode=t.AnimatorUpdateMode.Normal,this._lowUpdateDelty=20,this._animatorParams={},this._linkAvatarSpritesData={},this._linkAvatarSprites=[],this._renderableSprites=[],this.cullingMode=Animator.CULLINGMODE_CULLCOMPLETELY,this._finishSleep=!1,this._controllerLayers=[],this._speed=1,this._keyframeNodeOwnerMap={},this._updateMark=0}_addKeyframeNodeOwner(e,t,a){var r=t._indexInList,i=t.fullPath,n=this._keyframeNodeOwnerMap[i];let s=!1;if(n)n.referenceCount++,e[r]=n;else{for(var o=a,l=0,h=t.propertyCount;l<h&&((o=o[t.getPropertyByIndex(l)])instanceof Material&&(s=!0),o);l++);(n=this._keyframeNodeOwnerMap[i]=new KeyframeNodeOwner).isMaterial=s,n.fullPath=i,n.indexInList=this._keyframeNodeOwners.length,n.referenceCount=1,n.propertyOwner=a,n.nodePath=t.nodePath,n.callbackFunData=t.callbackFunData,n.callParams=t.callParams,n.getCallbackNode();var c=t.propertyCount,d=[];for(l=0;l<c;l++)d[l]=t.getPropertyByIndex(l);if(n.property=d,n.type=t.type,o)if(0===t.type)n.defaultValue=o;else{var u=new o.constructor;o.cloneTo(u),n.defaultValue=u,n.value=new o.constructor,n.crossFixedValue=new o.constructor}this._keyframeNodeOwners.push(n),e[r]=n}}_removeKeyframeNodeOwner(e,t){var a=t.fullPath,r=this._keyframeNodeOwnerMap[a];r&&(r.referenceCount--,0===r.referenceCount&&(delete this._keyframeNodeOwnerMap[a],this._keyframeNodeOwners.splice(this._keyframeNodeOwners.indexOf(r),1)),e[t._indexInList]=null)}_getOwnersByClip(e){if(e._clip){var t=e._clip._nodes,a=t.count,r=e._nodeOwners;r.length=a;for(var i=0;i<a;i++){for(var n=t.getNodeByIndex(i),s=this.owner,o=0,l=n.ownerPathCount;o<l;o++){var h=n.getOwnerPathByIndex(o);if(""===h)break;if(!(s=s.getChildByName(h)))break}if(s){var c=n.propertyOwner;const e=s;c&&(s=s[c]),s||(s=AnimatorResource.getAnimatorResource(e,c)),s&&this._addKeyframeNodeOwner(r,n,s)}}}}_updatePlayer(e,t,a,r,i){var n=e._clip._duration*(e.clipEnd-e.clipStart),s=t._elapsedTime,o=s+a;t._lastElapsedTime=s,t._elapsedTime=o;var l=o/n;t._normalizedTime=l;var h=l%1;t._normalizedPlayTime=h<0?h+1:h,t._duration=n,!r&&o>=n&&(t._finish=!0,t._elapsedTime=n,t._normalizedPlayTime=1),!t._finish&&e._eventStateUpdate(t._normalizedPlayTime),this._applyTransition(e,i,e._eventtransition(t._normalizedPlayTime,this.animatorParams))}_applyTransition(e,t,a){a&&a!=e.curTransition&&(e.curTransition=a,this.crossFade(a.destState.name,a.transduration,t,a.transstartoffset))}_updateStateFinish(e,t){t._finish&&e._eventExit()}_eventScript(e,t,a,r,i=0){let n=this.owner.components;if(r){a+=i;for(let r=e.length;t<r;t++){let r=e[t];if(!(r.time<=a))break;if(r.time>=i)for(let e=0,t=n.length;e<t;e++){let t=n[e];if(t._isScript()){let e=t[r.eventName];e&&e.apply(t,r.params)}}}}else for(;t>=0;t--){let r=e[t];if(!(r.time>=a))break;for(let e=0,t=n.length;e<t;e++){let t=n[e];if(t._isScript()){let e=t[r.eventName];e&&e.apply(t,r.params)}}}return t}_updateEventScript(e,a){if(!this.owner._getBit(t.NodeFlags.HAS_SCRIPT))return;let r=e._clip,i=r._animationEvents,n=r._duration,s=a._elapsedTime,o=s%n,l=Math.abs(Math.floor(s/n)-Math.floor(a._lastElapsedTime/n)),h=a._elapsedTime>=a._lastElapsedTime;a._lastIsFront!==h&&(h?a._playEventIndex++:a._playEventIndex--,a._lastIsFront=h);let c=a._playEventIndex;if(h){let e=0;a.animatorState&&0!=a.animatorState.clipStart&&(e=a.animatorState._clip._duration*a.animatorState.clipStart);let t=this._eventScript(i,a._playEventIndex,l>0?n:o,!0,e);c===a._playEventIndex&&(a._playEventIndex=t);for(let t=0,a=l-1;t<a;t++)this._eventScript(i,0,n,!0,e);l>0&&o>0&&(a._playEventIndex=this._eventScript(i,0,o,!0,e))}else{let e=this._eventScript(i,a._playEventIndex,l>0?0:o,!1);c===a._playEventIndex&&(a._playEventIndex=e);let t=i.length-1;for(let e=0,a=l-1;e<a;e++)this._eventScript(i,t,0,!1);l>0&&o>0&&(a._playEventIndex=this._eventScript(i,t,o,!1))}}_updateClipDatas(e,t,a,r=null){var i=e._clip,n=i._duration,s=e.clipStart*n+a._normalizedPlayTime*a._duration,o=e._currentFrameIndices,l=a._elapsedTime>a._lastElapsedTime;i._evaluateClipDatasRealTime(i._nodes,s,o,t,l,e._realtimeDatas,r)}_applyFloat(e,t,a,r,i,n){if(t.updateMark===this._updateMark)if(a)e+=r*n;else{e=e+r*(n-e)}else if(i)e=a?t.defaultValue+n:n;else if(a)e=t.defaultValue+r*n;else{var s=t.defaultValue;e=s+r*(n-s)}return e}_applyVec2(e,t,a,r,i,n){if(!e)return null;if(t.updateMark===this._updateMark)if(a)e.x+=r*n.x,e.y+=r*n.y;else{var s=e;e.x=s.x+r*(n.x-s.x),e.y=s.y+r*(n.y-s.y)}else if(i)a?(e.x=t.defaultValue.x+n.x,e.y=t.defaultValue.y+n.y):n.cloneTo(e);else if(a)e.x=t.defaultValue.x+r*n.x,e.y=t.defaultValue.y+r*n.y;else{var o=t.defaultValue;e.x=o.x+r*(n.x-o.x),e.y=o.y+r*(n.y-o.y)}return e}_applyVec3(e,t,a,r,i,n){if(!e)return null;if(t.updateMark===this._updateMark)if(a)e.x+=r*n.x,e.y+=r*n.y,e.z+=r*n.z;else{var s=e;e.x=s.x+r*(n.x-s.x),e.y=s.y+r*(n.y-s.y),e.z=s.z+r*(n.z-s.z)}else if(i)a?(e.x=t.defaultValue.x+n.x,e.y=t.defaultValue.y+n.y,e.z=t.defaultValue.z+n.z):n.cloneTo(e);else if(a)e.x=t.defaultValue.x+r*n.x,e.y=t.defaultValue.y+r*n.y,e.z=t.defaultValue.z+r*n.z;else{var o=t.defaultValue;e.x=o.x+r*(n.x-o.x),e.y=o.y+r*(n.y-o.y),e.z=o.z+r*(n.z-o.z)}return e}_applyVec4(e,t,a,r,i,n){if(!e)return null;if(t.updateMark===this._updateMark)if(a)e.x+=r*n.x,e.y+=r*n.y,e.z+=r*n.z,e.w+=r*n.w;else{var s=e;e.x=s.x+r*(n.x-s.x),e.y=s.y+r*(n.y-s.y),e.z=s.z+r*(n.z-s.z),e.w=s.w+r*(n.w-s.w)}else if(i)a?(e.x=t.defaultValue.x+n.x,e.y=t.defaultValue.y+n.y,e.z=t.defaultValue.z+n.z,e.w=t.defaultValue.w+n.w):n.cloneTo(e);else if(a)e.x=t.defaultValue.x+r*n.x,e.y=t.defaultValue.y+r*n.y,e.z=t.defaultValue.z+r*n.z,e.w=t.defaultValue.w+r*n.w;else{var o=t.defaultValue;e.x=o.x+r*(n.x-o.x),e.y=o.y+r*(n.y-o.y),e.z=o.z+r*(n.z-o.z),e.w=o.w+r*(n.w-o.w)}return e}_applyColor(e,t,a,r,i,n){if(!e)return null;if(t.updateMark===this._updateMark)if(a)e.r+=r*n.x,e.g+=r*n.y,e.b+=r*n.z,e.a+=r*n.w;else{var s=e;e.r=s.r+r*(n.x-s.r),e.g=s.g+r*(n.y-s.g),e.b=s.b+r*(n.z-s.b),e.a=s.a+r*(n.w-s.a)}else if(i)a?(e.r=t.defaultValue.r+n.x,e.g=t.defaultValue.g+n.y,e.b=t.defaultValue.b+n.z,e.a=t.defaultValue.a+n.w):e.setValue(n.x,n.y,n.z,n.w);else if(a)e.r=t.defaultValue.r+r*n.x,e.g=t.defaultValue.g+r*n.y,e.b=t.defaultValue.b+r*n.z,e.a=t.defaultValue.a+r*n.w;else{var o=t.defaultValue;e.r=o.r+r*(n.x-o.r),e.g=o.g+r*(n.y-o.g),e.b=o.b+r*(n.z-o.b),e.a=o.a+r*(n.w-o.a)}return e}_applyPositionAndRotationEuler(e,t,a,r,i,n){if(e.updateMark===this._updateMark)if(t)n.x+=a*i.x,n.y+=a*i.y,n.z+=a*i.z;else{var s=n.x,o=n.y,l=n.z;n.x=s+a*(i.x-s),n.y=o+a*(i.y-o),n.z=l+a*(i.z-l)}else if(r)if(t){var h=e.defaultValue;n.x=h.x+i.x,n.y=h.y+i.y,n.z=h.z+i.z}else n.x=i.x,n.y=i.y,n.z=i.z;else if(h=e.defaultValue,t)n.x=h.x+a*i.x,n.y=h.y+a*i.y,n.z=h.z+a*i.z;else{var c=h.x,d=h.y,u=h.z;n.x=c+a*(i.x-c),n.y=d+a*(i.y-d),n.z=u+a*(i.z-u)}}_applyRotation(e,a,r,i,n,s){if(e.updateMark===this._updateMark)if(a){var o=Animator._tempQuaternion1;Utils3D.quaternionWeight(n,r,o),o.normalize(o),t.Quaternion.multiply(s,o,s)}else t.Quaternion.lerp(s,n,r,s);else if(i)if(a){var l=e.defaultValue;t.Quaternion.multiply(l,n,s)}else s.x=n.x,s.y=n.y,s.z=n.z,s.w=n.w;else l=e.defaultValue,a?(o=Animator._tempQuaternion1,Utils3D.quaternionWeight(n,r,o),o.normalize(o),t.Quaternion.multiply(l,o,s)):t.Quaternion.lerp(l,n,r,s)}_applyScale(e,t,a,r,i,n){if(e.updateMark===this._updateMark)if(t){var s=Animator._tempVector31;Utils3D.scaleWeight(i,a,s),n.x=n.x*s.x,n.y=n.y*s.y,n.z=n.z*s.z}else Utils3D.scaleBlend(n,i,a,n);else if(r)if(t){var o=e.defaultValue;n.x=o.x*i.x,n.y=o.y*i.y,n.z=o.z*i.z}else n.x=i.x,n.y=i.y,n.z=i.z;else o=e.defaultValue,t?(s=Animator._tempVector31,Utils3D.scaleWeight(i,a,s),n.x=o.x*s.x,n.y=o.y*s.y,n.z=o.z*s.z):Utils3D.scaleBlend(o,i,a,n)}_applyCrossData(a,r,i,n,s,o,l){var h=a.propertyOwner;if(h){switch(a.type){case e.KeyFrameValueType.Float:for(var c=a.property,d=c.length-1,u=0;u<d&&(h=h[c[u]]);u++);var _=s+l*(o-s);a.value=_;const x=c[d];a.isMaterial?h&&h.setFloat(x,this._applyFloat(h.getFloat(x),a,r,i,n,_)):h&&(h[x]=this._applyFloat(h[x],a,r,i,n,_)),a.callbackFun&&a.animatorDataSetCallBack();break;case e.KeyFrameValueType.Position:var m=h.localPosition,f=a.value,S=s.x,g=s.y,p=s.z;f.x=S+l*(o.x-S),f.y=g+l*(o.y-g),f.z=p+l*(o.z-p),this._applyPositionAndRotationEuler(a,r,i,n,f,m),h.localPosition=m;break;case e.KeyFrameValueType.Rotation:var D=h.localRotation,T=a.value;t.Quaternion.lerp(s,o,l,T),this._applyRotation(a,r,i,n,T,D),h.localRotation=D;break;case e.KeyFrameValueType.Scale:var E=h.localScale,C=a.value;Utils3D.scaleBlend(s,o,l,C),this._applyScale(a,r,i,n,C,E),h.localScale=E;break;case e.KeyFrameValueType.RotationEuler:var A=h.localRotationEuler,R=a.value;S=s.x,g=s.y,p=s.z,R.x=S+l*(o.x-S),R.y=g+l*(o.y-g),R.z=p+l*(o.z-p),this._applyPositionAndRotationEuler(a,r,i,n,R,A),h.localRotationEuler=A;case e.KeyFrameValueType.Color:case e.KeyFrameValueType.Vector2:case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Vector3:}a.updateMark=this._updateMark}}_setClipDatasToNode(t,a,r,i,n=null){for(var s=t._realtimeDatas,o=t._clip._nodes,l=t._nodeOwners,h=0,c=o.count;h<c;h++){var d=l[h];if(d){var u=o.getNodeByIndex(h);if(n.avatarMask&&!n.avatarMask.getTransformActive(u.nodePath))continue;var _=d.propertyOwner;let t;if(_){switch(d.type){case e.KeyFrameValueType.Float:for(var m=(T=d.property).length-1,f=0;f<m&&(_=_[T[f]]);f++);let n=T[m];d.isMaterial?_&&_.setFloat(n,this._applyFloat(0,d,a,r,i,s[h])):(_&&(_[n]=this._applyFloat(_[n],d,a,r,i,s[h])),d.callbackFun&&d.animatorDataSetCallBack());break;case e.KeyFrameValueType.Position:var S=_.localPosition;this._applyPositionAndRotationEuler(d,a,r,i,s[h],S),_.localPosition=S;break;case e.KeyFrameValueType.Rotation:var g=_.localRotation;this._applyRotation(d,a,r,i,s[h],g),_.localRotation=g;break;case e.KeyFrameValueType.Scale:var p=_.localScale;this._applyScale(d,a,r,i,s[h],p),_.localScale=p;break;case e.KeyFrameValueType.RotationEuler:var D=_.localRotationEuler;this._applyPositionAndRotationEuler(d,a,r,i,s[h],D),_.localRotationEuler=D;break;case e.KeyFrameValueType.Vector2:for(m=(T=d.property).length-1,f=0;f<m&&(_=_[T[f]]);f++);t=T[m],d.isMaterial?_&&_.getVector2(t)&&_.setVector2(t,this._applyVec2(_.getVector2(t),d,a,r,i,s[h])):(_&&(_[t]=this._applyVec2(_[t],d,a,r,i,s[h])),d.callbackFun&&d.animatorDataSetCallBack());break;case e.KeyFrameValueType.Vector3:for(m=(T=d.property).length-1,f=0;f<m&&(_=_[T[f]]);f++);t=T[m],d.isMaterial?_&&_.getVector3(t)&&_.setVector3(t,this._applyVec3(_.getVector3(t),d,a,r,i,s[h])):(_&&(_[t]=this._applyVec3(_[t],d,a,r,i,s[h])),d.callbackFun&&d.animatorDataSetCallBack());break;case e.KeyFrameValueType.Vector4:for(m=(T=d.property).length-1,f=0;f<m&&(_=_[T[f]]);f++);t=T[m],d.isMaterial?_&&_.getVector4(t)&&_.setVector4(t,this._applyVec4(_.getVector4(t),d,a,r,i,s[h])):(_&&(_[t]=this._applyVec4(_[t],d,a,r,i,s[h])),d.callbackFun&&d.animatorDataSetCallBack());break;case e.KeyFrameValueType.Color:var T;for(m=(T=d.property).length-1,f=0;f<m&&(_=_[T[f]]);f++);t=T[m],d.isMaterial?_&&_.getColor(t)&&_.setColor(t,this._applyColor(_.getColor(t),d,a,r,i,s[h])):(_&&(_[t]=this._applyColor(_[t],d,a,r,i,s[h])),d.callbackFun&&d.animatorDataSetCallBack())}d.updateMark=this._updateMark}}}}_setCrossClipDatasToNode(e,t,a,r,i){for(var n=e._crossNodesOwners,s=e._crossNodesOwnersCount,o=e.blendingMode!==AnimatorControllerLayer.BLENDINGMODE_OVERRIDE,l=e.defaultWeight,h=a._realtimeDatas,c=e._destCrossClipNodeIndices,d=a._nodeOwners,u=t._realtimeDatas,_=e._srcCrossClipNodeIndices,m=t._nodeOwners,f=0;f<s;f++){var S=n[f];if(S){var g=_[f],p=c[f],D=-1!==g?u[g]:d[p].defaultValue,T=-1!==p?h[p]:m[g].defaultValue;T||(T=m[g].defaultValue),e.avatarMask&&!e.avatarMask.getTransformActive(S.nodePath)||this._applyCrossData(S,o,l,i,D,T,r)}}}_setFixedCrossClipDatasToNode(e,t,a,r){for(var i=e._crossNodesOwners,n=e._crossNodesOwnersCount,s=e.blendingMode!==AnimatorControllerLayer.BLENDINGMODE_OVERRIDE,o=e.defaultWeight,l=t._realtimeDatas,h=e._destCrossClipNodeIndices,c=0;c<n;c++){var d=i[c];if(d){var u,_=h[c],m=d.crossFixedValue;u=-1!=_&&l[_]?l[_]:d.defaultValue,this._applyCrossData(d,s,o,r,m,u,a)}}}_revertDefaultKeyframeNodes(t){for(var a=t._nodeOwners,r=0,i=a.length;r<i;r++){var n=a[r];if(n){var s=n.propertyOwner;let t;if(s)switch(n.type){case e.KeyFrameValueType.Float:for(var o=(f=n.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);let a=f[o];n.isMaterial?s&&s.setFloat(a,n.defaultValue):(s&&(s[a]=n.defaultValue),n.callbackFun&&n.animatorDataSetCallBack());break;case e.KeyFrameValueType.Position:var h=s.localPosition,c=n.defaultValue;h.x=c.x,h.y=c.y,h.z=c.z,s.localPosition=h;break;case e.KeyFrameValueType.Rotation:var d=s.localRotation,u=n.defaultValue;d.x=u.x,d.y=u.y,d.z=u.z,d.w=u.w,s.localRotation=d;break;case e.KeyFrameValueType.Scale:var _=s.localScale;c=n.defaultValue,_.x=c.x,_.y=c.y,_.z=c.z,s.localScale=_;break;case e.KeyFrameValueType.RotationEuler:var m=s.localRotationEuler;c=n.defaultValue,m.x=c.x,m.y=c.y,m.z=c.z,s.localRotationEuler=m;break;case e.KeyFrameValueType.Vector2:for(o=(f=n.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o],n.isMaterial?s&&s.getVector2(t)&&s.setVector2(t,n.defaultValue):(s&&(s[t]=n.defaultValue),n.callbackFun&&n.animatorDataSetCallBack());break;case e.KeyFrameValueType.Vector3:for(o=(f=n.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o],n.isMaterial?s&&s.getVector3(t)&&s.setVector3(t,n.defaultValue):(s&&(s[t]=n.defaultValue),n.callbackFun&&n.animatorDataSetCallBack());break;case e.KeyFrameValueType.Vector4:for(o=(f=n.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o],n.isMaterial?s&&s.getVector3(t)&&s.setVector3(t,n.defaultValue):(s&&(s[t]=n.defaultValue),n.callbackFun&&n.animatorDataSetCallBack());break;case e.KeyFrameValueType.Color:var f;for(o=(f=n.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o];let r=Animator._tempColor;r.r=n.defaultValue.x,r.g=n.defaultValue.y,r.b=n.defaultValue.z,r.a=n.defaultValue.w,n.isMaterial?s&&s.getColor(t)&&s.setColor(t,r):(s&&(s[t]=r),n.callbackFun&&n.animatorDataSetCallBack());break;default:throw"Animator:unknown type."}}}}onAfterDeserialize(){let e=this.controllerLayers;if(e&&null==this.controller){delete this.controllerLayers,this._controllerLayers.length=0;for(let t of e)this.addControllerLayer(t)}}_onEnable(){for(let e=0,t=this._controllerLayers.length;e<t;e++)if(this._controllerLayers[e].playOnWake){let t=this.getDefaultState(e);t&&this.play(null,e,t.cycleOffset)}}_onDestroy(){for(let e=0,t=this._controllerLayers.length;e<t;e++)this._controllerLayers[e]._removeReference()}_applyUpdateMode(e){let a;switch(this._updateMode){case t.AnimatorUpdateMode.Normal:a=e;break;case t.AnimatorUpdateMode.LowFrame:a=t.Stat.loopCount%this._lowUpdateDelty==0?e*this._lowUpdateDelty:0;break;case t.AnimatorUpdateMode.UnScaleTime:a=0}return a}_handleSpriteOwnersBySprite(e,t,a){for(var r=0,i=this._controllerLayers.length;r<i;r++)if(this._controllerLayers[r].enable)for(var n=this._controllerLayers[r]._states,s=0,o=n.length;s<o;s++){var l=n[s],h=l._clip,c=t.join("/"),d=h._nodesMap[c];if(d)for(var u=l._nodeOwners,_=0,m=d.length;_<m;_++)e?this._addKeyframeNodeOwner(u,d[_],a):this._removeKeyframeNodeOwner(u,d[_])}}_parse(e){for(var a=e.playOnWake,r=e.layers,i=0;i<r.length;i++){var n=r[i],s=new AnimatorControllerLayer(n.name);s.defaultWeight=0===i?1:n.weight;var o=n.blendingMode;o&&(s.blendingMode=o),this.addControllerLayer(s);for(var l=n.states,h=0,c=l.length;h<c;h++){var d=l[h],u=d.clipPath;if(u){var _,m=d.name;if(_=t.Loader.getRes(u)){var f=new AnimatorState;f.name=m,f.clip=_,d.speed&&(f.speed=d.speed),s.addState(f),0===h&&(this.getControllerLayer(i).defaultState=f)}}}void 0!==a&&(s.playOnWake=a);let e=n.avatarMask;if(e){let t=new AvatarMask;for(var S in s.avatarMask=t,e)t.setTransformActive(S,e[S])}}var g=e.cullingMode;void 0!==g&&(this.cullingMode=g)}onUpdate(){let e=this.owner._scene.timer._delta/1e3;var a,r;if((e=this._applyUpdateMode(e),0!==this._speed&&0!==e)&&t.Stat.enableAnimatorUpdate)for(this._updateMark++,a=0,r=this._controllerLayers.length;a<r;a++){var i=this._controllerLayers[a];if(i.enable){var n=i._playStateInfo;if(!this.sleep||!n._finish||0!=i._playType){var s=i._crossPlayStateInfo;switch(c=i.blendingMode!==AnimatorControllerLayer.BLENDINGMODE_OVERRIDE,i._playType){case 0:var o=n.currentState;o._clip;var l=this._speed*o.speed,h=n._finish;h||this._updatePlayer(o,n,e*l,o.islooping,a);var c=i.blendingMode!==AnimatorControllerLayer.BLENDINGMODE_OVERRIDE;this._updateClipDatas(o,c,n,i.avatarMask),this._setClipDatasToNode(o,c,i.defaultWeight,0===a,i),h||this._updateEventScript(o,n),h||this._updateStateFinish(o,n);break;case 1:(o=n.currentState)._clip;var d=i._crossPlayState,u=d._clip,_=i._crossDuration,m=s._startPlayTime,f=u._duration-m,S=_>f?f/_:1,g=this._speed*d.speed;this._updatePlayer(d,s,e*S*g,u.islooping,a);var p=(s._elapsedTime-m)/S/_,D=!1;p>=1?(this._updateClipDatas(d,c,s,i.avatarMask),this._setClipDatasToNode(d,c,i.defaultWeight,0===a,i),i._playType=0,n.currentState=d,s._cloneTo(n)):(n._finish||(l=this._speed*o.speed,D=!0,this._updatePlayer(o,n,e*l,o.islooping,a),this._updateClipDatas(o,c,n,i.avatarMask)),this._updateClipDatas(d,c,s,i.avatarMask),this._setCrossClipDatasToNode(i,o,d,p,0===a)),this._updateEventScript(o,n),this._updateEventScript(d,s),this._updateStateFinish(d,s),D&&this._updateStateFinish(n.currentState,n);break;case 2:u=(d=i._crossPlayState)._clip,_=i._crossDuration,m=s._startPlayTime,S=_>(f=u._duration-m)?f/_:1,g=this._speed*d.speed,this._updatePlayer(d,s,e*S*g,d.islooping,a),(p=(s._elapsedTime-m)/S/_)>=1?(this._updateClipDatas(d,c,s,i.avatarMask),this._setClipDatasToNode(d,c,1,0===a,i),i._playType=0,n.currentState=d,s._cloneTo(n)):(this._updateClipDatas(d,c,s,i.avatarMask),this._setFixedCrossClipDatasToNode(i,d,p,0===a)),this._updateEventScript(d,s),this._updateStateFinish(d,s)}}}}}_cloneTo(e){var t=e;t.cullingMode=this.cullingMode;for(var a=0,r=this._controllerLayers.length;a<r;a++){var i=this._controllerLayers[a];t.addControllerLayer(i.clone());for(var n=i._states,s=0,o=n.length;s<o;s++){var l=n[s].clone(),h=t.getControllerLayer(a);h.addState(l),0==s&&(h.defaultState=l)}}t.controller=this._controller}getDefaultState(e=0){return this._controllerLayers[e].defaultState}addState(e,t=0){this._controllerLayers[t].addState(e),console.warn("Animator:this function is discard,please use animatorControllerLayer.addState() instead.")}removeState(e,t=0){this._controllerLayers[t].removeState(e),console.warn("Animator:this function is discard,please use animatorControllerLayer.removeState() instead.")}addControllerLayer(e){this._controllerLayers.push(e),e._animator=this,e._addReference();for(var t=e._states,a=0,r=t.length;a<r;a++)this._getOwnersByClip(t[a])}getControllerLayer(e=0){return this._controllerLayers[e]}play(e=null,t=0,a=Number.NEGATIVE_INFINITY){var r=this._controllerLayers[t];if(r){var i=r.defaultState;if(!e&&!i)throw new Error("Animator:must have default clip value,please set clip property.");var n=r._playStateInfo,s=n.currentState,o=e?r.getAnimatorState(e):i;if(!o._clip)return;var l=o._clip._duration,h=o._clip._duration*(o.clipEnd-o.clipStart);s!==o?(a!==Number.NEGATIVE_INFINITY?n._resetPlayState(l*a,h):n._resetPlayState(0,h),null!==s&&s!==o&&this._revertDefaultKeyframeNodes(s),r._playType=0,n.currentState=o):a!==Number.NEGATIVE_INFINITY&&(n._resetPlayState(l*a,h),r._playType=0),o._scripts,o._eventStart(this,t)}else console.warn("Invalid layerIndex "+t+".");this.owner._scene&&this.onUpdate()}crossFade(e,t,a=0,r=Number.NEGATIVE_INFINITY){var i=this._controllerLayers[a];if(i){var n=i.getAnimatorState(e);if(n){var s=i._playType;if(-1===s)return void this.play(e,a,r);var o=i._crossPlayStateInfo,l=i._crossNodesOwners,h=i._crossNodesOwnersIndicesMap,c=i._playStateInfo.currentState,d=n._nodeOwners,u=i._destCrossClipNodeIndices,_=n._clip,m=_._nodes,f=_._nodesDic,S=0;switch(s){case 0:var g=c._nodeOwners,p=i._srcCrossClipNodeIndices,D=c._clip,T=D._nodes,E=D._nodesDic;i._playType=1;var C=++i._crossMark;S=i._crossNodesOwnersCount=0;for(var A=0,R=T.count;A<R;A++){var x=T.getNodeByIndex(A),M=x._indexInList,y=g[M];if(y){var I=x.fullPath;p[S]=M;var v=f[I];u[S]=v?v._indexInList:-1,h[I]=C,l[S]=y,S++}}for(A=0,R=m.count;A<R;A++){var L=(v=m.getNodeByIndex(A))._indexInList,b=d[L];if(b){var P=v.fullPath;E[P]||(p[S]=-1,u[S]=L,h[P]=C,l[S]=b,S++)}}break;case 1:case 2:for(i._playType=2,A=0,R=l.length;A<R;A++){var O=l[A];O.saveCrossFixedValue(),v=f[O.fullPath],u[A]=v?v._indexInList:-1}for(S=i._crossNodesOwnersCount,C=i._crossMark,A=0,R=m.count;A<R;A++)(b=d[L=(v=m.getNodeByIndex(A))._indexInList])&&h[P=v.fullPath]!==C&&(u[S]=L,h[P]=C,O=d[L],l[S]=O,O.saveCrossFixedValue(),S++)}i._crossNodesOwnersCount=S,i._crossPlayState=n,i._crossDuration=c._clip._duration*t,r!==Number.NEGATIVE_INFINITY?o._resetPlayState(_._duration*r,i._crossDuration):o._resetPlayState(0,i._crossDuration),n._eventStart(this,a)}else console.warn("Invalid name "+a+".")}else console.warn("Invalid layerIndex "+a+".")}setParamsTrigger(e){let a;a="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[a]=!0}setParamsNumber(e,a){let r;r="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[r]=a}setParamsBool(e,a){let r;r="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[r]=a}getParamsvalue(e){let a;return a="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[a]}getCurrentAnimatorPlayState(e=0){return this._controllerLayers[e]._playStateInfo}}Animator._tempVector31=new t.Vector3,Animator._tempColor=new t.Color,Animator._tempQuaternion1=new t.Quaternion,Animator.CULLINGMODE_ALWAYSANIMATE=0,Animator.CULLINGMODE_CULLCOMPLETELY=2;class PostProcessRenderContext{constructor(){this.source=null,this.indirectTarget=null,this.destination=null,this.camera=null,this.compositeShaderData=null,this.command=null,this.deferredReleaseTextures=[]}createRTByContextReleaseTexture(e,t,a,r,i=!1,n=1,s=!1,o=!1){let l=this.deferredReleaseTextures.length;for(let h=0;h<l;h++){let c=this.deferredReleaseTextures[h];if(c.width==e&&c.height==t&&c.colorFormat==a&&c.depthStencilFormat==r&&c._generateMipmap==i&&c.multiSamples==n&&c.generateDepthTexture==s&&c._gammaSpace==o){c._inPool=!1;let e=this.deferredReleaseTextures[l-1];return this.deferredReleaseTextures[h]=e,this.deferredReleaseTextures.length-=1,c}}return null}}class PostProcessEffect{constructor(){this._active=!0,this._singleton=!0}set singleton(e){this._singleton=e}get singleton(){return this._singleton}get active(){return this._active}set active(e){this._active=e}getCameraDepthTextureModeFlag(){return 0}effectInit(e){}release(e){}render(e){}}var L,b="#define SHADER_NAME BlitVS\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    gl_Position = vec4(u_OffsetScale.x * 2.0 - 1.0 + (a_PositionTexcoord.x + 1.0) * u_OffsetScale.z, (1.0 - ((u_OffsetScale.y * 2.0 - 1.0 + (-a_PositionTexcoord.y + 1.0) * u_OffsetScale.w) + 1.0) / 2.0) * 2.0 - 1.0, 0.0, 1.0);\n\n    v_Texcoord0 = a_PositionTexcoord.zw;\n}";e.ToneMappingType=void 0,(L=e.ToneMappingType||(e.ToneMappingType={}))[L.None=0]="None",L[L.ACES=1]="ACES";class ColorGradEffect extends PostProcessEffect{static init(){ColorGradEffect.__initDefine__();let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4},r=t.Shader3D.add("blitLUTShader"),i=new t.SubShader(e,a);r.addSubShader(i);let n=i.addShaderPass(b,'#define SHADER_NAME BlitLUTFS\n\n#include "Color.glsl";\n\n#include "ColorGrading.glsl";\n#include "LUT.glsl";\n\nuniform sampler2D u_Lut;\nuniform vec4 u_LutParams;//w postExposure\n\n    #ifdef CUSTOMLUT\nuniform sampler2D u_CustomLut;\nuniform vec4 u_CustomLutParams;\n    #endif // CUSTOMLUT\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    gl_FragColor = texture2D(u_MainTex, v_Texcoord0);\n    vec3 color = gl_FragColor.rgb;\n    // gl_FragColor.rgb = applyLut(color, 1.0, u_Lut, u_LutParams);\n    color *= u_LutParams.w;\n    color = applyLut(u_Lut, linearToLogC(color), u_LutParams.xyz);\n\n    #ifdef CUSTOMLUT\n\n    float contrib = u_CustomLutParams.w;\n    vec3 gamma = linearToGamma(color);\n    vec3 userLut = applyLut(u_CustomLut, gamma, u_CustomLutParams);\n    gamma = mix(gamma, userLut, contrib);\n    color = gammaToLinear(gamma);\n\n    #endif // CUSTOMLUT\n\n    gl_FragColor.rgb = color;\n\n    #ifdef GAMMAOUT\n        gl_FragColor = linearToGamma(gl_FragColor);\n    #endif\n}\n');n.renderState.depthTest=t.RenderState.DEPTHTEST_ALWAYS,n.renderState.depthWrite=!1,n.renderState.cull=t.RenderState.CULL_NONE,n.renderState.blend=t.RenderState.BLEND_DISABLE}static __initDefine__(){ColorGradEffect.SHADERDEFINE_ACES=t.Shader3D.getDefineByName("ACES"),ColorGradEffect.SHADERDEFINE_CUSTOMLUT=t.Shader3D.getDefineByName("CUSTOMLUT"),ColorGradEffect.SHADERVALUE_LUT=t.Shader3D.propertyNameToID("u_Lut"),ColorGradEffect.SHADERVALUE_LUTPARAMS=t.Shader3D.propertyNameToID("u_LutParams"),ColorGradEffect.SHADERVALUE_CUSTOMLUT=t.Shader3D.propertyNameToID("u_CustomLut"),ColorGradEffect.SHADERVALUE_CUSTOMLUTPARAMS=t.Shader3D.propertyNameToID("u_CustomLutParams")}get toneMapping(){return this._toneMapping}set toneMapping(e){e!=this._toneMapping&&(this._needBuildLUT=!0,this._toneMapping=e)}get enableSplitTone(){return this._enableSplitTone}set enableSplitTone(e){this._enableSplitTone=e,this._needBuildLUT=!0}get splitShadow(){return this._splitShadow}set splitShadow(e){this._needBuildLUT=!0,e.cloneTo(this._splitShadow)}get splithighlights(){return this._splithighlights}set splithighlights(e){this._splithighlights.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._splithighlights))}get splitBalance(){return this._splitBalance}set splitBalance(e){this._needBuildLUT=!0,this._splitBalance=e}get enableSMH(){return this._enableSMH}set enableSMH(e){this._needBuildLUT=!0,this._enableSMH=e}get shadows(){return this._shadows}set shadows(e){this._shadows.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._shadows))}get midtones(){return this._midtones}set midtones(e){this._midtones.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._midtones))}get highlights(){return this._highlights}set highlights(e){this._highlights.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._highlights))}get shadowLimitStart(){return this._limits.x}set shadowLimitStart(e){this._needBuildLUT=!0,this._limits.x=Math.min(e,this.shadowLimitEnd)}get shadowLimitEnd(){return this._limits.y}set shadowLimitEnd(e){this._needBuildLUT=!0,this._limits.y=Math.max(e,this.shadowLimitStart)}get highLightLimitStart(){return this._limits.z}set highLightLimitStart(e){this._needBuildLUT=!0,this._limits.z=Math.min(e,this.highLightLimitEnd)}get highLightLimitEnd(){return this._limits.w}set highLightLimitEnd(e){this._needBuildLUT=!0,this._limits.w=Math.max(this.highLightLimitStart,e)}get enableLiftGammaGain(){return this._enableLiftGammaGain}set enableLiftGammaGain(e){this._needBuildLUT=!0,this._enableLiftGammaGain=e}get lift(){return this._lift}set lift(e){this.lift.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._lift))}get gamma(){return this._gamma}set gamma(e){this._gamma.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._gamma))}get gain(){return this._gain}set gain(e){this._gain.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._gain))}_StandardIlluminantY(e){return 2.87*e-3*e*e-.27509507}_CIExyToLMS(e,a){let r=1*e/a,i=1*(1-e-a)/a,n=.7328*r+.4296-.1624*i,s=-.7036*r+1.6975+.0061*i,o=.003*r+.0136+.9834*i;return new t.Vector3(n,s,o)}_ColorBalanceToLMSCoeffs(e,a){let r=e/65,i=a/65,n=.31271-r*(r<0?.1:.05),s=this._StandardIlluminantY(n)+.05*i,o=new t.Vector3(.949237,1.03542,1.08728),l=this._CIExyToLMS(n,s);this._balance.set(o.x/l.x,o.y/l.y,o.z/l.z)}get enableBalance(){return this._enableBalance}set enableBalance(e){this._needBuildLUT=!0,this._enableBalance=e}get tint(){return this._tint}set tint(e){this._needBuildLUT=!0,this._tint=e,this._ColorBalanceToLMSCoeffs(this._temperature,this._tint)}get temperature(){return this._temperature}set temperature(e){this._needBuildLUT=!0,this._temperature=e,this._ColorBalanceToLMSCoeffs(this._temperature,this._tint)}get enableColorAdjust(){return this._enableColorAdjust}set enableColorAdjust(e){this._needBuildLUT=!0,this._enableColorAdjust=e}get postExposure(){return this._postExposure}set postExposure(e){this._postExposure=e}get contrast(){return this._contrast}set contrast(e){this._needBuildLUT=!0,this._contrast=e}get colorFilter(){return this._colorFilter}set colorFilter(e){this._needBuildLUT=!0,e.cloneTo(this._colorFilter)}get HueShift(){return this._HueShift}set HueShift(e){this._needBuildLUT=!0,this._HueShift=e}get saturation(){return this._saturation}set saturation(e){this._needBuildLUT=!0,this._saturation=e}constructor(){super(),this._needBuildLUT=!1,this._lutBuilderMat=new Material,this._lutSize=32,this._enableSplitTone=!1,this._splitShadow=new t.Vector3(.5,.5,.5),this._splitBalance=0,this._splithighlights=new t.Vector3(.5,.5,.5),this._u_SplitShadow=new t.Vector4(0,0,0),this._enableSMH=!1,this._shadows=new t.Vector3(1,1,1),this._midtones=new t.Vector3(1,1,1),this._highlights=new t.Vector3(1,1,1),this._limits=new t.Vector4(0,.33,.55,1),this._enableLiftGammaGain=!1,this._lift=new t.Vector3(0,0,0),this._gamma=new t.Vector3(1,1,1),this._gain=new t.Vector3(1,1,1),this._enableBalance=!1,this._balance=new t.Vector3,this._tint=0,this._temperature=0,this._enableColorAdjust=!1,this._postExposure=1,this._contrast=1,this._colorFilter=new t.Color(1,1,1),this._HueShift=0,this._saturation=1,this._HueSatCon=new t.Vector4(0,1,1,0),this.default_balance=new t.Vector3(1,1,1),this.default_splitShadow=new t.Vector4(.5,.5,.5,0),this.default_splithighlights=new t.Vector3(.5,.5,.5),this.default_shadow=new t.Vector3(1,1,1),this.default_midtones=new t.Vector3(1,1,1),this.default_highlight=new t.Vector3(1,1,1),this.default_limint=new t.Vector4(0,.3,.55,1),this.default_lift=new t.Vector3(0,0,0),this.default_gamma=new t.Vector3(1,1,1),this.default_gain=new t.Vector3(1,1,1),this.default_ColorFilter=new t.Color(1,1,1,1),this.default_HueSatCon=new t.Vector4(0,1,1,0),this.singleton=!0,this.active=!0,this._needBuildLUT=!0,this._toneMapping=e.ToneMappingType.None,this._blitlutParams=new t.Vector4,this._lutShaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this.lutSize=32,this._lutCommond=new CommandBuffer,this._lutBuilderMat=new Material}get lutSize(){return this._lutSize}set lutSize(e){e>32||(this._lutSize=e,this._lutTex&&this._lutTex.destroy(),this._lutTex=new t.RenderTexture(this._lutSize*this._lutSize,this._lutSize,t.RenderTargetFormat.R16G16B16A16,null,!1,1,!1,!1),this._lutTex.anisoLevel=1,this._lutTex.wrapModeU=t.WrapMode.Clamp,this._lutTex.wrapModeV=t.WrapMode.Clamp,this._lutTex.filterMode=t.FilterMode.Bilinear)}_buildLUT(){if(!this._needBuildLUT)return;let a=this.lutSize,r=this.lutSize*this.lutSize,i=new t.Vector4(a,.5/r,.5/a,a/(a-1));this._lutBuilderMat.setVector4("u_LutParams",i),this.enableBalance?(this._ColorBalanceToLMSCoeffs(this.temperature,this.tint),this._lutBuilderMat.setVector3("u_ColorBalance",this._balance)):this._lutBuilderMat.setVector3("u_ColorBalance",this.default_balance),this.enableSplitTone?(this._u_SplitShadow.setValue(this._splitShadow.x,this._splitShadow.y,this._splitShadow.z,this.splitBalance),this._lutBuilderMat.setVector4("u_SplitShadows",this._u_SplitShadow),this._lutBuilderMat.setVector3("u_Splithighlights",this._splithighlights)):(this._lutBuilderMat.setVector4("u_SplitShadows",this.default_splitShadow),this._lutBuilderMat.setVector3("u_Splithighlights",this.default_splithighlights)),this.enableSMH?(this._lutBuilderMat.setVector3("u_Shadows",this._shadows),this._lutBuilderMat.setVector3("u_Midtones",this._midtones),this._lutBuilderMat.setVector3("u_Highlights",this._highlights),this._lutBuilderMat.setVector4("u_Limits",this._limits)):(this._lutBuilderMat.setVector3("u_Shadows",this.default_shadow),this._lutBuilderMat.setVector3("u_Midtones",this.default_midtones),this._lutBuilderMat.setVector3("u_Highlights",this.default_highlight),this._lutBuilderMat.setVector4("u_Limits",this.default_limint)),this._enableLiftGammaGain?(this._lutBuilderMat.setVector3("u_Lift",this._lift),this._lutBuilderMat.setVector3("u_Gamma",this._gamma),this._lutBuilderMat.setVector3("u_Gain",this._gain)):(this._lutBuilderMat.setVector3("u_Lift",this.default_lift),this._lutBuilderMat.setVector3("u_Gamma",this.default_gamma),this._lutBuilderMat.setVector3("u_Gain",this.default_gain)),this.enableColorAdjust?(this._HueSatCon.setValue(this._HueShift,this.saturation,this._contrast,0),this._lutBuilderMat.setColor("u_ColorFilter",this._colorFilter),this._lutBuilderMat.setVector4("u_HueSatCon",this._HueSatCon)):(this._lutBuilderMat.setColor("u_ColorFilter",this.default_ColorFilter),this._lutBuilderMat.setVector4("u_HueSatCon",this.default_HueSatCon)),this._toneMapping==e.ToneMappingType.ACES?this._lutBuilderMat.addDefine(ColorGradEffect.SHADERDEFINE_ACES):this._lutBuilderMat.removeDefine(ColorGradEffect.SHADERDEFINE_ACES),this._lutCommond.blitScreenQuadByMaterial(t.Texture2D.whiteTexture,this._lutTex,null,this._lutBuilderMat),this._lutCommond.context=RenderContext3D._instance,this._lutCommond._apply(),this._lutCommond.clear()}effectInit(e){super.effectInit(e),this._lutBuilderMat.setShaderName("LUTBuilder"),this._LUTShader=t.Shader3D.find("blitLUTShader"),e._enableColorGrad=!0,e._ColorGradEffect=this}release(e){super.release(e),e._enableColorGrad=!1,e._ColorGradEffect=null}render(e){let t=e.command,a=e.indirectTarget;this._blitlutParams.setValue(1/this._lutTex.width,1/this._lutTex.height,this._lutTex.height-1,this.enableColorAdjust?this._postExposure:1),this._lutBuilderMat.removeDefine(ColorGradEffect.SHADERDEFINE_CUSTOMLUT),this._lutShaderData.setTexture(ColorGradEffect.SHADERVALUE_LUT,this._lutTex),this._lutShaderData.setVector(ColorGradEffect.SHADERVALUE_LUTPARAMS,this._blitlutParams),t.blitScreenTriangle(a,e.destination,null,this._LUTShader,this._lutShaderData)}}class PostProcess{static __init__(){PostProcess.SHADERDEFINE_BLOOM_LOW=t.Shader3D.getDefineByName("BLOOM_LOW"),PostProcess.SHADERDEFINE_BLOOM=t.Shader3D.getDefineByName("BLOOM"),PostProcess.SHADERDEFINE_FINALPASS=t.Shader3D.getDefineByName("FINALPASS"),PostProcess.SHADERVALUE_MAINTEX=t.Shader3D.propertyNameToID("u_MainTex"),PostProcess.SHADERVALUE_BLOOMTEX=t.Shader3D.propertyNameToID("u_BloomTex"),PostProcess.SHADERVALUE_AUTOEXPOSURETEX=t.Shader3D.propertyNameToID("u_AutoExposureTex"),PostProcess.SHADERVALUE_BLOOM_DIRTTEX=t.Shader3D.propertyNameToID("u_Bloom_DirtTex"),PostProcess.SHADERVALUE_BLOOMTEX_TEXELSIZE=t.Shader3D.propertyNameToID("u_BloomTex_TexelSize"),PostProcess.SHADERVALUE_BLOOM_DIRTTILEOFFSET=t.Shader3D.propertyNameToID("u_Bloom_DirtTileOffset"),PostProcess.SHADERVALUE_BLOOM_SETTINGS=t.Shader3D.propertyNameToID("u_Bloom_Settings"),PostProcess.SHADERVALUE_BLOOM_COLOR=t.Shader3D.propertyNameToID("u_Bloom_Color")}recaculateCameraFlag(){this._depthtextureFlag=e.DepthTextureMode.None;let t=this.effects.length;for(let e=0;e<t;e++)this._depthtextureFlag|=this.effects[e].getCameraDepthTextureModeFlag()}constructor(){this._compositeShader=t.Shader3D.find("PostProcessComposite"),this._compositeShaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._effects=[],this._enable=!0,this._enableColorGrad=!1,this._context=null,this._context=new PostProcessRenderContext,this._context.compositeShaderData=this._compositeShaderData,this._context.command=new CommandBuffer,this._depthtextureFlag=0}get enable(){return this._enable}set enable(e){this._enable=e}set commandContext(e){this._context.command._context=e}set effects(e){this.clearEffect();for(var t=0,a=e.length;t<a;t++)e[t]&&this.addEffect(e[t])}get effects(){return this._effects}get cameraDepthTextureMode(){return this._depthtextureFlag}_init(e){this._context.camera=e,this._context.command._camera=e}_render(e){this._init(e);var a=(e=this._context.camera).viewport,r=e._internalRenderTexture,i=t.RenderTexture.createFromPool(r.width,r.height,e._getRenderTextureFormat(),t.RenderTargetFormat.None,!1,1,!1,!0),n=[t.RenderTexture.createFromPool(r.width,r.height,e._getRenderTextureFormat(),t.RenderTargetFormat.None,!1,1,!1,!0),t.RenderTexture.createFromPool(r.width,r.height,e._getRenderTextureFormat(),t.RenderTargetFormat.None,!1,1,!1,!0)];this._context.command.clear(),this._context.source=i,this._context.indirectTarget=i,this._context.destination=2==this._effects.length?n[0]:r,this._context.compositeShaderData.clearDefine(),this._context.command.blitScreenTriangle(r,i),this._context.compositeShaderData.setTexture(PostProcess.SHADERVALUE_AUTOEXPOSURETEX,t.Texture2D.whiteTexture),this._enableColorGrad&&this._ColorGradEffect._buildLUT();for(var s=0,o=this._effects.length;s<o;s++)this._effects[s].active?(this._effects[s].render(this._context),s==o-2?(this._context.indirectTarget=this._context.destination,this._context.destination=r):(this._context.indirectTarget=this._context.destination,this._context.destination=n[(s+1)%2])):s==o-1&&this._context.command.blitScreenTriangle(this._context.indirectTarget,r);this._compositeShaderData.addDefine(PostProcess.SHADERDEFINE_FINALPASS);var l=e._offScreenRenderTexture,h=l||null;this._context.destination=h;var c=e._getCanvasWidth(),d=e._getCanvasHeight();h&&(e._screenOffsetScale.setValue(a.x/c,(d-a.y-a.height)/d,a.width/c,a.height/d),this._context.command.blitScreenTriangle(r,h,e._screenOffsetScale,null,this._compositeShaderData,0)),t.RenderTexture.recoverToPool(i),t.RenderTexture.recoverToPool(n[0]),t.RenderTexture.recoverToPool(n[1]);var u=this._context.deferredReleaseTextures;for(s=0,o=u.length;s<o;s++)t.RenderTexture.recoverToPool(u[s]);u.length=0}addEffect(e){e.singleton&&this.getEffect(e.constructor)?console.error("无法增加已经存在的Effect"):(!this._enableColorGrad||e instanceof ColorGradEffect?this._effects.push(e):this._effects.splice(this._effects.length-1,0,e),this.recaculateCameraFlag(),e.effectInit(this))}getEffect(e){let t=this._effects.length;for(let a=0;a<t;a++){let t=this._effects[a];if(t instanceof e)return t}return null}removeEffect(e){var t=this._effects.indexOf(e);-1!==t&&(this._effects.splice(t,1),e.release(this),this.recaculateCameraFlag())}clearEffect(){let e=this.effects.length-1;for(;e>=0;e--)this.removeEffect(this.effects[e])}_applyPostProcessCommandBuffers(){this._context.command._apply()}}var P="#define SHADER_NAME BloomVS\nvarying vec2 v_Texcoord0;\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\nvoid main() {\n\tgl_Position = vec4(a_PositionTexcoord.xy, 0.0, 1.0);\n\tv_Texcoord0 = a_PositionTexcoord.zw;\n\tgl_Position = remapPositionZ(gl_Position);\n}";class BloomEffect extends PostProcessEffect{static init(){t.Shader3D.addInclude("StdLib.glsl","#define HALF_MAX       65504.0 // (2 - 2^-10) * 2^15\n\n#define FLT_EPSILON    1.192092896e-07 // Smallest positive number, such that 1.0 + FLT_EPSILON != 1.0\n\nmediump vec4 safeHDR(mediump vec4 c)\n{\n    return min(c, HALF_MAX);\n}\n\nfloat max3(float a, float b, float c)\n{\n    return max(max(a, b), c);\n}\n\nvec3 positivePow(vec3 base, vec3 power)\n{\n    return pow(max(abs(base), vec3(FLT_EPSILON, FLT_EPSILON, FLT_EPSILON)), power);\n}"),t.Shader3D.addInclude("Colors.glsl",'#include "StdLib.glsl";\n\n#define EPSILON 1.0e-4\n\n// Quadratic color thresholding\n// curve = (threshold - knee, knee * 2, 0.25 / knee)\nmediump vec4 quadraticThreshold(mediump vec4 color, mediump float threshold, mediump vec3 curve) {\n\t// Pixel brightness\n\tmediump float br = max3(color.r, color.g, color.b);\n\n\t// Under-threshold part: quadratic curve\n\tmediump float rq = clamp(br - curve.x, 0.0, curve.y);\n\trq = curve.z * rq * rq;\n\n\t// Combine and apply the brightness response curve.\n\tcolor *= max(rq, br - threshold) / max(br, EPSILON);\n\n\treturn color;\n}\n\n\n\n//\n// sRGB transfer functions\n// Fast path ref: http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1\n//\n// mediump vec3 sRGBToLinear(mediump vec3 c) {\n// \t#ifdef USE_VERY_FAST_SRGB\n// \t\treturn c * c;\n// \t#elif defined(USE_FAST_SRGB)\n// \t\treturn c * (c * (c * 0.305306011 + 0.682171111) + 0.012522878);\n// \t#else\n// \t\tmediump vec3 linearRGBLo = c / 12.92;\n// \t\tmediump vec3 power=vec3(2.4, 2.4, 2.4);\n// \t\tmediump vec3 linearRGBHi = positivePow((c + 0.055) / 1.055, power);\n// \t\tmediump vec3 linearRGB =vec3((c.r<=0.04045) ? linearRGBLo.r : linearRGBHi.r,(c.g<=0.04045) ? linearRGBLo.g : linearRGBHi.g,(c.b<=0.04045) ? linearRGBLo.b : linearRGBHi.b);\n// \t\treturn linearRGB;\n// \t#endif\n// }\n\n// mediump vec4 sRGBToLinear(mediump vec4 c){\n//     return vec4(sRGBToLinear(c.rgb), c.a);\n// }\n\n\n\n// mediump vec3 linearToSRGB(mediump vec3 c) {\n// \t#ifdef USE_VERY_FAST_SRGB\n// \t\treturn sqrt(c);\n// \t#elif defined(USE_FAST_SRGB)\n// \t\treturn max(1.055 * PositivePow(c, 0.416666667) - 0.055, 0.0);\n// \t#else\n// \t\tmediump vec3 sRGBLo = c * 12.92;\n// \t\tmediump vec3 power=vec3(1.0 / 2.4, 1.0 / 2.4, 1.0 / 2.4);\n// \t\tmediump vec3 sRGBHi = (positivePow(c, power) * 1.055) - 0.055;\n// \t\tmediump vec3 sRGB =vec3((c.r<=0.0031308) ? sRGBLo.r : sRGBHi.r,(c.g<=0.0031308) ? sRGBLo.g : sRGBHi.g,(c.b<=0.0031308) ? sRGBLo.b : sRGBHi.b);\n// \t\treturn sRGB;\n// \t#endif\n// }\n\n// mediump vec4 linearToSRGB(mediump vec4 c){\n//     return vec4(linearToSRGB(c.rgb), c.a);\n// }'),t.Shader3D.addInclude("Sampling.glsl","// Better, temporally stable box filtering\n// [Jimenez14] http://goo.gl/eomGso\n// . . . . . . .\n// . A . B . C .\n// . . D . E . .\n// . F . G . H .\n// . . I . J . .\n// . K . L . M .\n// . . . . . . .\nmediump vec4 downsampleBox13Tap(sampler2D tex, vec2 uv, vec2 texelSize)\n{\n    mediump vec4 A = texture2D(tex, uv + texelSize * vec2(-1.0, -1.0));\n    mediump vec4 B = texture2D(tex, uv + texelSize * vec2( 0.0, -1.0));\n    mediump vec4 C = texture2D(tex, uv + texelSize * vec2( 1.0, -1.0));\n    mediump vec4 D = texture2D(tex, uv + texelSize * vec2(-0.5, -0.5));\n    mediump vec4 E = texture2D(tex, uv + texelSize * vec2( 0.5, -0.5));\n    mediump vec4 F = texture2D(tex, uv + texelSize * vec2(-1.0,  0.0));\n    mediump vec4 G = texture2D(tex, uv);\n    mediump vec4 H = texture2D(tex, uv + texelSize * vec2( 1.0,  0.0));\n    mediump vec4 I = texture2D(tex, uv + texelSize * vec2(-0.5,  0.5));\n    mediump vec4 J = texture2D(tex, uv + texelSize * vec2( 0.5,  0.5));\n    mediump vec4 K = texture2D(tex, uv + texelSize * vec2(-1.0,  1.0));\n    mediump vec4 L = texture2D(tex, uv + texelSize * vec2( 0.0,  1.0));\n    mediump vec4 M = texture2D(tex, uv + texelSize * vec2( 1.0,  1.0));\n\n\tmediump vec2 scale= vec2(0.5, 0.125);\n    mediump vec2 div = (1.0 / 4.0) * scale;\n\n    mediump vec4 o = (D + E + I + J) * div.x;\n    o += (A + B + G + F) * div.y;\n    o += (B + C + H + G) * div.y;\n    o += (F + G + L + K) * div.y;\n    o += (G + H + M + L) * div.y;\n\n    return o;\n}\n\n// Standard box filtering\nmediump vec4 downsampleBox4Tap(sampler2D tex, vec2 uv, vec2 texelSize)\n{\n    vec4 d = texelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);\n\n    mediump vec4 s =  texture2D(tex, uv + d.xy);\n    s += texture2D(tex, uv + d.zy);\n    s += texture2D(tex, uv + d.xw);\n    s += texture2D(tex, uv + d.zw);\n\n    return s * (1.0 / 4.0);\n}\n\n// 9-tap bilinear upsampler (tent filter)\n// . . . . . . .\n// . 1 . 2 . 1 .\n// . . . . . . .\n// . 2 . 4 . 2 .\n// . . . . . . .\n// . 1 . 2 . 1 .\n// . . . . . . .\nmediump vec4 upsampleTent(sampler2D tex, vec2 uv, vec2 texelSize, vec4 sampleScale)\n{\n    vec4 d = texelSize.xyxy * vec4(1.0, 1.0, -1.0, 0.0) * sampleScale;\n\n    mediump vec4 s =  texture2D(tex, uv - d.xy);\n    s += texture2D(tex, uv - d.wy) * 2.0;\n    s += texture2D(tex, uv - d.zy);\n\n    s += texture2D(tex, uv + d.zw) * 2.0;\n    s += texture2D(tex, uv) * 4.0;\n    s += texture2D(tex,\tuv + d.xw) * 2.0;\n\n    s += texture2D(tex, uv + d.zy);\n    s += texture2D(tex, uv + d.wy) * 2.0;\n    s += texture2D(tex, uv + d.xy);\n\n    return s * (1.0 / 16.0);\n}\n\n// Standard box filtering\nmediump vec4 upsampleBox(sampler2D tex, vec2 uv, vec2 texelSize, vec4 sampleScale)\n{\n    vec4 d = texelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0) * 0.5 * sampleScale;\n\n    mediump vec4 s =  texture2D(tex, uv + d.xy);\n    s += texture2D(tex, uv + d.zy);\n    s += texture2D(tex, uv + d.xw);\n    s += texture2D(tex, uv + d.zw);\n\n    return s * (1.0 / 4.0);\n}");var e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_AutoExposureTex:t.ShaderDataType.Texture2D,u_Threshold:t.ShaderDataType.Vector4,u_Params:t.ShaderDataType.Vector4,u_BloomTex:t.ShaderDataType.Texture2D,u_SampleScale:t.ShaderDataType.Float},r=t.Shader3D.add("PostProcessBloom"),i=new t.SubShader(e,a);r.addSubShader(i);var n=i.addShaderPass(P,'#define SHADER_NAME BloomPreFilter13FS\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 prefilter(mediump vec4 color, vec2 uv) {\n\tmediump float autoExposure = texture2D(u_AutoExposureTex, uv).r;\n\tcolor *= autoExposure;\n\tcolor = min(vec4(u_Params.x), color); // clamp to max\n\tcolor = quadraticThreshold(color, u_Threshold.x, u_Threshold.yzw);\n\treturn color;\n}\n\nvoid fragPrefilter13() {\n\tmediump vec4 color = downsampleBox13Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = prefilter(safeHDR(color), v_Texcoord0);\n}\n\nvoid main() {\n\tfragPrefilter13();\n}'),s=n.renderState;(s=n.renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,i=new t.SubShader(e,a),r.addSubShader(i),(s=(n=i.addShaderPass(P,'#define SHADER_NAME BloomPreFilter4FS\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 prefilter(mediump vec4 color, vec2 uv) {\n\tmediump float autoExposure = texture2D(u_AutoExposureTex, uv).r;\n\tcolor *= autoExposure;\n\tcolor = min(vec4(u_Params.x), color); // clamp to max\n\tcolor = quadraticThreshold(color, u_Threshold.x, u_Threshold.yzw);\n\treturn color;\n}\n\nvoid fragPrefilter4() {\n\tmediump vec4 color = downsampleBox4Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = prefilter(safeHDR(color), v_Texcoord0);\n}\n\nvoid main() {\n\tfragPrefilter4();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,i=new t.SubShader(e,a),r.addSubShader(i),(s=(n=i.addShaderPass(P,'#define SHADER_NAME BloomDownSample13FS\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid fragDownsample13() {\n\tmediump vec4 color = downsampleBox13Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = color;\n}\n\nvoid main() {\n\tfragDownsample13();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,i=new t.SubShader(e,a),r.addSubShader(i),(s=(n=i.addShaderPass(P,'#define SHADER_NAME BloomDownSample4FS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid fragDownsample4() {\n\tmediump vec4 color = downsampleBox4Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = color;\n}\n\nvoid main() {\n\tfragDownsample4();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,i=new t.SubShader(e,a),r.addSubShader(i),(s=(n=i.addShaderPass(P,'#define SHADER_NAME BloomUpSampleTentFS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 combine(mediump vec4 bloom, vec2 uv) {\n\tmediump vec4 color = texture2D(u_BloomTex, uv);\n\treturn bloom + color;\n}\n\nvoid fragUpsampleTent() {\n\tmediump vec4 bloom = upsampleTent(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy, vec4(u_SampleScale));\n\tgl_FragColor = combine(bloom, v_Texcoord0);\n}\n\nvoid main() {\n\tfragUpsampleTent();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,i=new t.SubShader(e,a),r.addSubShader(i),(s=(n=i.addShaderPass(P,'#define SHADER_NAME BloomUpSampleBoxFS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 combine(mediump vec4 bloom, vec2 uv) {\n\tmediump vec4 color = texture2D(u_BloomTex, uv);\n\treturn bloom + color;\n}\n\nvoid fragUpsampleBox() {\n\tmediump vec4 bloom = upsampleBox(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy, vec4(u_SampleScale));\n\tgl_FragColor = combine(bloom, v_Texcoord0);\n}\n\nvoid main() {\n\tfragUpsampleBox();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,BloomEffect.CompositeInit(),BloomEffect.__initDefine__()}static CompositeInit(){let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_MainTex:t.ShaderDataType.Texture2D,u_BloomTex:t.ShaderDataType.Texture2D,u_AutoExposureTex:t.ShaderDataType.Texture2D,u_Bloom_DirtTex:t.ShaderDataType.Texture2D,u_BloomTex_TexelSize:t.ShaderDataType.Vector4,u_Bloom_DirtTileOffset:t.ShaderDataType.Vector4,u_Bloom_Settings:t.ShaderDataType.Vector3,u_Bloom_Color:t.ShaderDataType.Vector3},r=t.Shader3D.add("PostProcessComposite"),i=new t.SubShader(e,a);r.addSubShader(i);let n=i.addShaderPass("#define SHADER_NAME CompositeVS\nvarying vec2 v_Texcoord0;\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\nvoid main() {\n\tgl_Position = vec4(a_PositionTexcoord.xy, 0.0, 1.0);\n\tv_Texcoord0 = a_PositionTexcoord.zw;\n\tgl_Position = remapPositionZ(gl_Position);\n}",'#define SHADER_NAME CompositeFS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid main() {\n\tmediump float autoExposure = texture2D(u_AutoExposureTex, v_Texcoord0).r;\n\tmediump vec4 color=vec4(0.0);\n\tcolor = texture2D(u_MainTex, v_Texcoord0);\n\t\n\t//color = sRGBToLinear(color);\n\tcolor.rgb *= autoExposure;\n\t\n\t#if defined(BLOOM)||defined(BLOOM_LOW)\n\t\t#ifdef BLOOM\n\t\t\tmediump vec4 bloom = upsampleTent(u_BloomTex, v_Texcoord0, u_BloomTex_TexelSize.xy, vec4(u_Bloom_Settings.x));\n\t\t#else\n\t\t\tmediump vec4 bloom = upsampleBox(u_BloomTex, v_Texcoord0, u_BloomTex_TexelSize.xy, vec4(u_Bloom_Settings.x));\n\t\t#endif\n\n\t\t// UVs should be Distort(uv * u_Bloom_DirtTileOffset.xy + u_Bloom_DirtTileOffset.zw)\n\t\t// but considering we use a cover-style scale on the dirt texture the difference\n\t\t// isn\'t massive so we chose to save a few ALUs here instead in case lens distortion\n\t\t// is active\n\t\tmediump vec4 dirt =vec4(texture2D(u_Bloom_DirtTex, v_Texcoord0 * u_Bloom_DirtTileOffset.xy + u_Bloom_DirtTileOffset.zw).rgb, 0.0);\n\n\t\t// Additive bloom (artist friendly)\n\t\tbloom *= u_Bloom_Settings.y;\n\t\tdirt *= u_Bloom_Settings.z;\n\t\tmediump vec4 bloomColor=vec4(u_Bloom_Color, 1.0);\n\t\tcolor += bloom * bloomColor;\n\t\tcolor += dirt * bloom;\n\t#endif\n\t\n\tmediump vec4 finalColor = color;\n\t//finalColor = linearToSRGB(finalColor);\n\t//finalColor.rgb = Dither(finalColor.rgb, v_Texcoord0);//TODO:抖动\n\tgl_FragColor = finalColor;\n}').renderState;n.depthTest=t.RenderState.DEPTHTEST_ALWAYS,n.depthWrite=!1,n.cull=t.RenderState.CULL_NONE,n.blend=t.RenderState.BLEND_DISABLE}static __initDefine__(){BloomEffect.SHADERVALUE_MAINTEX=t.Shader3D.propertyNameToID("u_MainTex"),BloomEffect.SHADERVALUE_AUTOEXPOSURETEX=t.Shader3D.propertyNameToID("u_AutoExposureTex"),BloomEffect.SHADERVALUE_SAMPLESCALE=t.Shader3D.propertyNameToID("u_SampleScale"),BloomEffect.SHADERVALUE_THRESHOLD=t.Shader3D.propertyNameToID("u_Threshold"),BloomEffect.SHADERVALUE_PARAMS=t.Shader3D.propertyNameToID("u_Params"),BloomEffect.SHADERVALUE_BLOOMTEX=t.Shader3D.propertyNameToID("u_BloomTex")}get clamp(){return this._clamp}set clamp(e){this._clamp=e}get color(){return this._color}set color(e){this._color=e}get fastMode(){return this._fastMode}set fastMode(e){this._fastMode=e}get dirtTexture(){return this._dirtTexture}set dirtTexture(e){this._dirtTexture&&this._dirtTexture._removeReference(1),this._dirtTexture=e,this._dirtTexture&&this._dirtTexture._addReference(1)}get intensity(){return this._intensity}set intensity(e){this._intensity=Math.max(e,0)}get threshold(){return this._threshold}set threshold(e){this._threshold=Math.max(e,0)}get softKnee(){return this._softKnee}set softKnee(e){this._softKnee=Math.min(Math.max(e,0),1)}get diffusion(){return this._diffusion}set diffusion(e){this._diffusion=Math.min(Math.max(e,1),10)}get anamorphicRatio(){return this._anamorphicRatio}set anamorphicRatio(e){this._anamorphicRatio=Math.min(Math.max(e,-1),1)}get dirtIntensity(){return this._dirtIntensity}set dirtIntensity(e){this._dirtIntensity=Math.max(e,0)}constructor(){super(),this._shader=null,this._shaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._linearColor=new t.Color,this._bloomTextureTexelSize=new t.Vector4,this._shaderThreshold=new t.Vector4,this._shaderParams=new t.Vector4,this._pyramid=null,this._intensity=0,this._threshold=1,this._softKnee=.5,this._diffusion=7,this._anamorphicRatio=0,this._dirtIntensity=0,this._shaderSetting=new t.Vector4,this._dirtTileOffset=new t.Vector4,this._fastMode=!1,this._dirtTexture=null,this.singleton=!0,this.active=!0,this.intensity=1,this.threshold=1,this.softKnee=.5,this.clamp=65472,this.diffusion=7,this.anamorphicRatio=0,this.color=new t.Color(1,1,1,1)}effectInit(e){super.effectInit(e),this._shader=t.Shader3D.find("PostProcessBloom"),this._pyramid=new Array(2*BloomEffect.MAXPYRAMIDSIZE)}getCameraDepthTextureModeFlag(){return 0}release(e){super.release(e),this._shader=null,this._pyramid=[]}render(e){var a=e.command,r=e.camera.viewport;this._shaderData.setTexture(BloomEffect.SHADERVALUE_AUTOEXPOSURETEX,t.Texture2D.whiteTexture);var i,n=this._anamorphicRatio,s=n<0?-n:0,o=n>0?n:0,l=Math.floor(r.width/(2-s)),h=Math.floor(r.height/(2-o)),c=Math.max(l,h);i=Math.log2(c)+this._diffusion-10;var d=Math.floor(i),u=Math.min(Math.max(d,1),BloomEffect.MAXPYRAMIDSIZE),_=.5+i-d;this._shaderData.setNumber(BloomEffect.SHADERVALUE_SAMPLESCALE,_);var m=t.Color.gammaToLinearSpace(this.threshold),f=m*this._softKnee+1e-5;this._shaderThreshold.setValue(m,m-f,2*f,.25/f),this._shaderData.setVector(BloomEffect.SHADERVALUE_THRESHOLD,this._shaderThreshold);var S=t.Color.gammaToLinearSpace(this.clamp);this._shaderParams.setValue(S,0,0,0),this._shaderData.setVector(BloomEffect.SHADERVALUE_PARAMS,this._shaderParams);for(var g=this.fastMode?1:0,p=e.indirectTarget,D=0;D<u;D++){var T=2*D,E=T+1,C=0==D?BloomEffect.SUBSHADER_PREFILTER13+g:BloomEffect.SUBSHADER_DOWNSAMPLE13+g,A=t.RenderTexture.createFromPool(l,h,t.RenderTargetFormat.R8G8B8A8,t.RenderTargetFormat.None,!1,1,!1,!0);if(A.filterMode=t.FilterMode.Bilinear,this._pyramid[T]=A,D!==u-1){var R=t.RenderTexture.createFromPool(l,h,t.RenderTargetFormat.R8G8B8A8,t.RenderTargetFormat.None,!1,1,!1,!0);R.filterMode=t.FilterMode.Bilinear,this._pyramid[E]=R}a.blitScreenTriangle(p,A,null,this._shader,this._shaderData,C),p=A,l=Math.max(Math.floor(l/2),1),h=Math.max(Math.floor(h/2),1)}var x=this._pyramid[2*(u-1)];for(D=u-2;D>=0;D--)E=(T=2*D)+1,A=this._pyramid[T],R=this._pyramid[E],a.setShaderDataTexture(this._shaderData,BloomEffect.SHADERVALUE_BLOOMTEX,A),a.blitScreenTriangle(x,R,null,this._shader,this._shaderData,BloomEffect.SUBSHADER_UPSAMPLETENT+g),x=R;var M=this._linearColor;this.color.toLinear(M);var y=Math.pow(2,this._intensity/10)-1,I=this._shaderSetting;this._shaderSetting.setValue(_,y,this._dirtIntensity,u);var v=this._dirtTexture?this._dirtTexture:t.Texture2D.blackTexture,L=v.width/v.height,b=r.width/r.height,P=this._dirtTileOffset;L>b?P.setValue(b/L,1,.5*(1-P.x),0):L<b&&P.setValue(1,L/b,0,.5*(1-P.y));var O=e.compositeShaderData;this.fastMode?O.addDefine(PostProcess.SHADERDEFINE_BLOOM_LOW):O.addDefine(PostProcess.SHADERDEFINE_BLOOM),this._bloomTextureTexelSize.setValue(1/x.width,1/x.height,x.width,x.height),O.setVector(PostProcess.SHADERVALUE_BLOOM_DIRTTILEOFFSET,P),O.setVector(PostProcess.SHADERVALUE_BLOOM_SETTINGS,I),O.setVector(PostProcess.SHADERVALUE_BLOOM_COLOR,new t.Vector4(M.r,M.g,M.b,M.a)),O.setTexture(PostProcess.SHADERVALUE_BLOOM_DIRTTEX,v),O.setTexture(PostProcess.SHADERVALUE_BLOOMTEX,x),O.setVector(PostProcess.SHADERVALUE_BLOOMTEX_TEXELSIZE,this._bloomTextureTexelSize);let B=t.Shader3D.find("PostProcessComposite");for(a.blitScreenTriangle(e.indirectTarget,e.destination,e.camera._screenOffsetScale,B,O,0),D=0;D<u;D++)E=(T=2*D)+1,t.RenderTexture.recoverToPool(this._pyramid[T]),0!==D&&D!==u-1&&t.RenderTexture.recoverToPool(this._pyramid[E]);e.deferredReleaseTextures.push(x)}}BloomEffect.SUBSHADER_PREFILTER13=0,BloomEffect.SUBSHADER_PREFILTER4=1,BloomEffect.SUBSHADER_DOWNSAMPLE13=2,BloomEffect.SUBSHADER_DOWNSAMPLE4=3,BloomEffect.SUBSHADER_UPSAMPLETENT=4,BloomEffect.SUBSHADER_UPSAMPLEBOX=5,BloomEffect.MAXPYRAMIDSIZE=16;var O="#define SHADER_NAME SCREENVS\n\nvarying vec2 v_Texcoord0;\n\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\n\nvoid main() {\t\n\tgl_Position = vec4(u_OffsetScale.x*2.0-1.0+(a_PositionTexcoord.x+1.0)*u_OffsetScale.z,(1.0-((u_OffsetScale.y*2.0-1.0+(-a_PositionTexcoord.y+1.0)*u_OffsetScale.w)+1.0)/2.0)*2.0-1.0, 0.0, 1.0);\t\n\tv_Texcoord0 = a_PositionTexcoord.zw;\n\tgl_Position = remapPositionZ(gl_Position);\n}\n";class GaussianDoF extends PostProcessEffect{static init(){GaussianDoF.SOURCESIZE=t.Shader3D.propertyNameToID("u_SourceSize"),GaussianDoF.ZBUFFERPARAMS=t.Shader3D.propertyNameToID("u_ZBufferParams"),GaussianDoF.COCPARAMS=t.Shader3D.propertyNameToID("u_CoCParams"),GaussianDoF.DEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthTexture"),GaussianDoF.NORMALDEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthNormalTexture"),GaussianDoF.FULLCOCTEXTURE=t.Shader3D.propertyNameToID("u_FullCoCTex"),GaussianDoF.DOWNSAMPLESCALE=t.Shader3D.propertyNameToID("u_DownSampleScale"),GaussianDoF.BLURCOCTEXTURE=t.Shader3D.propertyNameToID("u_BlurCoCTex"),GaussianDoF.SHADERDEFINE_DEPTHNORMALTEXTURE=t.Shader3D.getDefineByName("CAMERA_NORMALDEPTH");let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_OffsetScale:t.ShaderDataType.Vector4,u_ZBufferParams:t.ShaderDataType.Vector4,u_CoCParams:t.ShaderDataType.Vector3,u_FullCoCTex:t.ShaderDataType.Texture2D,u_SourceSize:t.ShaderDataType.Vector4,u_DownSampleScale:t.ShaderDataType.Vector4,u_BlurCoCTex:t.ShaderDataType.Texture2D},r=t.Shader3D.add("GaussianDoF"),i=new t.SubShader(e,a);r.addSubShader(i),i.addShaderPass(O,"#define SHADER_NAME COCFS\n\n#ifdef CAMERA_NORMALDEPTH\n    uniform sampler2D u_CameraDepthNormalTexture;\n#else\n    uniform sampler2D u_CameraDepthTexture;\n#endif\n\n\nvarying vec2 v_Texcoord0;\n\n// Z buffer to linear 0..1 depth\nfloat Linear01Depth(float z,vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.x * z + zbufferParams.y);\n}\n\n// Z buffer to linear depth\nfloat LinearEyeDepth(float z,vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.z * z + zbufferParams.w);\n}\n\nfloat DecodeFloatRG(vec2 enc )\n{\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\n    return dot( enc, kDecodeDot );\n}\n\nvoid DecodeDepthNormal(vec4 enc, out float depth)\n{\n    depth = DecodeFloatRG (enc.zw);\n}\n\nvoid main() {\n\n    #ifdef CAMERA_NORMALDEPTH\n        vec4 depthNormal = texture2D(u_CameraDepthNormalTexture, v_Texcoord0);\n        float depth = 0.0;\n        DecodeDepthNormal(depthNormal, depth);\n        depth = ((1.0 / depth) - u_ZBufferParams.y) * (1.0 / u_ZBufferParams.x);\n    #else\n        float depth = texture2D(u_CameraDepthTexture, v_Texcoord0).x;\n    #endif\n\n    depth = LinearEyeDepth(depth, u_ZBufferParams);\n    float farStart = u_CoCParams.x;\n    float farEnd = u_CoCParams.y;\n\n    float coc = (depth - farStart) / (farEnd - farStart);\n    coc = clamp(coc, 0.0, 1.0);\n    gl_FragColor = vec4(coc, coc, coc, 1.0);\n}\n");let n=new t.SubShader(e,a);r.addSubShader(n),n.addShaderPass(O,"#define SHADER_NAME PrefilterFS\n\nvarying vec2 v_Texcoord0;\n\nconst int kCount = 5;\nvec2 kTaps[5];\n\nvoid main () {\n\n    kTaps[0] = vec2( 0.0,  0.0);\n    kTaps[1] = vec2( 0.9, -0.4);\n    kTaps[2] = vec2(-0.9,  0.4);\n    kTaps[3] = vec2( 0.4,  0.9);\n    kTaps[4] = vec2(-0.4, -0.9);\n\n    vec3 colorAcc = vec3(0.0);\n    float farCoCAcc = 0.0;\n    for (int i = 0; i < kCount; i++) {\n        vec2 uv = u_MainTex_TexelSize.xy * kTaps[i] + v_Texcoord0;\n        vec3 tapColor = texture2D(u_MainTex, uv).rgb;\n        float coc = texture2D(u_FullCoCTex, uv).r;\n\n        colorAcc += tapColor * coc;\n        farCoCAcc += coc;\n    }\n    vec3 color = colorAcc * (1.0 / float(kCount));\n    float farCoC = farCoCAcc * (1.0 / float(kCount));\n\n    // float farCoC = texture2D(u_FullCoCTex, v_Texcoord0).x;\n    // vec3 color = texture2D(u_MainTex, v_Texcoord0).rgb;\n    // color *= farCoC;\n\n    gl_FragColor = vec4(color, farCoC);\n}");let s=new t.SubShader(e,a);r.addSubShader(s),s.addShaderPass(O,"#define SHADER_NAME BlurHFS\n\nvarying vec2 v_Texcoord0;\n\nconst int kTapCount = 3;\nfloat kOffsets[3];\nfloat kCoeffs[3];\n\nvec4 Blur(vec2 dir, float premultiply) {\n\n    kOffsets[0] = -1.33333333;\n    kOffsets[1] = 0.00000000;\n    kOffsets[2] = 1.33333333;\n\n    kCoeffs[0] = 0.35294118;\n    kCoeffs[1] = 0.29411765;\n    kCoeffs[2] = 0.3529411;\n\n    vec2 uv = v_Texcoord0;\n    // ivec2 positionSS = ivec2(u_SourceSize.xy * uv);\n\n    vec4 halfColor = texture2D(u_MainTex, uv);\n    float samp0CoC = halfColor.a;\n\n    float maxRadius = u_CoCParams.z;\n    vec2 offset = u_SourceSize.zw  * dir * samp0CoC * maxRadius;\n\n    vec4 acc = vec4(0.0);\n\n    for (int i = 0; i < kTapCount; i++) {\n        vec2 sampCoord = uv + kOffsets[i] * offset;\n        vec4 samp = texture2D(u_MainTex, sampCoord);\n        float sampCoC = samp.a;\n        vec3 sampColor = samp.rgb;\n\n        float weight = clamp(1.0 - (samp0CoC - sampCoC), 0.0, 1.0);\n        acc += vec4(sampColor, sampCoC) * kCoeffs[i] * weight;\n    }\n\n    acc.xyz /= acc.w + 1e-4;\n    return vec4(acc.xyz, samp0CoC);\n}\n\nvoid main() {\n    gl_FragColor = Blur(vec2(1.0, 0.0), 1.0);\n}");let o=new t.SubShader(e,a);r.addSubShader(o),o.addShaderPass(O,"#define SHADER_NAME BlurVFS\n\nvarying vec2 v_Texcoord0;\n\n// todo 3 & 5\nconst int kTapCount = 3;\nfloat kOffsets[3];\nfloat kCoeffs[3];\n\n\nvec4 Blur(vec2 dir, float premultiply) {\n\n    kOffsets[0] = -1.33333333;\n    kOffsets[1] = 0.00000000;\n    kOffsets[2] = 1.33333333;\n\n    kCoeffs[0] = 0.35294118;\n    kCoeffs[1] = 0.29411765;\n    kCoeffs[2] = 0.3529411;\n\n    vec2 uv = v_Texcoord0;\n    // ivec2 positionSS = ivec2(u_SourceSize.xy * uv);\n\n    vec4 halfColor = texture2D(u_MainTex, uv);\n    float samp0CoC = halfColor.a;\n\n    float maxRadius = u_CoCParams.z;\n    vec2 offset = u_SourceSize.zw * dir * samp0CoC * maxRadius;\n\n    vec4 acc = vec4(0.0);\n\n    for (int i = 0; i < kTapCount; i++) {\n        vec2 sampCoord = uv + kOffsets[i] * offset;\n        vec4 samp = texture2D(u_MainTex, sampCoord);\n        float sampCoC = samp.w;\n        vec3 sampColor = samp.xyz;\n\n        float weight = clamp(1.0 - (samp0CoC - sampCoC), 0.0, 1.0);\n        acc += vec4(sampColor, 1.0) * kCoeffs[i] * weight;\n    }\n\n    acc.xyz /= acc.w + 1e-4;\n    return vec4(acc.xyz, 1.0);\n}\n\nvoid main() {\n    gl_FragColor = Blur(vec2(0.0, 1.0), 0.0);\n    // gl_FragColor = texture2D(u_MainTex, v_Texcoord0);\n}\n");let l=new t.SubShader(e,a);r.addSubShader(l),l.addShaderPass(O,"#define SHADER_NAME CompositeFS\n\nvarying vec2 v_Texcoord0;\n\nvoid main() {\n\n    vec3 baseColor = texture2D(u_MainTex, v_Texcoord0).rgb;\n    vec4 samplevalue = texture2D(u_BlurCoCTex, v_Texcoord0);\n    vec3 farColor = samplevalue.rgb;\n    float coc = texture2D(u_FullCoCTex, v_Texcoord0).r;\n\n    vec3 dstColor = vec3(0.0);\n    float dstAlpha = 1.0;\n\n    float blend = sqrt(coc * 3.14 * 2.0);\n    dstColor = farColor * clamp(blend, 0.0, 1.0);\n    dstAlpha = clamp(1.0 - blend, 0.0, 1.0);\n\n\n    gl_FragColor = vec4(baseColor * dstAlpha + dstColor, 1.0);\n\n}")}constructor(){super(),this._shader=t.Shader3D.find("GaussianDoF"),this._shaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._shaderData.setVector3(GaussianDoF.COCPARAMS,new t.Vector3(10,30,1)),this._zBufferParams=new t.Vector4,this._sourceSize=new t.Vector4,this._dowmSampleScale=new t.Vector4}set farStart(e){let t=this._shaderData.getVector3(GaussianDoF.COCPARAMS);t.x=e,this._shaderData.setVector3(GaussianDoF.COCPARAMS,t)}get farStart(){return this._shaderData.getVector3(GaussianDoF.COCPARAMS).x}set farEnd(e){let t=this._shaderData.getVector3(GaussianDoF.COCPARAMS);t.y=Math.max(t.x,e),this._shaderData.setVector3(GaussianDoF.COCPARAMS,t)}get farEnd(){return this._shaderData.getVector3(GaussianDoF.COCPARAMS).y}set maxRadius(e){let t=this._shaderData.getVector3(GaussianDoF.COCPARAMS);t.z=Math.min(e,2),this._shaderData.setVector3(GaussianDoF.COCPARAMS,t)}get maxRadius(){return this._shaderData.getVector3(GaussianDoF.COCPARAMS).z}_setupShaderValue(e){let t=e.camera;this._dowmSampleScale.setValue(.5,.5,2,2),this._shaderData.setVector(GaussianDoF.DOWNSAMPLESCALE,this._dowmSampleScale);let a=t.farPlane,r=t.nearPlane;this._zBufferParams.setValue(1-a/r,a/r,(r-a)/(r*a),1/r),this._shaderData.setVector(GaussianDoF.ZBUFFERPARAMS,this._zBufferParams)}getCameraDepthTextureModeFlag(){return e.DepthTextureMode.Depth}render(e){let a=e.command;this._setupShaderValue(e);let r=e.source,i=this._shader,n=this._shaderData,s=t.RenderTargetFormat.R16G16B16A16,o=t.RenderTexture.createFromPool(r.width,r.height,s,t.RenderTargetFormat.None,!1,1);a.blitScreenTriangle(r,o,null,i,n,0),o.filterMode=t.FilterMode.Bilinear,this._shaderData.setTexture(GaussianDoF.FULLCOCTEXTURE,o);let l=t.RenderTexture.createFromPool(r.width/2,r.height/2,s,t.RenderTargetFormat.None,!1,1);a.blitScreenTriangle(r,l,null,i,n,1),l.filterMode=t.FilterMode.Bilinear,this._sourceSize.setValue(l.width,l.height,1/l.width,1/l.height),this._shaderData.setShaderData(GaussianDoF.SOURCESIZE,t.ShaderDataType.Vector4,this._sourceSize);let h=t.RenderTexture.createFromPool(l.width,l.height,s,t.RenderTargetFormat.None,!1,1);a.blitScreenTriangle(l,h,null,this._shader,this._shaderData,2);let c=t.RenderTexture.createFromPool(l.width,l.height,s,t.RenderTargetFormat.None,!1,1);a.blitScreenTriangle(h,c,null,this._shader,this._shaderData,3),c.filterMode=t.FilterMode.Bilinear,c.anisoLevel=1,o.filterMode=t.FilterMode.Point,this._shaderData.setTexture(GaussianDoF.BLURCOCTEXTURE,c);let d=t.RenderTexture.createFromPool(r.width,r.height,r.colorFormat,r.depthStencilFormat,!1,1);a.blitScreenTriangle(r,e.destination,null,this._shader,this._shaderData,4),t.RenderTexture.recoverToPool(o),t.RenderTexture.recoverToPool(l),t.RenderTexture.recoverToPool(h),t.RenderTexture.recoverToPool(c),e.deferredReleaseTextures.push(d)}}var B;e.AOQUALITY=void 0,(B=e.AOQUALITY||(e.AOQUALITY={}))[B.High=0]="High",B[B.MEDIUM=1]="MEDIUM",B[B.LOWEST=2]="LOWEST";class ScalableAO extends PostProcessEffect{static init(){ScalableAO.BlurDelty=t.Shader3D.propertyNameToID("u_Delty"),ScalableAO.AOColor=t.Shader3D.propertyNameToID("u_AOColor"),ScalableAO.aoTexture=t.Shader3D.propertyNameToID("u_compositionAoTexture"),ScalableAO.AOParams=t.Shader3D.propertyNameToID("u_AOParams"),ScalableAO.SourceTex=t.Shader3D.propertyNameToID("u_SourceTex"),ScalableAO.SHADERDEFINE_AOHigh=t.Shader3D.getDefineByName("AO_High"),ScalableAO.SHADERDEFINE_AOMEDIUM=t.Shader3D.getDefineByName("AO_MEDIUM"),ScalableAO.SHADERDEFINE_LOWEST=t.Shader3D.getDefineByName("AO_LOWEST"),t.Shader3D.addInclude("AmbientOcclusion.glsl",'#include "Camera.glsl";\n// const \n#define TWO_PI 6.2831852\n\n#define EPSILON         1.0e-4\n#define FLT_EPSILON     1.192092896e-07 // Smallest positive number, such that 1.0 + FLT_EPSILON != 1.0\n\nconst float kContrast = 0.6;\nconst float kGeometryCoeff = 0.8;\nconst float kBeta = 0.002;\n\n\n// varying\nvarying vec2 v_Texcoord0;\n\n#if defined(AO_High)\n\t#define SAMPLE_COUNT 12\n#elif defined(AO_MEDIUM)\n\t#define SAMPLE_COUNT 8\n#else\n\t#define SAMPLE_COUNT 4\n#endif\n\n#ifdef AOLOWEST\n#define SAMPLE_COUNT 8\n#endif\n\n#ifdef AOLOWEST\n#define SAMPLE_COUNT 8\n#endif\n\n\n#define INTENSITY u_AOParams.x\n#define RADIUS u_AOParams.y\n#define DOWNSAMPLE u_AOParams.z\n\nfloat PositivePow(float base, float power)\n{\n    return pow(max(abs(base), float(FLT_EPSILON)), power);\n}\n\n\n// Boundary check for depth sampler\n// (returns a very large value if it lies out of bounds)\nfloat CheckBounds(vec2 uv, float d) \n{\n    float ob = 0.0;\n    // todo\n    if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) \n    {\n        ob = 1.0;\n    }\n    if (d <= 0.00001) {\n        ob += 1.0;\n    }\n\n    return ob * 1e8;\n}\n\nfloat SampleDepth(vec2 uv) \n{\n    float depthTex_Depth = SAMPLE_DEPTH_TEXTURE(u_CameraDepthTexture, uv);\n    float depthTex_Linear01Depth = Linear01Depth(depthTex_Depth, u_ZBufferParams);\n    return  depthTex_Linear01Depth * u_ProjectionParams.y + CheckBounds(uv, depthTex_Linear01Depth);\n}\n\nvec3 SampleNormal(vec2 uv) \n{\n    vec4 col = texture2D(u_CameraDepthNormalsTexture, uv);\n    vec3 depthNormal_Normal = DecodeViewNormalStereo(col);\n    return depthNormal_Normal * vec3(1.0, 1.0, -1.0);\n}\n\nfloat SampleDepthNormal(vec2 uv, out vec3 normal) \n{\n    normal = SampleNormal(uv);\n    return SampleDepth(uv);\n}\n\n// Normal vector comparer (for geometry-aware weighting)\nfloat CompareNormal(vec3 d1, vec3 d2)\n{\n    return smoothstep(kGeometryCoeff, 1.0, dot(d1, d2));\n}\n\n// Accessors for packed AO/normal buffer\nvec4 PackAONormal(float ao, vec3 n) \n{\n    return vec4(ao, n * 0.5 + 0.5);\n}\n\nvec3 GetPackedNormal(vec4 p)\n{\n    return p.gba * 2.0 - 1.0;\n}\n\nfloat GetPackAO(vec4 p)\n{\n    return p.r;\n}\n\n\n');let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_Delty:t.ShaderDataType.Vector2,u_PlugTime:t.ShaderDataType.Vector4,u_AOParams:t.ShaderDataType.Vector4,u_BlurVector:t.ShaderDataType.Vector2,u_AOColor:t.ShaderDataType.Color,u_compositionAoTexture:t.ShaderDataType.Texture2D},r=t.Shader3D.add("ScalableAO"),i=new t.SubShader(e,a);r.addSubShader(i),i.addShaderPass(b,'#if defined(GL_FRAGMENT_PRECISION_HIGH)\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#define SHADER_NAME OcclusionEstimation:FS\n\n#include "DepthNormalUtil.glsl";\n\n#include "AmbientOcclusion.glsl";\n\n#define FIX_SAMPLING_PATTERN\n\n// Check if the camera is perspective.\n// (returns 1.0 when orthographic)\nfloat CheckPerspective(float x)\n{   \n    // todo ortho\n    return mix(x, 1.0, 0.0);\n}\n\nvec3 ReconstructViewPos(vec2 uv, float depth, vec2 p11_22, vec2 p13_31)\n{\n    return vec3((uv * 2.0 - 1.0 - p13_31) / p11_22 * CheckPerspective(depth), depth);\n}\n\n// Pseudo random number generator with 2D coordinates\n// https://stackoverflow.com/questions/12964279/whats-the-origin-of-this-glsl-rand-one-liner\nfloat UVRandom(float u, float v) {\n    float f = dot(vec2(12.9898, 78.233), vec2(u, v));\n    return fract(43758.5453 * sin(f));\n}\n\nvec2 CosSin(float theta)\n{\n    // float sn, cs;\n    // sincos(theta, sn, cs);\n    float sn = sin(theta);\n    float cs = cos(theta);\n    return vec2(cs, sn);\n}\n\nfloat GradientNoise(vec2 uv)\n{\n    uv = floor(uv * u_MainTex_TexelSize.zw);\n    float f = dot(vec2(0.06711056, 0.00583715), uv);\n    return fract(52.9829189 * fract(f));\n}\n\n// Sample point picker\nvec3 PickSamplePoint(vec2 uv, float index) \n{\n    #if defined(FIX_SAMPLING_PATTERN)\n        float gn = GradientNoise(uv * DOWNSAMPLE);\n        float u = fract(UVRandom(0.0, index + uv.x * 1e-10) + gn) * 2.0 - 1.0;\n        float theta = (UVRandom(1.0, index + uv.x * 1e-10) + gn) * TWO_PI;\n    #else\n        float u = UVRandom(uv.x + u_PlugTime.x, uv.y + index) * 2.0 - 1.0;\n        float theta = UVRandom(-uv.x - u_PlugTime.x, uv.y + index) * TWO_PI;\n    #endif\n\n    vec3 v = vec3(CosSin(theta) * sqrt(1.0 - u * u), u);\n    float l = sqrt((index + 1.0) / float(SAMPLE_COUNT)) * RADIUS;\n    return v * l;\n}\n\nvoid main()\n{\n    vec2 uv = v_Texcoord0;\n\n    mat3 proj = mat3(u_Projection);\n    vec2 p11_22 = vec2(u_Projection[0][0], u_Projection[1][1]);\n    vec2 p13_31 = vec2(u_Projection[2][0], u_Projection[2][1]);\n\n    vec3 norm_o;\n    float depth_o = SampleDepthNormal(uv, norm_o);\n\n    // Reconstruct the view-space position.\n    vec3 vpos_o = ReconstructViewPos(uv, depth_o, p11_22, p13_31);\n\n    float ao = 0.0;\n\n    for (int s = 0; s < int(SAMPLE_COUNT); s++) {\n        float s_float = float(s);\n        vec3 v_s1 = PickSamplePoint(uv, s_float);\n\n        v_s1 = faceforward(v_s1, -norm_o, v_s1);\n        vec3 vpos_s1 = vpos_o + v_s1;\n\n        // Reproject the sample point\n        vec3 spos_s1 = proj * vpos_s1;\n        vec2 uv_s1_01 = (spos_s1.xy / CheckPerspective(vpos_s1.z) + 1.0) * 0.5;\n\n        float depth_s1 = SampleDepth(uv_s1_01);\n\n        vec3 vpos_s2 = ReconstructViewPos(uv_s1_01, depth_s1, p11_22, p13_31);\n        vec3 v_s2 = vpos_s2 - vpos_o;\n\n        float a1 = max(dot(v_s2, norm_o) - kBeta * depth_o, 0.0);\n        float a2 = dot(v_s2, v_s2) + EPSILON;\n\n        ao += a1 / a2;\n    }\n\n    ao *= RADIUS;\n\n    ao = PositivePow(ao * INTENSITY / float(SAMPLE_COUNT), kContrast);\n\n    gl_FragColor = PackAONormal(ao, norm_o);\n}\n\n/**\n    0.8741,     0,          0,          0, \n    0,          1.7320,     0,          0, \n    0,          0,          -1.0152,    -1, \n    0,          0,          -0.3046,    0\n**/'),r=t.Shader3D.add("AOBlurHorizontal"),i=new t.SubShader(e,a),r.addSubShader(i),i.addShaderPass(b,"#if defined(GL_FRAGMENT_PRECISION_HIGH)\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n\n#define SHADER_NAME AOBlurHorizontal\n//质量\n#define BLUR_HIGH_QUALITY 0\n\n\nvarying vec2 v_Texcoord0;\n\n// uniform vec2 u_Delty;\n\nvec3 GetPackedNormal(vec4 p)\n{\n    return p.gba * 2.0 - 1.0;\n}\n\nfloat CompareNormal(vec3 d1, vec3 d2)\n{\n    return smoothstep(0.8, 1.0, dot(d1, d2));\n}\n\nfloat GetPackedAO(vec4 p)\n{\n    return p.r;\n}\n\nvec4 PackAONormal(float ao, vec3 normal) {\n    return vec4(ao, normal * 0.5 + 0.5);\n}\n\nvoid main() {\n\t vec2 delta = vec2(u_MainTex_TexelSize.x * 2.0*u_Delty.x,u_Delty.y*u_MainTex_TexelSize.y*2.0);\n\t vec2 uv = v_Texcoord0;\n\n\n#if defined(BLUR_HIGH_QUALITY)\n\n    // High quality 7-tap Gaussian with adaptive sampling\n\tvec2 uvtran = uv;\n    vec4 p0  = texture2D(u_MainTex,uv);\n\tuvtran = uv-delta;\n    vec4 p1a = texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta;\n    vec4 p1b = texture2D(u_MainTex,uvtran);\n\tuvtran = uv-delta*2.0;\n    vec4 p2a =  texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta*2.0;\n    vec4 p2b =  texture2D(u_MainTex,uvtran);\n\tuvtran = uv-delta * 3.2307692308;\n    vec4 p3a =  texture2D(u_MainTex,uvtran);;\n\tuvtran = uv+delta * 3.2307692308;\n    vec4 p3b =  texture2D(u_MainTex,uvtran);;\n\n    vec3 n0 = GetPackedNormal(p0);\n    \n\n    float w0  = 0.37004405286;\n    float w1a = CompareNormal(n0, GetPackedNormal(p1a)) * 0.31718061674;\n    float w1b = CompareNormal(n0, GetPackedNormal(p1b)) * 0.31718061674;\n    float w2a = CompareNormal(n0, GetPackedNormal(p2a)) * 0.19823788546;\n    float w2b = CompareNormal(n0, GetPackedNormal(p2b)) * 0.19823788546;\n    float w3a = CompareNormal(n0, GetPackedNormal(p3a)) * 0.11453744493;\n    float w3b = CompareNormal(n0, GetPackedNormal(p3b)) * 0.11453744493;\n\n    float s;\n    s  = GetPackedAO(p0)  * w0;\n    s += GetPackedAO(p1a) * w1a;\n    s += GetPackedAO(p1b) * w1b;\n    s += GetPackedAO(p2a) * w2a;\n    s += GetPackedAO(p2b) * w2b;\n    s += GetPackedAO(p3a) * w3a;\n    s += GetPackedAO(p3b) * w3b;\n\n    s /= w0 + w1a + w1b + w2a + w2b + w3a + w3b;\n\n#else\n\n    // Fater 5-tap Gaussian with linear sampling\n    vec4 p0  = texture2D(u_MainTex, sampler_MainTex, i.texcoordStereo);\n    vec4 p1a = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord - delta * 1.3846153846));\n    vec4 p1b = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord + delta * 1.3846153846));\n    vec4 p2a = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord - delta * 3.2307692308));\n    vec4 p2b = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord + delta * 3.2307692308));\n\n\tvec2 uvtran = uv;\n    vec4 p0  = texture2D(u_MainTex,uv);\n\tuvtran = uv-delta * 1.3846153846;\n    vec4 p1a = texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta * 1.3846153846;\n    vec4 p1b = texture2D(u_MainTex,uvtran);\n\tuvtran = uv-delta*3.2307692308;\n    vec4 p2a =  texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta*3.2307692308;\n    vec4 p2b =  texture2D(u_MainTex,uvtran);\n\n \tvec3 n0 = GetPackedNormal(p0);\n\n    float w0  = 0.2270270270;\n    float w1a = CompareNormal(n0, GetPackedNormal(p1a)) * 0.3162162162;\n    float w1b = CompareNormal(n0, GetPackedNormal(p1b)) * 0.3162162162;\n    float w2a = CompareNormal(n0, GetPackedNormal(p2a)) * 0.0702702703;\n    float w2b = CompareNormal(n0, GetPackedNormal(p2b)) * 0.0702702703;\n\n    float s;\n    s  = GetPackedAO(p0)  * w0;\n    s += GetPackedAO(p1a) * w1a;\n    s += GetPackedAO(p1b) * w1b;\n    s += GetPackedAO(p2a) * w2a;\n    s += GetPackedAO(p2b) * w2b;\n\n    s /= w0 + w1a + w1b + w2a + w2b;\n\n#endif\n\n    gl_FragColor = PackAONormal(s, n0);;\n}"),r=t.Shader3D.add("AOComposition"),i=new t.SubShader(e,a),r.addSubShader(i),i.addShaderPass(b,"#if defined(GL_FRAGMENT_PRECISION_HIGH)\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#define SHADER_NAME AOComposition\n#define BLUR_HIGH_QUALITY 0\n\n\nvarying vec2 v_Texcoord0;\n\nvec3 GetPackedNormal(vec4 p)\n{\n    return p.gba * 2.0 - 1.0;\n}\nfloat CompareNormal(vec3 d1, vec3 d2)\n{\n    return smoothstep(0.8, 1.0, dot(d1, d2));\n}\nfloat GetPackedAO(vec4 p)\n{\n    return p.r;\n}\n\n// Geometry-aware bilateral filter (single pass/small kernel)\nfloat BlurSmall(sampler2D tex, vec2 uv, vec2 delta)\n{\n    vec4 p0 = texture2D(tex,uv);\n    vec2 uvtran =uv+vec2(-delta.x,-delta.y) ;\n    vec4 p1 = texture2D(tex,uvtran);\n    uvtran =uv+vec2(delta.x,-delta.y);\n    vec4 p2 = texture2D(tex, uvtran);\n    uvtran =uv+vec2(-delta.x,delta.y) ;\n    vec4 p3 = texture2D(tex, uvtran);\n    uvtran =uv+delta;\n    vec4 p4 = texture2D(tex, uvtran);\n\n    vec3 n0 = GetPackedNormal(p0);\n\n    float w0 = 1.0;\n    float w1 = CompareNormal(n0, GetPackedNormal(p1));\n    float w2 = CompareNormal(n0, GetPackedNormal(p2));\n    float w3 = CompareNormal(n0, GetPackedNormal(p3));\n    float w4 = CompareNormal(n0, GetPackedNormal(p4));\n\n    float s;\n    s  = GetPackedAO(p0) * w0;\n    s += GetPackedAO(p1) * w1;\n    s += GetPackedAO(p2) * w2;\n    s += GetPackedAO(p3) * w3;\n    s += GetPackedAO(p4) * w4;\n\n    return s / (w0 + w1 + w2 + w3 + w4);\n}\n\nvoid main() {\n    vec2 uv = v_Texcoord0;\n    vec2 delty = u_MainTex_TexelSize.xy;\n    float ao = BlurSmall(u_compositionAoTexture,uv,delty);\n    vec4 albedo = texture2D(u_MainTex,uv);\n    vec4 aocolor = vec4(ao*u_AOColor.rgb,ao);\n    albedo.rgb = albedo.rgb*(1.0-ao)+ao*u_AOColor.rgb*ao;\n    gl_FragColor = albedo;\n\n\n}")}constructor(){super(),this._aoParams=new t.Vector3,this._aoQuality=e.AOQUALITY.MEDIUM,this._shader=t.Shader3D.find("ScalableAO"),this._shaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._aoParams=new t.Vector3(.12,.15,1),this._shaderData.setVector3(ScalableAO.AOParams,this._aoParams),this._shaderData.setVector(BaseCamera.DEPTHZBUFFERPARAMS,new t.Vector4),this._aoBlurHorizontalShader=t.Shader3D.find("AOBlurHorizontal"),this._aoComposition=t.Shader3D.find("AOComposition"),this.aoQuality=e.AOQUALITY.MEDIUM}set aoColor(e){this._shaderData.setColor(ScalableAO.AOColor,e)}get aoColor(){return this._shaderData.getColor(ScalableAO.AOColor)}set intensity(e){this._aoParams.x=e,this._shaderData.setVector3(ScalableAO.AOParams,this._aoParams)}get intensity(){return this._aoParams.x}set radius(e){this._aoParams.y=e,this._shaderData.setVector3(ScalableAO.AOParams,this._aoParams)}get radius(){return this._aoParams.y}get aoQuality(){return this._aoQuality}set aoQuality(t){switch(this._aoQuality=t,t){case e.AOQUALITY.High:this._shaderData.addDefine(ScalableAO.SHADERDEFINE_AOHigh),this._shaderData.removeDefine(ScalableAO.SHADERDEFINE_AOMEDIUM),this._shaderData.removeDefine(ScalableAO.SHADERDEFINE_LOWEST);break;case e.AOQUALITY.MEDIUM:this._shaderData.addDefine(ScalableAO.SHADERDEFINE_AOMEDIUM),this._shaderData.removeDefine(ScalableAO.SHADERDEFINE_AOHigh),this._shaderData.removeDefine(ScalableAO.SHADERDEFINE_LOWEST);break;case e.AOQUALITY.LOWEST:this._shaderData.addDefine(ScalableAO.SHADERDEFINE_LOWEST),this._shaderData.removeDefine(ScalableAO.SHADERDEFINE_AOHigh),this._shaderData.removeDefine(ScalableAO.SHADERDEFINE_AOMEDIUM)}}getCameraDepthTextureModeFlag(){return e.DepthTextureMode.DepthAndDepthNormals}render(a){let r=a.command;a.camera.viewport;let i=a.camera;i.depthTextureMode|=e.DepthTextureMode.DepthNormals,i.depthTextureMode|=e.DepthTextureMode.Depth;let n=i.depthNormalTexture,s=i.depthTexture;if(!n||!s)return;n.wrapModeU=t.WrapMode.Clamp,n.wrapModeV=t.WrapMode.Clamp;let o=a.source,l=o.width,h=o.height,c=o.colorFormat,d=t.RenderTargetFormat.None,u=t.RenderTexture.createFromPool(l,h,c,d,!1,1),_=this._shader,m=this._shaderData;r.blitScreenTriangle(null,u,null,_,m,0);let f=t.RenderTexture.createFromPool(l,h,c,d,!1,1);r.blitScreenTriangle(u,f,null,this._aoBlurHorizontalShader,m,0),r.setShaderDataVector2(m,ScalableAO.BlurDelty,ScalableAO.deltyVector),r.blitScreenTriangle(f,u,null,this._aoBlurHorizontalShader,this._shaderData,0),r.setShaderDataTexture(m,ScalableAO.aoTexture,u),r.blitScreenTriangle(a.source,a.destination,null,this._aoComposition,this._shaderData,0),a.deferredReleaseTextures.push(u),a.deferredReleaseTextures.push(f)}}ScalableAO.deltyHorizontal=new t.Vector2(1,0),ScalableAO.deltyVector=new t.Vector2(0,1);class AnimatorTransition{constructor(){this._conditions=[],this._exitByTime=!0,this._exitTime=.85,this._transduration=.15,this._transstartoffset=0,this._mute=!1}get name(){return this._name}set name(e){this._name=e}get mute(){return this._mute}set mute(e){this._mute=e}get destState(){return this._destState}set destState(e){this._destState=e}get conditions(){return this._conditions}set conditions(e){for(var t=this._conditions.length-1;t>=0;t--)this.removeCondition(this._conditions[t]);for(t=0;t<e.length;t++)this.addCondition(e[t])}get exitByTime(){return this._exitByTime}set exitByTime(e){this._exitByTime=e}set transduration(e){this._transduration=Math.max(0,Math.min(e,1))}get transduration(){return this._transduration}set transstartoffset(e){this._transstartoffset=Math.max(0,Math.min(e,1))}get transstartoffset(){return this._transstartoffset}set exitTime(e){this._exitTime=Math.max(0,Math.min(e,1))}get exitTime(){return this._exitTime}addCondition(e){-1==this._conditions.indexOf(e)&&this._conditions.push(e)}removeCondition(e){let t=this._conditions.indexOf(e);-1!=t&&this._conditions.splice(t,0)}check(e,a){if(this._mute)return!1;if(0==this._conditions.length){if(e>this._exitTime)return!0}else{if(this._exitByTime&&e<this._exitTime)return!1;for(var r=0;r<this._conditions.length;r++){let e=this._conditions[r];if(e.checkState(a[e.id]))return e.type==t.AniStateConditionType.Trigger&&(a[e.id]=!1),!0}}return!1}}class AnimatorController extends t.Resource{constructor(e){super();let a=t.AnimatorControllerParse.parse(e);this.data=a.ret,this.clipsID=a.clipsID}getLayers(){let e=this.data.controllerLayers,t=[];for(let a=e.length-1;a>=0;a--){let r=e[a],i=new AnimatorControllerLayer(r.name);r.avatarMask&&(i.avatarMask=r.avatarMask),t.unshift(i);for(let e in r)if("avatarMask"!=e&&"name"!=e&&"states"!=e&&null!=r[e])try{i[e]=r[e]}catch(e){}this.getState(r.states,i,this.data)}return t}updateTo(e){let a=e._controllerLayers;for(let e=0,t=a.length;e<t;e++)a[e]._removeReference();a.length=0;let r=this.getLayers();for(let t=0,a=r.length;t<a;t++)e.addControllerLayer(r[t]);let i=this.data.animatorParams;if(i)for(let a=i.length-1;a>=0;a--){let r=i[a];if(t.AniParmType.Bool==r.type)e.setParamsBool(r.name,Boolean(r.val));else if(t.AniParmType.Float==r.type){let t=Number(r.val);isNaN(t)&&(t=0),e.setParamsNumber(r.name,t)}else t.AniParmType.Trigger==r.type&&r.val&&e.setParamsTrigger(r.name)}}createState(e,a,r){if(!e)return null;let i={},n=null;for(let s=e.length-1;s>=0;s--){let o=e[s],l=o.states;if(l){let e=this.createState(l,a,r);e&&(a[o.id]=e.states[e.id]);continue}if(0>Number(o.id)){if("-1"==o.id){let e=o.soloTransitions;e&&0<e.length&&(n=e[0].id)}continue}let h=new AnimatorState;a[o.id]=h,i[o.id]=h;for(let e in o)try{if("scripts"==e){let a=o[e];if(a&&Array.isArray(a))for(let e=a.length-1;e>=0;e--){let r=a[e];r&&0==r.indexOf("res://")&&(r=r.substring(6));let i=t.ClassUtils.getClass(r);i&&h.addScript(i)}continue}if("soloTransitions"==e)continue;null!=o[e]&&(h[e]=o[e])}catch(e){}r.addState(h)}return{id:n,states:i}}setExitTransition(e,t,a,r,i){for(let n in e){let s=a[n];if(s){let o=s.transitions,l=s.soloTransitions,h=e[n];for(let e=t.length-1;e>=0;e--){let s=t[e];if("-3"!=s.id)for(let e=h.length-1;e>=0;e--){let t=h[e],i=new AnimatorTransition;i.destState=a[s.id],s.conditions&&this.addConditions(s.conditions,i,r),t.conditions&&this.addConditions(t.conditions,i,r);for(let e in s)"solo"!=e&&"id"!=e&&"conditions"!=e&&(i[e]=s[e]);s.solo?l.unshift(i):o.unshift(i)}else null==i[n]&&(i[n]=[]),i[n].push(s)}}}}setTransitions(e,t,a,r,i){if(!e)return null;let n={};for(let i=e.length-1;i>=0;i--){let s=e[i];if(s.states){let e=this.setTransitions(s.states,t,a,r,s);if(e){let a=s.soloTransitions;a&&this.setExitTransition(e,a,t,r,n)}}}for(let s=e.length-1;s>=0;s--){let o=e[s];if(o.states)continue;if("-1"==o.id){if(o.soloTransitions&&0<o.soloTransitions.length){null==i?a.defaultState=t[o.soloTransitions[0].id]:t[i.id]=t[o.soloTransitions[0].id];continue}}else{if("-2"==o.id){let e=o.soloTransitions;if(e)for(let a=e.length-1;a>=0;a--){let i=e[a],n=t[i.id];if(n)for(let e in t){let a=t[e],s=new AnimatorTransition;s.destState=n,i.conditions&&this.addConditions(i.conditions,s,r);for(let e in i)"solo"!=e&&"id"!=e&&"conditions"!=e&&(s[e]=i[e]);i.solo?a.soloTransitions.unshift(s):a.transitions.unshift(s)}}continue}if("-3"==o.id)continue}let l=o.soloTransitions;if(l&&t[o.id]){let e=t[o.id].transitions,a=t[o.id].soloTransitions;for(let i=l.length-1;i>=0;i--){let s=l[i];if("-3"==s.id){null==n[o.id]&&(n[o.id]=[]),n[o.id].push(s);continue}let h=new AnimatorTransition;t[s.id]&&(h.destState=t[s.id]),s.conditions&&this.addConditions(s.conditions,h,r);for(let e in s)"solo"!=e&&"id"!=e&&"conditions"!=e&&(h[e]=s[e]);s.solo?a.unshift(h):e.unshift(h)}}}return n}getState(e,t,a){if(e){let r={};this.createState(e,r,t),this.setTransitions(e,r,t,a)}}addConditions(e,a,r){let i=r.animatorParams;if(null!=i&&0!=i.length)for(let r=0,n=e.length;r<n;r++){let n,s=e[r],o=null;for(let e=i.length-1;e>=0;e--)if(i[e].id==s.id){o=i[e];break}if(null==o)return;if(o.type==t.AniParmType.Bool){let e=new t.AnimatorStateBoolCondition(s.name);e.compareFlag=Boolean(s.checkValue),n=e}else if(o.type==t.AniParmType.Float){let e=new t.AnimatorStateNumberCondition(s.name);e.numberValue=Number(s.checkValue),e.compareFlag=s.type,n=e}else if(o.type==t.AniParmType.Trigger){n=new t.AnimatorStateTriggerCondition(s.name)}a.addCondition(n)}}}class BatchMark{constructor(){this.updateMark=-1,this.indexInList=-1,this.batched=!1}}class InstanceBatchManager{constructor(){this._instanceBatchOpaqueMarks=[],this.updateCountMark=0}_getData(e,t,a){return null==a&&(a=Array),"boolean"==typeof e?t[e?0:1]||(t[e?0:1]=new a):t[e]||(t[e]=new a)}getInstanceBatchOpaquaMark(e,t,a,r,i){var n=this._getData(e,this._instanceBatchOpaqueMarks);return n=this._getData(t,n),n=this._getData(a,n),n=this._getData(r,n),this._getData(i,n,BatchMark)}}InstanceBatchManager.instance=new InstanceBatchManager;const V=new t.Vector3;new t.Vector3;class BatchRender extends BaseRender{constructor(){super(),this._lodInstanceRenderElement={},this._RenderBitFlag=e.RenderBitFlag.RenderBitFlag_Batch,this._renderElements=[],this._lodInstanceRenderElement[-1]=[],this._batchList=new t.SingletonList}get checkLOD(){return this._checkLOD}set checkLOD(e){this._checkLOD=e}set lodCullRateArray(e){this._checkLOD&&(e.sort(((e,t)=>t-e)),this._lodRateArray=e)}get lodCullRateArray(){return this._lodRateArray}_canBatch(e){return e._batchRender,!1}_onEnable(){if(super._onEnable(),this._batchList)for(let e=0,t=this._batchList.length;e<t;e++)this._batchList.elements[e].setRenderbitFlag(this._RenderBitFlag,!0)}_onDisable(){if(super._onDisable(),this._batchList)for(let e=0,t=this._batchList.length;e<t;e++)this._batchList.elements[e].setRenderbitFlag(this._RenderBitFlag,!1)}_changeLOD(e){this._cacheLod!=e&&(this._cacheLod==this.lodCullRateArray.length-1&&(e=-1),this._renderElements=this._lodInstanceRenderElement[e],this._lodInstanceRenderElement[e]&&-1!=e?(this._renderElements||(this._renderElements=[]),this._renderElements=this._renderElements.concat(this._lodInstanceRenderElement[-1])):this._renderElements=this._lodInstanceRenderElement[-1])}onPreRender(){if(!this.checkLOD||!this._lodRateArray||this._lodRateArray.length<1)this._changeLOD(0);else{let e=this.owner.scene.cullInfoCamera,a=e.maxlocalYDistance;t.Vector3.subtract(this._bounds.getCenter(),e.transform.position,V);let r=V.length()/e.farPlane*a,i=this._lodsize/r;for(let e=0;e<this._lodRateArray.length;e++)if(!(i<this._lodRateArray[e])){this._changeLOD(e);break}}}_batchOneRender(e){return!1}_removeOneRender(e){}_updateOneRender(e){}addList(e){for(var t=0,a=e.length;t<a;t++){let a=e[t];this._canBatch(a)&&this._batchList.add(a)}}reBatch(){let e=this._batchList.length,t=this._batchList.elements;for(var a=0;a<e;a++){let e=t[a];this._batchOneRender(e)}}_restorRenderNode(){for(let e=0,t=this._batchList.length;e<t;e++)this._removeOneRender(this._batchList.elements[e])}_clear(){this._restorRenderNode(),this._renderElements=[],this._batchList.destroy(),this._batchList=new t.SingletonList,this._lodInstanceRenderElement={},this._lodInstanceRenderElement[-1]=[]}}class StaticInstanceBatchRender extends BatchRender{constructor(){super(),this._insBatchMarksNums=[],this._insElementMarksArray=[],this._instanceBatchminNums=10,this._updateChangeElement=[],this.checkLOD=!0,this._batchManager=new InstanceBatchManager,this._RenderBitFlag=e.RenderBitFlag.RenderBitFlag_InstanceBatch}_isRenderNodeAllCanInstanceBatch(e){let t=e._renderElements;for(var a=0,r=t.length;a<r;a++){let e=t[a];if(!e.material._shader._enableInstancing||e.render.lightmapIndex>0)return!1}return!0}_sumInstanceBatch(e){let t=e._renderElements;for(var a=0,r=t.length;a<r;a++){let e=t[a];var i=this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1);-1==i.indexInList&&(i.indexInList=this._insBatchMarksNums.length,this._insBatchMarksNums.push(0)),this._insBatchMarksNums[i.indexInList]+=1}}_batchOneElement(e,t){var a=this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1);if(-1==a.indexInList)return;let r=this._insElementMarksArray[a.indexInList];r||(r=this._createInstanceElement(e,t,a));let i=r._instanceBatchElementList;i.length==InstanceRenderElement.maxInstanceCount&&(this._insBatchMarksNums.push(this._insBatchMarksNums[a.indexInList]),a.indexInList=this._insBatchMarksNums.length-1,r=this._createInstanceElement(e,t,a),i=r._instanceBatchElementList),-1==i.indexof(e)&&(i.add(e),r._isUpdataData=!0,-1==this._updateChangeElement.indexOf(r)&&this._updateChangeElement.push(r),e._batchElement=r)}_removeOneElement(e,t){if(-1==this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1).indexInList)return;let a=e._batchElement;if(!a||-1==this._renderElements.indexOf(a))return;let r=a._instanceBatchElementList;-1!=r.indexof(e)&&(r.remove(e),a._isUpdataData=!0,-1==this._updateChangeElement.indexOf(a)&&this._updateChangeElement.push(a),e._batchElement=null)}_updateOneElement(e,t){let a=e._batchElement;a&&-1!=this._renderElements.indexOf(a)&&-1!=a._instanceBatchElementList.indexof(e)&&(a._isUpdataData=!0,-1==this._updateChangeElement.indexOf(a)&&this._updateChangeElement.push(a))}_createInstanceElement(e,t,a){let r=new InstanceRenderElement;r.render=t,r.renderType=RenderElement.RENDERTYPE_INSTANCEBATCH,r._geometry.subMesh=e._geometry,r.material=e.material,r.setTransform(null),r.renderSubShader=e.renderSubShader;let i=r._instanceBatchElementList;return i.length=0,i.add(e),this._insElementMarksArray[a.indexInList]=r,a.batched=!0,this._lodInstanceRenderElement[t._LOD]||(this._lodInstanceRenderElement[t._LOD]=[]),this._lodInstanceRenderElement[t._LOD].push(r),r}_canBatch(e){let t=e._renderElements;for(var a=0,r=t.length;a<r;a++){let e=t[a];var i=this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1);if(this._insBatchMarksNums[i.indexInList]<this._instanceBatchminNums||e.material.renderQueue>=3e3)return!1}return!0}_calculateBoundingBox(){let e=this._bounds;for(let t=0,a=this._batchList.length;t<a;t++)0==t?this._batchList.elements[t].bounds.cloneTo(e):Bounds.merge(e,this._batchList.elements[t].bounds,e);let t=this._bounds.getExtent();return this._lodsize=2*Math.max(t.x,t.y,t.z),this._bounds}_onDestroy(){super._onDestroy()}_batchOneRender(t){if(!this._canBatch(t))return!1;this.boundsChange=!0;let a=t._renderElements;for(let e=0,r=a.length;e<r;e++){let r=a[e];this._batchOneElement(r,t)}return t._batchRender=this,t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_InstanceBatch,!0),!0}_removeOneRender(t){if(this._canBatch(t)&&-1!=this._batchList.indexof(t)){this.boundsChange=!0;let a=t._renderElements;for(let e=0,r=a.length;e<r;e++){let r=a[e];this._removeOneElement(r,t)}t._batchRender=null,t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_InstanceBatch,!1)}}_updateOneRender(e){if(this._canBatch(e)&&-1!=this._batchList.indexof(e)){this.boundsChange=!0;let t=e._renderElements;for(let a=0,r=t.length;a<r;a++){let r=t[a];this._updateOneElement(r,e)}}}_clear(){super._clear(),this._insElementMarksArray.forEach((e=>{e&&e.destroy()})),this._insElementMarksArray=[],this._updateChangeElement=[],this._insBatchMarksNums=[]}addList(e){this._batchList||(this._batchList=new t.SingletonList);let a=[];for(var r=0;r<e.length;r++){let t=e[r];t._batchRender||this._isRenderNodeAllCanInstanceBatch(t)&&(a.push(t),this._sumInstanceBatch(t))}r=0;for(var i=a.length;r<i;r++){let e=a[r];this._canBatch(e)&&this._batchList.add(e)}}reBatch(){let e=this._batchList.length,t=this._batchList.elements;for(var a=0;a<e;a++){let e=t[a];this._batchOneRender(e)}}}class StatiVertexMergeBatchRender extends BatchRender{_addList(e){}}class StaticBatchVolume extends Volume{_getStaticInstanceBatchRender(){let e=this.owner.getComponent(StaticInstanceBatchRender);return e||(e=this.owner.addComponent(StaticInstanceBatchRender)),e}_getStatiVertexMergeBatchRender(){let e=this.owner.getComponent(StatiVertexMergeBatchRender);return e||(e=this.owner.addComponent(StatiVertexMergeBatchRender)),e}get checkLOD(){return this._checkLOD}set checkLOD(e){this._checkLOD=e,this._enableStaticInstanceBatch&&(this._instanceBatchRender.checkLOD=e),this._enableStaticVertexMergeBatch&&(this._vertexMergeBatchRender.checkLOD=e),this._enableCustomBatch&&this._customBatchs.forEach((t=>{t.checkLOD=e}))}get enableStaticInstanceBatchRender(){return this._enableStaticInstanceBatch}set enableStaticInstanceBatchRender(e){!this._instanceBatchRender&&e&&(this._instanceBatchRender=this._getStaticInstanceBatchRender()),e!=this._enableStaticInstanceBatch&&(this._instanceBatchRender.enabled=!!e,this._enableStaticInstanceBatch=e)}get enableMergeBatchRender(){return this._enableStaticVertexMergeBatch}set enableMergeBatchRender(e){!this._vertexMergeBatchRender&&e&&(this._vertexMergeBatchRender=this._getStatiVertexMergeBatchRender()),e!=this._enableStaticVertexMergeBatch&&(this._vertexMergeBatchRender.enabled=!!e,this._enableStaticVertexMergeBatch=e)}get enableCustomBatchRender(){return this._enableCustomBatch}set enableCustomBatchRender(e){this._enableCustomBatch=e,this._customBatchs.forEach((t=>{t.enabled=e}))}set customBatchRenders(e){this._customBatchs&&this._customBatchs.forEach((e=>{this.owner._destroyComponent(e)})),this._customBatchs=e,this._customBatchs.forEach((e=>{this.owner.addComponentInstance(e)})),this.enableCustomBatchRender=this._enableCustomBatch}get customBatchRenders(){return this._customBatchs}constructor(){super(),this._customBatchs=[],this.checkLOD=!0,this._enableStaticInstanceBatch=!1,this._enableStaticVertexMergeBatch=!1,this._cacheRender=new t.SingletonList,this._batchRender=new t.SingletonList,this._enableCustomBatch=!1}_restorRenderNode(){this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e._clear()})),this._enableStaticInstanceBatch&&this._instanceBatchRender._clear(),this.enableCustomBatchRender&&this._vertexMergeBatchRender._clear()}__addRenderNodeToBatch(e){this.enableCustomBatchRender&&this._customBatchs.forEach((t=>{t._batchOneRender(e)})),this._enableStaticInstanceBatch&&this._instanceBatchRender._batchOneRender(e)||!this.enableCustomBatchRender||this._vertexMergeBatchRender._batchOneRender(e)}__removeRenderNodeFromBatch(e){e._batchRender._removeOneRender(e)}_onEnable(){super._onEnable(),this._enableStaticInstanceBatch&&this._instanceBatchRender&&(this._instanceBatchRender.enabled=!0),this._enableStaticVertexMergeBatch&&this._vertexMergeBatchRender&&(this._vertexMergeBatchRender.enabled=!0),this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e.enabled=!0}))}_onDisable(){super._onDisable(),this._enableStaticInstanceBatch&&this._instanceBatchRender&&(this._instanceBatchRender.enabled=!1),this._enableStaticVertexMergeBatch&&this._vertexMergeBatchRender&&(this._vertexMergeBatchRender.enabled=!1),this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e.enabled=!1}))}_addRenderNode(t){if(t.renderNode.staticMask==e.StaticFlag.StaticBatch){if(-1!=this._cacheRender.indexof(t))return;this._cacheRender.add(t),this._batchRender.length>0&&this.__addRenderNodeToBatch(t)}}_removeRenderNode(t){t.renderNode.staticMask==e.StaticFlag.StaticBatch&&-1!=this._batchRender.indexof(t)&&(this.__removeRenderNodeFromBatch(t),this._batchRender.remove(t))}_VolumeChange(){super._VolumeChange(),this._cacheRender.clear()}onStart(){this.reBatch()}reBatch(){this._cacheRender.elements.length=this._cacheRender.length,this._batchRender.clear(),this._restorRenderNode(),this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e.addList(this._cacheRender.elements),e.reBatch()})),this._enableStaticInstanceBatch&&(this._instanceBatchRender.addList(this._cacheRender.elements),this._instanceBatchRender.reBatch()),this.enableCustomBatchRender&&(this._vertexMergeBatchRender.addList(this._cacheRender.elements),this._vertexMergeBatchRender.reBatch());for(var e=0,t=this._cacheRender.length;e<t;e++)this._cacheRender.elements[e]._batchRender&&this._batchRender.add(this._cacheRender.elements[e])}}class UI3DGeometry extends GeometryElement{constructor(e){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this._owner=e,this.bufferState=new t.BufferState,this._bound=new Bounds,this._createBuffer(),this.indexFormat=t.IndexFormat.UInt16,this._positionArray=[new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3]}get bounds(){return this._bound}_createBuffer(){var e=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),a=.5;this._vertex=new Float32Array([-.5,50,0,0,0,1,0,0,a,50,0,0,0,1,1,0,-.5,-50,0,0,0,1,0,1,a,-50,0,0,0,1,1,1]),this._index=new Uint16Array([0,1,2,3,2,1]),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this._vertex.length,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=e,this._vertexBuffer.setData(this._vertex.buffer),this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,this._index.length,t.BufferUsage.Static,!1),this._indexBuffer.setData(this._index),this.bufferState=new t.BufferState,this.bufferState.applyState([this._vertexBuffer],this._indexBuffer),this._bound.setExtent(new t.Vector3(.5,.5,.05)),this._bound.setCenter(new t.Vector3(0,0,0))}_resizeViewVertexData(e,a,r,i,n){var s=e.x/2,o=e.y/2;i?(UI3DGeometry.tempV0.set(-s,o,0),Utils3D.billboardTrans(UI3DGeometry.tempV0,a,r,this._positionArray[0]),UI3DGeometry.tempV0.set(s,o,0),Utils3D.billboardTrans(UI3DGeometry.tempV0,a,r,this._positionArray[1]),UI3DGeometry.tempV0.set(-s,-o,0),Utils3D.billboardTrans(UI3DGeometry.tempV0,a,r,this._positionArray[2]),UI3DGeometry.tempV0.set(s,-o,0),Utils3D.billboardTrans(UI3DGeometry.tempV0,a,r,this._positionArray[3]),this._vertex[3]=this._vertex[11]=this._vertex[19]=this._vertex[27]=-a.x,this._vertex[4]=this._vertex[12]=this._vertex[20]=this._vertex[28]=-a.y,this._vertex[5]=this._vertex[13]=this._vertex[21]=this._vertex[29]=-a.z):(this._positionArray[0].set(-s,o,0),this._positionArray[1].set(s,o,0),this._positionArray[2].set(-s,-o,0),this._positionArray[3].set(s,-o,0)),t.Vector3.add(this._positionArray[0],n,this._positionArray[0]),t.Vector3.add(this._positionArray[1],n,this._positionArray[1]),t.Vector3.add(this._positionArray[2],n,this._positionArray[2]),t.Vector3.add(this._positionArray[3],n,this._positionArray[3]),this._changeVertex(e)}_resizeWorldVertexData(e,a){let applyMat=(e,a)=>(t.Vector3.transformV3ToV3(e,a,e),e);var r=e.x/2,i=e.y/2;this._positionArray[0].set(-r,i,0),this._positionArray[1].set(r,i,0),this._positionArray[2].set(-r,-i,0),this._positionArray[3].set(r,-i,0),applyMat(this._positionArray[0],a),applyMat(this._positionArray[1],a),applyMat(this._positionArray[2],a),applyMat(this._positionArray[3],a),this._changeVertex(e)}_changeVertex(e){this._vertex[0]=this._positionArray[0].x,this._vertex[1]=this._positionArray[0].y,this._vertex[2]=this._positionArray[0].z,this._vertex[8]=this._positionArray[1].x,this._vertex[9]=this._positionArray[1].y,this._vertex[10]=this._positionArray[1].z,this._vertex[16]=this._positionArray[2].x,this._vertex[17]=this._positionArray[2].y,this._vertex[18]=this._positionArray[2].z,this._vertex[24]=this._positionArray[3].x,this._vertex[25]=this._positionArray[3].y,this._vertex[26]=this._positionArray[3].z,this._vertexBuffer.setData(this._vertex.buffer,0,0,4*this._vertex.length),UI3DGeometry.tempV0.setValue(e.x/2,e.y/2,0),this._bound.setExtent(UI3DGeometry.tempV0);let t=(this._positionArray[3].x-this._positionArray[2].x)/2,a=(this._positionArray[0].y-this._positionArray[2].y)/2;UI3DGeometry.tempV0.setValue(this._positionArray[2].x+t,this._positionArray[2].y+a,this._positionArray[2].z),this._bound.setCenter(UI3DGeometry.tempV0)}_updateRenderParams(e){this.clearRenderParams(),this.setDrawElemenParams(6,0)}destroy(){super.destroy(),this.bufferState.destroy(),this._vertexBuffer.destroy(),this._indexBuffer.destroy(),this.bufferState=null,this._vertexBuffer=null,this._indexBuffer=null,delete this._vertex,delete this._index}}UI3DGeometry.tempV0=new t.Vector3,UI3DGeometry._type=GeometryElement._typeCounter++;class UI3D extends BaseRender{set sprite(e){e!=this._uisprite&&(this._uisprite=e,this._shellSprite.removeChildren(0,this._shellSprite.numChildren-1),e&&this._shellSprite.addChild(e),this._resizeRT(),this.boundsChange=!0)}get sprite(){return this._uisprite}set prefab(e){this._prefab=e,this.sprite=e?e.create():null}get prefab(){return this._prefab}set scale(e){e.x<=0||e.y<=0||(e.cloneTo(this._size),this._resizeRT(),this.boundsChange=!0,this._sizeChange=!0)}get scale(){return this._size}set renderMode(e){this.sharedMaterials[0].materialRenderMode=e,this.boundsChange=!0}get renderMode(){return this.sharedMaterials[0]||(this.sharedMaterials[0]=this._ui3DMat),this.sharedMaterials[0].materialRenderMode}set cull(e){this.sharedMaterials[0]&&(this.sharedMaterials[0].cull=e)}get cull(){let e=this.sharedMaterials[0];return e||(e=this._ui3DMat),e.cull}get resolutionRate(){return this._resolutionRate}set resolutionRate(e){e<=0||this._resolutionRate!=e&&(this._resolutionRate=e,this._resizeRT())}get billboard(){return this._view}set billboard(e){this._view=e,this._sizeChange=!0,this.boundsChange=!0}get enableHit(){return this._hit}set enableHit(e){this._hit=e}constructor(){super(),this._sizeChange=!0,this._view=!0,this._bindPropertyName="u_AlbedoTexture",this._hit=!1,this._uiPlane=new Plane(new t.Vector3,0),this._size=new t.Vector2(1,1),this._resolutionRate=128,this._shellSprite=new t.Sprite,this._shellSprite.name="UI3D",this._shellSprite._setBit(t.NodeFlags.DISPLAYED_INSTAGE,!0),this._shellSprite._setBit(t.NodeFlags.ACTIVE_INHIERARCHY,!0),this._shellSprite._parent=t.ILaya.stage,this._shaderValues.addDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0),this._ui3DMat=new UnlitMaterial,this._ui3DMat.materialRenderMode=e.MaterialRenderMode.RENDERMODE_OPAQUE,this._ui3DMat.cull=t.RenderState.CULL_BACK}_addRenderElement(){var e=this._renderElements;this._setMaterialTexture();var t=this.sharedMaterials[0],a=new RenderElement;a.setTransform(this.owner._transform),a.render=this,a.material=t,this._geometry=new UI3DGeometry(this),a.setGeometry(this._geometry),e.push(a)}_resizeRT(){let e=this._size.x*this._resolutionRate,a=this._size.y*this._resolutionRate;this._rendertexure2D?this._rendertexure2D.width==e&&this._rendertexure2D.height==a||(this._rendertexure2D.destroy(),this._rendertexure2D=new t.RenderTexture2D(e,a,t.RenderTargetFormat.R8G8B8A8,t.RenderTargetFormat.None),this._rendertexure2D._invertY=!0,this._setMaterialTexture()):(this._rendertexure2D=new t.RenderTexture2D(e,a,t.RenderTargetFormat.R8G8B8A8,t.RenderTargetFormat.None),this._rendertexure2D._invertY=!0),this._submitRT()}onPreRender(){if(this.billboard||this._sizeChange)if(this._sizeChange=!1,this.boundsChange=!0,this.billboard){let e=this.owner.scene.cullInfoCamera;this._geometry._resizeViewVertexData(this._size,e._forward,e._up,this.billboard,this.owner.transform.position)}else this._geometry._resizeWorldVertexData(this._size,this.owner.transform.worldMatrix);this._updatePlane()}_updatePlane(){let e=this._geometry._positionArray;Plane.createPlaneBy3P(e[0],e[1],e[2],this._uiPlane)}_parseHit(e){if(!this._uisprite)return null;let a=UI3D.temp0,r=UI3D.temp1,i=UI3D.temp2,n=this._geometry._positionArray;if(Utils3D.PointinTriangle(n[0],n[1],n[2],e)||Utils3D.PointinTriangle(n[3],n[2],n[1],e)){t.Vector3.subtract(n[2],n[3],a),t.Vector3.subtract(n[2],n[0],r),t.Vector3.subtract(n[2],e,i),t.Vector3.normalize(a,a),t.Vector3.normalize(r,r);let s=Math.abs(t.Vector3.dot(a,i)/this.scale.x),o=Math.abs(t.Vector3.dot(r,i)/this.scale.y),l=s*this._rendertexure2D.width,h=(1-o)*this._rendertexure2D.height,c=t.InputManager.inst.getSpriteUnderPoint(this._uisprite,l,h);return c||this._uisprite}return null}getUITexture(){return this._rendertexure2D}_getCameraDistance(e){return t.Vector3.distance(e,this.owner.transform.position)}_renderUpdate(e,a){this._applyLightMapParams(),this._applyReflection(),this._setShaderValue(Sprite3D.WORLDMATRIX,t.ShaderDataType.Matrix4x4,t.Matrix4x4.DEFAULT),this._worldParams.x=a.getFrontFaceValue(),this._setShaderValue(Sprite3D.WORLDINVERTFRONT,t.ShaderDataType.Vector4,this._worldParams)}_submitRT(){this._rendertexure2D&&this._shellSprite.drawToTexture(this._rendertexure2D.width,this._rendertexure2D.height,0,0,this._rendertexure2D),this._setMaterialTexture()}_setMaterialTexture(){this._sharedMaterials[0]||(this._sharedMaterials[0]=this._ui3DMat),this._sharedMaterials[0].hasDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE)||this._sharedMaterials[0].addDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE),this._sharedMaterials[0].setTexture(this._bindPropertyName,this._rendertexure2D)}_checkUIPos(e){if(!this.enableHit)return!1;let t=Picker.rayPlaneIntersection(e,this._uiPlane);return!!t&&this._parseHit(t)}_calculateBoundingBox(){this._transform.worldMatrix,this._geometry.bounds.cloneTo(this._bounds)}_onAdded(){super._onAdded(),this._addRenderElement()}_onDisable(){super._onDisable(),this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._transByRotate),this.owner.scene._UI3DManager.remove(this)}_onEnable(){super._onEnable(),this.owner.scene._UI3DManager.add(this),this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._transByRotate)}_onDestroy(){super._onDestroy(),this._rendertexure2D&&this._rendertexure2D.destroy(),this._uisprite&&this._uisprite.destroy(),this._shellSprite&&this._shellSprite.destroy(),this._ui3DMat&&this._ui3DMat.destroy(),this._resolutionRate=null,this._uiPlane=null,this._size=null}_transByRotate(){this.billboard||(this._sizeChange=!0),this.boundsChange=!0}}UI3D.temp0=new t.Vector3,UI3D.temp1=new t.Vector3,UI3D.temp2=new t.Vector3,UI3D.DEBUG=!1;var w;t.Loader.registerLoader(["lani"],class{load(e){let a=t.AssetDb.inst.getSubAssetURL(e.url,e.uuid,null,"lani");return e.loader.fetch(a,"arraybuffer",e.progress.createCallback(),e.options).then((e=>e?AnimationClip._parse(e):null))}},t.Loader.ANIMATIONCLIP);t.Loader.registerLoader(["ltc","ltcb","ltcb.ls","cubemap"],class{constructor(){w||(w={"WhiteTextureCube.ltc":t.TextureCube.whiteTexture,"BlackTextureCube.ltc":t.TextureCube.blackTexture,"GrayTextureCube.ltc":t.TextureCube.grayTexture})}load(e){if(-1!=e.url.indexOf("internal/")){let a=w[t.Utils.getBaseName(e.url)];if(a)return Promise.resolve(a)}if("ktx"==e.ext||"cubemap"==e.ext){let a=e.url;return"cubemap"==e.ext&&(a=t.AssetDb.inst.getSubAssetURL(a,e.uuid,"0","ktx")),e.loader.fetch(a,"arraybuffer",e.progress.createCallback(),e.options).then((a=>{if(!a)return null;let r=t.KTXTextureInfo.getKTXTextureInfo(a);if(r.dimension!=t.TextureDimension.Cube)return t.Loader.warn("ktxInfo.dimension != TextureDimension.Cube! "+e.url),null;let i=new t.TextureCube(r.width,r.format,r.mipmapCount>1,r.sRGB);i.setKTXData(r);let n=e.obsoluteInst;return n&&n instanceof t.TextureCube&&(i=this.move(n,i)),i}))}return"ltcb"==e.ext||"ltcb.ls"==e.ext?e.loader.fetch(e.url,"arraybuffer",e.progress.createCallback(),e.options).then((a=>{if(!a)return null;let r=new t.Byte(a),i=r.readUTFString();if("LAYATEXTURECUBE:0000"!==i)return console.warn(`CubemapBinLoader: unknow version. ${i}`),null;let n=r.readUint8(),s=r.getUint8(),o=r.readUint16(),l=r.getUint8(),h=r.getUint8(),c=r.getUint8(),d=r.getUint8(),u=new t.TextureCube(o,n,s>1);u.setPixelsData(null,!1,!1),u.filterMode=l,u.wrapModeU=h,u.wrapModeV=c,u.anisoLevel=d;let _=r.pos,m=o;for(let e=0;e<s;e++){let t=new Array(6),r=m*m*u._getFormatByteCount();for(let e=0;e<6;e++)t[e]=new Uint8Array(a,_,r),_+=r;u.updateSubPixelsData(t,0,0,m,m,e,!1,!1,!1),m/=2}let f=e.obsoluteInst;return f&&f instanceof t.TextureCube&&(u=this.move(f,u)),u})):e.loader.fetch(e.url,"json",e.progress.createCallback(.2),e.options).then((a=>{if(!a)return null;let r=t.URL.getPath(e.url),i=[t.URL.join(r,a.front),t.URL.join(r,a.back),t.URL.join(r,a.left),t.URL.join(r,a.right),t.URL.join(r,a.up),t.URL.join(r,a.down)];return Promise.all(i.map((t=>t?e.loader.fetch(t,"image",e.progress.createCallback(),e.options):Promise.resolve(null)))).then((a=>{var r,i;let n=e.options.constructParams,s=n?n[0]:null!==(i=null===(r=a[0])||void 0===r?void 0:r.width)&&void 0!==i?i:1,o=n?n[1]:t.TextureFormat.R8G8B8A8,l=!!n&&n[3],h=!n||n[5],c=new t.TextureCube(s,o,l,h);c.setImageData(a,!1,!1);let d=e.obsoluteInst;return d&&d instanceof t.TextureCube&&(c=this.move(d,c)),c}))}))}move(e,a){return e._texture=a._texture,e.width=a.width,e.height=a.height,e.obsolute=!1,delete t.Resource._idResourcesMap[a.id],e}},t.Loader.TEXTURECUBE);class MaterialParser{static parse(e){let a=e.props;switch(e.version){case"LAYAMATERIAL:01":case"LAYAMATERIAL:02":case"LAYAMATERIAL:03":let t=MaterialParser.parseLegacy(e);return t.oldparseEndEvent(),t;case"LAYAMATERIAL:04":break;default:throw new Error(`unkonwn material version: ${e.version}`)}let r=new Material;r.setShaderName(a.type);for(let e in a)switch(e){case"type":case"name":break;case"defines":let n=a[e];for(let e=0,a=n.length;e<a;e++){let a=t.Shader3D.getDefineByName(n[e]);r._shaderValues.addDefine(a)}break;case"textures":let s=a[e];for(let e=0,a=s.length;e<a;e++){let a=s[e],i=a.path;i&&r._shaderValues.setTexture(t.Shader3D.propertyNameToID(a.name),t.Loader.getBaseTexture(i))}break;case"renderQueue":r.renderQueue=a[e];break;case"alphaTest":r.alphaTest=a[e];break;case"materialRenderMode":r.materialRenderMode=a[e];break;default:let o=a[e],l=t.Shader3D.propertyNameToID(e);switch(l){case Material.CULL:r.cull=o;break;case Material.BLEND:r.blend=o;break;case Material.BLEND_SRC:r.blendSrc=o;break;case Material.BLEND_DST:r.blendDst=o;break;case Material.DEPTH_TEST:r.depthTest=o;break;case Material.DEPTH_WRITE:r.depthWrite=!!a[e];break;default:if(o.length){var i=o;switch(i.length){case 2:r._shaderValues.setVector2(l,new t.Vector2(i[0],i[1]));break;case 3:r._shaderValues.setVector3(l,new t.Vector3(i[0],i[1],i[2]));break;case 4:r._shaderValues.getColor(l)?r._shaderValues.setColor(l,new t.Color(i[0],i[1],i[2],i[3])):r._shaderValues.setVector(l,new t.Vector4(i[0],i[1],i[2],i[3]));break;default:r._shaderValues.setBuffer(l,i)}}else r._shaderValues.setNumber(l,a[e])}}return r}static collectLinks(e,a){var r;let i=[],n=null===(r=e.props)||void 0===r?void 0:r.textures;if(n)for(let e=0,r=n.length;e<r;e++){let r=n[e],s=r.path;s&&(r.path=t.URL.join(a,s),i.push({url:r.path,type:t.Loader.TEXTURE2D,constructParams:r.constructParams,propertyParams:r.propertyParams}))}return i}static parseLegacy(e){let a,r=e,i=r.props,n=i.type,s=t.ClassUtils.getClass(n);switch(!s&&n&&n.startsWith("Laya.")&&(s=t.ClassUtils.getClass(n.substring(5))),s?a=new s:(a=new Material,a.setShaderName(n)),r.version){case"LAYAMATERIAL:01":case"LAYAMATERIAL:02":for(let e in i)switch(e){case"type":break;case"vectors":let r=i[e];for(let e=0,i=r.length;e<i;e++){let i=r[e],n=i.value;switch(n.length){case 2:a[i.name]=new t.Vector2(n[0],n[1]);break;case 3:a[i.name]instanceof t.Color?a[i.name]=new t.Color(n[0],n[1],n[2],1):a[i.name]=new t.Vector3(n[0],n[1],n[2]);break;case 4:a[i.name]instanceof t.Color?a[i.name]=new t.Color(n[0],n[1],n[2],n[3]):a[i.name]=new t.Vector4(n[0],n[1],n[2],n[3]);break;default:throw new Error("unkonwn material color length: "+n.length)}}break;case"colors":let n=i[e];for(let e=0,r=n.length;e<r;e++){let r=n[e],i=r.value;a[r.name]=new t.Color(i[0],i[1],i[2],i[3])}break;case"textures":let s=i[e];for(let e=0,r=s.length;e<r;e++){let r=s[e],i=r.path;i&&(a[r.name]=t.Loader.getBaseTexture(i))}break;case"defines":let o=i[e];for(let e=0,r=o.length;e<r;e++){let r=t.Shader3D.getDefineByName(o[e]);a._shaderValues.addDefine(r)}break;case"renderStates":let l=i[e][0];a.blend=l.blend,a.cull=this._getRenderStateParams(l.cull),a.depthTest=this._getRenderStateParams(l.depthTest),a.depthWrite=l.depthWrite,a.blendSrc=this._getRenderStateParams(l.srcBlend),a.blendDst=this._getRenderStateParams(l.dstBlend);break;case"cull":a.cull=this._getRenderStateParams(i[e]);break;case"blend":a.blend=this._getRenderStateParams(i[e]);break;case"depthWrite":a.depthWrite=!!i[e];break;case"srcBlend":case"blendSrc":a.blendSrc=this._getRenderStateParams(i[e]);break;case"dstBlend":case"blendDst":a.blendDst=this._getRenderStateParams(i[e]);break;case"depthTest":a.depthTest=this._getRenderStateParams(i[e]);break;default:a[e]=i[e]}break;case"LAYAMATERIAL:03":for(let e in i)switch(e){case"type":case"name":break;case"defines":let r=i[e];for(let e=0,i=r.length;e<i;e++){let i=t.Shader3D.getDefineByName(r[e]);a._shaderValues.addDefine(i)}break;case"textures":let n=i[e];for(let e=0,r=n.length;e<r;e++){let r=n[e],i=r.path;i&&a._shaderValues.setTexture(t.Shader3D.propertyNameToID(r.name),t.Loader.getBaseTexture(i))}break;case"renderQueue":a.renderQueue=i[e];break;default:let s=i[e],l=t.Shader3D.propertyNameToID(e);switch(l){case Material.CULL:a.cull=this._getRenderStateParams(s);break;case Material.BLEND:a.blend=this._getRenderStateParams(s);break;case Material.BLEND_SRC:a.blendSrc=this._getRenderStateParams(s);break;case Material.BLEND_DST:a.blendDst=this._getRenderStateParams(s);break;case Material.DEPTH_TEST:a.depthTest=this._getRenderStateParams(s);break;case Material.DEPTH_WRITE:a.depthWrite=!!i[e];break;default:if(s.length){var o=s;switch(o.length){case 2:a._shaderValues.setVector2(l,new t.Vector2(o[0],o[1]));break;case 3:a._shaderValues.setVector3(l,new t.Vector3(o[0],o[1],o[2]));break;case 4:a._shaderValues.getColor(l)?a._shaderValues.setColor(l,new t.Color(o[0],o[1],o[2],o[3])):a._shaderValues.setVector(l,new t.Vector4(o[0],o[1],o[2],o[3]));break;default:throw new Error("unkonwn material color length: "+o.length)}}else a._shaderValues.setNumber(l,i[e])}}break;default:throw new Error("unkonwn material version: "+r.version)}return a}static _getRenderStateParams(e){switch(e){case 768:return t.BlendFactor.SourceColor;case 769:return t.BlendFactor.OneMinusSourceColor;case 774:return t.BlendFactor.DestinationColor;case 775:return t.BlendFactor.OneMinusDestinationColor;case 770:return t.BlendFactor.SourceAlpha;case 771:return t.BlendFactor.OneMinusSourceAlpha;case 772:return t.BlendFactor.DestinationAlpha;case 773:return t.BlendFactor.OneMinusDestinationAlpha;case 776:return t.BlendFactor.SourceAlphaSaturate;case 32774:return t.BlendEquationSeparate.ADD;case 32778:return t.BlendEquationSeparate.SUBTRACT;case 32779:return t.BlendEquationSeparate.REVERSE_SUBTRACT;case 512:return t.CompareFunction.Never;case 513:return t.CompareFunction.Less;case 514:return t.CompareFunction.Equal;case 515:return t.CompareFunction.LessEqual;case 516:return t.CompareFunction.Greater;case 517:return t.CompareFunction.NotEqual;case 518:return t.CompareFunction.GreaterEqual;case 519:return t.CompareFunction.Always;default:return e}}}t.Loader.registerLoader(["lmat"],class{load(e){return e.loader.fetch(e.url,"json",e.progress.createCallback(.3),e.options).then((a=>{if(!a)return null;let r=t.URL.getPath(e.url),i=MaterialParser.collectLinks(a,r);if("LAYAMATERIAL:04"===a.version){let n=a.props.type;if(!t.Shader3D.find(n)){let s=t.AssetDb.inst.shaderName_to_URL(n);if(!s)return t.AssetDb.inst.shaderName_to_URL_async(n).then((s=>(s?i.push(s):a.props.shaderPath?i.push(t.URL.join(r,a.props.shaderPath)):t.Loader.warn(`unknown shaderName: ${n}`),this.load2(e,a,i))));i.push(s)}}return this.load2(e,a,i)}))}load2(e,t,a){if(0==a.length){let a=MaterialParser.parse(t),r=e.obsoluteInst;return r&&(a=this.move(r,a)),Promise.resolve(a)}return e.loader.load(a,e.options,e.progress.createCallback()).then((()=>{let a=MaterialParser.parse(t),r=e.obsoluteInst;return e.obsoluteInst&&(a=this.move(r,a)),a}))}move(e,t){return e._shaderValues.reset(),e.setShaderName(t._shader.name),t._shaderValues.cloneTo(e._shaderValues),e.renderQueue=t.renderQueue,e.obsolute=!1,t.destroy(),e}},t.Loader.MATERIAL);class LoadModelV04{static parse(e,t,a,r){LoadModelV04._mesh=a,LoadModelV04._subMeshes=r,LoadModelV04._version=t,LoadModelV04._readData=e,LoadModelV04.READ_DATA(),LoadModelV04.READ_BLOCK(),LoadModelV04.READ_STRINGS();for(var i=0,n=LoadModelV04._BLOCK.count;i<n;i++){LoadModelV04._readData.pos=LoadModelV04._BLOCK.blockStarts[i];var s=LoadModelV04._readData.getUint16(),o=LoadModelV04._strings[s],l=LoadModelV04["READ_"+o];if(null==l)throw new Error("model file err,no this function:"+s+" "+o);l.call(null)}LoadModelV04._strings.length=0,LoadModelV04._readData=null,LoadModelV04._version=null,LoadModelV04._mesh=null,LoadModelV04._subMeshes=null}static _readString(){return LoadModelV04._strings[LoadModelV04._readData.getUint16()]}static READ_DATA(){LoadModelV04._DATA.offset=LoadModelV04._readData.getUint32(),LoadModelV04._DATA.size=LoadModelV04._readData.getUint32()}static READ_BLOCK(){for(var e=LoadModelV04._BLOCK.count=LoadModelV04._readData.getUint16(),t=LoadModelV04._BLOCK.blockStarts=[],a=LoadModelV04._BLOCK.blockLengths=[],r=0;r<e;r++)t.push(LoadModelV04._readData.getUint32()),a.push(LoadModelV04._readData.getUint32())}static READ_STRINGS(){var e=LoadModelV04._readData.getUint32(),t=LoadModelV04._readData.getUint16(),a=LoadModelV04._readData.pos;LoadModelV04._readData.pos=e+LoadModelV04._DATA.offset;for(var r=0;r<t;r++)LoadModelV04._strings[r]=LoadModelV04._readData.readUTFString();LoadModelV04._readData.pos=a}static READ_MESH(){LoadModelV04._readString();var e,a=LoadModelV04._readData.__getBuffer(),r=0,i=LoadModelV04._readData.getInt16(),n=LoadModelV04._DATA.offset;for(e=0;e<i;e++){var s,o=n+LoadModelV04._readData.getUint32(),l=LoadModelV04._readData.getUint32(),h=a.slice(o,o+l),c=new Float32Array(h),d=LoadModelV04._readString();switch(LoadModelV04._version){case"LAYAMODEL:0301":case"LAYAMODEL:0400":s=t.VertexMesh.getVertexDeclaration(d);break;case"LAYAMODEL:0401":s=t.VertexMesh.getVertexDeclaration(d,!1);break;default:throw new Error("LoadModelV03: unknown version.")}if(!s)throw new Error("LoadModelV03: unknown vertexDeclaration.");var u=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*c.length,t.BufferUsage.Static,!0);u.vertexDeclaration=s,u.setData(c.buffer),LoadModelV04._mesh._vertexBuffer=u,LoadModelV04._mesh._vertexCount+=u._byteLength/s.vertexStride,r+=4*c.length}var _=n+LoadModelV04._readData.getUint32(),m=LoadModelV04._readData.getUint32(),f=new Uint16Array(a.slice(_,_+m)),S=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,m/2,t.BufferUsage.Static,!0);S.setData(f),LoadModelV04._mesh._indexBuffer=S,r+=2*S.indexCount,LoadModelV04._mesh._setBuffer(LoadModelV04._mesh._vertexBuffer,S),LoadModelV04._mesh._setCPUMemory(r),LoadModelV04._mesh._setGPUMemory(r);var g=LoadModelV04._mesh._boneNames=[],p=LoadModelV04._readData.getUint16();for(g.length=p,e=0;e<p;e++)g[e]=LoadModelV04._strings[LoadModelV04._readData.getUint16()];LoadModelV04._readData.pos+=8;var D=LoadModelV04._readData.getUint32(),T=LoadModelV04._readData.getUint32(),E=new Float32Array(a.slice(n+D,n+D+T)),C=E.length,A=LoadModelV04._mesh._inverseBindPosesBuffer=new ArrayBuffer(4*C);for(LoadModelV04._mesh._inverseBindPoses=[],LoadModelV04._mesh._instanceBufferStateType=0!=C?Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL,e=0;e<C;e+=16){var R=new t.Matrix4x4(E[e+0],E[e+1],E[e+2],E[e+3],E[e+4],E[e+5],E[e+6],E[e+7],E[e+8],E[e+9],E[e+10],E[e+11],E[e+12],E[e+13],E[e+14],E[e+15],new Float32Array(A,4*e,16));LoadModelV04._mesh._inverseBindPoses[e/16]=R}return!0}static READ_SUBMESH(){var e=LoadModelV04._readData.__getBuffer(),t=new SubMesh(LoadModelV04._mesh);LoadModelV04._readData.getInt16(),LoadModelV04._readData.getUint32(),LoadModelV04._readData.getUint32();var a=LoadModelV04._readData.getUint32(),r=LoadModelV04._readData.getUint32(),i=LoadModelV04._mesh._indexBuffer;t._indexBuffer=i,t._setIndexRange(a,r);var n=LoadModelV04._mesh._vertexBuffer;t._vertexBuffer=n;var s=LoadModelV04._DATA.offset,o=t._subIndexBufferStart,l=t._subIndexBufferCount,h=t._boneIndicesList,c=LoadModelV04._readData.getUint16();o.length=c,l.length=c,h.length=c;var d=LoadModelV04._mesh._skinnedMatrixCaches,u=LoadModelV04._subMeshes.length;d.length=LoadModelV04._mesh._inverseBindPoses.length;for(var _=0;_<c;_++){o[_]=LoadModelV04._readData.getUint32(),l[_]=LoadModelV04._readData.getUint32();for(var m=LoadModelV04._readData.getUint32(),f=LoadModelV04._readData.getUint32(),S=h[_]=new Uint16Array(e.slice(s+m,s+m+f)),g=S.length,p=0;p<g;p++){var D=S[p];d[D]||(d[D]=new skinnedMatrixCache(u,_,p))}}return LoadModelV04._subMeshes.push(t),!0}}LoadModelV04._BLOCK={count:0},LoadModelV04._DATA={offset:0,size:0},LoadModelV04._strings=[];class MorphTarget{constructor(){this.fullWeight=1}}class MorphTargetChannel{constructor(){this.targetCount=0,this.targets=new Array}getTargetByIndex(e){return this.targets[e]}addTarget(e){this.targetCount++,this.targets.push(e),this.targets.sort(((e,t)=>e.fullWeight-t.fullWeight))}}class MorphTargetData{constructor(){this.targets=new Array,this.channels=new Array,this.bounds=new Bounds,this.params=new t.Vector4}addMorphChannel(e){e._index=this.channels.length,this.channels.push(e),e.targets.forEach((e=>{e._index=this.targets.length,this.targets.push(e)}))}getMorphChannel(e){return this.channels.find((t=>t.name==e))}getMorphChannelbyIndex(e){return this.channels[e]}get targetCount(){return this.targets.length}get channelCount(){return this.channels.length}initData(){if(t.LayaGL.renderEngine.getCapable(t.RenderCapable.Texture3D)){let e=this.targets.length,a=t.LayaGL.renderEngine.getParams(t.RenderParams.MAX_Texture_Size),r=this.vertexCount,i=this.vertexDec,n=i.vertexStride/4,s=i.vertexElementCount;this.elementCount=s;let o=Math.floor(s*r/a)+1,l=4;this.targetTexture=new t.Texture2DArray(a,o,e,t.TextureFormat.R32G32B32A32,!1,!1,!1),this.targetTexture.filterMode=t.FilterMode.Point,this.targetTexture.anisoLevel=1,this.targetTexture.lock=!0;let h=new Float32Array(a*o*e*l).fill(0),c=this.attributeOffset=new t.Vector4(0,0,0,0);c.x=i._vertexElements.indexOf(i.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0)),c.y=i._vertexElements.indexOf(i.getVertexElementByUsage(t.VertexMesh.MESH_NORMAL0)),c.z=i._vertexElements.indexOf(i.getVertexElementByUsage(t.VertexMesh.MESH_TANGENT0));let d=a*o;for(let a=0;a<e;a++){let e=this.targets[a];for(let o=0;o<r;o++){let r=(a*d+o*s)*l;i._vertexElements.forEach(((a,i)=>{let s=r+4*i,l=a.offset/4,c=o*n+l;switch(a.elementUsage){case t.VertexMesh.MESH_POSITION0:case t.VertexMesh.MESH_NORMAL0:h[s]=e.data[c],h[s+1]=e.data[c+1],h[s+2]=e.data[c+2];break;case t.VertexMesh.MESH_TANGENT0:h[s]=e.data[c],h[s+1]=e.data[c+1],h[s+2]=e.data[c+2],h[s+3]=e.data[c+3]}}))}}this.targetTexture.setPixlesData(h,!1,!1),this.params.setValue(this.targetTexture.width,this.targetTexture.height,this.elementCount,this.channelCount)}}destroy(){this.targetTexture&&(this.targetTexture.lock=!1,this.targetTexture.destroy(),this.targetTexture=null),this.targets=null,this.channels=null}clone(){let e=new MorphTargetData;e.bounds.setMin(this.bounds.getMin()),e.bounds.setMax(this.bounds.getMax()),e.vertexCount=this.vertexCount,e.vertexDec=this.vertexDec;let t=this.channelCount;for(let a=0;a<t;a++){let t=this.getMorphChannelbyIndex(a),r=new MorphTargetChannel;r.name=t.name;let i=t.targetCount;for(let e=0;e<i;e++){let a=t.getTargetByIndex(e),i=new MorphTarget;i.name=a.name,i.fullWeight=a.fullWeight,i.data=new Float32Array(a.data),r.addTarget(i)}e.addMorphChannel(r)}return e.initData(),e}}class LoadModelV05{static parse(e,t,a,r){LoadModelV05._mesh=a,LoadModelV05._subMeshes=r,LoadModelV05._version=t,LoadModelV05._readData=e,LoadModelV05.READ_DATA(),LoadModelV05.READ_BLOCK(),LoadModelV05.READ_STRINGS();for(var i=0,n=LoadModelV05._BLOCK.count;i<n;i++){LoadModelV05._readData.pos=LoadModelV05._BLOCK.blockStarts[i];var s=LoadModelV05._readData.getUint16(),o=LoadModelV05._strings[s],l=LoadModelV05["READ_"+o];if(null==l)throw new Error("model file err,no this function:"+s+" "+o);l.call(null)}LoadModelV05._strings.length=0,LoadModelV05._readData=null,LoadModelV05._version=null,LoadModelV05._mesh=null,LoadModelV05._subMeshes=null}static _readString(){return LoadModelV05._strings[LoadModelV05._readData.getUint16()]}static READ_DATA(){LoadModelV05._DATA.offset=LoadModelV05._readData.getUint32(),LoadModelV05._DATA.size=LoadModelV05._readData.getUint32()}static READ_BLOCK(){for(var e=LoadModelV05._BLOCK.count=LoadModelV05._readData.getUint16(),t=LoadModelV05._BLOCK.blockStarts=[],a=LoadModelV05._BLOCK.blockLengths=[],r=0;r<e;r++)t.push(LoadModelV05._readData.getUint32()),a.push(LoadModelV05._readData.getUint32())}static READ_STRINGS(){var e=LoadModelV05._readData.getUint32(),t=LoadModelV05._readData.getUint16(),a=LoadModelV05._readData.pos;LoadModelV05._readData.pos=e+LoadModelV05._DATA.offset;for(var r=0;r<t;r++)LoadModelV05._strings[r]=LoadModelV05._readData.readUTFString();LoadModelV05._readData.pos=a}static READ_MESH(){var e,a=0;LoadModelV05._readString();var r=LoadModelV05._readData,i=r.__getBuffer(),n=r.getInt16(),s=LoadModelV05._DATA.offset;for(e=0;e<n;e++){var o,l,h,c=s+r.getUint32(),d=r.getUint32(),u=LoadModelV05._readString(),_=t.VertexMesh.getVertexDeclaration(u,!1),m=_.vertexStride,f=u.split(","),S=f.length,g=LoadModelV05._mesh;switch(LoadModelV05._version){case"LAYAMODEL:05":case"LAYAMODEL:0501":case"LAYAMODEL:0502":o=i.slice(c,c+d*m),l=new Float32Array(o),h=new Uint8Array(o);break;case"LAYAMODEL:COMPRESSION_05":case"LAYAMODEL:COMPRESSION_0501":o=new ArrayBuffer(m*d),l=new Float32Array(o),h=new Uint8Array(o);var p=r.pos;r.pos=c;for(var D=0;D<d;D++)for(var T,E=D*m,C=0;C<S;C++)switch(f[C]){case"POSITION":l[T=E/4]=t.HalfFloatUtils.convertToNumber(r.getUint16()),l[T+1]=t.HalfFloatUtils.convertToNumber(r.getUint16()),l[T+2]=t.HalfFloatUtils.convertToNumber(r.getUint16()),E+=12;break;case"NORMAL":l[T=E/4]=r.getUint8()/127.5-1,l[T+1]=r.getUint8()/127.5-1,l[T+2]=r.getUint8()/127.5-1,E+=12;break;case"COLOR":case"BLENDWEIGHT":l[T=E/4]=r.getUint8()/255,l[T+1]=r.getUint8()/255,l[T+2]=r.getUint8()/255,l[T+3]=r.getUint8()/255,E+=16;break;case"UV":case"UV1":l[T=E/4]=t.HalfFloatUtils.convertToNumber(r.getUint16()),l[T+1]=t.HalfFloatUtils.convertToNumber(r.getUint16()),E+=8;break;case"BLENDINDICES":h[E]=r.getUint8(),h[E+1]=r.getUint8(),h[E+2]=r.getUint8(),h[E+3]=r.getUint8(),E+=4;break;case"TANGENT":l[T=E/4]=r.getUint8()/127.5-1,l[T+1]=r.getUint8()/127.5-1,l[T+2]=r.getUint8()/127.5-1,l[T+3]=r.getUint8()/127.5-1,E+=16}r.pos=p}var A=t.LayaGL.renderOBJCreate.createVertexBuffer3D(o.byteLength,t.BufferUsage.Static,!0);A.vertexDeclaration=_,A.setData(o);d=A._byteLength/_.vertexStride;g._indexFormat=d>65535?t.IndexFormat.UInt32:t.IndexFormat.UInt16,g._vertexBuffer=A,g._vertexCount+=d,a+=4*l.length}var R,x=s+r.getUint32(),M=r.getUint32();R=g.indexFormat==t.IndexFormat.UInt32?new Uint32Array(i.slice(x,x+M)):new Uint16Array(i.slice(x,x+M));var y=t.LayaGL.renderOBJCreate.createIndexBuffer3D(g.indexFormat,R.length,t.BufferUsage.Static,!0);if(y.setData(R),g._indexBuffer=y,g._setBuffer(g._vertexBuffer,y),a+=2*y.indexCount,g._setCPUMemory(a),g._setGPUMemory(a),"LAYAMODEL:0501"==LoadModelV05._version||"LAYAMODEL:COMPRESSION_0501"==LoadModelV05._version||"LAYAMODEL:0502"==LoadModelV05._version){var I=g.bounds,v=I.getMin(),L=I.getMax();v.setValue(r.getFloat32(),r.getFloat32(),r.getFloat32()),L.setValue(r.getFloat32(),r.getFloat32(),r.getFloat32()),I.setMin(v),I.setMax(L),g.bounds=I}var b=g._boneNames=[],P=r.getUint16();for(b.length=P,e=0;e<P;e++)b[e]=LoadModelV05._strings[r.getUint16()];var O=r.getUint32(),B=r.getUint32(),V=new Float32Array(i.slice(s+O,s+O+B)),w=V.length,N=g._inverseBindPosesBuffer=new ArrayBuffer(4*w);for(g._inverseBindPoses=[],g._instanceBufferStateType=0!=w?Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL,e=0;e<w;e+=16){var F=new t.Matrix4x4(V[e+0],V[e+1],V[e+2],V[e+3],V[e+4],V[e+5],V[e+6],V[e+7],V[e+8],V[e+9],V[e+10],V[e+11],V[e+12],V[e+13],V[e+14],V[e+15],new Float32Array(N,4*e,16));g._inverseBindPoses[e/16]=F}return!0}static READ_SUBMESH(){var e=LoadModelV05._readData,t=e.__getBuffer(),a=new SubMesh(LoadModelV05._mesh);e.getInt16();var r=e.getUint32(),i=e.getUint32(),n=LoadModelV05._mesh._indexBuffer;a._indexBuffer=n,a._setIndexRange(r,i);var s=LoadModelV05._mesh._vertexBuffer;a._vertexBuffer=s;var o=LoadModelV05._DATA.offset,l=a._subIndexBufferStart,h=a._subIndexBufferCount,c=a._boneIndicesList,d=e.getUint16();l.length=d,h.length=d,c.length=d;var u=LoadModelV05._mesh._skinnedMatrixCaches,_=LoadModelV05._subMeshes.length;u.length=LoadModelV05._mesh._inverseBindPoses.length;for(var m=0;m<d;m++){l[m]=e.getUint32(),h[m]=e.getUint32();for(var f=e.getUint32(),S=e.getUint32(),g=c[m]=new Uint16Array(t.slice(o+f,o+f+S)),p=0,D=g.length;p<D;p++){var T=g[p];u[T]||(u[T]=new skinnedMatrixCache(_,m,p))}}return LoadModelV05._subMeshes.push(a),!0}static READ_MORPH(){let e=LoadModelV05._readData,a=e.__getBuffer(),r=LoadModelV05._DATA.offset,i=LoadModelV05._mesh,n=i.morphTargetData=new MorphTargetData,s=LoadModelV05._strings[e.getUint16()];n.vertexDec=t.VertexMesh.getVertexDeclaration(s);let o=n.bounds,l=o.getMin(),h=o.getMax();l.set(e.getFloat32(),e.getFloat32(),e.getFloat32()),h.set(e.getFloat32(),e.getFloat32(),e.getFloat32()),o.setMin(l),o.setMax(h);let c=e.readUint16();for(let t=0;t<c;t++){let t=new MorphTargetChannel;t.name=LoadModelV05._strings[e.getUint16()];let i=e.readUint16();for(let n=0;n<i;n++){let i=new MorphTarget,n=LoadModelV05._strings[e.getUint16()];i.name=n,i.fullWeight=e.readFloat32();let s=e.readUint32(),o=e.readUint32();i.data=new Float32Array(a.slice(r+s,r+s+o)),t.addTarget(i)}n.addMorphChannel(t)}return n.vertexCount=i.vertexCount,n.initData(),!0}static READ_UVSIZE(){LoadModelV05._mesh._width=LoadModelV05._readData.readUint16(),LoadModelV05._mesh._height=LoadModelV05._readData.readUint16()}}LoadModelV05._BLOCK={count:0},LoadModelV05._DATA={offset:0,size:0},LoadModelV05._strings=[];class MeshReader{static _parse(e){var t=new Mesh;return MeshReader.read(e,t,t._subMeshes),t}static read(e,a,r){var i=new t.Byte(e);i.pos=0;var n=i.readUTFString();switch(n){case"LAYAMODEL:0301":case"LAYAMODEL:0400":case"LAYAMODEL:0401":LoadModelV04.parse(i,n,a,r);break;case"LAYAMODEL:05":case"LAYAMODEL:COMPRESSION_05":case"LAYAMODEL:0501":case"LAYAMODEL:COMPRESSION_0501":case"LAYAMODEL:0502":LoadModelV05.parse(i,n,a,r);break;default:throw new Error("unknown mesh version: "+n)}a._setSubMeshes(r),"LAYAMODEL:0501"!=n&&"LAYAMODEL:COMPRESSION_0501"!=n&&"LAYAMODEL:0502"!=n&&a.calculateBounds()}}t.Loader.registerLoader(["lm"],class{load(e){let a=t.AssetDb.inst.getSubAssetURL(e.url,e.uuid,null,"lm");return e.loader.fetch(a,"arraybuffer",e.progress.createCallback(),e.options).then((e=>e?MeshReader._parse(e):null))}},t.Loader.MESH);class HierarchyParserV2{static _createSprite3DInstance(e,t,a){let r;switch(e.type){case"Scene3D":r=new Scene3D;break;case"Sprite3D":r=new Sprite3D;break;case"MeshSprite3D":r=new MeshSprite3D,a&&e.props.isStatic&&a.push(r);break;case"SkinnedMeshSprite3D":r=new SkinnedMeshSprite3D;break;case"SimpleSkinnedMeshSprite3D":r=new SimpleSkinnedMeshSprite3D;break;case"ShuriKenParticle3D":r=new ShuriKenParticle3D;break;case"Camera":r=new Camera;break;case"DirectionLight":r=new DirectionLight;break;case"PointLight":r=new PointLight;break;case"SpotLight":r=new SpotLight;break;case"TrailSprite3D":r=new TrailSprite3D;break;case"ReflectionProbe":r=new Sprite3D,r.addComponent(ReflectionProbe);break;default:throw new Error("Utils3D:unidentified class type in (.lh) file.")}let i=e.child;if(i)for(let e=0,n=i.length;e<n;e++){let n=HierarchyParserV2._createSprite3DInstance(i[e],t,a);r.addChild(n)}return t[e.instanceID]=r,r}static _createComponentInstance(e,a,r){let i=a[e.instanceID];i._parse(e.props,a);let n=e.child;if(n)for(let e=0,t=n.length;e<t;e++)HierarchyParserV2._createComponentInstance(n[e],a,r);let s=e.components;if(s)for(let e=0,a=s.length;e<a;e++){let a=s[e],n=t.ClassUtils.getClass(a.type);if(n){i.addComponent(n)._parse(a,r)}else console.warn(`Unidentified component type: ${a.type}.`)}}static _createNodeByJson02(e,t){let a={},r={component:[],data:[]},i=HierarchyParserV2._createSprite3DInstance(e,a,t);return HierarchyParserV2._createComponentInstance(e,a,r),HierarchyParserV2._createInteractInstance(r,a),i}static _createInteractInstance(e,t){let a=e.component,r=e.data;for(let e=0,i=a.length;e<i;e++)a[e]._parseInteractive(r[e],t)}static parse(e){let t,a=e.data,r=[];switch(e.version){case"LAYAHIERARCHY:02":case"LAYASCENE3D:02":t=HierarchyParserV2._createNodeByJson02(a,r);break;default:t=HierarchyParserV2._createNodeByJson(a,r)}return t}static _createNodeByJson(e,a){let r;switch(e.type){case"Scene3D":r=new Scene3D;break;case"Sprite3D":r=new Sprite3D;break;case"MeshSprite3D":r=new MeshSprite3D,a&&e.props.isStatic&&a.push(r);break;case"SkinnedMeshSprite3D":r=new SkinnedMeshSprite3D;break;case"ShuriKenParticle3D":r=new ShuriKenParticle3D;break;case"Camera":r=new Camera;break;case"DirectionLight":r=new DirectionLight;break;case"PointLight":r=new PointLight;break;case"SpotLight":r=new SpotLight;break;case"TrailSprite3D":r=new TrailSprite3D;break;default:throw new Error(`Unidentified node type ${e.type}`)}let i=e.child;if(i)for(let e=0,t=i.length;e<t;e++){let t=HierarchyParserV2._createNodeByJson(i[e],a);r.addChild(t)}let n=e.components;if(n)for(let e=0,a=n.length;e<a;e++){let a=n[e],i=t.ClassUtils.getClass(a.type);if(i){r.addComponent(i)._parse(a)}else console.warn(`Unidentified component type: ${a.type}.`)}return r._parse(e.props,null),r}static collectResourceLinks(e,a){let r={},i=[];function addInnerUrl(e,n,s,o){let l=r[e];return void 0===l&&(l=t.URL.join(a,e),i.push({url:l,type:n,constructParams:s,propertyParams:o}),r[e]=l),l}return function check(e){let a=e.props;switch(e.type){case"Scene3D":let r=a.lightmaps;if(r)for(let e=0,a=r.length;e<a;e++){let a=r[e];if(a.path)a.path=addInnerUrl(a.path,t.Loader.TEXTURE2D,a.constructParams,a.propertyParams);else{let e=a.color;e.path=addInnerUrl(e.path,t.Loader.TEXTURE2D,e.constructParams,e.propertyParams);let r=a.direction;r&&(r.path=addInnerUrl(r.path,t.Loader.TEXTURE2D,r.constructParams,r.propertyParams))}}let i=a.reflectionTexture;i&&(a.reflection=addInnerUrl(i,t.Loader.TEXTURECUBE));let n=a.reflection;if(n&&(a.reflection=addInnerUrl(n,t.Loader.TEXTURECUBE)),a.sky){let e=a.sky.material;e&&(e.path=addInnerUrl(e.path,t.Loader.MATERIAL))}break;case"Camera":let s=a.skyboxMaterial;s&&(s.path=addInnerUrl(s.path,t.Loader.MATERIAL));break;case"TrailSprite3D":case"MeshSprite3D":case"SkinnedMeshSprite3D":case"SimpleSkinnedMeshSprite3D":let o=a.meshPath;o&&(a.meshPath=addInnerUrl(o,t.Loader.MESH));let l=a.materials;if(l)for(let e=0,a=l.length;e<a;e++)l[e].path=addInnerUrl(l[e].path,t.Loader.MATERIAL);"SimpleSkinnedMeshSprite3D"==e.type&&a.animatorTexture&&(a.animatorTexture=addInnerUrl(a.animatorTexture,t.Loader.TEXTURE2D));break;case"ShuriKenParticle3D":if(a.main){let e=a.renderer.resources,r=e.mesh,i=e.material;r&&(e.mesh=addInnerUrl(r,t.Loader.MESH)),i&&(e.material=addInnerUrl(i,t.Loader.MATERIAL))}else{let e=a.meshPath;e&&(a.meshPath=addInnerUrl(e,t.Loader.MESH)),a.material.path=addInnerUrl(a.material.path,t.Loader.MATERIAL)}break;case"Terrain":addInnerUrl(a.dataPath,t.Loader.TERRAINRES);break;case"ReflectionProbe":let h=a.reflection;h&&(a.reflection=addInnerUrl(h,t.Loader.TEXTURECUBE))}let r=e.components;if(r)for(let e=0,a=r.length;e<a;e++){let a=r[e];switch(a.type){case"Animator":let e=a.clipPaths;if(e)for(let a=0,r=e.length;a<r;a++)e[a]=addInnerUrl(e[a],t.Loader.ANIMATIONCLIP);else{let e=a.layers;for(let a=0;a<e.length;a++){let r=e[a].states;for(let e=0,a=r.length;e<a;e++){let a=r[e].clipPath;a&&(r[e].clipPath=addInnerUrl(a,t.Loader.ANIMATIONCLIP))}}}break;case"PhysicsCollider":case"Rigidbody3D":case"CharacterController":let r=a.shapes;for(let e=0;e<r.length;e++){let a=r[e];if("MeshColliderShape"===a.type){let e=a.mesh;e&&(a.mesh=addInnerUrl(e,t.Loader.MESH))}}}}let i=e.child;if(i)for(let e=0,t=i.length;e<t;e++)check(i[e])}(e.data),i}}t.HierarchyLoader.v2=HierarchyParserV2;t.Loader.registerLoader(["lavm"],class{load(e){return e.loader.fetch(e.url,"json",e.progress.createCallback(),e.options).then((e=>e?new AvatarMask(e):null))}});class ParseJSON{static parse(e){return this.parseStart(e)}static findIndex(e,t,a,r){var i=e.indexOf(a,t+1);return 0>i&&(i=r),{str:e.substring(t+1,i),i:i}}static finCurrObj(){if(this.type=1,null==this.cobj)return null;if(0==this.currArr.length)return this.cobj.k&&(this.ret[this.cobj.k]=this.cobj.val),null;var e=this.currArr.pop();if(this.cobj.k)if(Array.isArray(e.val)){if(null!=this.cobj.k){var t={};t[this.cobj.k]=this.cobj.val,e.val.push(t)}}else e.val[this.cobj.k]=this.cobj.val;else Array.isArray(this.cobj.val)&&(Array.isArray(e.val)?e.val.push(this.cobj.val):e.val=this.cobj.val);return e}static formatVal(e){if(null==e)return null;var t=Number(e);return isNaN(t)?"false"!=e.toLowerCase()&&("true"==e.toLowerCase()||("null"==e?null:e)):t}static finCurrStr(){null!=this.currStr&&(this.currStr=this.currStr.trim(),""!=this.currStr&&(null!=this.cobj&&(Array.isArray(this.cobj.val)?this.cobj.val.push(this.formatVal(this.currStr)):(this.cobj.val=this.formatVal(this.currStr),this.cobj=this.finCurrObj())),this.currStr=""))}static parseStart(e){this.len=e.length;var t=0;for(this.ret={},this.currStr=null,this.currArr=[],this.cobj=null,this.type=0;t<this.len;){var a=e.charAt(t);if("/"==a){if(t+1<this.len){t+=1;var r=e.charAt(t),i=null;if("/"==r?i="\n":"*"==r&&(i="*/"),null!=i){this.finCurrStr();var n=e.indexOf(i,t);0>n?(console.log("没有找到注释结尾，应该是一直注释到最后了"),t=this.len):t=n+i.length-1}}}else if("}"==a)null!=this.cobj&&(this.finCurrStr(),null!=this.cobj&&(this.cobj=this.finCurrObj())),this.currStr="",this.type=1;else if("{"==a)this.currStr="",this.type=1;else if("'"==a||'"'==a||"‘"==a||"“"==a){"‘"==a?a="’":"“"==a&&(a="”");var s=this.findIndex(e,t,a,this.len);2==this.type&&null!=this.cobj&&Array.isArray(this.cobj.val)?(null!=this.currStr&&(this.currStr=this.currStr.trim(),""!=this.currStr&&this.cobj.val.push(this.formatVal(this.currStr))),this.cobj.val.push(s.str),this.currStr=""):null!=this.currStr&&(this.currStr+=s.str),t=s.i}else if(";"==a||","==a||"\n"==a)this.finCurrStr();else if("]"==a)null!=this.currStr&&null!=this.cobj&&Array.isArray(this.cobj.val)&&(this.currStr=this.currStr.trim(),""!=this.currStr&&this.cobj.val.push(this.formatVal(this.currStr))),null!=this.cobj&&(this.cobj=this.finCurrObj(),this.cobj=this.finCurrObj()),this.currStr="";else if("["==a)2!=this.type?console.warn("没有key值，忽略掉一个数组"):(null!=this.cobj&&this.currArr.push(this.cobj),this.cobj={val:[]});else if(":"==a){if(null!=this.currStr&&1==this.type){if(this.type=2,null!=this.cobj&&this.currArr.push(this.cobj),null!=this.cobj&&Array.isArray(this.cobj.val)){var o=this.cobj;this.cobj={val:{}},o.val.push(this.cobj.val),this.currArr.push(this.cobj)}this.cobj={k:this.currStr.trim(),val:{}},this.currStr=""}}else null!=this.currStr&&(this.currStr+=a);t++}return this.ret}}const N=["GLSL Start","GLSL End"],F=["#defineGLSL","#endGLSL"],U=["Shader3D Start","Shader3D End"],G={Color:t.ShaderDataType.Color,Int:t.ShaderDataType.Int,Bool:t.ShaderDataType.Bool,Float:t.ShaderDataType.Float,Vector2:t.ShaderDataType.Vector2,Vector3:t.ShaderDataType.Vector3,Vector4:t.ShaderDataType.Vector4,Matrix4x4:t.ShaderDataType.Matrix4x4,Texture2D:t.ShaderDataType.Texture2D,TextureCube:t.ShaderDataType.TextureCube};class ShaderParser{static parse(e,a){let r=ShaderParser.getShaderBlock(e),i=ShaderParser.getCGBlock(e);return ShaderParser.bindCG(r,i),t.Shader3D.parse(r,a)}static compileToTree(e,t,a){if(a==e.length)return[t];let r=e[a],i=t.split(r);if(1==i.length)return i;let n=[];for(let t=0,s=i.length;t<s;t++)n=n.concat(ShaderParser.compileToTree(e,i[t],a+1)),t!=s-1&&n.push(r);return n}static getMapKey(e){let t=e.indexOf("\n");return e=(e=(e=e.slice(0,t).replace("\r","")).slice(0,t).replace(" ","")).trim()}static getShaderBlock(e){let t,a=e.substring(e.indexOf(U[0])+U[0].length,e.indexOf(U[1]));try{t=ParseJSON.parse(a)}catch(e){console.error("Shader describe Data error")}return t}static getCGBlock(e){let t=e.substring(e.indexOf(N[0]),e.indexOf(N[1])),a=ShaderParser.compileToTree(F,t,0),r={};for(let e=0,t=a.length;e<t;e++){if(a[e]==F[0]){e+=1;let t=a[e];r[ShaderParser.getMapKey(t)]=t.slice(t.indexOf("\n"),t.length-1)}}return r}static bindCG(e,t){let a=e.shaderPass;a&&a.forEach((e=>{e.VS&&(e.VS=t[e.VS]),e.FS&&(e.FS=t[e.FS])}));let r=e.attributeMap;if(r){let e=0;for(let t in r)if(r[t]instanceof Array){let e=r[t];r[t]=[e[1],ShaderParser.getShaderDataType(e[0])]}else r[t]=[e,ShaderParser.getShaderDataType(r[t])],e++}let i=e.uniformMap;if(i){let t={};e.defaultValue=t;let a={};e.uniformMap=a;for(let e in i){let r=i[e];if(!1===r.serializable)continue;let n=ShaderParser.getShaderDataType(r.type);if(null!=r.default&&(t[e]=ShaderParser.getDefaultData(n,r.default)),r.block){let t=a[r.block];t||(a[r.block]=t={}),t[e]=n}else a[e]=n}}}static getShaderDataType(e){return G[e]}static getDefaultData(e,a){switch(e){case t.ShaderDataType.Int:case t.ShaderDataType.Float:case t.ShaderDataType.Bool:return a;case t.ShaderDataType.Vector2:return new t.Vector2(a[0],a[1]);case t.ShaderDataType.Vector3:return new t.Vector3(a[0],a[1],a[2]);case t.ShaderDataType.Vector4:return new t.Vector4(a[0],a[1],a[2],a[3]);case t.ShaderDataType.Color:return new t.Color(a[0],a[1],a[2],a[3]);case t.ShaderDataType.Matrix4x4:let e=new t.Matrix4x4;return e.cloneByArray(a),e;case t.ShaderDataType.Texture2D:let r=null;return"white"==a?r=t.Texture2D.whiteTexture:"black"==a?r=t.Texture2D.blackTexture:"gray"==a?r=t.Texture2D.grayTexture:"normal"==a&&(r=t.Texture2D.normalTexture),r;case t.ShaderDataType.TextureCube:let i=t.TextureCube.grayTexture;return"white"==a?i=t.TextureCube.whiteTexture:"black"==a?i=t.TextureCube.blackTexture:"gray"==a&&(i=t.TextureCube.grayTexture),i}}}t.Loader.registerLoader(["shader","bps"],class{load(e){let a=e.url;return"bps"===e.ext&&(a=t.AssetDb.inst.getSubAssetURL(a,e.uuid,"0","shader")),e.loader.fetch(a,"text",e.progress.createCallback(),e.options).then((a=>{if(!a)return null;let r=ShaderParser.getShaderBlock(a),i=ShaderParser.getCGBlock(a);if(ShaderParser.bindCG(r,i),!r.name||!r.uniformMap)return null;let n=t.URL.getPath(e.url),s=r.shaderPass;return Promise.all(s.map((e=>t.ShaderCompile.compileAsync(e.VS,e.FS,n)))).then((a=>{if(-1!=a.findIndex((e=>null==e)))return t.Loader.warn("some pass null "+e.url),null;let i=t.Shader3D.add(r.name,r.enableInstancing,r.supportReflectionProbe),n=new t.SubShader(r.attributeMap?r.attributeMap:t.SubShader.DefaultAttributeMap,r.uniformMap,r.defaultValue);i.addSubShader(n);for(let e in s)n._addShaderPass(a[e],s[e].pipeline);return i}))}))}});t.Loader.registerLoader(["glsl","vs","fs"],class{load(e){let a=e.url;return e.loader.fetch(a,"text",e.progress.createCallback(),e.options).then((a=>a?t.ShaderCompile.addInclude(e.url,a,!0):null))}});t.Loader.registerLoader(["controller"],class{load(e){return e.loader.fetch(e.url,"json",e.progress.createCallback(.2),e.options).then((t=>{let a=new AnimatorController(t);if(a.data&&a.data.controllerLayers){let t=a.data.controllerLayers,r=[];for(let a=t.length-1;a>=0;a--){t[a].avatarMask&&this.loadAvatarMask(t[a],r,e);let i=t[a].states;this.loadStates(i,r,e)}return Promise.all(r).then((()=>a))}return a}))}loadAvatarMask(e,a,r){let i=t.URL.getPath(r.url);if(e.avatarMask&&e.avatarMask._$uuid&&""!=e.avatarMask._$uuid){let n=t.URL.getResURLByUUID(e.avatarMask._$uuid);n.startsWith("res://")||(n=t.URL.join(i,n)),a.push(r.loader.load(n).then((t=>{e.avatarMask=t})))}else e.avatarMask=null}loadStates(e,a,r){let i=t.URL.getPath(r.url);for(let n=e.length-1;n>=0;n--){if(e[n].clip&&e[n].clip._$uuid){let s=t.URL.getResURLByUUID(e[n].clip._$uuid);s.startsWith("res://")||(s=t.URL.join(i,s)),a.push(r.loader.load(s).then((t=>{e[n].clip=t})))}e[n].states&&this.loadStates(e[n].states,a,r)}}});let H=t.ClassUtils.regClass;H("Sprite3D",Sprite3D),H("Scene3D",Scene3D),H("Camera",Camera),H("LightSprite",LightSprite),H("DirectionLight",DirectionLight),H("PointLight",PointLight),H("SpotLight",SpotLight),H("AreaLightCom",AreaLightCom),H("DirectionLightCom",DirectionLightCom),H("PointLightCom",PointLightCom),H("SpotLightCom",SpotLightCom),H("RenderableSprite3D",RenderableSprite3D),H("MeshSprite3D",MeshSprite3D),H("MeshFilter",MeshFilter),H("BaseRender",BaseRender),H("MeshRenderer",MeshRenderer),H("SimpleSkinnedMeshSprite3D",SimpleSkinnedMeshSprite3D),H("SkinnedMeshSprite3D",SkinnedMeshSprite3D),H("SkinnedMeshRenderer",SkinnedMeshRenderer),H("SimpleSkinnedMeshRenderer",SimpleSkinnedMeshRenderer),H("SkyRenderer",SkyRenderer),H("TrailSprite3D",TrailSprite3D),H("TrailFilter",TrailFilter),H("TrailRenderer",TrailRenderer),H("PixelLineRenderer",PixelLineRenderer),H("PixelLineData",PixelLineData),H("Gradient",Gradient),H("Transform3D",Transform3D),H("Lightmap",Lightmap),H("ReflectionProbe",ReflectionProbe),H("VolumetricGI",VolumetricGI),H("StaticBatchVolume",StaticBatchVolume),H("StaticInstanceBatchRender",StaticInstanceBatchRender),H("SphericalHarmonicsL2",SphericalHarmonicsL2),H("Viewport",Viewport),H("Bounds",Bounds),H("BoundBox",BoundBox),H("TextureCube",t.TextureCube),H("Mesh",Mesh),H("FloatKeyframe",FloatKeyframe),H("RenderTexture",t.RenderTexture),H("Animator",Animator),H("AnimatorController",AnimatorController),H("AnimatorControllerLayer",AnimatorControllerLayer),H("AnimatorState",AnimatorState),H("AnimationClip",AnimationClip),H("AvatarMask",AvatarMask),H("UI3D",UI3D),H("Material",Material),H("BlinnPhongMaterial",BlinnPhongMaterial),H("EffectMaterial",EffectMaterial),H("ExtendTerrainMaterial",ExtendTerrainMaterial),H("PBRStandardMaterial",PBRStandardMaterial),H("SkyBoxMaterial",SkyBoxMaterial),H("SkyPanoramicMaterial",SkyPanoramicMaterial),H("SkyProceduralMaterial",SkyProceduralMaterial),H("UnlitMaterial",UnlitMaterial),H("WaterPrimaryMaterial",WaterPrimaryMaterial),H("ShurikenParticleMaterial",ShurikenParticleMaterial),H("TrailMaterial",TrailMaterial),H("ShuriKenParticle3D",ShuriKenParticle3D),H("ShurikenParticleRenderer",ShurikenParticleRenderer),H("ShurikenParticleSystem",ShurikenParticleSystem),H("Burst",Burst),H("Emission",Emission),H("BaseShape",BaseShape),H("BoxShape",BoxShape),H("CircleShape",CircleShape),H("ConeShape",ConeShape),H("HemisphereShape",HemisphereShape),H("SphereShape",SphereShape),H("FrameOverTime",FrameOverTime),H("GradientAngularVelocity",GradientAngularVelocity),H("GradientColor",GradientColor),H("GradientDataInt",GradientDataInt),H("GradientDataNumber",GradientDataNumber),H("GradientSize",GradientSize),H("GradientVelocity",GradientVelocity),H("StartFrame",StartFrame),H("TextureSheetAnimation",TextureSheetAnimation),H("ColorOverLifetime",ColorOverLifetime),H("RotationOverLifetime",RotationOverLifetime),H("SizeOverLifetime",SizeOverLifetime),H("VelocityOverLifetime",VelocityOverLifetime),H("LODInfo",LODInfo),H("LODGroup",LODGroup),H("DirectionLight",DirectionLight),H("DirectionLightCom",DirectionLightCom),H("MeshRenderer",MeshRenderer),H("MeshFilter",MeshFilter),H("MeshRenderer",MeshRenderer),H("SkinnedMeshRenderer",SkinnedMeshRenderer),H("SimpleSkinnedMeshRenderer",SimpleSkinnedMeshRenderer),H("SkyRenderer",SkyRenderer),H("BoxColliderShape",BoxColliderShape),H("CapsuleColliderShape",CapsuleColliderShape),H("ConeColliderShape",ConeColliderShape),H("CylinderColliderShape",CylinderColliderShape),H("SphereColliderShape",SphereColliderShape),H("MeshColliderShape",MeshColliderShape),H("CompoundColliderShape",CompoundColliderShape),H("PostProcess",PostProcess),H("PostProcessEffect",PostProcessEffect),H("BloomEffect",BloomEffect),H("GaussianDoF",GaussianDoF),H("ScalableAO",ScalableAO),H("ColorGradEffect",ColorGradEffect);class SubMeshInstanceBatch extends GeometryElement{static __init__(){SubMeshInstanceBatch.instance=new SubMeshInstanceBatch}constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElementInstance),this.instanceWorldMatrixData=new Float32Array(16*SubMeshInstanceBatch.maxInstanceCount),this.instanceSimpleAnimatorData=new Float32Array(4*SubMeshInstanceBatch.maxInstanceCount),this.indexFormat=t.IndexFormat.UInt16,this.instanceWorldMatrixBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this.instanceWorldMatrixData.length,t.BufferUsage.Dynamic,!1),this.instanceWorldMatrixBuffer.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,this.instanceWorldMatrixBuffer.instanceBuffer=!0,this.instanceSimpleAnimatorBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this.instanceSimpleAnimatorData.length,t.BufferUsage.Dynamic,!1),this.instanceSimpleAnimatorBuffer.vertexDeclaration=t.VertexMesh.instanceSimpleAnimatorDeclaration,this.instanceSimpleAnimatorBuffer.instanceBuffer=!0}_updateRenderParams(e){var t=e.renderElement,a=t.instanceSubMesh,r=t.instanceBatchElementList.length,i=a._indexCount;this.clearRenderParams(),this.bufferState=a._mesh._instanceBufferState,this.instanceCount=r,this.setDrawElemenParams(i,2*a._indexStart)}}SubMeshInstanceBatch.maxInstanceCount=1024;class VertexPositionTerrain{static __init__(){VertexPositionTerrain._vertexDeclaration=new t.VertexDeclaration(40,[new t.VertexElement(0,t.VertexElementFormat.Vector3,VertexPositionTerrain.TERRAIN_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector3,VertexPositionTerrain.TERRAIN_NORMAL0),new t.VertexElement(24,t.VertexElementFormat.Vector2,VertexPositionTerrain.TERRAIN_TEXTURECOORDINATE0),new t.VertexElement(32,t.VertexElementFormat.Vector2,VertexPositionTerrain.TERRAIN_TEXTURECOORDINATE1)])}static get vertexDeclaration(){return VertexPositionTerrain._vertexDeclaration}get position(){return this._position}get normal(){return this._normal}get textureCoord0(){return this._textureCoord0}get textureCoord1(){return this._textureCoord1}get vertexDeclaration(){return VertexPositionTerrain._vertexDeclaration}constructor(e,t,a,r){this._position=e,this._normal=t,this._textureCoord0=a,this._textureCoord1=r}}VertexPositionTerrain.TERRAIN_POSITION0=0,VertexPositionTerrain.TERRAIN_NORMAL0=1,VertexPositionTerrain.TERRAIN_TEXTURECOORDINATE0=2,VertexPositionTerrain.TERRAIN_TEXTURECOORDINATE1=3;class BulletInteractive{constructor(e,t){this.drawLine=(e,t,a,r,i,n,s)=>{this.dbgLine&&(this.dbgLine.color(s),this.dbgLine.line(e,t,a,r,i,n))},this.clearLine=()=>{this.dbgLine&&this.dbgLine.clear()},this.jslog=(e,t)=>{if(!this.mem)return;let a=new TextDecoder,r=new Uint8Array(this.mem.buffer,e,t),i=a.decode(r);console.log(i)},this.mem=e,this.dbgLine=t}getWorldTransform(e,t){}setWorldTransform(e,t){var a=PhysicsComponent._physicObjectsMap[e];a._simulation._updatedRigidbodies++,a._updateTransformComponent(t)}}class PrimitiveMesh{static __init__(){}static _createMesh(e,a,r){var i=new Mesh,n=new SubMesh(i),s=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*a.length,t.BufferUsage.Static,!0);s.vertexDeclaration=e,s.setData(a.buffer),i._vertexBuffer=s,i._vertexCount=s._byteLength/e.vertexStride;var o=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,r.length,t.BufferUsage.Static,!0);o.setData(r),i._indexBuffer=o,i._setBuffer(s,o),n._vertexBuffer=s,n._indexBuffer=o,n._setIndexRange(0,o.indexCount);var l=n._subIndexBufferStart,h=n._subIndexBufferCount,c=n._boneIndicesList;l.length=1,h.length=1,c.length=1,l[0]=0,h[0]=o.indexCount;var d=[];d.push(n),i._setSubMeshes(d),i.calculateBounds();var u=s._byteLength+o._byteLength;return i._setCPUMemory(u),i._setGPUMemory(u),i}static createBox(e=1,a=1,r=1){var i=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),n=e/2,s=a/2,o=r/2,l=new Float32Array([-n,s,-o,0,1,0,0,0,n,s,-o,0,1,0,1,0,n,s,o,0,1,0,1,1,-n,s,o,0,1,0,0,1,-n,-s,-o,0,-1,0,0,1,n,-s,-o,0,-1,0,1,1,n,-s,o,0,-1,0,1,0,-n,-s,o,0,-1,0,0,0,-n,s,-o,-1,0,0,0,0,-n,s,o,-1,0,0,1,0,-n,-s,o,-1,0,0,1,1,-n,-s,-o,-1,0,0,0,1,n,s,-o,1,0,0,1,0,n,s,o,1,0,0,0,0,n,-s,o,1,0,0,0,1,n,-s,-o,1,0,0,1,1,-n,s,o,0,0,1,0,0,n,s,o,0,0,1,1,0,n,-s,o,0,0,1,1,1,-n,-s,o,0,0,1,0,1,-n,s,-o,0,0,-1,1,0,n,s,-o,0,0,-1,0,0,n,-s,-o,0,0,-1,0,1,-n,-s,-o,0,0,-1,1,1]),h=new Uint16Array([0,1,2,2,3,0,4,7,6,6,5,4,8,9,10,10,11,8,12,15,14,14,13,12,16,17,18,18,19,16,20,23,22,22,21,20]);return PrimitiveMesh._createMesh(i,l,h)}static createCapsule(e=.5,a=2,r=16,i=32){var n,s,o=(r+1)*(i+1)*2+2*(i+1),l=3*r*(i+1)*2*2+2*i*3,h=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),c=h.vertexStride/4,d=new Float32Array(o*c),u=new Uint16Array(l),_=Math.PI/2/r,m=2*Math.PI/i,f=a/2-e,S=0,g=0,p=0,D=0,T=0,E=0;for(n=0;n<=r;n++)for(s=0;s<=i;s++)S=e*Math.cos(n*_)*Math.cos(s*m+Math.PI),g=e*Math.sin(n*_),p=e*Math.cos(n*_)*Math.sin(s*m+Math.PI),d[D++]=S,d[D++]=g+f,d[D++]=p,d[D++]=S,d[D++]=g,d[D++]=p,d[D++]=1-s/i,d[D++]=(1-n/r)*(Math.PI*e/2/(a+Math.PI*e)),n<r&&(u[T++]=n*(i+1)+s+(i+1),u[T++]=n*(i+1)+s,u[T++]=n*(i+1)+s+1,u[T++]=n*(i+1)+s+i,u[T++]=n*(i+1)+s,u[T++]=n*(i+1)+s+(i+1));for(E+=(r+1)*(i+1),n=0;n<=r;n++)for(s=0;s<=i;s++)S=e*Math.cos(n*_)*Math.cos(s*m+Math.PI),g=e*Math.sin(-n*_),p=e*Math.cos(n*_)*Math.sin(s*m+Math.PI),d[D++]=S,d[D++]=g-f,d[D++]=p,d[D++]=S,d[D++]=g,d[D++]=p,d[D++]=1-s/i,d[D++]=(n/r*(Math.PI*e/2)+(a+Math.PI*e/2))/(a+Math.PI*e),n<r&&(u[T++]=E+n*(i+1)+s,u[T++]=E+n*(i+1)+s+(i+1),u[T++]=E+n*(i+1)+s+1,u[T++]=E+n*(i+1)+s,u[T++]=E+n*(i+1)+s+i,u[T++]=E+n*(i+1)+s+(i+1));for(E+=(r+1)*(i+1),s=0;s<=i;s++)S=e*Math.cos(s*m+Math.PI),g=f,p=e*Math.sin(s*m+Math.PI),d[D++]=S,d[D+8*(i+1)-1]=S,d[D++]=g,d[D+8*(i+1)-1]=-g,d[D++]=p,d[D+8*(i+1)-1]=p,d[D++]=S,d[D+8*(i+1)-1]=S,d[D++]=0,d[D+8*(i+1)-1]=0,d[D++]=p,d[D+8*(i+1)-1]=p,d[D++]=1-1*s/i,d[D+8*(i+1)-1]=1-1*s/i,d[D++]=Math.PI*e/2/(a+Math.PI*e),d[D+8*(i+1)-1]=(Math.PI*e/2+a)/(a+Math.PI*e);for(s=0;s<i;s++)u[T++]=s+E+(i+1),u[T++]=s+E+1,u[T++]=s+E,u[T++]=s+E+(i+1),u[T++]=s+E+(i+1)+1,u[T++]=s+E+1;return E+=2*(i+1),PrimitiveMesh._createMesh(h,d,u)}static createCone(e=.5,a=1,r=32){for(var i,n=r+1+1+2*(r+1),s=6*r+3*r,o=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),l=o.vertexStride/4,h=new Float32Array(n*l),c=new Uint16Array(s),d=2*Math.PI/r,u=a/2,_=0,m=0,f=0,S=0,g=0,p=new t.Vector3,D=new t.Vector3(0,-1,0),T=new t.Vector3(0,u,0),E=new t.Vector3,C=new t.Vector3,A=new t.Quaternion,R=new t.Vector3,x=0,M=0,y=0;y<=r;y++)_=y*d,f=Math.cos(_+Math.PI)*e,S=u,g=Math.sin(_+Math.PI)*e,h[x++]=0,h[x+8*(r+1)-1]=f,h[x++]=S,h[x+8*(r+1)-1]=-S,h[x++]=0,h[x+8*(r+1)-1]=g,p.x=f,p.y=0,p.z=g,E.x=f,E.y=-S,E.z=g,t.Vector3.subtract(E,T,C),t.Vector3.normalize(C,C),i=Math.acos(t.Vector3.dot(D,C)),t.Vector3.cross(D,C,R),t.Vector3.normalize(R,R),t.Quaternion.createFromAxisAngle(R,i,A),t.Vector3.normalize(p,p),t.Vector3.transformQuat(p,A,p),t.Vector3.normalize(p,p),h[x++]=p.x,h[x+8*(r+1)-1]=p.x,h[x++]=p.y,h[x+8*(r+1)-1]=p.y,h[x++]=p.z,h[x+8*(r+1)-1]=p.z,h[x++]=1-1*y/r,h[x+8*(r+1)-1]=1-1*y/r,h[x++]=0,h[x+8*(r+1)-1]=1;x+=8*(r+1);for(var I=0;I<r;I++)c[M++]=I+m+(r+1),c[M++]=I+m+1,c[M++]=I+m,c[M++]=I+m+(r+1),c[M++]=I+m+(r+1)+1,c[M++]=I+m+1;m+=2*(r+1);for(var v=0;v<=r;v++)0===v&&(h[x++]=0,h[x++]=-u,h[x++]=0,h[x++]=0,h[x++]=-1,h[x++]=0,h[x++]=.5,h[x++]=.5),_=v*d,f=Math.cos(_+Math.PI)*e,S=-u,g=Math.sin(_+Math.PI)*e,h[x++]=f,h[x++]=S,h[x++]=g,h[x++]=0,h[x++]=-1,h[x++]=0,h[x++]=.5+.5*Math.cos(_),h[x++]=.5+.5*Math.sin(_);for(var L=0;L<r;L++)c[M++]=0+m,c[M++]=L+2+m,c[M++]=L+1+m;return m+=r+1+1,PrimitiveMesh._createMesh(o,h,c)}static createCylinder(e=.5,a=2,r=32){for(var i=r+1+1+2*(r+1)+(r+1+1),n=3*r+6*r+3*r,s=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),o=s.vertexStride/4,l=new Float32Array(i*o),h=new Uint16Array(n),c=2*Math.PI/r,d=a/2,u=0,_=0,m=0,f=0,S=0,g=0,p=0,D=0;D<=r;D++)0===D&&(l[g++]=0,l[g++]=d,l[g++]=0,l[g++]=0,l[g++]=1,l[g++]=0,l[g++]=.5,l[g++]=.5),u=D*c,m=Math.cos(u)*e,f=d,S=Math.sin(u)*e,l[g++]=m,l[g++]=f,l[g++]=S,l[g++]=0,l[g++]=1,l[g++]=0,l[g++]=.5+.5*Math.cos(u),l[g++]=.5+.5*Math.sin(u);for(var T=0;T<r;T++)h[p++]=0,h[p++]=T+1,h[p++]=T+2;_+=r+1+1;for(var E=0;E<=r;E++)u=E*c,m=Math.cos(u+Math.PI)*e,f=d,S=Math.sin(u+Math.PI)*e,l[g++]=m,l[g+8*(r+1)-1]=m,l[g++]=f,l[g+8*(r+1)-1]=-f,l[g++]=S,l[g+8*(r+1)-1]=S,l[g++]=m,l[g+8*(r+1)-1]=m,l[g++]=0,l[g+8*(r+1)-1]=0,l[g++]=S,l[g+8*(r+1)-1]=S,l[g++]=1-1*E/r,l[g+8*(r+1)-1]=1-1*E/r,l[g++]=0,l[g+8*(r+1)-1]=1;g+=8*(r+1);for(var C=0;C<r;C++)h[p++]=C+_+(r+1),h[p++]=C+_+1,h[p++]=C+_,h[p++]=C+_+(r+1),h[p++]=C+_+(r+1)+1,h[p++]=C+_+1;_+=2*(r+1);for(var A=0;A<=r;A++)0===A&&(l[g++]=0,l[g++]=-d,l[g++]=0,l[g++]=0,l[g++]=-1,l[g++]=0,l[g++]=.5,l[g++]=.5),u=A*c,m=Math.cos(u+Math.PI)*e,f=-d,S=Math.sin(u+Math.PI)*e,l[g++]=m,l[g++]=f,l[g++]=S,l[g++]=0,l[g++]=-1,l[g++]=0,l[g++]=.5+.5*Math.cos(u),l[g++]=.5+.5*Math.sin(u);for(var R=0;R<r;R++)h[p++]=0+_,h[p++]=R+2+_,h[p++]=R+1+_;return _+=r+1+1,PrimitiveMesh._createMesh(s,l,h)}static createPlane(e=10,a=10,r=10,i=10){for(var n=(r+1)*(i+1),s=new Uint16Array(r*i*2*3),o=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),l=o.vertexStride/4,h=new Float32Array(n*l),c=e/2,d=a/2,u=e/r,_=a/i,m=0,f=0;f<=i;f++)for(var S=0;S<=r;S++)h[m++]=S*u-c,h[m++]=0,h[m++]=f*_-d,h[m++]=0,h[m++]=1,h[m++]=0,h[m++]=1*S/r,h[m++]=1*f/i;var g=0;for(f=0;f<i;f++)for(S=0;S<r;S++)s[g++]=(f+1)*(r+1)+S,s[g++]=f*(r+1)+S,s[g++]=(f+1)*(r+1)+S+1,s[g++]=f*(r+1)+S,s[g++]=f*(r+1)+S+1,s[g++]=(f+1)*(r+1)+S+1;return PrimitiveMesh._createMesh(o,h,s)}static createQuad(e=1,a=1){var r=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),i=e/2,n=a/2,s=new Float32Array([-i,n,0,0,0,1,0,0,i,n,0,0,0,1,1,0,-i,-n,0,0,0,1,0,1,i,-n,0,0,0,1,1,1]),o=new Uint16Array([0,1,2,3,2,1]);return PrimitiveMesh._createMesh(r,s,o)}static createSphere(e=.5,a=32,r=32){var i=(a+1)*(r+1),n=3*a*(r+1)*2,s=new Uint16Array(n),o=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),l=o.vertexStride/4,h=new Float32Array(i*l),c=Math.PI/a,d=2*Math.PI/r,u=0;i=0,n=0;for(var _=0;_<a+1;_++)for(var m=Math.sin(_*c),f=Math.cos(_*c),S=0;S<r+1;S++){var g=m*Math.sin(S*d+1*Math.PI/2),p=m*Math.cos(S*d+1*Math.PI/2);h[i+0]=g*e,h[i+1]=f*e,h[i+2]=p*e,h[i+3]=g,h[i+4]=f,h[i+5]=p,h[i+6]=S/r,h[i+7]=_/a,i+=l,_!=a-1&&(s[n++]=u+(r+1),s[n++]=u,s[n++]=u+1,s[n++]=u+r,s[n++]=u,s[n++]=u+(r+1),u++)}return PrimitiveMesh._createMesh(o,h,s)}}var k='#define SHADER_NAME BlitFS\n\n#include "Color.glsl";\n#include "FastApproximateAntiAliasing.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n#ifdef FXAA\n    gl_FragColor = FXAAMain(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.zw);\n#else\n    gl_FragColor = texture2D(u_MainTex, v_Texcoord0);\n#endif\n\n#ifdef GAMMAOUT\n    gl_FragColor = linearToGamma(gl_FragColor);\n#endif\n    // gl_FragColor.rgb = FXAAMain(u_MainTex,v_Texcoord0,u_MainTex_TexelSize.zw);\n}\n';class BlitScreenShaderInit{static init(){t.Shader3D.addInclude("FastApproximateAntiAliasing.glsl","#if !defined(FXAA_lib)\n    #define FXAA_lib\n#ifdef FXAA\n    #define EDGE_THRESHOLD_MIN 0.0312\n    #define EDGE_THRESHOLD_MAX 0.125\n    #define QUALITY(q)\t       ((q) < 5 ? 1.0 : ((q) > 5 ? ((q) < 10 ? 2.0 : ((q) < 11 ? 4.0 : 8.0)) : 1.5))\n    #define ITERATIONS\t       12\n    #define SUBPIXEL_QUALITY   0.75\n\nfloat rgb2luma(in vec3 rgb)\n{\n    return dot(rgb, vec3(0.299, 0.587, 0.114));\n}\n\nvec3 textureOffsetbyScreenSize(in sampler2D mainTex, in vec2 uv, in vec2 offset, in vec2 inverseScreenSize)\n{\n    vec2 sampleruv = uv + inverseScreenSize * offset; // u_texturesize表示每个像素的偏移量\n    return texture2D(mainTex, sampleruv).rgb;\n}\n\nvec4 FXAAMain(in sampler2D mainTex, in vec2 texuv, in vec2 inverseScreenSize)\n{\n\n    vec4 mainColor = texture2D(mainTex, texuv);\n    vec3 colorCenter = mainColor.rgb;\n    // Luma at the current fragment\n    float lumaCenter = rgb2luma(colorCenter);\n\n    // Luma at the four direct neighbours of the current fragment.\n    float lumaDown = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(0, -1), inverseScreenSize));\n    float lumaUp = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(0, 1), inverseScreenSize));\n    float lumaLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, 0), inverseScreenSize));\n    float lumaRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, 0), inverseScreenSize));\n\n    // Find the maximum and minimum luma around the current fragment.\n    float lumaMin = min(lumaCenter, min(min(lumaDown, lumaUp), min(lumaLeft, lumaRight)));\n    float lumaMax = max(lumaCenter, max(max(lumaDown, lumaUp), max(lumaLeft, lumaRight)));\n\n    // Compute the delta.\n    float lumaRange = lumaMax - lumaMin;\n\n    // If the luma variation is lower that a threshold (or if we are in a really dark area), we are not on an edge, don't perform any AA.\n    if (lumaRange < max(EDGE_THRESHOLD_MIN, lumaMax * EDGE_THRESHOLD_MAX))\n\t{\n\t    return mainColor;\n\t}\n\n    // Query the 4 remaining corners lumas.\n    float lumaDownLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, -1), inverseScreenSize));\n    float lumaUpRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, 1), inverseScreenSize));\n    float lumaUpLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, 1), inverseScreenSize));\n    float lumaDownRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, -1), inverseScreenSize));\n\n    // Combine the four edges lumas (using intermediary variables for future computations with the same values).\n    float lumaDownUp = lumaDown + lumaUp;\n    float lumaLeftRight = lumaLeft + lumaRight;\n\n    // Same for corners\n    float lumaLeftCorners = lumaDownLeft + lumaUpLeft;\n    float lumaDownCorners = lumaDownLeft + lumaDownRight;\n    float lumaRightCorners = lumaDownRight + lumaUpRight;\n    float lumaUpCorners = lumaUpRight + lumaUpLeft;\n\n    // Compute an estimation of the gradient along the horizontal and vertical axis.\n    float edgeHorizontal = abs(-2.0 * lumaLeft + lumaLeftCorners) + abs(-2.0 * lumaCenter + lumaDownUp) * 2.0 + abs(-2.0 * lumaRight + lumaRightCorners);\n    float edgeVertical = abs(-2.0 * lumaUp + lumaUpCorners) + abs(-2.0 * lumaCenter + lumaLeftRight) * 2.0 + abs(-2.0 * lumaDown + lumaDownCorners);\n\n    // Is the local edge horizontal or vertical ?\n    bool isHorizontal = (edgeHorizontal >= edgeVertical);\n\n    // Choose the step size (one pixel) accordingly.\n    float stepLength = isHorizontal ? inverseScreenSize.y : inverseScreenSize.x;\n\n    // Select the two neighboring texels lumas in the opposite direction to the local edge.\n    float luma1 = isHorizontal ? lumaDown : lumaLeft;\n    float luma2 = isHorizontal ? lumaUp : lumaRight;\n    // Compute gradients in this direction.\n    float gradient1 = luma1 - lumaCenter;\n    float gradient2 = luma2 - lumaCenter;\n\n    // Which direction is the steepest ?\n    bool is1Steepest = abs(gradient1) >= abs(gradient2);\n\n    // Gradient in the corresponding direction, normalized.\n    float gradientScaled = 0.25 * max(abs(gradient1), abs(gradient2));\n\n    // Average luma in the correct direction.\n    float lumaLocalAverage = 0.0;\n    if (is1Steepest)\n\t{\n\t    // Switch the direction\n\t    stepLength = -stepLength;\n\t    lumaLocalAverage = 0.5 * (luma1 + lumaCenter);\n\t}\n    else\n\t{\n\t    lumaLocalAverage = 0.5 * (luma2 + lumaCenter);\n\t}\n\n    // Shift UV in the correct direction by half a pixel.\n    vec2 currentUv = texuv;\n    if (isHorizontal)\n\t{\n\t    currentUv.y += stepLength * 0.5;\n\t}\n    else\n\t{\n\t    currentUv.x += stepLength * 0.5;\n\t}\n\n    // Compute offset (for each iteration step) in the right direction.\n    vec2 offset = isHorizontal ? vec2(inverseScreenSize.x, 0.0) : vec2(0.0, inverseScreenSize.y);\n    // Compute UVs to explore on each side of the edge, orthogonally. The QUALITY allows us to step faster.\n    vec2 uv1 = currentUv - offset * QUALITY(0);\n    vec2 uv2 = currentUv + offset * QUALITY(0);\n\n    // Read the lumas at both current extremities of the exploration segment, and compute the delta wrt to the local average luma.\n    float lumaEnd1 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv1, vec2(0.0, 0.0), inverseScreenSize));\n    float lumaEnd2 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv2, vec2(0.0, 0.0), inverseScreenSize));\n    lumaEnd1 -= lumaLocalAverage;\n    lumaEnd2 -= lumaLocalAverage;\n\n    // If the luma deltas at the current extremities is larger than the local gradient, we have reached the side of the edge.\n    bool reached1 = abs(lumaEnd1) >= gradientScaled;\n    bool reached2 = abs(lumaEnd2) >= gradientScaled;\n    bool reachedBoth = reached1 && reached2;\n\n    // If the side is not reached, we continue to explore in this direction.\n    if (!reached1)\n\t{\n\t    uv1 -= offset * QUALITY(1);\n\t}\n    if (!reached2)\n\t{\n\t    uv2 += offset * QUALITY(1);\n\t}\n\n    // If both sides have not been reached, continue to explore.\n    if (!reachedBoth)\n\t{\n\n\t    for (int i = 2; i < ITERATIONS; i++)\n\t\t{\n\t\t    // If needed, read luma in 1st direction, compute delta.\n\t\t    if (!reached1)\n\t\t\t{\n\t\t\t    lumaEnd1 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv1, vec2(0.0, 0.0), inverseScreenSize));\n\t\t\t    lumaEnd1 = lumaEnd1 - lumaLocalAverage;\n\t\t\t}\n\t\t    // If needed, read luma in opposite direction, compute delta.\n\t\t    if (!reached2)\n\t\t\t{\n\t\t\t    lumaEnd2 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv2, vec2(0.0, 0.0), inverseScreenSize));\n\t\t\t    lumaEnd2 = lumaEnd2 - lumaLocalAverage;\n\t\t\t}\n\t\t    // If the luma deltas at the current extremities is larger than the local gradient, we have reached the side of the edge.\n\t\t    reached1 = abs(lumaEnd1) >= gradientScaled;\n\t\t    reached2 = abs(lumaEnd2) >= gradientScaled;\n\t\t    reachedBoth = reached1 && reached2;\n\n\t\t    // If the side is not reached, we continue to explore in this direction, with a variable quality.\n\t\t    if (!reached1)\n\t\t\t{\n\t\t\t    uv1 -= offset * QUALITY(i);\n\t\t\t}\n\t\t    if (!reached2)\n\t\t\t{\n\t\t\t    uv2 += offset * QUALITY(i);\n\t\t\t}\n\n\t\t    // If both sides have been reached, stop the exploration.\n\t\t    if (reachedBoth)\n\t\t\t{\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\t}\n\n    // Compute the distances to each side edge of the edge (!).\n    float distance1 = isHorizontal ? (texuv.x - uv1.x) : (texuv.y - uv1.y);\n    float distance2 = isHorizontal ? (uv2.x - texuv.x) : (uv2.y - texuv.y);\n\n    // In which direction is the side of the edge closer ?\n    bool isDirection1 = distance1 < distance2;\n    float distanceFinal = min(distance1, distance2);\n\n    // Thickness of the edge.\n    float edgeThickness = (distance1 + distance2);\n\n    // Is the luma at center smaller than the local average ?\n    bool isLumaCenterSmaller = lumaCenter < lumaLocalAverage;\n\n    // If the luma at center is smaller than at its neighbour, the delta luma at each end should be positive (same variation).\n    bool correctVariation1 = (lumaEnd1 < 0.0) != isLumaCenterSmaller;\n    bool correctVariation2 = (lumaEnd2 < 0.0) != isLumaCenterSmaller;\n\n    // Only keep the result in the direction of the closer side of the edge.\n    bool correctVariation = isDirection1 ? correctVariation1 : correctVariation2;\n\n    // UV offset: read in the direction of the closest side of the edge.\n    float pixelOffset = -distanceFinal / edgeThickness + 0.5;\n\n    // If the luma variation is incorrect, do not offset.\n    float finalOffset = correctVariation ? pixelOffset : 0.0;\n\n    // Sub-pixel shifting\n    // Full weighted average of the luma over the 3x3 neighborhood.\n    float lumaAverage = (1.0 / 12.0) * (2.0 * (lumaDownUp + lumaLeftRight) + lumaLeftCorners + lumaRightCorners);\n    // Ratio of the delta between the global average and the center luma, over the luma range in the 3x3 neighborhood.\n    float subPixelOffset1 = clamp(abs(lumaAverage - lumaCenter) / lumaRange, 0.0, 1.0);\n    float subPixelOffset2 = (-2.0 * subPixelOffset1 + 3.0) * subPixelOffset1 * subPixelOffset1;\n    // Compute a sub-pixel offset based on this delta.\n    float subPixelOffsetFinal = subPixelOffset2 * subPixelOffset2 * SUBPIXEL_QUALITY;\n\n    // Pick the biggest of the two offsets.\n    finalOffset = max(finalOffset, subPixelOffsetFinal);\n\n    // Compute the final UV coordinates.\n    vec2 finalUv = texuv;\n    if (isHorizontal)\n\t{\n\t    finalUv.y += finalOffset * stepLength;\n\t}\n    else\n\t{\n\t    finalUv.x += finalOffset * stepLength;\n\t}\n\n    // Read the color at the new UV coordinates, and use it.\n    return texture2D(mainTex, finalUv);\n}\n#endif//FXAA\n#endif // Color_lib\n"),t.Shader3D.addInclude("ColorGrading.glsl","#if !defined(ColorGrading_lib)\n    #define ColorGrading_lib\n\nconst float ACEScc_MAX = 1.4679964;\nconst float ACEScc_MIDGRAY = 0.4135884;\n\nconst float LogC_cut = 0.011361;\nconst float LogC_a = 5.555556;\nconst float LogC_b = 0.047996;\nconst float LogC_c = 0.244161;\nconst float LogC_d = 0.386036;\nconst float LogC_e = 5.301883;\nconst float LogC_f = 0.092819;\n\nfloat linearToLogC(float x)\n{\n    float o;\n    if (x > LogC_cut)\n\t{\n\t    o = LogC_c * log10(max(LogC_a * x + LogC_b, 0.0)) + LogC_d;\n\t}\n    else\n\t{\n\t    o = LogC_e * x + LogC_f;\n\t}\n    return o;\n}\n\nvec3 linearToLogC(vec3 x)\n{\n    vec3 logc;\n    logc.x = linearToLogC(x.x);\n    logc.y = linearToLogC(x.y);\n    logc.z = linearToLogC(x.z);\n    return logc;\n}\n\nfloat logCToLinear(float x)\n{\n    float o;\n    if (x > LogC_e * LogC_cut + LogC_f)\n\to = (pow(10.0, (x - LogC_d) / LogC_c) - LogC_b) / LogC_a;\n    else\n\to = (x - LogC_f) / LogC_e;\n    return o;\n}\n\nvec3 logCToLinear(vec3 x)\n{\n    vec3 linear;\n    linear.x = logCToLinear(x.x);\n    linear.y = logCToLinear(x.y);\n    linear.z = logCToLinear(x.z);\n    return linear;\n}\n\n// Hue, Saturation, Value\n// Ranges:\n//  Hue [0.0, 1.0]\n//  Sat [0.0, 1.0]\n//  Lum [0.0, HALF_MAX]\nvec3 RgbToHsv(vec3 c)\n{\n    const vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    const float e = 1.0e-4;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 HsvToRgb(vec3 c)\n{\n    const vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(c.x) + K.xyz) * 6.0 - K.www);\n    return c.z * mix(vec3(K.x) , saturate(p - vec3(K.x)), c.y);\n}\n\nfloat RotateHue(float value, float low, float hi)\n{\n    return (value < low)\n            ? value + hi\n            : (value > hi)\n                ? value - hi\n                : value;\n}\n\n\nconst mat3 Linear_to_LMS_MAT = mat3(\n    vec3(3.90405e-1, 7.08416e-2, 2.31082e-2),\n    vec3(5.49941e-1, 9.63172e-1, 1.28021e-1),\n    vec3(8.92632e-3, 1.35775e-3, 9.36245e-1));\n\nconst mat3 LMS_to_Linear_MAT = mat3(\n    vec3(2.85847e+0, -2.10182e-1, -4.18120e-2),\n    vec3(-1.62879e+0, 1.15820e+0, -1.18169e-1),\n    vec3(-2.48910e-2, 3.24281e-4, 1.06867e+0));\n\n// white balance\nuniform vec3 u_ColorBalance;\n\n// split toning\nuniform vec4 u_SplitShadows;\nuniform vec3 u_Splithighlights;\n\n// shadows, midtones, highlights\nuniform vec3 u_Shadows;\nuniform vec3 u_Midtones;\nuniform vec3 u_Highlights;\nuniform vec4 u_Limits;\n\n// lift, gamma, gain\nuniform vec3 u_Lift;\nuniform vec3 u_Gamma;\nuniform vec3 u_Gain;\n\n//color adjusted\nuniform vec4 u_ColorFilter;\nuniform vec4 u_HueSatCon;\n\nfloat luminance(in vec3 color)\n{\n    #ifdef ACES\n    float luma = dot(color, AP1_RGB2Y);\n    #else\n    float luma = dot(color, vec3(0.2126729, 0.7151522, 0.0721750));\n    #endif // ACES\n    return luma;\n}\n\nvec3 softlight(vec3 base, vec3 blend)\n{\n    vec3 r1 = 2.0 * base * blend + base * base * (1.0 - 2.0 * blend);\n    vec3 r2 = sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend);\n    vec3 t = step(0.5, blend);\n    return r2 * t + (1.0 - t) * r1;\n}\n\n// input linear sRGB\n// if ACES tonemap, calculate in ACEScg, return ACEScg\n// else calculate in logC, return linear sRGB\nvec3 colorGrade(in vec3 color)\n{\n    // White balance in LMS space\n    vec3 colorLMS = Linear_to_LMS_MAT * color;\n    colorLMS *= u_ColorBalance.xyz;\n    color = LMS_to_Linear_MAT * colorLMS;\n\n    // Do contrast in log after white balance\n    #ifdef ACES\n        vec3 colorLog = ACES_to_ACEScc(sRGB_to_AP0_MAT * color);\n    #else\n        vec3 colorLog = linearToLogC(color);\n    #endif\n    \n    colorLog = (colorLog - vec3(ACEScc_MIDGRAY)) * u_HueSatCon.z + vec3(ACEScc_MIDGRAY);\n\n\n    #ifdef ACES\n        //colorLinear = ACES_to_ACEScg(ACEScc_to_ACES(colorLog));\n        color = AP0_to_AP1_MAT * ACEScc_to_ACES(colorLog);\n    #else\n        color = logCToLinear(colorLog);\n    #endif // ACES\n\n    // Color filter is just an unclipped multiplier\n    color = color * u_ColorFilter.rgb;\n\n    color = max(vec3(0.0), color);\n\n    // split toning\n    float balance = u_SplitShadows.w;\n    vec3 gamma = linearToGamma(color);\n    float splitLuma = saturate(luminance(color)) + balance;\n    vec3 splitShadows = mix(vec3(0.5, 0.5, 0.5), u_SplitShadows.xyz, 1.0 - splitLuma);\n    vec3 splitHeighlights = mix(vec3(0.5, 0.5, 0.5), u_Splithighlights.xyz, splitLuma);\n    gamma = softlight(gamma, splitShadows);\n    gamma = softlight(gamma, splitHeighlights);\n    color = gammaToLinear(gamma);\n\n    // shadows, midtones, highlights\n    float luma = luminance(color);\n    float shadowFactor = 1.0 - smoothstep(u_Limits.x, u_Limits.y, luma);\n    float highlightsFactor = smoothstep(u_Limits.z, u_Limits.w, luma);\n    float midtonesFactor = 1.0 - shadowFactor - highlightsFactor;\n    color = color * u_Shadows.xyz * shadowFactor + color * u_Midtones.xyz * midtonesFactor + color * u_Highlights.xyz * highlightsFactor;\n\n    // Lift, gamma, gain\n    color = color * u_Gain.xyz + u_Lift.xyz;\n    color = sign(color) * pow(abs(color), u_Gamma.xyz);\n    \n    // HSV operations\n    vec3 hsv = RgbToHsv(color);\n    // Hue Shift & Hue Vs Hue\n    float hue = hsv.x + u_HueSatCon.x;\n    hsv.x = RotateHue(hsv.x, 0.0, 1.0);\n    color = HsvToRgb(hsv);\n\n    // Global saturation\n    luma = luminance(color);\n    color = vec3(luma) + (vec3(u_HueSatCon.y)) * (color - vec3(luma));\n    \n    return color;\n}\n\n#endif // ColorGrading_lib"),t.Shader3D.addInclude("Tonemapping.glsl","#if !defined(Tonemapping_lib)\n    #define Tonemapping_lib\n\n// ACES Tonemapping color grading in ACEScg space\nvec3 tonemap(in vec3 ap1)\n{\n    vec3 color = ap1;\n\n    #ifdef ACES\n    vec3 aces = AP1_to_AP0_MAT * color;\n    vec3 oces = RRT(aces);\n    color = ODT_sRGB_100nits(oces);\n    #endif // ACES\n\n    // todo other tonemap\n\n    return color;\n}\n\n#endif // Tonemapping_lib"),t.Shader3D.addInclude("LUT.glsl","#if !defined(LUT_lib)\n    #define LUT_lib\n\n// scaleOffset = (1 / lut_width, 1 / lut_height, lut_height - 1)\nvec3 applyLut(sampler2D lut, vec3 uvw, vec3 scaleOffset)\n{\n    uvw.z *= scaleOffset.z;\n\n    float shift = floor(uvw.z);\n    uvw.xy = uvw.xy * scaleOffset.z * scaleOffset.xy + scaleOffset.xy * 0.5;\n    uvw.x += shift * scaleOffset.y;\n\n    uvw.xyz = mix(\n\ttexture2DLodEXT(lut, uvw.xy, 0.0).rgb,\n\ttexture2DLodEXT(lut, uvw.xy + vec2(scaleOffset.y, 0.0), 0.0).rgb,\n\tuvw.z - shift);\n    return uvw;\n}\n\n#endif // LUT_lib");let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4},r=t.Shader3D.add("BlitScreen"),i=new t.SubShader(e,a);r.addSubShader(i);let n=i.addShaderPass(b,k);n.statefirst=!0;let s=n.renderState;s.depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE;let o=t.Shader3D.add("BlitScreen_Transparnet"),l=new t.SubShader(e,a);o.addSubShader(l);let h=l.addShaderPass(b,k);n.statefirst=!0,s=h.renderState,s.depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_ENABLE_ALL,s.srcBlend=t.RenderState.BLENDPARAM_SRC_ALPHA,s.dstBlend=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.lutBuilderInit()}static lutBuilderInit(){let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_LutParams:t.ShaderDataType.Vector4},r=t.Shader3D.add("LUTBuilder"),i=new t.SubShader(e,a);r.addSubShader(i);let n=i.addShaderPass(b,'#define SHADER_NAME LutBuilder\n\n#include "Color.glsl";\n\n#ifdef ACES\n    #include "ACES.glsl";\n#endif // ACES\n\n#include "ColorGrading.glsl";\n\n#include "Tonemapping.glsl";\n\nvarying vec2 v_Texcoord0;\n\n// lut params: (lutHeight, 0.5 / lutWidth, 0.5 / lutHeight, lutHeidht / (lutHeight - 1))\nvec3 lutValue(vec2 uv, vec4 params)\n{\n    vec3 color;\n    uv -= params.yz;\n    color.r = fract(uv.x * params.x);\n    color.b = uv.x - color.r / params.x;\n    color.g = uv.y;\n    return color * params.w;\n}\n\n// internal lut logC space\nvoid main()\n{\n    vec2 uv = v_Texcoord0;\n    vec3 color = lutValue(uv, u_LutParams);\n    color = logCToLinear(color);\n    vec3 grade = colorGrade(color);\n    vec3 tone = tonemap(grade);\n\n    gl_FragColor = vec4(tone, 1.0);\n}');n.renderState.depthTest=t.RenderState.DEPTHTEST_ALWAYS,n.renderState.depthWrite=!1,n.renderState.cull=t.RenderState.CULL_NONE,n.renderState.blend=t.RenderState.BLEND_DISABLE,n.statefirst=!0}}var z='#define SHADER_NAME DepthVS\n\n#include "DepthVertex.glsl";\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    mat4 worldMat = getWorldMatrix();\n    vec4 pos = (worldMat * vec4(vertex.positionOS, 1.0));\n    vec3 positionWS = pos.xyz / pos.w;\n\n    mat4 normalMat = transpose(inverse(worldMat));\n    vec3 normalWS = normalize((normalMat * vec4(vertex.normalOS, 0.0)).xyz);\n\n    vec4 positionCS = DepthPositionCS(positionWS, normalWS);\n    gl_Position = remapPositionZ(positionCS);\n}',W='#define SHADER_NAME DepthFS\n\n#include "DepthFrag.glsl";\n\nvoid main()\n{\n    gl_FragColor = getDepthColor();\n}';class UnlitShaderInit{static init(){let e={UnlitBlock:{u_AlbedoColor:t.ShaderDataType.Color,u_TilingOffset:t.ShaderDataType.Vector4},u_AlbedoTexture:t.ShaderDataType.Texture2D,u_AlphaTestValue:t.ShaderDataType.Float},a={u_AlbedoColor:t.Color.WHITE,u_TilingOffset:new t.Vector4(1,1,0,0),u_AlphaTestValue:.5},r=t.Shader3D.add("Unlit",!0,!1),i=new t.SubShader(t.SubShader.DefaultAttributeMap,e,a);r.addSubShader(i),i.addShaderPass('\n#define SHADER_NAME UnlitVS\n\n#include "Math.glsl";\n\n#include "Scene.glsl";\n#include "SceneFogInput.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#ifdef UV\nvarying vec2 v_Texcoord0;\n#endif // UV\n\n#ifdef COLOR\nvarying vec4 v_VertexColor;\n#endif // COLOR\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n#ifdef UV\n    v_Texcoord0 = transformUV(vertex.texCoord0, u_TilingOffset);\n#endif // UV\n\n#ifdef COLOR\n    v_VertexColor = vertex.vertexColor;\n#endif // COLOR\n\n    mat4 worldMat = getWorldMatrix();\n    vec4 pos = (worldMat * vec4(vertex.positionOS, 1.0));\n    vec3 positionWS = pos.xyz / pos.w;\n\n    gl_Position = getPositionCS(positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n\n#ifdef FOG\n    FogHandle(gl_Position.z);\n#endif\n}\n','\n#define SHADER_NAME UNLITFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#ifdef UV\nvarying vec2 v_Texcoord0;\n#endif // UV\n\n#ifdef COLOR\nvarying vec4 v_VertexColor;\n#endif // COLOR\n\nvoid main()\n{\n    vec3 color = u_AlbedoColor.rgb;\n    float alpha = u_AlbedoColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    vec4 vertexColor = v_VertexColor;\n    color *= vertexColor.rgb;\n    alpha *= vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n#ifdef UV\n    vec2 uv = v_Texcoord0;\n\n    #ifdef ALBEDOTEXTURE\n    vec4 albedoSampler = texture2D(u_AlbedoTexture, uv);\n\n\t#ifdef Gamma_u_AlbedoTexture\n    albedoSampler = gammaToLinear(albedoSampler);\n\t#endif // Gamma_u_AlbedoTexture\n\n    color *= albedoSampler.rgb;\n    alpha *= albedoSampler.a;\n    #endif // ALBEDOTEXTURE\n#endif // UV\n\n#ifdef ALPHATEST\n    if (alpha < u_AlphaTestValue)\n\tdiscard;\n#endif // ALPHATEST\n\n#ifdef FOG\n    color = scenUnlitFog(color);\n#endif // FOG\n\n    gl_FragColor = vec4(color, alpha);\n}'),i.addShaderPass(z,W,"ShadowCaster")}}class BlinnPhongShaderInit{static init(){t.Shader3D.addInclude("BlinnPhongCommon.glsl","#if !defined(BlinnPhongCommon_lib)\n    #define BlinnPhongCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\n// todo\nvarying vec3 v_NormalWS;\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n    vec3 positionWS;\n\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n#endif // BlinnPhongCommon_lib"),t.Shader3D.addInclude("BlinnPhongVertex.glsl",'#if !defined(BlinnPhongVertex_lib)\n    #define BlinnPhongVertex_lib\n\n    #include "ShadingVertex.glsl";\n\nvoid initPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    shadingPixelParams(params, vertex);\n    sharePixelParams(params);\n}\n\n#endif // BlinnPhongVertex_lib'),t.Shader3D.addInclude("BlinnPhongFrag.glsl",'#if !defined(BlinnPhongFrag_lib)\n    #define BlinnPhongFrag_lib\n\n    #include "BlinnPhongLighting.glsl";\n\n    #include "ShadingFrag.glsl";\n\nvoid getPixelInfo(inout PixelInfo info, const in PixelParams pixel, const in Surface surface)\n{\n    info.positionWS = pixel.positionWS;\n\n    info.vertexNormalWS = pixel.normalWS;\n\n    #ifdef TANGENT\n    info.normalWS = normalize(pixel.TBN * surface.normalTS);\n    #else // TANGENT\n    info.normalWS = pixel.normalWS;\n    #endif // TANGENT\n\n    info.viewDir = normalize(u_CameraPos - info.positionWS);\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    info.lightmapUV = pixel.uv1;\n\t#endif // UV1\n    #endif // LIGHTMAP\n}\n\nvec3 BlinnPhongLighting(const in Surface surface, const in PixelParams pixel)\n{\n    PixelInfo info;\n    getPixelInfo(info, pixel, surface);\n\n    vec3 positionWS = info.positionWS;\n    vec3 normalWS = info.normalWS;\n    vec3 v = info.viewDir;\n\n    vec3 lightColor = vec3(0.0, 0.0, 0.0);\n\n    #ifdef DIRECTIONLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= DirectionCount)\n\t\tbreak;\n\t    DirectionLight directionLight = getDirectionLight(i, positionWS);\n\t    if (directionLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(directionLight);\n\t    lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n\t}\n    #endif // DIRECTIONLIGHT\n\n    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\n    ivec4 clusterInfo = getClusterInfo(u_View, u_Viewport, positionWS, gl_FragCoord, u_ProjectionParams);\n    #endif // POINTLIGHT || SPOTLIGHT\n\n    #ifdef POINTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.x)\n\t\tbreak;\n\t    PointLight pointLight = getPointLight(i, clusterInfo, positionWS);\n\t    if (pointLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(pointLight, normalWS, positionWS);\n\t    lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n\t}\n    #endif // POINTLIGHT\n\n    #ifdef SPOTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.y)\n\t\tbreak;\n\t    SpotLight spotLight = getSpotLight(i, clusterInfo, positionWS);\n\t    if (spotLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(spotLight, normalWS, positionWS);\n\t    lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n\t}\n    #endif // SPOTLIGHT\n\n    vec3 giColor = BlinnPhongGI(surface, info);\n\n    return lightColor + giColor;\n}\n\n#endif // BlinnPhongFrag_lib');let e={u_AlphaTestValue:t.ShaderDataType.Float,u_TilingOffset:t.ShaderDataType.Vector4,u_DiffuseColor:t.ShaderDataType.Color,u_DiffuseTexture:t.ShaderDataType.Texture2D,u_AlbedoIntensity:t.ShaderDataType.Float,u_MaterialSpecular:t.ShaderDataType.Color,u_SpecularTexture:t.ShaderDataType.Texture2D,u_Shininess:t.ShaderDataType.Float,u_NormalTexture:t.ShaderDataType.Texture2D},a={u_AlbedoIntensity:1,u_DiffuseColor:t.Color.WHITE,u_MaterialSpecular:t.Color.WHITE,u_Shininess:.078125,u_AlphaTestValue:.5,u_TilingOffset:new t.Vector4(1,1,0,0)},r=t.Shader3D.add("BLINNPHONG",!0,!0),i=new t.SubShader(t.SubShader.DefaultAttributeMap,e,a);r.addSubShader(i),i.addShaderPass('#define SHADER_NAME BlinnPhongVS\n\n#include "Math.glsl";\n\n#include "Scene.glsl";\n#include "SceneFogInput.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#include "BlinnPhongVertex.glsl";\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    gl_Position = getPositionCS(pixel.positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n\n#ifdef FOG\n    FogHandle(gl_Position.z);\n#endif\n}\n','#define SHADER_NAME BlinnPhongFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#include "BlinnPhongFrag.glsl";\n\nvoid getBinnPhongSurfaceParams(inout Surface surface, in PixelParams pixel)\n{\n#ifdef UV\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n#else // UV\n    vec2 uv = vec2(0.0);\n#endif // UV\n\n    surface.diffuseColor = u_DiffuseColor.rgb;\n    surface.alpha = u_DiffuseColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    surface.diffuseColor *= pixel.vertexColor.xyz;\n    surface.alpha *= pixel.vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n#ifdef DIFFUSEMAP\n    vec4 diffuseSampler = texture2D(u_DiffuseTexture, uv);\n    #ifdef Gamma_u_DiffuseTexture\n    diffuseSampler = gammaToLinear(diffuseSampler);\n    #endif // Gamma_u_DiffuseTexture\n    surface.diffuseColor *= u_DiffuseColor.rgb * diffuseSampler.rgb * u_AlbedoIntensity;\n    surface.alpha *= diffuseSampler.a;\n#endif // DIFFUSEMAP\n\n    surface.diffuseColor *= u_AlbedoIntensity;\n\n    surface.normalTS = vec3(0.0, 0.0, 1.0);\n#ifdef NORMALMAP\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    surface.normalTS = normalSampler;\n#endif // NORMALMAP\n\n#ifdef SPECULARMAP\n    vec4 specularSampler = texture2D(u_SpecularTexture, uv);\n    #ifdef Gamma_u_SpecularTexture\n    specularSampler = gammaToLinear(specularSampler);\n    #endif // Gamma_u_SpecularTexture\n    surface.gloss = specularSampler.rgb;\n#else // SPECULARMAP\n    #ifdef DIFFUSEMAP\n    surface.gloss = vec3(diffuseSampler.a);\n    #else // DIFFUSEMAP\n    surface.gloss = vec3(1.0, 1.0, 1.0);\n    #endif // DIFFUSEMAP\n#endif // SPECULARMAP\n    surface.specularColor = u_MaterialSpecular.rgb;\n    surface.shininess = u_Shininess;\n}\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    Surface surface;\n    getBinnPhongSurfaceParams(surface, pixel);\n\n#ifdef ALPHATEST\n    if (surface.alpha < u_AlphaTestValue)\n\t{\n\t    discard;\n\t}\n#endif // ALPHATEST\n\n    vec3 surfaceColor = vec3(0.0);\n\n    surfaceColor = BlinnPhongLighting(surface, pixel);\n\n#ifdef FOG\n    surfaceColor = sceneLitFog(surfaceColor);\n#endif // FOG\n\n    gl_FragColor = vec4(surfaceColor, surface.alpha);\n}\n'),i.addShaderPass(z,W,"ShadowCaster"),i.addShaderPass('#define SHADER_NAME BlinnPhongDephtNormalVS\n\n#include "Math.glsl";\n\n#include "Camera.glsl";\n\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#include "BlinnPhongVertex.glsl";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    vec4 positionCS = getPositionCS(pixel.positionWS);\n    v_PositionCS = positionCS;\n    gl_Position = positionCS;\n    gl_Position = remapPositionZ(gl_Position);\n}','#define SHADER_NAME BlinnPhongDephtNormalFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#include "ShadingFrag.glsl";\n\n#include "DepthNormalFrag.glsl";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    vec3 normalWS = pixel.normalWS;\n\n#ifdef NORMALMAP\n    #ifdef UV\n\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    vec3 normalTS = normalSampler;\n    normalWS = normalize(pixel.TBN * normalTS);\n\n    #endif // UV\n#endif // NORMALMAP\n\n    vec4 positionCS = v_PositionCS;\n\n    vec4 dephtNormal = encodeDepthNormal(positionCS, normalWS);\n\n    gl_FragColor = dephtNormal;\n}',"DepthNormal")}}class TrailShaderInit{static init(){let e={a_Position:[VertexTrail.TRAIL_POSITION0,t.ShaderDataType.Vector4],a_OffsetVector:[VertexTrail.TRAIL_OFFSETVECTOR,t.ShaderDataType.Vector3],a_Texcoord0X:[VertexTrail.TRAIL_TEXTURECOORDINATE0X,t.ShaderDataType.Float],a_Texcoord0Y:[VertexTrail.TRAIL_TEXTURECOORDINATE0Y,t.ShaderDataType.Float],a_BirthTime:[VertexTrail.TRAIL_TIME0,t.ShaderDataType.Float],a_Color:[VertexTrail.TRAIL_COLOR,t.ShaderDataType.Vector4]},a={u_TilingOffset:t.ShaderDataType.Vector4,u_MainTexture:t.ShaderDataType.Texture2D,u_MainColor:t.ShaderDataType.Color},r={u_MainColor:t.Color.WHITE,u_TilingOffset:new t.Vector4(1,1,0,0)},i=t.Shader3D.add("Trail",!1,!1),n=new t.SubShader(e,a,r);i.addSubShader(n),n.addShaderPass('#define SHADER_NAME TrailVS\n\n#include "Camera.glsl";\n#include "Scene.glsl"\n#include "SceneFogInput.glsl"\n\n// Sprite uniform\nuniform float u_CurTime;\nuniform float u_LifeTime;\nuniform vec4 u_WidthCurve[10];\nuniform int u_WidthCurveKeyLength;\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nfloat hermiteInterpolate(float t, float outTangent, float inTangent, float duration, float value1, float value2)\n{\n    float t2 = t * t;\n    float t3 = t2 * t;\n    float a = 2.0 * t3 - 3.0 * t2 + 1.0;\n    float b = t3 - 2.0 * t2 + t;\n    float c = t3 - t2;\n    float d = -2.0 * t3 + 3.0 * t2;\n    return a * value1 + b * outTangent * duration + c * inTangent * duration + d * value2;\n}\n\nfloat getCurWidth(in float normalizeTime)\n{\n    float width;\n    if (normalizeTime == 0.0)\n\t{\n\t    width = u_WidthCurve[0].w;\n\t}\n    else if (normalizeTime >= 1.0)\n\t{\n\t    width = u_WidthCurve[u_WidthCurveKeyLength - 1].w;\n\t}\n    else\n\t{\n\t    for (int i = 0; i < 10; i++)\n\t\t{\n\t\t    if (normalizeTime == u_WidthCurve[i].x)\n\t\t\t{\n\t\t\t    width = u_WidthCurve[i].w;\n\t\t\t    break;\n\t\t\t}\n\n\t\t    vec4 lastFrame = u_WidthCurve[i];\n\t\t    vec4 nextFrame = u_WidthCurve[i + 1];\n\t\t    if (normalizeTime > lastFrame.x && normalizeTime < nextFrame.x)\n\t\t\t{\n\t\t\t    float duration = nextFrame.x - lastFrame.x;\n\t\t\t    float t = (normalizeTime - lastFrame.x) / duration;\n\t\t\t    float outTangent = lastFrame.z;\n\t\t\t    float inTangent = nextFrame.y;\n\t\t\t    float value1 = lastFrame.w;\n\t\t\t    float value2 = nextFrame.w;\n\t\t\t    width = hermiteInterpolate(t, outTangent, inTangent, duration, value1, value2);\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\t}\n    return width;\n}\n\nvoid main()\n{\n    float normalizeTime = (u_CurTime - a_BirthTime) / u_LifeTime;\n\n    v_Texcoord0 = vec2(a_Texcoord0X, 1.0 - a_Texcoord0Y) * u_TilingOffset.xy + u_TilingOffset.zw;\n\n    v_Color = a_Color;\n\n    vec3 cameraPos = (u_View * a_Position).rgb;\n    gl_Position = u_Projection * vec4(cameraPos + a_OffsetVector * getCurWidth(normalizeTime), 1.0);\n\n    gl_Position = remapPositionZ(gl_Position);\n\t#ifdef FOG\n        FogHandle(gl_Position.z);\n    #endif\n}','#define SHADER_NAME TrailFS\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nvoid main()\n{\n    vec4 color = 2.0 * u_MainColor * v_Color;\n#ifdef MAINTEXTURE\n    vec4 mainTextureColor = texture2D(u_MainTexture, v_Texcoord0);\n    color *= mainTextureColor;\n#endif\n\n#ifdef FOG\n    color.xyz = scenUnlitFog(color.xyz);\n#endif // FOG\n    gl_FragColor = color;\n}\n')}}class PBRStandardShaderInit{static init(){let e={u_AlbedoColor:t.ShaderDataType.Color,u_TilingOffset:t.ShaderDataType.Vector4,u_NormalScale:t.ShaderDataType.Float,u_Metallic:t.ShaderDataType.Float,u_Smoothness:t.ShaderDataType.Float,u_OcclusionStrength:t.ShaderDataType.Float,u_AlphaTestValue:t.ShaderDataType.Float,u_EmissionColor:t.ShaderDataType.Color,u_EmissionIntensity:t.ShaderDataType.Float,u_AlbedoTexture:t.ShaderDataType.Texture2D,u_NormalTexture:t.ShaderDataType.Texture2D,u_OcclusionTexture:t.ShaderDataType.Texture2D,u_EmissionTexture:t.ShaderDataType.Texture2D,u_MetallicGlossTexture:t.ShaderDataType.Texture2D,u_AnisotropyStrength:t.ShaderDataType.Float,u_AnisotropyTexture:t.ShaderDataType.Texture2D,u_AnisotropyRotation:t.ShaderDataType.Float,u_ClearCoatFactor:t.ShaderDataType.Float,u_ClearCoatTexture:t.ShaderDataType.Texture2D,u_ClearCoatRoughness:t.ShaderDataType.Float,u_ClearCoatRoughnessTexture:t.ShaderDataType.Texture2D,u_ClearCoatNormalTexture:t.ShaderDataType.Texture2D,u_DetailAlbedoTexture:t.ShaderDataType.Texture2D,u_DetailNormalTexture:t.ShaderDataType.Texture2D,u_DetailNormalScale:t.ShaderDataType.Float,u_DetailTillingOffset:t.ShaderDataType.Vector4},a={u_AlbedoColor:t.Color.WHITE,u_TilingOffset:new t.Vector4(1,1,0,0),u_DetailTillingOffset:new t.Vector4(1,1,0,0),u_NormalScale:1,u_DetailNormalScale:1,u_Metallic:0,u_Smoothness:.5,u_OcclusionStrength:1,u_EmissionColor:t.Color.WHITE,u_EmissionIntensity:1,u_AlphaTestValue:.5,u_AnisotropyStrength:0,u_AnisotropyRotation:0,u_ClearCoatFactor:0,u_ClearCoatRoughness:0},r=t.Shader3D.add("PBR",!0,!0),i=new t.SubShader(t.SubShader.DefaultAttributeMap,e,a);r.addSubShader(i),i.addShaderPass('#define SHADER_NAME PBRStandardVS\n\n#include "Math.glsl";\n\n#include "Scene.glsl";\n#include "SceneFogInput.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#include "PBRVertex.glsl";\n\n#if defined(DETAILTEXTURE) || defined(DETAILNORMAL)\nvarying vec2 v_DetailUV;\n#endif\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n#if defined(DETAILTEXTURE) || defined(DETAILNORMAL)\n    #ifdef UV\n    v_DetailUV = transformUV(vertex.texCoord0, u_DetailTillingOffset);\n    #else // UV\n    v_DetailUV = vec2(0.0);\n    #endif\n#endif\n\n    gl_Position = getPositionCS(pixel.positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n\n#ifdef FOG\n    FogHandle(gl_Position.z);\n#endif\n}','#define SHADER_NAME PBRStandardFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#include "PBRMetallicFrag.glsl";\n\n#if defined(DETAILTEXTURE) || defined(DETAILNORMAL)\nvarying vec2 v_DetailUV;\n    #define ColorSpaceDouble vec3(4.59479380, 4.59479380, 4.59479380);\nvec3 BlendNormals(vec3 n1, vec3 n2)\n{\n    return normalize(vec3(n1.xy + n2.xy, n1.z * n2.z));\n}\n#endif // DETAILTEXTURE || DETAILNORMAL\n\nvoid initSurfaceInputs(inout SurfaceInputs inputs, const in PixelParams pixel)\n{\n#ifdef UV\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n#else // UV\n    vec2 uv = vec2(0.0);\n#endif // UV\n\n    inputs.diffuseColor = u_AlbedoColor.rgb;\n    inputs.alpha = u_AlbedoColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    inputs.diffuseColor *= pixel.vertexColor.xyz;\n    inputs.alpha *= pixel.vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n    inputs.alphaTest = u_AlphaTestValue;\n\n#ifdef ALBEDOTEXTURE\n    vec4 albedoSampler = texture2D(u_AlbedoTexture, uv);\n    #ifdef Gamma_u_AlbedoTexture\n    albedoSampler = gammaToLinear(albedoSampler);\n    #endif // Gamma_u_AlbedoTexture\n    inputs.diffuseColor *= albedoSampler.rgb;\n    inputs.alpha *= albedoSampler.a;\n#endif // ALBEDOTEXTURE\n\n// Detail Albedo\n#ifdef DETAILTEXTURE\n    vec3 detailSampler = texture2D(u_DetailAlbedoTexture, v_DetailUV).rgb;\n    #ifdef Gamma_u_DetailAlbedoTexture\n    detailSampler = gammaToLinear(detailSampler);\n    #endif // Gamma_u_DetailAlbedoTexture\n    detailSampler *= ColorSpaceDouble;\n    inputs.diffuseColor *= detailSampler;\n#endif\n\n    inputs.normalTS = vec3(0.0, 0.0, 1.0);\n#ifdef NORMALTEXTURE\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    inputs.normalTS = normalScale(normalSampler, u_NormalScale);\n#endif\n\n#ifdef DETAILNORMAL\n    vec3 detailnormalSampler = texture2D(u_DetailNormalTexture, v_DetailUV).rgb;\n    detailnormalSampler = normalize(detailnormalSampler * 2.0 - 1.0);\n    detailnormalSampler.y *= -1.0;\n    detailnormalSampler = normalScale(detailnormalSampler, u_DetailNormalScale);\n    inputs.normalTS = BlendNormals(inputs.normalTS, detailnormalSampler);\n#endif\n\n    inputs.metallic = u_Metallic;\n    inputs.smoothness = u_Smoothness;\n\n#ifdef METALLICGLOSSTEXTURE\n\n    vec4 metallicSampler = texture2D(u_MetallicGlossTexture, uv);\n    #ifdef Gamma_u_MetallicGlossTexture\n    metallicSampler = gammaToLinear(metallicSampler);\n    #endif // Gamma_u_MetallicGlossTexture\n\n    inputs.metallic = metallicSampler.x;\n\n    #ifdef SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n\t#ifdef ALBEDOTEXTURE\n    inputs.smoothness = (albedoSampler.a * u_Smoothness);\n\t#endif // ALBEDOTEXTURE\n    #else // SMOOTHNESSSOURCE_METALLICTEXTURE_ALPHA\n    inputs.smoothness = (metallicSampler.a * u_Smoothness);\n    #endif // SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n\n#endif // METALLICGLOSSTEXTURE\n\n    inputs.occlusion = 1.0;\n#ifdef OCCLUSIONTEXTURE\n    vec4 occlusionSampler = texture2D(u_OcclusionTexture, uv);\n    #ifdef Gamma_u_OcclusionTexture\n    occlusionSampler = gammaToLinear(occlusionSampler);\n    #endif // Gamma_u_OcclusionTexture\n\n    float occlusion = occlusionSampler.g;\n    inputs.occlusion = (1.0 - u_OcclusionStrength) + occlusion * u_OcclusionStrength;\n#endif // OCCLUSIONTEXTURE\n\n    inputs.emissionColor = vec3(0.0);\n#ifdef EMISSION\n    inputs.emissionColor = u_EmissionColor.rgb * u_EmissionIntensity;\n    #ifdef EMISSIONTEXTURE\n    vec4 emissionSampler = texture2D(u_EmissionTexture, uv);\n\t#ifdef Gamma_u_EmissionTexture\n    emissionSampler = gammaToLinear(emissionSampler);\n\t#endif // Gamma_u_EmissionTexture\n    inputs.emissionColor *= emissionSampler.rgb;\n    #endif // EMISSIONTEXTURE\n#endif // EMISSION\n\n#ifdef CLEARCOAT\n    inputs.clearCoat = u_ClearCoatFactor;\n    inputs.clearCoatRoughness = u_ClearCoatRoughness;\n\n    #ifdef CLEARCOATMAP\n    // todo\n    // linear tex no need gamma\n    vec4 clearCoatSampler = texture2D(u_ClearCoatTexture, uv);\n    inputs.clearCoat *= clearCoatSampler.r;\n    #endif // CLEARCOATMAP\n\n    #ifdef CLEARCOAT_ROUGHNESSMAP\n    // todo\n    // linear tex no need gamma\n    vec4 clearcoatSampleRoughness = texture2D(u_ClearCoatRoughnessTexture, uv);\n    inputs.clearCoatRoughness *= clearcoatSampleRoughness.g;\n    #endif // CLEARCOAT_ROUGHNESSMAP\n\n    #ifdef CLEARCOAT_NORMAL\n    vec3 clearCoatNormalSampler = texture2D(u_ClearCoatNormalTexture, uv).rgb;\n    clearCoatNormalSampler = normalize(clearCoatNormalSampler * 2.0 - 1.0);\n    clearCoatNormalSampler.y *= -1.0;\n    inputs.clearCoatNormalTS = clearCoatNormalSampler;\n    #endif // CLEARCOAT_NORMAL\n#endif // CLEARCOAT\n\n#ifdef ANISOTROPIC\n    inputs.anisotropy = u_AnisotropyStrength;\n    vec2 direction = vec2(1.0, 0.0);\n\n    #ifdef ANISOTROPYMAP\n    vec3 anisotropySampler = texture2D(u_AnisotropyTexture, uv).rgb;\n\n    inputs.anisotropy *= anisotropySampler.b;\n    direction = anisotropySampler.xy * 2.0 - 1.0;\n    #endif // ANISOTROPYMAP\n\n    vec2 anisotropyRotation = vec2(cos(u_AnisotropyRotation), sin(u_AnisotropyRotation));\n    mat2 rotationMatrix = mat2(anisotropyRotation.x, anisotropyRotation.y, -anisotropyRotation.y, anisotropyRotation.x);\n    inputs.anisotropyDirection = rotationMatrix * direction;\n\n#endif // ANISOTROPIC\n}\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    SurfaceInputs inputs;\n    initSurfaceInputs(inputs, pixel);\n\n    vec4 surfaceColor = PBR_Metallic_Flow(inputs, pixel);\n\n#ifdef FOG\n    surfaceColor.rgb = sceneLitFog(surfaceColor.rgb);\n#endif // FOG\n\n    gl_FragColor = surfaceColor;\n}'),i.addShaderPass(z,W,"ShadowCaster"),i.addShaderPass('#define SHADER_NAME PBRStandardDepthNormalVS\n\n#include "Math.glsl";\n\n#include "Camera.glsl";\n\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#include "PBRVertex.glsl";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    sharePixelParams(pixel);\n\n    vec4 positionCS = getPositionCS(pixel.positionWS);\n    v_PositionCS = positionCS;\n    gl_Position = positionCS;\n    gl_Position = remapPositionZ(gl_Position);\n}','#define SHADER_NAME PBRStandardDepthNormalFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#include "ShadingFrag.glsl";\n\n#include "DepthNormalFrag.glsl";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    vec3 normalWS = pixel.normalWS;\n\n#ifdef NORMALTEXTURE\n    #ifdef UV\n\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    vec3 normalTS = normalScale(normalSampler, u_NormalScale);\n    normalWS = normalize(pixel.TBN * normalTS);\n\n    #endif // UV\n#endif // NORMALTEXTURE\n\n    vec4 positionCS = v_PositionCS;\n\n    vec4 dephtNormal = encodeDepthNormal(positionCS, normalWS);\n\n    gl_FragColor = dephtNormal;\n}',"DepthNormal")}}class SkyBoxShaderInit{static init(){let e={a_Position:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_TintColor:t.ShaderDataType.Color,u_Exposure:t.ShaderDataType.Float,u_Rotation:t.ShaderDataType.Float,u_CubeTexture:t.ShaderDataType.TextureCube},r={u_TintColor:new t.Color(.5,.5,.5,.5),u_Exposure:1,u_Rotation:0},i=t.Shader3D.add("SkyBox"),n=new t.SubShader(e,a,r);i.addSubShader(n);let s=n.addShaderPass('#define SHADER_NAME SkyBoxVS\n\n#include "Camera.glsl";\n\nconst float c_deg2ang = 3.141593 / 180.0;\n\nvec4 rotateAroundYInDegrees(vec4 vertex, float deg)\n{\n    float angle = deg * c_deg2ang;\n    float sina = sin(angle);\n    float cosa = cos(angle);\n    mat2 m = mat2(cosa, -sina, sina, cosa);\n    return vec4(m * vertex.xz, vertex.yw).xzyw;\n}\n\nvec4 remapSkyPositionZ(in vec4 position)\n{\n    position.z = position.w;\n    return position;\n}\n\nvarying vec3 v_Texcoord;\n\nvoid main()\n{\n    // todo 这个转换 ？\n    v_Texcoord = vec3(-a_Position.x, a_Position.yz); //转换坐标系\n\n    vec4 position = rotateAroundYInDegrees(a_Position, u_Rotation);\n    // gl_Position = getPositionCS(position.xyz);\n\n    gl_Position = u_ViewProjection * position;\n\n    gl_Position = remapSkyPositionZ(gl_Position);\n}','#define SHADER_NAME SkyBoxFS\n\n#include "Color.glsl";\n\nvarying vec3 v_Texcoord;\n\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvoid main()\n{\n    vec3 uv = v_Texcoord;\n    vec4 cubeSampler = textureCube(u_CubeTexture, uv);\n#ifdef Gamma_u_CubeTexture\n    cubeSampler = gammaToLinear(cubeSampler);\n#endif // Gamma_u_CubeTexture\n\n    vec3 color = cubeSampler.rgb * u_TintColor.rgb * u_Exposure * c_ColorSpace.rgb;\n\n    gl_FragColor = vec4(color, 1.0);\n}');s.renderState.depthTest=t.RenderState.DEPTHTEST_LEQUAL,s.statefirst=!0}}class ParticleShuriKenShaderInit{static init(){t.Shader3D.addInclude("MathGradient.glsl","float getCurValueFromGradientFloat(in vec2 gradientNumbers[4], in float normalizedAge)\n{\n    float curValue;\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientNumber = gradientNumbers[i];\n\t    float key = gradientNumber.x;\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    vec2 lastGradientNumber = gradientNumbers[i - 1];\n\t\t    float lastKey = lastGradientNumber.x;\n\t\t    float age = (normalizedAge - lastKey) / (key - lastKey);\n\t\t    curValue = mix(lastGradientNumber.y, gradientNumber.y, age);\n\t\t    break;\n\t\t}\n\t}\n    return curValue;\n}\n\nfloat getTotalValueFromGradientFloat(in vec2 gradientNumbers[4],\n    in float normalizedAge)\n{\n    float totalValue = 0.0;\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientNumber = gradientNumbers[i];\n\t    float key = gradientNumber.x;\n\t    vec2 lastGradientNumber = gradientNumbers[i - 1];\n\t    float lastValue = lastGradientNumber.y;\n\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    float lastKey = lastGradientNumber.x;\n\t\t    float age = (normalizedAge - lastKey) / (key - lastKey);\n\t\t    totalValue += (lastValue + mix(lastValue, gradientNumber.y, age)) / 2.0 * a_ShapePositionStartLifeTime.w * (normalizedAge - lastKey);\n\t\t    break;\n\t\t}\n\t    else\n\t\t{\n\t\t    totalValue += (lastValue + gradientNumber.y) / 2.0 * a_ShapePositionStartLifeTime.w * (key - lastGradientNumber.x);\n\t\t}\n\t}\n    return totalValue;\n}\n\nvec4 getColorFromGradient(in vec2 gradientAlphas[COLORCOUNT],\n    in vec4 gradientColors[COLORCOUNT],\n    in float normalizedAge, in vec4 keyRanges)\n{\n    float alphaAge = clamp(normalizedAge, keyRanges.z, keyRanges.w);\n    vec4 overTimeColor;\n    for (int i = 1; i < COLORCOUNT; i++)\n\t{\n\t    vec2 gradientAlpha = gradientAlphas[i];\n\t    float alphaKey = gradientAlpha.x;\n\t    if (alphaKey >= alphaAge)\n\t\t{\n\t\t    vec2 lastGradientAlpha = gradientAlphas[i - 1];\n\t\t    float lastAlphaKey = lastGradientAlpha.x;\n\t\t    float age = (alphaAge - lastAlphaKey) / (alphaKey - lastAlphaKey);\n\t\t    overTimeColor.a = mix(lastGradientAlpha.y, gradientAlpha.y, age);\n\t\t    break;\n\t\t}\n\t}\n\n    float colorAge = clamp(normalizedAge, keyRanges.x, keyRanges.y);\n    for (int i = 1; i < COLORCOUNT; i++)\n\t{\n\t    vec4 gradientColor = gradientColors[i];\n\t    float colorKey = gradientColor.x;\n\t    if (colorKey >= colorAge)\n\t\t{\n\t\t    vec4 lastGradientColor = gradientColors[i - 1];\n\t\t    float lastColorKey = lastGradientColor.x;\n\t\t    float age = (colorAge - lastColorKey) / (colorKey - lastColorKey);\n\t\t    overTimeColor.rgb = mix(gradientColors[i - 1].yzw, gradientColor.yzw, age);\n\t\t    break;\n\t\t}\n\t}\n    return overTimeColor;\n}\n\nfloat getFrameFromGradient(in vec2 gradientFrames[4], in float normalizedAge)\n{\n    float overTimeFrame;\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientFrame = gradientFrames[i];\n\t    float key = gradientFrame.x;\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    vec2 lastGradientFrame = gradientFrames[i - 1];\n\t\t    float lastKey = lastGradientFrame.x;\n\t\t    float age = (normalizedAge - lastKey) / (key - lastKey);\n\t\t    overTimeFrame = mix(lastGradientFrame.y, gradientFrame.y, age);\n\t\t    break;\n\t\t}\n\t}\n    return floor(overTimeFrame);\n}\n"),t.Shader3D.addInclude("particleShuriKenSpriteVS.glsl","// sprite Uniform\nuniform float u_CurrentTime;\nuniform vec3 u_Gravity;\nuniform vec2 u_DragConstanct;\nuniform vec3 u_WorldPosition;\nuniform vec4 u_WorldRotation;\nuniform bool u_ThreeDStartRotation;\nuniform int u_ScalingMode;\nuniform vec3 u_PositionScale;\nuniform vec3 u_SizeScale;\n\nuniform float u_StretchedBillboardLengthScale;\nuniform float u_StretchedBillboardSpeedScale;\nuniform int u_SimulationSpace;\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nuniform int u_VOLSpaceType;\n#endif\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\nuniform vec3 u_VOLVelocityConst;\n#endif\n#if defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nuniform vec2 u_VOLVelocityGradientX[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientY[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientZ[4]; // x为key,y为速度\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\nuniform vec3 u_VOLVelocityConstMax;\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\nuniform vec2 u_VOLVelocityGradientMaxX[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientMaxY[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientMaxZ[4]; // x为key,y为速度\n#endif\n\n#ifdef COLORKEYCOUNT_8\n    #define COLORCOUNT 8\n#else\n    #define COLORCOUNT 4\n#endif\n\n#ifdef COLOROVERLIFETIME\nuniform vec4 u_ColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\nuniform vec2 u_ColorOverLifeGradientAlphas[COLORCOUNT]; // x为key,y为Alpha\nuniform vec4 u_ColorOverLifeGradientRanges;\n#endif\n#ifdef RANDOMCOLOROVERLIFETIME\nuniform vec4 u_ColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\nuniform vec2 u_ColorOverLifeGradientAlphas[COLORCOUNT]; // x为key,y为Alpha\nuniform vec4 u_ColorOverLifeGradientRanges;\nuniform vec4 u_MaxColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\nuniform vec2 u_MaxColorOverLifeGradientAlphas[COLORCOUNT]; // x为key,y为Alpha\nuniform vec4 u_MaxColorOverLifeGradientRanges;\n#endif\n\n#if defined(SIZEOVERLIFETIMECURVE) || defined(SIZEOVERLIFETIMERANDOMCURVES)\nuniform vec2 u_SOLSizeGradient[4]; // x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\nuniform vec2 u_SOLSizeGradientMax[4]; // x为key,y为尺寸\n#endif\n#if defined(SIZEOVERLIFETIMECURVESEPERATE) || defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\nuniform vec2 u_SOLSizeGradientX[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientY[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientZ[4]; // x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\nuniform vec2 u_SOLSizeGradientMaxX[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientMaxY[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientMaxZ[4]; // x为key,y为尺寸\n#endif\n\n#ifdef ROTATIONOVERLIFETIME\n    #if defined(ROTATIONOVERLIFETIMECONSTANT) || defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\nuniform float u_ROLAngularVelocityConst;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\nuniform float u_ROLAngularVelocityConstMax;\n    #endif\n    #if defined(ROTATIONOVERLIFETIMECURVE) || defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nuniform vec2 u_ROLAngularVelocityGradient[4]; // x为key,y为旋转\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\nuniform vec2 u_ROLAngularVelocityGradientMax[4]; // x为key,y为旋转\n    #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n    #if defined(ROTATIONOVERLIFETIMECONSTANT) || defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\nuniform vec3 u_ROLAngularVelocityConstSeprarate;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\nuniform vec3 u_ROLAngularVelocityConstMaxSeprarate;\n    #endif\n    #if defined(ROTATIONOVERLIFETIMECURVE) || defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nuniform vec2 u_ROLAngularVelocityGradientX[4];\nuniform vec2 u_ROLAngularVelocityGradientY[4];\nuniform vec2 u_ROLAngularVelocityGradientZ[4];\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\nuniform vec2 u_ROLAngularVelocityGradientMaxX[4];\nuniform vec2 u_ROLAngularVelocityGradientMaxY[4];\nuniform vec2 u_ROLAngularVelocityGradientMaxZ[4];\nuniform vec2 u_ROLAngularVelocityGradientMaxW[4];\n    #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE) || defined(TEXTURESHEETANIMATIONRANDOMCURVE)\nuniform float u_TSACycles;\nuniform vec2 u_TSASubUVLength;\nuniform vec2 u_TSAGradientUVs[4]; // x为key,y为frame\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\nuniform vec2 u_TSAMaxGradientUVs[4]; // x为key,y为frame\n#endif");let e={a_CornerTextureCoordinate:[VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0,t.ShaderDataType.Vector4],a_MeshPosition:[VertexShuriKenParticle.PARTICLE_POSITION0,t.ShaderDataType.Vector3],a_MeshColor:[VertexShuriKenParticle.PARTICLE_COLOR0,t.ShaderDataType.Vector4],a_MeshTextureCoordinate:[VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0,t.ShaderDataType.Vector2],a_ShapePositionStartLifeTime:[VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME,t.ShaderDataType.Vector4],a_DirectionTime:[VertexShuriKenParticle.PARTICLE_DIRECTIONTIME,t.ShaderDataType.Vector4],a_StartColor:[VertexShuriKenParticle.PARTICLE_STARTCOLOR0,t.ShaderDataType.Vector4],a_StartSize:[VertexShuriKenParticle.PARTICLE_STARTSIZE,t.ShaderDataType.Vector3],a_StartRotation0:[VertexShuriKenParticle.PARTICLE_STARTROTATION,t.ShaderDataType.Vector3],a_StartSpeed:[VertexShuriKenParticle.PARTICLE_STARTSPEED,t.ShaderDataType.Float],a_Random0:[VertexShuriKenParticle.PARTICLE_RANDOM0,t.ShaderDataType.Vector4],a_Random1:[VertexShuriKenParticle.PARTICLE_RANDOM1,t.ShaderDataType.Vector4],a_SimulationWorldPostion:[VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION,t.ShaderDataType.Vector3],a_SimulationWorldRotation:[VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION,t.ShaderDataType.Vector4],a_SimulationUV:[VertexShuriKenParticle.PARTICLE_SIMULATIONUV,t.ShaderDataType.Vector4]},a={u_Tintcolor:t.ShaderDataType.Color,u_texture:t.ShaderDataType.Texture2D,u_TilingOffset:t.ShaderDataType.Vector4},r={u_Tintcolor:new t.Color(.5,.5,.5,.5),u_TilingOffset:new t.Vector4(1,1,0,0)},i=t.Shader3D.add("PARTICLESHURIKEN",!1,!1),n=new t.SubShader(e,a,r);i.addSubShader(n),n.addShaderPass('#define SHADER_NAME ParticleVS\n\n#include "Camera.glsl";\n#include "particleShuriKenSpriteVS.glsl";\n#include "Math.glsl";\n#include "MathGradient.glsl";\n#include "Color.glsl";\n#include "Scene.glsl"\n#include "SceneFogInput.glsl"\n\n\n#ifdef RENDERMODE_MESH\nvarying vec4 v_MeshColor;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\n//修改这里剔除没有用到的光照函数，增加粒子的编译速度\nvec2 TransformUV(vec2 texcoord, vec4 tilingOffset)\n{\n    vec2 transTexcoord = vec2(texcoord.x, texcoord.y - 1.0) * tilingOffset.xy + vec2(tilingOffset.z, -tilingOffset.w);\n    transTexcoord.y += 1.0;\n    return transTexcoord;\n}\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nvec3 computeParticleLifeVelocity(in float normalizedAge)\n{\n    vec3 outLifeVelocity;\n    #ifdef VELOCITYOVERLIFETIMECONSTANT\n    outLifeVelocity = u_VOLVelocityConst;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMECURVE\n    outLifeVelocity = vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\tgetCurValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    outLifeVelocity = mix(u_VOLVelocityConst,\n\tu_VOLVelocityConstMax,\n\tvec3(a_Random1.y, a_Random1.z, a_Random1.w));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n    outLifeVelocity = vec3(\n\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t    getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX, normalizedAge),\n\t    a_Random1.y),\n\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY, normalizedAge),\n\t    a_Random1.z),\n\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge),\n\t    getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ, normalizedAge),\n\t    a_Random1.w));\n    #endif\n\n    return outLifeVelocity;\n}\n#endif\n\n// drag\nvec3 getStartPosition(vec3 startVelocity, float age, vec3 dragData)\n{\n    vec3 startPosition;\n    float lasttime = min(startVelocity.x / dragData.x, age);\n    startPosition = lasttime * (startVelocity - 0.5 * dragData * lasttime);\n    return startPosition;\n}\n\nvec3 computeParticlePosition(in vec3 startVelocity, in vec3 lifeVelocity, in float age, in float normalizedAge, vec3 gravityVelocity, vec4 worldRotation, vec3 dragData)\n{\n    vec3 startPosition = getStartPosition(startVelocity, age, dragData);\n    vec3 lifePosition;\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n    #ifdef VELOCITYOVERLIFETIMECONSTANT\n    // startPosition = startVelocity * age;\n    lifePosition = lifeVelocity * age;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMECURVE\n    // startPosition = startVelocity * age;\n    lifePosition = vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    // startPosition = startVelocity * age;\n    lifePosition = lifeVelocity * age;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n    // startPosition = startVelocity * age;\n    lifePosition = vec3(\n\tmix(\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX, normalizedAge),\n\t    a_Random1.y),\n\tmix(\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY, normalizedAge),\n\t    a_Random1.z),\n\tmix(\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge),\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ, normalizedAge),\n\t    a_Random1.w));\n    #endif\n\n    vec3 finalPosition;\n    if (u_VOLSpaceType == 0)\n\t{\n\t    if (u_ScalingMode != 2)\n\t\tfinalPosition = rotationByQuaternions(\n\t\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition + lifePosition),\n\t\t    worldRotation);\n\t    else\n\t\tfinalPosition = rotationByQuaternions(\n\t\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition + lifePosition,\n\t\t    worldRotation);\n\t}\n    else\n\t{\n\t    if (u_ScalingMode != 2)\n\t\tfinalPosition = rotationByQuaternions(\n\t\t\t\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition),\n\t\t\t\t    worldRotation)\n\t\t    + lifePosition;\n\t    else\n\t\tfinalPosition = rotationByQuaternions(\n\t\t\t\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition,\n\t\t\t\t    worldRotation)\n\t\t    + lifePosition;\n\t}\n#else\n    // startPosition = startVelocity * age;\n    vec3 finalPosition;\n    if (u_ScalingMode != 2)\n\tfinalPosition = rotationByQuaternions(\n\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition),\n\t    worldRotation);\n    else\n\tfinalPosition = rotationByQuaternions(\n\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition,\n\t    worldRotation);\n#endif\n\n    if (u_SimulationSpace == 0)\n\tfinalPosition = finalPosition + a_SimulationWorldPostion;\n    else if (u_SimulationSpace == 1)\n\tfinalPosition = finalPosition + u_WorldPosition;\n\n    finalPosition += 0.5 * gravityVelocity * age;\n\n    return finalPosition;\n}\n\nvec4 computeParticleColor(in vec4 color, in float normalizedAge)\n{\n#ifdef COLOROVERLIFETIME\n    color *= getColorFromGradient(u_ColorOverLifeGradientAlphas,\n\tu_ColorOverLifeGradientColors,\n\tnormalizedAge, u_ColorOverLifeGradientRanges);\n#endif\n\n#ifdef RANDOMCOLOROVERLIFETIME\n    color *= mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,\n\t\t     u_ColorOverLifeGradientColors,\n\t\t     normalizedAge, u_ColorOverLifeGradientRanges),\n\tgetColorFromGradient(u_MaxColorOverLifeGradientAlphas,\n\t    u_MaxColorOverLifeGradientColors,\n\t    normalizedAge, u_MaxColorOverLifeGradientRanges),\n\ta_Random0.y);\n#endif\n\n    return color;\n}\n\nvec2 computeParticleSizeBillbard(in vec2 size, in float normalizedAge)\n{\n#ifdef SIZEOVERLIFETIMECURVE\n    size *= getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge);\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n    size *= mix(getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientMax, normalizedAge),\n\ta_Random0.z);\n#endif\n#ifdef SIZEOVERLIFETIMECURVESEPERATE\n    size *= vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge));\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    size *= vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\t     getCurValueFromGradientFloat(u_SOLSizeGradientMaxX, normalizedAge),\n\t\t     a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxY, normalizedAge),\n\t    a_Random0.z));\n#endif\n    return size;\n}\n\n#ifdef RENDERMODE_MESH\nvec3 computeParticleSizeMesh(in vec3 size, in float normalizedAge)\n{\n    #ifdef SIZEOVERLIFETIMECURVE\n    size *= getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge);\n    #endif\n    #ifdef SIZEOVERLIFETIMERANDOMCURVES\n    size *= mix(getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientMax, normalizedAge),\n\ta_Random0.z);\n    #endif\n    #ifdef SIZEOVERLIFETIMECURVESEPERATE\n    size *= vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientZ, normalizedAge));\n    #endif\n    #ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    size *= vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\t     getCurValueFromGradientFloat(u_SOLSizeGradientMaxX, normalizedAge),\n\t\t     a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxY, normalizedAge),\n\t    a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientZ, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ, normalizedAge),\n\t    a_Random0.z));\n    #endif\n    return size;\n}\n#endif\n\nfloat computeParticleRotationFloat(in float rotation,\n    in float age,\n    in float normalizedAge)\n{\n#ifdef ROTATIONOVERLIFETIME\n    #ifdef ROTATIONOVERLIFETIMECONSTANT\n    float ageRot = u_ROLAngularVelocityConst * age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge);\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    float ageRot = mix(u_ROLAngularVelocityConst, u_ROLAngularVelocityConstMax, a_Random0.w) * age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += mix(\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,\n\t    normalizedAge),\n\ta_Random0.w);\n    #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n    #ifdef ROTATIONOVERLIFETIMECONSTANT\n    float ageRot = u_ROLAngularVelocityConstSeprarate.z * age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\tnormalizedAge);\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    float ageRot = mix(u_ROLAngularVelocityConstSeprarate.z,\n\t\t       u_ROLAngularVelocityConstMaxSeprarate.z,\n\t\t       a_Random0.w)\n\t* age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\t\tnormalizedAge),\n\tgetTotalValueFromGradientFloat(\n\t    u_ROLAngularVelocityGradientMaxZ, normalizedAge),\n\ta_Random0.w);\n    #endif\n#endif\n    return rotation;\n}\n\n#if defined(RENDERMODE_MESH) && (defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE))\nvec3 computeParticleRotationVec3(in vec3 rotation,\n    in float age,\n    in float normalizedAge)\n{\n    #ifdef ROTATIONOVERLIFETIME\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n    float ageRot = u_ROLAngularVelocityConst * age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge);\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    float ageRot = mix(u_ROLAngularVelocityConst, u_ROLAngularVelocityConstMax, a_Random0.w) * age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += mix(\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,\n\t    normalizedAge),\n\ta_Random0.w);\n\t#endif\n    #endif\n    #ifdef ROTATIONOVERLIFETIMESEPERATE\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n    vec3 ageRot = u_ROLAngularVelocityConstSeprarate * age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,\n\t\t\t normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,\n\t    normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t    normalizedAge));\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    vec3 ageRot = mix(u_ROLAngularVelocityConstSeprarate,\n\t\t      u_ROLAngularVelocityConstMaxSeprarate,\n\t\t      a_Random0.w)\n\t* age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,\n\t\t\t     normalizedAge),\n\t\t\t getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,\n\t\t\t     normalizedAge),\n\t\t\t a_Random0.w),\n\tmix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,\n\t\tnormalizedAge),\n\t    getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,\n\t\tnormalizedAge),\n\t    a_Random0.w),\n\tmix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\tnormalizedAge),\n\t    getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,\n\t\tnormalizedAge),\n\t    a_Random0.w));\n\t#endif\n    #endif\n    return rotation;\n}\n#endif\n\nvec2 computeParticleUV(in vec2 uv, in float normalizedAge)\n{\n#ifdef TEXTURESHEETANIMATIONCURVE\n    float cycleNormalizedAge = normalizedAge * u_TSACycles;\n    float frame = getFrameFromGradient(\n\tu_TSAGradientUVs, cycleNormalizedAge - floor(cycleNormalizedAge));\n    float totalULength = frame * u_TSASubUVLength.x;\n    float floorTotalULength = floor(totalULength);\n    uv.x += totalULength - floorTotalULength;\n    uv.y += floorTotalULength * u_TSASubUVLength.y;\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n    float cycleNormalizedAge = normalizedAge * u_TSACycles;\n    float uvNormalizedAge = cycleNormalizedAge - floor(cycleNormalizedAge);\n    float frame = floor(mix(getFrameFromGradient(u_TSAGradientUVs, uvNormalizedAge),\n\tgetFrameFromGradient(u_TSAMaxGradientUVs, uvNormalizedAge),\n\ta_Random1.x));\n    float totalULength = frame * u_TSASubUVLength.x;\n    float floorTotalULength = floor(totalULength);\n    uv.x += totalULength - floorTotalULength;\n    uv.y += floorTotalULength * u_TSASubUVLength.y;\n#endif\n    return uv;\n}\n\nvoid main()\n{\n    float age = u_CurrentTime - a_DirectionTime.w;\n    float normalizedAge = age / a_ShapePositionStartLifeTime.w;\n    vec3 lifeVelocity;\n    if (normalizedAge < 1.0)\n\t{\n\t    vec3 startVelocity = a_DirectionTime.xyz * a_StartSpeed;\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    lifeVelocity = computeParticleLifeVelocity(normalizedAge); //计算粒子生命周期速度\n#endif\n\t    vec3 gravityVelocity = u_Gravity * age;\n\n\t    vec4 worldRotation;\n\t    if (u_SimulationSpace == 0)\n\t\tworldRotation = a_SimulationWorldRotation;\n\t    else\n\t\tworldRotation = u_WorldRotation;\n\n\t    // drag\n\t    vec3 dragData = a_DirectionTime.xyz * mix(u_DragConstanct.x, u_DragConstanct.y, a_Random0.x);\n\t    vec3 center = computeParticlePosition(startVelocity, lifeVelocity, age, normalizedAge, gravityVelocity, worldRotation, dragData); //计算粒子位置\n\n#ifdef SPHERHBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    vec3 cameraUpVector = normalize(u_CameraUp); // TODO:是否外面归一化\n\t    vec3 sideVector = normalize(cross(u_CameraDirection, cameraUpVector));\n\t    vec3 upVector = normalize(cross(sideVector, u_CameraDirection));\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n    #if defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE)\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    vec3 rotation = vec3(\n\t\t\ta_StartRotation0.xy,\n\t\t\tcomputeParticleRotationFloat(a_StartRotation0.z, age, normalizedAge));\n\t\t    center += u_SizeScale.xzy * rotationByEuler(corner.x * sideVector + corner.y * upVector, rotation);\n\t\t}\n\t    else\n\t\t{\n\t\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t\t    float c = cos(rot);\n\t\t    float s = sin(rot);\n\t\t    mat2 rotation = mat2(c, -s, s, c);\n\t\t    corner = rotation * corner;\n\t\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * upVector);\n\t\t}\n    #else\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    center += u_SizeScale.xzy * rotationByEuler(corner.x * sideVector + corner.y * upVector, a_StartRotation0);\n\t\t}\n\t    else\n\t\t{\n\t\t    float c = cos(a_StartRotation0.x);\n\t\t    float s = sin(a_StartRotation0.x);\n\t\t    mat2 rotation = mat2(c, -s, s, c);\n\t\t    corner = rotation * corner;\n\t\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * upVector);\n\t\t}\n    #endif\n#endif\n\n#ifdef STRETCHEDBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    vec3 velocity;\n    #if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    if (u_VOLSpaceType == 0)\n\t\tvelocity = rotationByQuaternions(u_SizeScale * (startVelocity + lifeVelocity),\n\t\t\t       worldRotation)\n\t\t    + gravityVelocity;\n\t    else\n\t\tvelocity = rotationByQuaternions(u_SizeScale * startVelocity, worldRotation) + lifeVelocity + gravityVelocity;\n    #else\n\t    velocity = rotationByQuaternions(u_SizeScale * startVelocity, worldRotation) + gravityVelocity;\n    #endif\n\t    vec3 cameraUpVector = normalize(velocity);\n\t    vec3 direction = normalize(center - u_CameraPos);\n\t    vec3 sideVector = normalize(cross(direction, normalize(velocity)));\n\n\t    sideVector = u_SizeScale.xzy * sideVector;\n\t    cameraUpVector = length(vec3(u_SizeScale.x, 0.0, 0.0)) * cameraUpVector;\n\n\t    vec2 size = computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\n\t    const mat2 rotaionZHalfPI = mat2(0.0, -1.0, 1.0, 0.0);\n\t    corner = rotaionZHalfPI * corner;\n\t    corner.y = corner.y - abs(corner.y);\n\n\t    float speed = length(velocity); // TODO:\n\t    center += sign(u_SizeScale.x) * (sign(u_StretchedBillboardLengthScale) * size.x * corner.x * sideVector + (speed * u_StretchedBillboardSpeedScale + size.y * u_StretchedBillboardLengthScale) * corner.y * cameraUpVector);\n#endif\n\n#ifdef HORIZONTALBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    const vec3 cameraUpVector = vec3(0.0, 0.0, 1.0);\n\t    const vec3 sideVector = vec3(-1.0, 0.0, 0.0);\n\n\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t    float c = cos(rot);\n\t    float s = sin(rot);\n\t    mat2 rotation = mat2(c, -s, s, c);\n\t    corner = rotation * corner * cos(0.78539816339744830961566084581988); // TODO:临时缩小cos45,不确定U3D原因\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * cameraUpVector);\n#endif\n\n#ifdef VERTICALBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    const vec3 cameraUpVector = vec3(0.0, 1.0, 0.0);\n\t    vec3 sideVector = normalize(cross(u_CameraDirection, cameraUpVector));\n\n\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t    float c = cos(rot);\n\t    float s = sin(rot);\n\t    mat2 rotation = mat2(c, -s, s, c);\n\t    corner = rotation * corner * cos(0.78539816339744830961566084581988); // TODO:临时缩小cos45,不确定U3D原因\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * cameraUpVector);\n#endif\n\n#ifdef RENDERMODE_MESH\n\t    vec3 size = computeParticleSizeMesh(a_StartSize, normalizedAge);\n    #if defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE)\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    vec3 rotation = vec3(\n\t\t\ta_StartRotation0.xy,\n\t\t\tcomputeParticleRotationFloat(a_StartRotation0.z, age, normalizedAge));\n\t\t    center += rotationByQuaternions(\n\t\t\tu_SizeScale * rotationByEuler(a_MeshPosition * size, rotation),\n\t\t\tworldRotation);\n\t\t}\n\t    else\n\t\t{\n\t#ifdef ROTATIONOVERLIFETIME\n\t\t    float angle = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t\t    if (a_ShapePositionStartLifeTime.x != 0.0 || a_ShapePositionStartLifeTime.y != 0.0)\n\t\t\t{\n\t\t\t    center += (rotationByQuaternions(\n\t\t\t\trotationByAxis(\n\t\t\t\t    u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    normalize(cross(vec3(0.0, 0.0, 1.0),\n\t\t\t\t\tvec3(a_ShapePositionStartLifeTime.xy, 0.0))),\n\t\t\t\t    angle),\n\t\t\t\tworldRotation)); //已验证\n\t\t\t}\n\t\t    else\n\t\t\t{\n\t    #ifdef SHAPE\n\t\t\t    center += u_SizeScale.xzy * (rotationByQuaternions(rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), angle), worldRotation));\n\t    #else\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += rotationByAxis(u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    vec3(0.0, 0.0, -1.0),\n\t\t\t\t    angle); //已验证\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, 0.0, -1.0), angle),\n\t\t\t\t    worldRotation); //已验证\n\t    #endif\n\t\t\t}\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t    // TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\n\t\t    vec3 angle = computeParticleRotationVec3(\n\t\t\tvec3(0.0, 0.0, -a_StartRotation0.x), age, normalizedAge);\n\t\t    center += (rotationByQuaternions(\n\t\t\trotationByEuler(u_SizeScale * a_MeshPosition * size,\n\t\t\t    vec3(angle.x, angle.y, angle.z)),\n\t\t\tworldRotation)); //已验证\n\t#endif\n\t\t}\n    #else\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    center += rotationByQuaternions(\n\t\t\tu_SizeScale * rotationByEuler(a_MeshPosition * size, a_StartRotation0),\n\t\t\tworldRotation); //已验证\n\t\t}\n\t    else\n\t\t{\n\t\t    if (a_ShapePositionStartLifeTime.x != 0.0 || a_ShapePositionStartLifeTime.y != 0.0)\n\t\t\t{\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += rotationByAxis(\n\t\t\t\t    u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    normalize(cross(vec3(0.0, 0.0, 1.0),\n\t\t\t\t\tvec3(a_ShapePositionStartLifeTime.xy, 0.0))),\n\t\t\t\t    a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += (rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, normalize(cross(vec3(0.0, 0.0, 1.0), vec3(a_ShapePositionStartLifeTime.xy, 0.0))), a_StartRotation0.x),\n\t\t\t\t    worldRotation)); //已验证\n\t\t\t}\n\t\t    else\n\t\t\t{\n\t#ifdef SHAPE\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), a_StartRotation0.x),\n\t\t\t\t    worldRotation);\n\t#else\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += rotationByAxis(u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    vec3(0.0, 0.0, -1.0),\n\t\t\t\t    a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, 0.0, -1.0), a_StartRotation0.x),\n\t\t\t\t    worldRotation); //已验证\n\t#endif\n\t\t\t}\n\t\t}\n    #endif\n\t    v_MeshColor = a_MeshColor;\n#endif\n\t    gl_Position = u_Projection * u_View * vec4(center, 1.0);\n\t\tvec4 startcolor = gammaToLinear(a_StartColor);\n\t    v_Color = computeParticleColor(startcolor, normalizedAge);\n#ifdef DIFFUSEMAP\n\t    vec2 simulateUV;\n    #if defined(SPHERHBILLBOARD) || defined(STRETCHEDBILLBOARD) || defined(HORIZONTALBILLBOARD) || defined(VERTICALBILLBOARD)\n\t    simulateUV = a_SimulationUV.xy + a_CornerTextureCoordinate.zw * a_SimulationUV.zw;\n\t    v_TextureCoordinate = computeParticleUV(simulateUV, normalizedAge);\n    #endif\n    #ifdef RENDERMODE_MESH\n\t    simulateUV = a_SimulationUV.xy + a_MeshTextureCoordinate * a_SimulationUV.zw;\n\t    v_TextureCoordinate = computeParticleUV(simulateUV, normalizedAge);\n    #endif\n\t    v_TextureCoordinate = TransformUV(v_TextureCoordinate, u_TilingOffset);\n#endif\n\t}\n    else\n\t{\n\t    gl_Position = vec4(2.0, 2.0, 2.0, 1.0); // Discard use out of X(-1,1),Y(-1,1),Z(0,1)\n\t}\n    gl_Position = remapPositionZ(gl_Position);\n\t#ifdef FOG\n        FogHandle(gl_Position.z);\n    #endif\n}\n','#define SHADER_NAME ParticleFS\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n#include "Color.glsl";\n\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n// uniform sampler2D u_texture;\n// uniform vec4 u_Tintcolor;\n\n#ifdef RENDERMODE_MESH\nvarying vec4 v_MeshColor;\n#endif\n\nvoid main()\n{\n    vec4 color;\n#ifdef RENDERMODE_MESH\n    color = v_MeshColor;\n#else\n    color = vec4(1.0);\n#endif\n\n#ifdef DIFFUSEMAP\n    vec4 colorT = texture2D(u_texture, v_TextureCoordinate);\n    #ifdef Gamma_u_texture\n        colorT = gammaToLinear(colorT);\n    #endif // Gamma_u_SpecularTexture\n    #ifdef TINTCOLOR\n    color *= colorT * u_Tintcolor * c_ColorSpace * v_Color;\n    #else\n    color *= colorT * v_Color;\n    #endif // TINTCOLORd\n#else\n    #ifdef TINTCOLOR\n    color *= u_Tintcolor * c_ColorSpace * v_Color;\n    #else\n    color *= v_Color;\n    #endif // TINTCOLOR\n#endif\n\n#ifdef FOG\n    color.rgb = scenUnlitFog(color.rgb);\n#endif // FOG\n    gl_FragColor = color;\n\n}')}}class SkyProceduralShaderInit{static init(){let e={a_Position:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_SunSize:t.ShaderDataType.Float,u_SunSizeConvergence:t.ShaderDataType.Float,u_AtmosphereThickness:t.ShaderDataType.Float,u_SkyTint:t.ShaderDataType.Color,u_GroundTint:t.ShaderDataType.Color,u_Exposure:t.ShaderDataType.Float},r={u_SunSize:.04,u_SunSizeConvergence:5,u_AtmosphereThickness:1,u_SkyTint:new t.Color(.5,.5,.5,1),u_GroundTint:new t.Color(.369,.349,.341,1),u_Exposure:1.3},i=t.Shader3D.add("SkyProcedural"),n=new t.SubShader(e,a,r);i.addSubShader(n);let s=n.addShaderPass("#define SHADER_NAME SkyProceduralVS\n\n#include \"Camera.glsl\";\n\nconst float c_deg2ang = 3.141593 / 180.0;\n\n#define OUTER_RADIUS 1.025\n#define RAYLEIGH (mix(0.0, 0.0025, pow(u_AtmosphereThickness,2.5)))// Rayleigh constant Rayleigh为夜空光和极光亮度单位\n#define MIE 0.0010             // Mie constant 米氏散射\n#define SUN_BRIGHTNESS 20.0    // Sun brightness\n#define MAX_SCATTER 50.0 // Maximum scattering value, to prevent math overflows on Adrenos\n\nconst float SKY_GROUND_THRESHOLD = 0.02;\nconst float outerRadius = OUTER_RADIUS;\nconst float outerRadius2 = OUTER_RADIUS*OUTER_RADIUS;\nconst float innerRadius = 1.0;\nconst float innerRadius2 = 1.0;\nconst float cameraHeight = 0.0001;\n\nconst float HDSundiskIntensityFactor = 15.0;\nconst float simpleSundiskIntensityFactor = 27.0;\n\nconst float sunScale = 400.0 * SUN_BRIGHTNESS;\nconst float kmESun = MIE * SUN_BRIGHTNESS;\nconst float km4PI = MIE * 4.0 * 3.14159265;\nconst float scale = 1.0 / (OUTER_RADIUS - 1.0);\nconst float scaleDepth = 0.25;\nconst float scaleOverScaleDepth = (1.0 / (OUTER_RADIUS - 1.0)) / 0.25;\nconst float samples = 2.0; // THIS IS UNROLLED MANUALLY, DON'T TOUCH\n\n// RGB wavelengths        .35 (.62=158), .43 (.68=174), .525 (.75=190)\nconst vec3 c_DefaultScatteringWavelength = vec3(0.65, 0.57, 0.475);//默认散射波长\nconst vec3 c_VariableRangeForScatteringWavelength = vec3(0.15, 0.15, 0.15);//散射播放的可变范围\n\n// uniform vec4 u_SkyTint;\n// uniform vec4 u_GroundTint;\n// uniform float u_Exposure;\n// uniform float u_AtmosphereThickness;\nvec4 skyRemapGLPositionZ(vec4 position){\n\tposition.z = position.w;\n\treturn position;\n}\n//sprite\nuniform vec3 u_SunLight_direction;\nuniform vec4 u_SunLight_color;\n\nvarying vec3 v_GroundColor;\nvarying vec3 v_SkyColor;\n\n#ifdef SUN_HIGH_QUALITY\n\tvarying vec3 v_Vertex;\n#elif defined(SUN_SIMPLE)\n\tvarying vec3 v_RayDir;\n#else\n\tvarying float v_SkyGroundFactor;\n#endif\n\n#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\tvarying vec3 v_SunColor;\n#endif\n\n// Calculates the Rayleigh phase function\nfloat getRayleighPhase(vec3 light, vec3 ray) \n{\n\tfloat eyeCos = dot(light, ray);\n\treturn 0.75 + 0.75*eyeCos*eyeCos;\n}\n\nfloat scaleAngle(float inCos)\n{\n\tfloat x = 1.0 - inCos;\n\treturn 0.25 * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\n\n\nvoid main(){\n    gl_Position = u_ViewProjection*a_Position;\n\n    vec3 skyTintInGammaSpace = pow(u_SkyTint.xyz,vec3(0.45));//u_SkyTint.xyz;//支持非GAMMA空间后要调整\n\tvec3 scatteringWavelength = mix(c_DefaultScatteringWavelength-c_VariableRangeForScatteringWavelength,c_DefaultScatteringWavelength+c_VariableRangeForScatteringWavelength,vec3(1.0) - skyTintInGammaSpace); // using Tint in sRGB+ gamma allows for more visually linear interpolation and to keep (0.5) at (128, gray in sRGB) point\n\tvec3 invWavelength = 1.0 / pow(scatteringWavelength, vec3(4.0));\n\n\tfloat krESun = RAYLEIGH * SUN_BRIGHTNESS;\n\tfloat kr4PI = RAYLEIGH * 4.0 * 3.14159265;\n\n\tvec3 cameraPos = vec3(0.0,innerRadius + cameraHeight,0.0); // The camera's current position\n\n\t// Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n\tvec3 eyeRay = normalize(a_Position.xyz);\n\n\tfloat far = 0.0;\n\tvec3 cIn, cOut;\n\tif (eyeRay.y >= 0.0) {// Sky\n\t\t// Calculate the length of the \"atmosphere\"\n\t\tfar = sqrt(outerRadius2 + innerRadius2 * eyeRay.y * eyeRay.y - innerRadius2) - innerRadius * eyeRay.y;\n\n\t\t// Calculate the ray's starting position, then calculate its scattering offset\n\t\tfloat height = innerRadius + cameraHeight;\n\t\tfloat depth = exp(scaleOverScaleDepth * -cameraHeight);\n\t\tfloat startAngle = dot(eyeRay, cameraPos) / height;\n\t\tfloat startOffset = depth*scaleAngle(startAngle);\n\n\t\t// Initialize the scattering loop variables\n\t\tfloat sampleLength = far / samples;\n\t\tfloat scaledLength = sampleLength * scale;\n\t\tvec3 sampleRay = eyeRay * sampleLength;\n\t\tvec3 samplePoint = cameraPos + sampleRay * 0.5;\n\n\t\tvec3 frontColor = vec3(0.0);\n\t\t//unrolling this manually to avoid some platform for loop slow\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat lightAngle = dot(-u_SunLight_direction, samplePoint) / height;\n\t\t\tfloat cameraAngle = dot(eyeRay, samplePoint) / height;\n\t\t\tfloat scatter = (startOffset + depth*(scaleAngle(lightAngle) - scaleAngle(cameraAngle)));\n\t\t\tvec3 attenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat lightAngle = dot(-u_SunLight_direction, samplePoint) / height;\n\t\t\tfloat cameraAngle = dot(eyeRay, samplePoint) / height;\n\t\t\tfloat scatter = (startOffset + depth*(scaleAngle(lightAngle) - scaleAngle(cameraAngle)));\n\t\t\tvec3 attenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\n\t\t// Finally, scale the Mie and Rayleigh colors and set up the varying variables for the pixel shader\n\t\tcIn = frontColor * (invWavelength * krESun);\n\t\tcOut = frontColor * kmESun;\n\t} else {// Ground\n\t\tfar = (-cameraHeight) / (min(-0.001, eyeRay.y));\n\t\tvec3 pos = cameraPos + far * eyeRay;\n\n\t\t// Calculate the ray's starting position, then calculate its scattering offset\n\t\tfloat depth = exp((-cameraHeight) * (1.0/scaleDepth));\n\t\tfloat cameraAngle = dot(-eyeRay, pos);\n\t\tfloat lightAngle = dot(-u_SunLight_direction, pos);\n\t\tfloat cameraScale = scaleAngle(cameraAngle);\n\t\tfloat lightScale = scaleAngle(lightAngle);\n\t\tfloat cameraOffset = depth*cameraScale;\n\t\tfloat temp = lightScale + cameraScale;\n\n\t\t// Initialize the scattering loop variables\n\t\tfloat sampleLength = far / samples;\n\t\tfloat scaledLength = sampleLength * scale;\n\t\tvec3 sampleRay = eyeRay * sampleLength;\n\t\tvec3 samplePoint = cameraPos + sampleRay * 0.5;\n\n\t\t// Now loop through the sample rays\n\t\tvec3 frontColor = vec3(0.0, 0.0, 0.0);\n\t\tvec3 attenuate;\n\n\t\t// Loop removed because we kept hitting SM2.0 temp variable limits. Doesn't affect the image too much.\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat scatter = depth*temp - cameraOffset;\n\t\t\tattenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\n\t\tcIn = frontColor * (invWavelength * krESun + kmESun);\n\t\tcOut = clamp(attenuate, 0.0, 1.0);\n\t}\n\n\t#ifdef SUN_HIGH_QUALITY\n\t\tv_Vertex = -a_Position.xyz;\n\t#elif defined(SUN_SIMPLE) \n\t\tv_RayDir = -eyeRay;\n\t#else\n\t\tv_SkyGroundFactor = -eyeRay.y / SKY_GROUND_THRESHOLD;\n\t#endif\n\n\t// if we want to calculate color in vprog:\n\t// in case of linear: multiply by _Exposure in here (even in case of lerp it will be common multiplier, so we can skip mul in fshader)\n\tv_GroundColor = u_Exposure * (cIn + u_GroundTint.xyz * cOut);//u_GroundColor*u_GroundColor is gamma space convert to linear space\n\tv_SkyColor    = u_Exposure * (cIn * getRayleighPhase(-u_SunLight_direction, -eyeRay));\n\n\t\n\t// The sun should have a stable intensity in its course in the sky. Moreover it should match the highlight of a purely specular material.\n\t// This matching was done using the Unity3D standard shader BRDF1 on the 5/31/2017\n\t// Finally we want the sun to be always bright even in LDR thus the normalization of the lightColor for low intensity.\n\tfloat lightColorIntensity = clamp(length(u_SunLight_color.xyz), 0.25, 1.0);\n\n\t#ifdef SUN_HIGH_QUALITY \n\t\tv_SunColor = HDSundiskIntensityFactor * clamp(cOut,0.0,1.0) * u_SunLight_color.xyz / lightColorIntensity;\n\t#elif defined(SUN_SIMPLE) \n\t\tv_SunColor = simpleSundiskIntensityFactor * clamp(cOut * sunScale,0.0,1.0) * u_SunLight_color.xyz / lightColorIntensity;\n\t#endif\n\tgl_Position=skyRemapGLPositionZ(gl_Position);\n}","#define SHADER_NAME SkyProceduralFS\n\nconst float MIE_G = -0.990;\nconst float MIE_G2 = 0.9801;\nconst float SKY_GROUND_THRESHOLD = 0.02;\n\n// uniform float u_SunSize;\n// uniform float u_SunSizeConvergence;\n\nuniform vec3 u_SunLight_direction;\n\nvarying vec3 v_GroundColor;\nvarying vec3 v_SkyColor;\n\n\n#ifdef SUN_HIGH_QUALITY\n\tvarying vec3 v_Vertex;\n#elif defined(SUN_SIMPLE)\n\tvarying vec3 v_RayDir;\n#else\n\tvarying float v_SkyGroundFactor;\n#endif\n\n#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\tvarying vec3 v_SunColor;\n#endif\n\n// Calculates the Mie phase function\nfloat getMiePhase(float eyeCos, float eyeCos2) {\n\tfloat temp = 1.0 + MIE_G2 - 2.0 * MIE_G * eyeCos;\n\ttemp = pow(temp, pow(u_SunSize,0.65) * 10.0);\n\ttemp = max(temp,1.0e-4); // prevent division by zero, esp. in half precision\n\ttemp = 1.5 * ((1.0 - MIE_G2) / (2.0 + MIE_G2)) * (1.0 + eyeCos2) / temp;\n\treturn temp;\n}\n\n// Calculates the sun shape\nfloat calcSunAttenuation(vec3 lightPos, vec3 ray) {\n\t#ifdef SUN_HIGH_QUALITY\n\t\tfloat focusedEyeCos = pow(clamp(dot(lightPos, ray),0.0,1.0), u_SunSizeConvergence);\n\t\treturn getMiePhase(-focusedEyeCos, focusedEyeCos * focusedEyeCos);\n\t#else //SUN_SIMPLE\n\t\tvec3 delta = lightPos - ray;\n\t\tfloat dist = length(delta);\n\t\tfloat spot = 1.0 - smoothstep(0.0, u_SunSize, dist);\n\t\treturn spot * spot;\n\t#endif\n}\n\nvoid main() {\n\t// if y > 1 [eyeRay.y < -SKY_GROUND_THRESHOLD] - ground\n\t// if y >= 0 and < 1 [eyeRay.y <= 0 and > -SKY_GROUND_THRESHOLD] - horizon\n\t// if y < 0 [eyeRay.y > 0] - sky\n\tvec3 col = vec3(0.0, 0.0, 0.0);\n\n\t#ifdef SUN_HIGH_QUALITY\n\t\tvec3 ray = normalize(v_Vertex);\n\t\tfloat y = ray.y / SKY_GROUND_THRESHOLD;\n\t#elif defined(SUN_SIMPLE) \n\t\tvec3 ray = v_RayDir;\n\t\tfloat y = ray.y / SKY_GROUND_THRESHOLD;\t\n\t#else\n\t\tfloat y = v_SkyGroundFactor;\n\t#endif\n\n\t// if we did precalculate color in vprog: just do lerp between them\n\tcol = mix(v_SkyColor, v_GroundColor, clamp(y,0.0,1.0));\n\n\t#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\t\tif (y < 0.0)\n\t\t\tcol += v_SunColor * calcSunAttenuation(-u_SunLight_direction, -ray);\n\t#endif\n\n\t//col = sqrt(col);//linear space convert to gamma space\n\tgl_FragColor=vec4(col,1.0);\n}\n");s.renderState.depthTest=t.RenderState.DEPTHTEST_LEQUAL,s.statefirst=!0}}class SkyPanoramicShaderInit{static init(){let e={a_Position:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},a={u_TintColor:t.ShaderDataType.Color,u_Rotation:t.ShaderDataType.Float,u_Texture:t.ShaderDataType.Texture2D,u_Exposure:t.ShaderDataType.Float},r={u_TintColor:new t.Color(.5,.5,.5,1),u_Exposure:1.3,u_Rotation:0,u_Texture:t.Texture2D.grayTexture},i=t.Shader3D.add("SkyPanoramic"),n=new t.SubShader(e,a,r);i.addSubShader(n);let s=n.addShaderPass('#define SHADER_NAME SkyPanoramicVS\n\n#include "Camera.glsl";\n#define PI 3.14159265359\n\n//attribute vec4 a_Position;\n\n//uniform float u_Rotation;\n\nvarying vec3 v_Texcoord;\nvarying vec2 v_Image180ScaleAndCutoff;\nvarying vec4 v_Layout3DScaleAndOffset;\n\nvec4 skyRemapGLPositionZ(vec4 position){\n\tposition.z = position.w;\n\treturn position;\n}\n\nvec4 rotateAroundYInDegrees (vec4 vertex, float degrees)\n{\n\tfloat angle = degrees * PI / 180.0;\n\tfloat sina=sin(angle);\n\tfloat cosa=cos(angle);\n\tmat2 m = mat2(cosa, -sina, sina, cosa);\n\treturn vec4(m*vertex.xz, vertex.yw).xzyw;\n}\n\t\nvoid main()\n{\n\tvec4 position = rotateAroundYInDegrees(a_Position, u_Rotation);\n\t\n\n\tv_Texcoord=vec3(-a_Position.x,-a_Position.y,a_Position.z);// NOTE: -a_Position.x convert coords system\n\n\t// Calculate constant horizontal scale and cutoff for 180 (vs 360) image type\n\tv_Image180ScaleAndCutoff = vec2(1.0, 1.0);// 360 degree mode\n\n\t// Calculate constant scale and offset for 3D layouts\n\tv_Layout3DScaleAndOffset = vec4(0,0,1,1);\n\tgl_Position = u_ViewProjection*position;\n\tgl_Position=skyRemapGLPositionZ(gl_Position);\n\n}\n',"#define SHADER_NAME SkyPanoramicVS\n\n#define PI 3.14159265359\n\nvarying vec3 v_Texcoord;\nvarying vec2 v_Image180ScaleAndCutoff;\nvarying vec4 v_Layout3DScaleAndOffset;\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvec2 ToRadialCoords(vec3 coords)\n{\n    vec3 normalizedCoords = normalize(coords);\n    float latitude = acos(normalizedCoords.y);\n    float longitude = atan(normalizedCoords.z, normalizedCoords.x);\n    vec2 sphereCoords = vec2(longitude, latitude) * vec2(0.5 / PI, 1.0 / PI);\n    return vec2(0.5, 1.0) - sphereCoords;\n}\n\nvoid main()\n{\n    vec2 tc = ToRadialCoords(v_Texcoord);\n    if (tc.x > v_Image180ScaleAndCutoff.y)\n\tgl_FragColor = vec4(0, 0, 0, 1);\n    tc.x = mod(tc.x * v_Image180ScaleAndCutoff.x, 1.0);\n    tc = (tc + v_Layout3DScaleAndOffset.xy) * v_Layout3DScaleAndOffset.zw;\n\n    mediump vec4 tex = texture2D(u_Texture, tc);\n    mediump vec3 c = tex.xyz;\n    c = c * u_TintColor.rgb * c_ColorSpace.rgb;\n    c *= u_Exposure;\n    gl_FragColor = vec4(c, 1.0);\n}\n");s.renderState.depthTest=t.RenderState.DEPTHTEST_LEQUAL,s.statefirst=!0}}class ACESShaderLib{static init(){t.Shader3D.addInclude("ACES_UtillitiesColor.glsl","#if !defined(UtillitiesColor_lib)\n#define UtillitiesColor_lib\n\n// Transformations between CIE XYZ tristimulus values and CIE x,y\n// chromaticity coordinates\nvec3 XYZ_2_xyY(vec3 XYZ)\n{\n    vec3 xyY;\n    float divisor = max(XYZ.x + XYZ.y + XYZ.z, 1e-10);\n    xyY.x = XYZ.x / divisor;\n    xyY.y = XYZ.y / divisor;\n    xyY.z = XYZ.y;\n    return xyY;\n}\n\nvec3 xyY_2_XYZ(vec3 xyY)\n{\n    vec3 XYZ;\n    XYZ.x = xyY.x * xyY.z / max(xyY.y, 1e-10);\n    XYZ.y = xyY.z;\n    XYZ.z = (1.0 - xyY.x - xyY.y) * xyY.z / max(xyY.y, 1e-10);\n    return XYZ;\n}\n\nfloat rgb_2_yc(vec3 rgb, float ycRadiusWeight)\n{\n    float r = rgb.r;\n    float g = rgb.g;\n    float b = rgb.b;\n    float k = b * (b - g) + g * (g - r) + r * (r - b);\n    k = max(MEDIUMP_FLT_MIN, k);\n    float chroma = sqrt(k);\n    return (b + g + r + ycRadiusWeight * chroma) / 3.0;\n}\n\nfloat rgb_2_yc(vec3 rgb)\n{\n    return rgb_2_yc(rgb, 1.75);\n}\n\n// Transformations from RGB to other color representations\n\n// Returns a geometric hue angle in degrees (0-360) based on RGB values.\nfloat rgb_2_hue(vec3 rgb)\n{\n    float hue;\n    // For neutral colors, hue is undefined and the function will return a quiet NaN value.\n    // if (rgb.r == rgb.g && rgb.g == rgb.b) {\n    //     // hue = FLT_NAN;\n    //     // todo FLT_NAN\n    //     hue = 0.0;\n    // } else {\n    //     hue = (180.0 * INVERT_PI) * atan2(sqrt(3.0) * (rgb.g - rgb.b), 2.0 * rgb.r - rgb.g - rgb.b);\n    // }\n    if (rgb.x == rgb.y && rgb.y == rgb.z)\n        hue = 0.0; // RGB triplets where RGB are equal have an undefined hue\n    else\n        hue = (180.0 * INVERT_PI) * atan(sqrt(3.0) * (rgb.y - rgb.z), 2.0 * rgb.x - rgb.y - rgb.z);\n\n    if (hue < 0.0) {\n        hue = hue + 360.0;\n    }\n\n    return hue;\n}\n\n#endif // UtillitiesColor_lib"),t.Shader3D.addInclude("ACES_TransformCommon.glsl","#if !defined(TransformCommon_lib)\n    #define TransformCommon_lib\n\nconst float TINY = 1e-10;\n\n// sRGB D65 to AP0 D60\n// https://www.colour-science.org:8010/apps/rgb_colourspace_transformation_matrix CAT 02\nconst mat3 sRGB_to_AP0_MAT = mat3(\n    vec3(0.4395856442, 0.0895395735, 0.0173871832),\n    vec3(0.3839294030, 0.8147498351, 0.1087391143),\n    vec3(0.1765327364, 0.0956836061, 0.8738205876));\n\n// sRGB D65 to AP1 D60\n// https://www.colour-science.org:8010/apps/rgb_colourspace_transformation_matrix CAT 02\nconst mat3 sRGB_to_AP1_MAT = mat3(\n    vec3(0.6131178129, 0.0699340823, 0.0204629926),\n    vec3(0.3411819959, 0.9181030375, 0.1067686634),\n    vec3(0.0457873443, 0.0119327755, 0.8727159106));\n\nconst mat3 AP1_to_XYZ_MAT = mat3(\n    vec3(0.6624541811, 0.2722287168, -0.0055746495),\n    vec3(0.1340042065, 0.6740817658, 0.0040607335),\n    vec3(0.1561876870, 0.0536895174, 1.0103391003));\n\nconst mat3 AP0_to_AP1_MAT = mat3(\n    vec3(1.4514393161, -0.0765537734, 0.0083161484),\n    vec3(-0.2365107469, 1.1762296998, -0.0060324498),\n    vec3(-0.2149285693, -0.0996759264, 0.9977163014));\n\nconst mat3 AP1_to_AP0_MAT = mat3(\n    vec3(0.6954522414, 0.0447945634, -0.0055258826),\n    vec3(0.1406786965, 0.8596711185, 0.0040252103),\n    vec3(0.1638690622, 0.0955343182, 1.0015006723));\n\nconst mat3 XYZ_to_AP1_MAT = mat3(\n    vec3(1.6410233797, -0.6636628587, 0.0117218943),\n    vec3(-0.3248032942, 1.6153315917, -0.0082844420),\n    vec3(-0.2364246952, 0.0167563477, 0.9883948585));\n\nconst vec3 AP1_RGB2Y = vec3(0.2722287168, 0.6740817658, 0.0536895174);\n\nfloat ACES_to_ACEScc(float x)\n{\n    // if (x <= 0.0)\n    // return -0.35828683;\n    // else if (x < pow(2.0, -15.0))\n    // return (log2(pow(2.0, -16.0) + x * 0.5) + 9.72) / 17.52;\n    // else\n    // return (log2(x) + 9.72) / 17.52;\n\n    return (x < 0.00003051757) ? (log2(0.00001525878 + x * 0.5) + 9.72) / 17.52 : (log2(x) + 9.72) / 17.52;\n}\n\nvec3 ACES_to_ACEScc(vec3 x)\n{\n    x = clamp(x, vec3(0.0), vec3(MEDIUMP_FLT_MAX));\n    x.x = ACES_to_ACEScc(x.x);\n    x.y = ACES_to_ACEScc(x.y);\n    x.z = ACES_to_ACEScc(x.z);\n\n    return x;\n}\n\nfloat ACEScc_to_ACES(float x)\n{\n    if (x < -0.3013698630)\n\treturn (pow(2.0, x * 17.52 - 9.72) - pow(2.0, -16.0)) * 2.0;\n    else if (x < (log2(MEDIUMP_FLT_MAX) + 9.72) / 17.52)\n\treturn pow(2.0, x * 17.52 - 9.72);\n    else\n\treturn MEDIUMP_FLT_MAX;\n}\n\nvec3 ACEScc_to_ACES(vec3 x)\n{\n    x.x = ACEScc_to_ACES(x.x);\n    x.y = ACEScc_to_ACES(x.y);\n    x.z = ACEScc_to_ACES(x.z);\n    return x;\n}\n\nfloat rgb_2_saturation(vec3 rgb)\n{\n    float rgbmax = vecmax(rgb);\n    float rgbmin = vecmin(rgb);\n    return (max(rgbmax, TINY) - max(rgbmin, TINY)) / max(rgbmax, 1e-2);\n}\n\n#endif // TransformCommon_lib"),t.Shader3D.addInclude("ACES_Tonescales.glsl","#if !defined(Tonescales_lib)\n#define Tonescales_lib\n\nconst mat3 M = mat3(\n    vec3(0.5, -1.0, 0.5),\n    vec3(-1.0, 1.0, 0.5),\n    vec3(0.5, 0.0, 0.0));\n\nfloat segmented_spline_c5_fwd(float x)\n{\n#ifdef GRAPHICS_API_GLES3\n    const float coefsLow[6] = float[6](-4.0000000000, -4.0000000000, -3.1573765773, -0.4852499958, 1.8477324706, 1.8477324706);\n    const float coefsHigh[6] = float[6](-0.7185482425, 2.0810307172, 3.6681241237, 4.0000000000, 4.0000000000, 4.0000000000);\n#else\n    const float coefsLow_0 = -4.0000000000;\n    const float coefsLow_1 = -4.0000000000;\n    const float coefsLow_2 = -3.1573765773;\n    const float coefsLow_3 = -0.4852499958;\n    const float coefsLow_4 = 1.8477324706;\n    const float coefsLow_5 = 1.8477324706;\n\n    const float coefsHigh_0 = -0.7185482425;\n    const float coefsHigh_1 = 2.0810307172;\n    const float coefsHigh_2 = 3.6681241237;\n    const float coefsHigh_3 = 4.0000000000;\n    const float coefsHigh_4 = 4.0000000000;\n    const float coefsHigh_5 = 4.0000000000;\n#endif // GRAPHICS_API_GLES3\n\n    const vec2 minPoint = vec2(0.0000054931640625, 0.0001);\n    const vec2 midPoint = vec2(0.18, 4.8);\n    const vec2 maxPoint = vec2(47185.92, 10000.);\n    const float slopeLow = 0.0;\n    const float slopeHigh = 0.0;\n\n    const int N_KNOTS_LOW = 4;\n    const int N_KNOTS_HIGH = 4;\n\n    float logx = log10(max(x, MEDIUMP_FLT_MIN));\n    float logy;\n\n    if (logx <= log10(minPoint.x)) {\n        logy = logx * slopeLow + (log10(minPoint.y) - slopeLow * log10(minPoint.x));\n    } else if ((logx > log10(minPoint.x)) && (logx < log10(midPoint.x))) {\n        float knot_coord = float(N_KNOTS_LOW - 1) * (logx - log10(minPoint.x)) / (log10(midPoint.x) - log10(minPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsLow[j], coefsLow[j + 1], coefsLow[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsLow_0, coefsLow_1, coefsLow_2);\n        } else if (j == 1) {\n            cf = vec3(coefsLow_1, coefsLow_2, coefsLow_3);\n        } else if (j == 2) {\n            cf = vec3(coefsLow_2, coefsLow_3, coefsLow_4);\n        } else { // if (j == 3)\n            cf = vec3(coefsLow_3, coefsLow_4, coefsLow_5);\n        }\n#endif // GRAPHICS_API_GLES3\n\n        vec3 monomials = vec3(t * t, t, 1.);\n        logy = dot(monomials, M * cf);\n    } else if ((logx >= log10(midPoint.x)) && (logx < log10(maxPoint.x))) {\n        float knot_coord = float(N_KNOTS_HIGH - 1) * (logx - log10(midPoint.x)) / (log10(maxPoint.x) - log10(midPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsHigh[j], coefsHigh[j + 1], coefsHigh[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsHigh_0, coefsHigh_1, coefsHigh_2);\n        } else if (j == 1) {\n            cf = vec3(coefsHigh_1, coefsHigh_2, coefsHigh_3);\n        } else if (j == 2) {\n            cf = vec3(coefsHigh_2, coefsHigh_3, coefsHigh_4);\n        } else { // if (j == 3)\n            cf = vec3(coefsHigh_3, coefsHigh_4, coefsHigh_5);\n        }\n#endif // #ifdef GRAPHICS_API_GLES3\n        vec3 monomials = vec3(t * t, t, 1.);\n        logy = dot(monomials, M * cf);\n    } else {\n        logy = logx * slopeHigh + (log10(maxPoint.y) - slopeHigh * log10(maxPoint.x));\n    }\n    return pow(10.0, logy);\n}\n\nfloat segmented_spline_c9_fwd(float x)\n{\n// ODT_48nits\n#ifdef GRAPHICS_API_GLES3\n    const float coefsLow[10] = float[10](-1.6989700043, -1.6989700043, -1.4779000000, -1.2291000000, -0.8648000000, -0.4480000000, 0.0051800000, 0.4511080334, 0.9113744414, 0.9113744414);\n    const float coefsHigh[10] = float[10](0.5154386965, 0.8470437783, 1.1358000000, 1.3802000000, 1.5197000000, 1.5985000000, 1.6467000000, 1.6746091357, 1.6878733390, 1.6878733390);\n#else\n    const float coefsLow_0 = -1.6989700043;\n    const float coefsLow_1 = -1.6989700043;\n    const float coefsLow_2 = -1.4779000000;\n    const float coefsLow_3 = -1.2291000000;\n    const float coefsLow_4 = -0.8648000000;\n    const float coefsLow_5 = -0.4480000000;\n    const float coefsLow_6 = 0.0051800000;\n    const float coefsLow_7 = 0.4511080334;\n    const float coefsLow_8 = 0.9113744414;\n    const float coefsLow_9 = 0.9113744414;\n\n    const float coefsHigh_0 = 0.5154386965;\n    const float coefsHigh_1 = 0.8470437783;\n    const float coefsHigh_2 = 1.1358000000;\n    const float coefsHigh_3 = 1.3802000000;\n    const float coefsHigh_4 = 1.5197000000;\n    const float coefsHigh_5 = 1.5985000000;\n    const float coefsHigh_6 = 1.6467000000;\n    const float coefsHigh_7 = 1.6746091357;\n    const float coefsHigh_8 = 1.6878733390;\n    const float coefsHigh_9 = 1.6878733390;\n#endif // GRAPHICS_API_GLES3\n\n    // todo const\n    vec2 minPoint = vec2(segmented_spline_c5_fwd(0.18 * pow(2.0, -6.5)), 0.02);\n    vec2 midPoint = vec2(segmented_spline_c5_fwd(0.18), 4.8);\n    vec2 maxPoint = vec2(segmented_spline_c5_fwd(0.18 * pow(2., 6.5)), 48.0);\n\n    const float slopeLow = 0.0;\n    const float slopeHigh = 0.04;\n\n    const int N_KNOTS_LOW = 8;\n    const int N_KNOTS_HIGH = 8;\n\n    float logx = log10(max(x, MEDIUMP_FLT_MIN));\n    float logy;\n\n    if (logx <= log10(minPoint.x)) {\n        logy = logx * slopeLow + (log10(minPoint.y) - slopeLow * log10(minPoint.x));\n    } else if ((logx > log10(minPoint.x)) && (logx < log10(midPoint.x))) {\n        float knot_coord = float(N_KNOTS_LOW - 1) * (logx - log10(minPoint.x)) / (log10(midPoint.x) - log10(minPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsLow[j], coefsLow[j + 1], coefsLow[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsLow_0, coefsLow_1, coefsLow_2);\n        } else if (j == 1) {\n            cf = vec3(coefsLow_1, coefsLow_2, coefsLow_3);\n        } else if (j == 2) {\n            cf = vec3(coefsLow_2, coefsLow_3, coefsLow_4);\n        } else if (j == 3) {\n            cf = vec3(coefsLow_3, coefsLow_4, coefsLow_5);\n        } else if (j == 4) {\n            cf = vec3(coefsLow_4, coefsLow_5, coefsLow_6);\n        } else if (j == 5) {\n            cf = vec3(coefsLow_5, coefsLow_6, coefsLow_7);\n        } else if (j == 6) {\n            cf = vec3(coefsLow_6, coefsLow_7, coefsLow_8);\n        } else { // if (j == 7)\n            cf = vec3(coefsLow_7, coefsLow_8, coefsLow_9);\n        }\n#endif // GRAPHICS_API_GLES3\n        vec3 monomials = vec3(t * t, t, 1.0);\n        logy = dot(monomials, M * cf);\n    } else if ((logx >= log10(midPoint.x)) && (logx < log10(maxPoint.x))) {\n        float knot_coord = float(N_KNOTS_HIGH - 1) * (logx - log10(midPoint.x)) / (log10(maxPoint.x) - log10(midPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsHigh[j], coefsHigh[j + 1], coefsHigh[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsHigh_0, coefsHigh_1, coefsHigh_2);\n        } else if (j == 1) {\n            cf = vec3(coefsHigh_1, coefsHigh_2, coefsHigh_3);\n        } else if (j == 2) {\n            cf = vec3(coefsHigh_2, coefsHigh_3, coefsHigh_4);\n        } else if (j == 3) {\n            cf = vec3(coefsHigh_3, coefsHigh_4, coefsHigh_5);\n        } else if (j == 4) {\n            cf = vec3(coefsHigh_4, coefsHigh_5, coefsHigh_6);\n        } else if (j == 5) {\n            cf = vec3(coefsHigh_5, coefsHigh_6, coefsHigh_7);\n        } else if (j == 6) {\n            cf = vec3(coefsHigh_6, coefsHigh_7, coefsHigh_8);\n        } else { // if (j == 7)\n            cf = vec3(coefsHigh_7, coefsHigh_8, coefsHigh_9);\n        }\n#endif // GRAPHICS_API_GLES3\n        vec3 monomials = vec3(t * t, t, 1.0);\n        logy = dot(monomials, M * cf);\n    } else {\n        logy = logx * slopeHigh + (log10(maxPoint.y) - slopeHigh * log10(maxPoint.x));\n    }\n\n    return pow(10.0, logy);\n}\n\n#endif // Tonescales_lib"),t.Shader3D.addInclude("ACES_RRTCommon.glsl",'#if !defined(RRTCommon_lib)\n#define RRTCommon_lib\n\n// "Glow" module constants\nconst float RRT_GLOW_GAIN = 0.05;\nconst float RRT_GLOW_MID = 0.08;\n\n// Red modifier constants\nconst float RRT_RED_SCALE = 0.82;\nconst float RRT_RED_PIVOT = 0.03;\nconst float RRT_RED_HUE = 0.;\nconst float RRT_RED_WIDTH = 135.;\n\n// Desaturation contants\nconst float RRT_SAT_FACTOR = 0.96;\n\n// ------- Glow module functions\n\nfloat glow_fwd(float ycIn, float glowGainIn, float glowMid)\n{\n    float glowGainOut;\n    if (ycIn <= 2.0 / 3.0 * glowMid) {\n        glowGainOut = glowGainIn;\n    } else if (ycIn >= 2.0 * glowMid) {\n        glowGainOut = 0.0;\n    } else {\n        glowGainOut = glowGainIn * (glowMid / ycIn - 0.5);\n    }\n    return glowGainOut;\n}\n\n// Sigmoid function in the range 0 to 1 spanning -2 to +2.\nfloat sigmoid_shaper(float x)\n{\n    float t = max(1.0 - abs(x * 0.5), 0.0);\n    float y = 1.0 + sign(x) * (1.0 - t * t);\n\n    return y * 0.5;\n}\n\n// ------- Red modifier functions\nfloat center_hue(float hue, float centerH)\n{\n    float hueCentered = hue - centerH;\n    if (hueCentered < -180.0) {\n        hueCentered = hueCentered + 360.0;\n    } else if (hueCentered > 180.0) {\n        hueCentered -= 360.0;\n    }\n    return hueCentered;\n}\n\n#endif // RRTCommon_lib'),t.Shader3D.addInclude("ACES_ODTCommon.glsl","#if !defined(ODTCommon_lib)\n#define ODTCommon_lib\n\nconst float CINEMA_WHITE = 48.0;\nconst float CINEMA_BLACK = 0.02; // CINEMA_WHITE / 2400.\n\n// Gamma compensation factor\nconst float DIM_SURROUND_GAMMA = 0.9811;\n\n// Saturation compensation factor\nconst float ODT_SAT_FACTOR = 0.93;\n\n// white point D60 to D65\n// ACES white point D60\nconst mat3 D60_to_D65_MAT = mat3(\n    vec3(0.987224, -0.00759836, 0.00307257),\n    vec3(-0.00611327, 1.00186, -0.00509595),\n    vec3(0.0159533, 0.00533002, 1.08168));\n\nfloat Y_2_linCV(float Y, float Ymax, float Ymin)\n{\n    return (Y - Ymin) / (Ymax - Ymin);\n}\n\nvec3 darkSurround_to_dimSurround(vec3 linearCV)\n{\n    vec3 XYZ = linearCV * AP1_to_XYZ_MAT;\n    vec3 xyY = XYZ_2_xyY(XYZ);\n    xyY.z = clamp(xyY.z, 0.0, MEDIUMP_FLT_MAX);\n    xyY.z = pow(xyY.z, DIM_SURROUND_GAMMA);\n    XYZ = xyY_2_XYZ(xyY);\n\n    return XYZ * XYZ_to_AP1_MAT;\n}\n\n#endif // ODTCommon_lib"),t.Shader3D.addInclude("ACES_RRT.glsl",'#if !defined(RRT_lib)\n#define RRT_lib\n\n#include "ACES_RRTCommon.glsl";\n\n/**\n * @param ACES AP0\n * @returns OCES\n */\nvec3 RRT(vec3 aces)\n{\n    // --- Glow module --- //\n    float saturation = rgb_2_saturation(aces);\n    float ycIn = rgb_2_yc(aces);\n    float s = sigmoid_shaper((saturation - 0.4) / 0.2);\n    float addedGlow = 1.0 + glow_fwd(ycIn, RRT_GLOW_GAIN * s, RRT_GLOW_MID);\n\n    aces *= addedGlow;\n\n    // --- Red modifier --- //\n    float hue = rgb_2_hue(aces);\n    float centeredHue = center_hue(hue, RRT_RED_HUE);\n\n    float hueWeight = smoothstep(0.0, 1.0, 1.0 - abs(2.0 * centeredHue / RRT_RED_WIDTH));\n    hueWeight *= hueWeight;\n\n    aces.r += hueWeight * saturation * (RRT_RED_PIVOT - aces.r) * (1. - RRT_RED_SCALE);\n\n    // --- ACES to RGB rendering space --- //\n    vec3 rgbPre = AP0_to_AP1_MAT * aces;\n    rgbPre = clamp(rgbPre, 0.0, MEDIUMP_FLT_MAX);\n\n    // --- Global desaturation --- //\n    rgbPre = mix(vec3(dot(rgbPre, AP1_RGB2Y)), rgbPre, RRT_SAT_FACTOR);\n\n    // --- Apply the tonescale independently in rendering-space RGB --- //\n    vec3 rgbPost;\n    rgbPost.x = segmented_spline_c5_fwd(rgbPre.x);\n    rgbPost.y = segmented_spline_c5_fwd(rgbPre.y);\n    rgbPost.z = segmented_spline_c5_fwd(rgbPre.z);\n\n    // --- RGB rendering space to OCES --- //\n    vec3 rgbOces = AP1_to_AP0_MAT * rgbPost;\n\n    return rgbOces;\n}\n\n#endif // RRT_lib'),t.Shader3D.addInclude("ACES_ODT_sRGB_100nits.glsl",'#if !defined(ODT_sRGB_100nits_lib)\n#define ODT_sRGB_100nits_lib\n\n#include "ACES_ODTCommon.glsl";\n\n// CIE XYZ to REC.709\nconst mat3 XYZ_to_REC709_MAT = mat3(\n    vec3(3.2409699419, -0.9692436363, 0.0556300797),\n    vec3(-1.5373831776, 1.8759675015, -0.2039769589),\n    vec3(-0.498610760, 0.0415550574, 1.0569715142));\n\nconst float DISPGAMMA = 2.4;\nconst float OFFSET = 0.055;\n\nvec3 ODT_sRGB_100nits(vec3 oces)\n{\n    // OCES to RGB rendering space\n    vec3 rgbPre = AP0_to_AP1_MAT * oces;\n\n    // Apply the tonescale independently in rendering-space RGB\n    vec3 rgbPost;\n    rgbPost.r = segmented_spline_c9_fwd(rgbPre.r);\n    rgbPost.g = segmented_spline_c9_fwd(rgbPre.g);\n    rgbPost.b = segmented_spline_c9_fwd(rgbPre.b);\n\n    // Scale luminance to linear code value\n    vec3 linearCV;\n    linearCV.r = Y_2_linCV(rgbPost.r, CINEMA_WHITE, CINEMA_BLACK);\n    linearCV.g = Y_2_linCV(rgbPost.g, CINEMA_WHITE, CINEMA_BLACK);\n    linearCV.b = Y_2_linCV(rgbPost.b, CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround(linearCV);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    vec3 XYZ = AP1_to_XYZ_MAT * linearCV;\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = D60_to_D65_MAT * XYZ;\n\n    // CIE XYZ to display primaries\n    linearCV = XYZ_to_REC709_MAT * XYZ;\n\n    linearCV = clamp(linearCV, vec3(0.0), vec3(1.0));\n    return linearCV;\n}\n\n#endif // ODT_sRGB_100nits_lib'),t.Shader3D.addInclude("ACES.glsl",'// Academy Color Encoding System (ACES) software and tools are provided by the\n// Academy under the following terms and conditions: A worldwide, royalty-free,\n// non-exclusive right to copy, modify, create derivatives, and use, in source\n// and binary forms, is hereby granted, subject to acceptance of this license.\n\n// Copyright 2019 Academy of Motion Picture Arts and Sciences (A.M.P.A.S.).\n// Portions contributed by others as indicated. All rights reserved.\n\n// Performance of any of the aforementioned acts indicates acceptance to be\n// bound by the following terms and conditions:\n\n// Copies of source code, in whole or in part, must retain the above copyright\n// notice, this list of conditions and the Disclaimer of Warranty.\n\n// Use in binary form must retain the above copyright notice, this list of\n// conditions and the Disclaimer of Warranty in the documentation and/or other\n// materials provided with the distribution.\n\n// Nothing in this license shall be deemed to grant any rights to trademarks,\n// copyrights, patents, trade secrets or any other intellectual property of\n// A.M.P.A.S. or any contributors, except as expressly stated herein.\n\n// Neither the name "A.M.P.A.S." nor the name of any other contributors to this\n// software may be used to endorse or promote products derivative of or based on\n// this software without express prior written permission of A.M.P.A.S. or the\n// contributors, as appropriate.\n\n// This license shall be construed pursuant to the laws of the State of\n// California, and any disputes related thereto shall be subject to the\n// jurisdiction of the courts therein.\n\n// Disclaimer of Warranty: THIS SOFTWARE IS PROVIDED BY A.M.P.A.S. AND\n// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT\n// NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE, AND NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL\n// A.M.P.A.S., OR ANY CONTRIBUTORS OR DISTRIBUTORS, BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, RESITUTIONARY, OR CONSEQUENTIAL\n// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// WITHOUT LIMITING THE GENERALITY OF THE FOREGOING, THE ACADEMY SPECIFICALLY\n// DISCLAIMS ANY REPRESENTATIONS OR WARRANTIES WHATSOEVER RELATED TO PATENT OR\n// OTHER INTELLECTUAL PROPERTY RIGHTS IN THE ACADEMY COLOR ENCODING SYSTEM, OR\n// APPLICATIONS THEREOF, HELD BY PARTIES OTHER THAN A.M.P.A.S.,WHETHER DISCLOSED\n// OR UNDISCLOSED.\n\n#if !defined(ACES_lib)\n#define ACES_lib\n\n#include "ACES_TransformCommon.glsl";\n#include "ACES_UtillitiesColor.glsl";\n#include "ACES_Tonescales.glsl";\n\n#include "ACES_RRT.glsl";\n#include "ACES_ODT_sRGB_100nits.glsl";\n\n// idt\n\n// linear D65 sRGB to D60 ACES AP0\nvec3 sRGB_to_AP0(vec3 sRGB)\n{\n    return sRGB_to_AP0_MAT * sRGB;\n}\n\n// linear D65 sRGB to D60 ACES AP1\nvec3 sRGB_to_AP1(vec3 sRGB)\n{\n    return sRGB_to_AP1_MAT * sRGB;\n}\n\n// lmt\n// todo\n\n#endif // ACES_lib')}}class ShaderInit3D{static __init__(){t.Shader3D.addInclude("Utils.glsl","#if !defined(Utils_lib)\n    #define Utils_lib\n\n#endif // Utils_lib"),t.Shader3D.addInclude("Color.glsl",'#if !defined(Color_lib)\n    #define Color_lib\n\n    #include "Math.glsl";\n\nvec3 linearToGamma(in vec3 value)\n{\n    // return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\n    return pow(value, vec3(1.0 / 2.2));\n}\n\nvec4 linearToGamma(in vec4 value)\n{\n    return vec4(linearToGamma(value.rgb), value.a);\n}\n\nvec3 gammaToLinear(in vec3 value)\n{\n    // return pow((value + 0.055) / 1.055, vec3(2.4));\n    return pow(value, vec3(2.2));\n}\n\nvec4 gammaToLinear(in vec4 value)\n{\n    return vec4(gammaToLinear(value.rgb), value.a);\n}\n\nconst float c_RGBDMaxRange = 255.0;\n\n// float color to rgbd\nvec4 encodeRGBD(in vec3 color)\n{\n    float maxRGB = max(vecmax(color), FLT_EPS);\n    float d = max(1.0, c_RGBDMaxRange / maxRGB);\n    d = saturate(d / 255.0);\n\n    vec3 rgb = color.rgb * d;\n    rgb = saturate(rgb);\n    return vec4(rgb, d);\n}\n\n// rgbd to float color\nvec3 decodeRGBD(in vec4 rgbd)\n{\n    vec3 color = rgbd.rgb * (1.0 / rgbd.a);\n    return color;\n}\n\n// float color to rgbm\nvec4 encodeRGBM(in vec3 color, float range)\n{\n    color *= 1.0 / range;\n    float maxRGB = max(vecmax(color), FLT_EPS);\n    float m = ceil(maxRGB * 255.0) / 255.0;\n    vec3 rgb = color.rgb * 1.0 / m;\n\n    vec4 rgbm = vec4(rgb, m);\n    return rgbm;\n}\n\n// rgbm to float color\nvec3 decodeRGBM(in vec4 rgbm, float range)\n{\n    return range * rgbm.rgb * rgbm.a;\n}\n\n#endif // Color_lib'),t.Shader3D.addInclude("Math.glsl",'#if !defined(Math_lib)\n    #define Math_lib\n\n    #ifndef GRAPHICS_API_GLES3\nmat2 inverse(mat2 m)\n{\n    return mat2(m[1][1], -m[0][1], -m[1][0], m[0][0]) / (m[0][0] * m[1][1] - m[0][1] * m[1][0]);\n}\nmat3 inverse(mat3 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n    float b01 = a22 * a11 - a12 * a21;\n    float b11 = -a22 * a10 + a12 * a20;\n    float b21 = a21 * a10 - a11 * a20;\n\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11), b11, (a22 * a00 - a02 * a20),\n\t       (-a12 * a00 + a02 * a10), b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10))\n\t/ det;\n}\n\nmat4 inverse(mat4 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3], a10 = m[1][0], a11 = m[1][1], a12 = m[1][2],\n\t  a13 = m[1][3], a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3], a30 = m[3][0], a31 = m[3][1],\n\t  a32 = m[3][2], a33 = m[3][3],\n\n\t  b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10,\n\t  b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12,\n\t  b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30,\n\t  b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32,\n\n\t  det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    return mat4(a11 * b11 - a12 * b10 + a13 * b09, a02 * b10 - a01 * b11 - a03 * b09, a31 * b05 - a32 * b04 + a33 * b03,\n\t       a22 * b04 - a21 * b05 - a23 * b03, a12 * b08 - a10 * b11 - a13 * b07, a00 * b11 - a02 * b08 + a03 * b07,\n\t       a32 * b02 - a30 * b05 - a33 * b01, a20 * b05 - a22 * b02 + a23 * b01, a10 * b10 - a11 * b08 + a13 * b06,\n\t       a01 * b08 - a00 * b10 - a03 * b06, a30 * b04 - a31 * b02 + a33 * b00, a21 * b02 - a20 * b04 - a23 * b00,\n\t       a11 * b07 - a10 * b09 - a12 * b06, a00 * b09 - a01 * b07 + a02 * b06, a31 * b01 - a30 * b03 - a32 * b00,\n\t       a20 * b03 - a21 * b01 + a22 * b00)\n\t/ det;\n}\n\nmat4 transpose(mat4 m)\n{\n    return mat4(m[0][0], m[1][0], m[2][0], m[3][0],\n\tm[0][1], m[1][1], m[2][1], m[3][1],\n\tm[0][2], m[1][2], m[2][2], m[3][2],\n\tm[0][3], m[1][3], m[2][3], m[3][3]);\n}\nmat3 transpose(mat3 m)\n{\n    return mat3(m[0][0], m[1][0], m[2][0],\n\tm[0][1], m[1][1], m[2][1],\n\tm[0][2], m[1][2], m[2][2]);\n}\n    #endif // GRAPHICS_API_GLES3\n\n    #define PI 3.14159265359\n\n    #define INVERT_PI 0.31830988618\n\n    #define HALF_PI 1.570796327\n\n    #define MEDIUMP_FLT_MAX 65504.0\n    #define MEDIUMP_FLT_MIN 0.00006103515625\n\n    #if defined(GL_FRAGMENT_PRECISION_HIGH)\n\t#define FLT_EPS\t\t   1e-5\n\t#define saturateMediump(x) x\n    #else\n\t#define FLT_EPS\t\t   MEDIUMP_FLT_MIN\n\t#define saturateMediump(x) min(x, MEDIUMP_FLT_MAX)\n    #endif // GL_FRAGMENT_PRECISION_HIGH\n\n    #define saturate(x) clamp(x, 0.0, 1.0)\n\nfloat pow2(float x)\n{\n    return x * x;\n}\n\nfloat pow5(float x)\n{\n    float x2 = x * x;\n    return x2 * x2 * x;\n}\n\nconst float INVERT_LOG10 = 0.43429448190325176;\n\nfloat log10(float x)\n{\n    return log(x) * INVERT_LOG10;\n}\n\nfloat vecmax(const vec2 v)\n{\n    return max(v.x, v.y);\n}\n\nfloat vecmax(const vec3 v)\n{\n    return max(v.x, max(v.y, v.z));\n}\n\nfloat vecmax(const vec4 v)\n{\n    return max(max(v.x, v.y), max(v.z, v.w));\n}\n\nfloat vecmin(const vec2 v)\n{\n    return min(v.x, v.y);\n}\n\nfloat vecmin(const vec3 v)\n{\n    return min(v.x, min(v.y, v.z));\n}\n\nfloat vecmin(const vec4 v)\n{\n    return min(min(v.x, v.y), min(v.z, v.w));\n}\n\nvec3 SafeNormalize(in vec3 inVec)\n{\n    float dp3 = max(0.001, dot(inVec, inVec));\n    return inVec * inversesqrt(dp3);\n}\n\nvec3 normalScale(in vec3 normal, in float scale)\n{\n    normal *= vec3(scale, scale, 1.0);\n    return normalize(normal);\n}\n\n/**\n * Approximates acos(x) with a max absolute error of 9.0x10^-3.\n * Valid in the range -1..1.\n */\nfloat acosFast(float x)\n{\n    // Lagarde 2014, "Inverse trigonometric functions GPU optimization for AMD GCN architecture"\n    // This is the approximation of degree 1, with a max absolute error of 9.0x10^-3\n    float y = abs(x);\n    float p = -0.1565827 * y + 1.570796;\n    p *= sqrt(1.0 - y);\n    return x >= 0.0 ? p : PI - p;\n}\n\n/**\n * Approximates acos(x) with a max absolute error of 9.0x10^-3.\n * Valid only in the range 0..1.\n */\nfloat acosFastPositive(float x)\n{\n    float p = -0.1565827 * x + 1.570796;\n    return p * sqrt(1.0 - x);\n}\n\n/*\n * Random number between 0 and 1, using interleaved gradient noise.\n * w must not be normalized (e.g. window coordinates)\n */\nfloat interleavedGradientNoise(const highp vec2 w)\n{\n    const vec3 m = vec3(0.06711056, 0.00583715, 52.9829189);\n    return fract(m.z * fract(dot(w, m.xy)));\n}\n\n/*\n * vertex rotate by Euler\n */\nvec3 rotationByEuler(in vec3 vector, in vec3 rot)\n{\n    float halfRoll = rot.z * 0.5;\n    float halfPitch = rot.x * 0.5;\n    float halfYaw = rot.y * 0.5;\n\n    float sinRoll = sin(halfRoll);\n    float cosRoll = cos(halfRoll);\n    float sinPitch = sin(halfPitch);\n    float cosPitch = cos(halfPitch);\n    float sinYaw = sin(halfYaw);\n    float cosYaw = cos(halfYaw);\n\n    float quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n    float quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n    float quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n    float quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n\n    // vec4 q=vec4(quaX,quaY,quaZ,quaW);\n    // vec3 temp = cross(q.xyz, vector) + q.w * vector;\n    // return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\n    float x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n    float xx = quaX * x;\n    float xy = quaX * y;\n    float xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n\t((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n\t((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n}\n\n/*\n * Assume that axis has been normalized\n * point rotate by one axis\n */\nvec3 rotationByAxis(in vec3 vector, in vec3 axis, in float angle)\n{\n    float halfAngle = angle * 0.5;\n    float sin = sin(halfAngle);\n\n    float quaX = axis.x * sin;\n    float quaY = axis.y * sin;\n    float quaZ = axis.z * sin;\n    float quaW = cos(halfAngle);\n\n    // vec4 q=vec4(quaX,quaY,quaZ,quaW);\n    // vec3 temp = cross(q.xyz, vector) + q.w * vector;\n    // return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\n    float x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n    float xx = quaX * x;\n    float xy = quaX * y;\n    float xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n\t((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n\t((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n}\n\n/*\n *rotate by quaternions\n */\nvec3 rotationByQuaternions(in vec3 v, in vec4 q)\n{\n    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n#endif // Math_lib'),t.Shader3D.addInclude("BakedBoneMatrixSampler.glsl","#if !defined(BakeBoneAnimSampler_lib)\n    #define BakeBoneAnimSampler_lib\n\nmat4 loadBakedMatMatrix(float FramePos, float boneIndices, float offset)\n{\n    vec2 uv;\n    float PixelPos = FramePos + boneIndices * 4.0;\n    float halfOffset = offset * 0.5;\n    float uvoffset = PixelPos / u_SimpleAnimatorTextureSize;\n    uv.y = floor(uvoffset) * offset + halfOffset;\n    uv.x = mod(float(PixelPos), u_SimpleAnimatorTextureSize) * offset + halfOffset;\n    vec4 mat0row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat1row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat2row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat3row = texture2D(u_SimpleAnimatorTexture, uv);\n    mat4 m = mat4(mat0row.x, mat0row.y, mat0row.z, mat0row.w,\n\tmat1row.x, mat1row.y, mat1row.z, mat1row.w,\n\tmat2row.x, mat2row.y, mat2row.z, mat2row.w,\n\tmat3row.x, mat3row.y, mat3row.z, mat3row.w);\n    return m;\n}\n\n#endif // BakeBoneAnimSampler_lib"),t.Shader3D.addInclude("MorphTarget.glsl","#if !defined(MorphTarget_lib)\n    #define MorphTarget_lib\n\n    #ifdef GRAPHICS_API_GLES3\n\n/// static mesh property\nuniform sampler2DArray u_MorphTargetsTex;\n// xy: tex size, z: attribute count\nuniform vec4 u_MorphParams;\nuniform vec4 u_MorphAttrOffset;\n\n\t#define Morph_TexWidth\t   u_MorphParams.x\n\t#define Morph_TexHeight\t   u_MorphParams.y\n\t#define Morph_AttributeNum u_MorphParams.z\n\t#define Morph_TargetNum\t   u_MorphParams.w\n\n\t#define Morph_PositionOffset u_MorphAttrOffset.x\n\t#define Morph_NormalOffset   u_MorphAttrOffset.y\n\t#define Morph_TangentOffset  u_MorphAttrOffset.z\n\n// #define MORPH_MAX_COUNT 8\n\n/// dynamic params\nuniform float u_MorphActiveTargets[MORPH_MAX_COUNT];\nuniform float u_MorphTargetWeights[MORPH_MAX_COUNT];\nuniform int u_MorphTargetActiveCount;\n\n\t#define MORPH_ACTIVE_COUNT u_MorphTargetActiveCount\n\nvec4 sampleMorphTargets(in int vertexID, in float targetID)\n{\n    int v = vertexID / int(Morph_TexWidth);\n    int u = vertexID - v * int(Morph_TexWidth);\n\n    vec3 uvw = vec3((float(u) + 0.5) / Morph_TexWidth, (float(v) + 0.5) / Morph_TexHeight, targetID);\n\n    return texture(u_MorphTargetsTex, uvw);\n}\n\nvec3 positionMorph(in vec3 position)\n{\n    int vertexID = gl_VertexID * int(Morph_AttributeNum) + int(Morph_PositionOffset);\n\n    for (int i = 0; i < MORPH_ACTIVE_COUNT; i++)\n\t{\n\t    float index = u_MorphActiveTargets[i];\n\n\t    position += sampleMorphTargets(vertexID, index).xyz * u_MorphTargetWeights[i];\n\t}\n\n    return position;\n}\n\nvec3 normalMorph(in vec3 normal)\n{\n    int vertexID = gl_VertexID * int(Morph_AttributeNum) + int(Morph_NormalOffset);\n    for (int i = 0; i < MORPH_ACTIVE_COUNT; i++)\n\t{\n\t    float index = u_MorphActiveTargets[i];\n\n\t    normal += sampleMorphTargets(vertexID, index).xyz * u_MorphTargetWeights[i];\n\t}\n\n    return normal;\n}\n\nvec4 tangentMorph(in vec4 tangent)\n{\n    int vertexID = gl_VertexID * int(Morph_AttributeNum) + int(Morph_TangentOffset);\n    for (int i = 0; i < MORPH_ACTIVE_COUNT; i++)\n\t{\n\t    float index = u_MorphActiveTargets[i];\n\n\t    vec4 sampleTangent = sampleMorphTargets(vertexID, index);\n\n\t    tangent.xyz += sampleTangent.xyz * u_MorphTargetWeights[i] * tangent.w * sampleTangent.w;\n\t}\n\n    return tangent;\n}\n\n    #endif // GRAPHICS_API_GLES3\n\n#endif // MorphTarget_lib"),t.Shader3D.addInclude("VertexCommon.glsl",'#if !defined(VertexCommon_lib)\n    #define VertexCommon_lib\n\n    #ifdef MORPHTARGETS\n\t#include "MorphTarget.glsl";\n    #endif // MORPHTARGETS\n\nstruct Vertex {\n\n    vec3 positionOS;\n\n    vec3 normalOS;\n\n    #ifdef TANGENT\n    vec4 tangentOS;\n    #endif // TANGENT\n\n    // todo  uv define ?\n    #ifdef UV\n    vec2 texCoord0;\n    #endif // UV\n\n    #ifdef UV1\n    vec2 texCoord1;\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n/**\n * vertex position\n */\nvec4 getVertexPosition()\n{\n    vec4 position = a_Position;\n\n    #ifdef MORPHTARGETS\n\t#ifdef MORPHTARGETS_POSITION\n    position.xyz = positionMorph(position.xyz);\n\t#endif // MORPHTARGETS_POSITION\n    #endif // MORPHTARGETS\n\n    return position;\n}\n\nvec3 getVertexNormal()\n{\n    vec3 normal = a_Normal.xyz;\n    #ifdef MORPHTARGETS\n\t#ifdef MORPHTARGETS_NORMAL\n    normal.xyz = normalMorph(normal);\n\t#endif // MORPHTARGETS_NORMAL\n    #endif // MORPHTARGETS\n\n    return normal;\n}\n\n    #ifdef TANGENT\nvec4 getVertexTangent()\n{\n    vec4 tangent = a_Tangent0;\n\n\t#ifdef MORPHTARGETS\n\t    #ifdef MORPHTARGETS_TANGENT\n    tangent = tangentMorph(tangent);\n\t    #endif // MORPHTARGETS_TANGENT\n\t#endif // MORPHTARGETS\n\n    return tangent;\n}\n    #endif // TANGENT\n\nvoid getVertexParams(inout Vertex vertex)\n{\n    vertex.positionOS = getVertexPosition().xyz;\n\n    vertex.normalOS = getVertexNormal();\n\n    #ifdef TANGENT\n    vertex.tangentOS = getVertexTangent();\n    #endif // TANGENT\n\n    #ifdef UV\n    vertex.texCoord0 = a_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n    vertex.texCoord1 = a_Texcoord1;\n    #endif // UV1\n\n    #ifdef COLOR\n    // consider vertexColor is gamma\n    vertex.vertexColor = vec4(pow(a_Color.rgb, vec3(2.2)), a_Color.a);\n    #endif // COLOR\n}\n\n#endif // VertexCommon_lib'),t.Shader3D.addInclude("ShadingCommon.glsl","#if !defined(ShadingCommon_lib)\n    #define ShadingCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\n// todo\nvarying vec3 v_NormalWS;\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n    vec3 positionWS;\n\n    // todo\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n#endif // ShadingCommon_lib"),t.Shader3D.addInclude("ShadingVertex.glsl",'#if !defined(ShadingVertex_lib)\n    #define ShadingVertex_lib\n\n    #include "ShadingCommon.glsl";\n\nvoid sharePixelParams(const in PixelParams params)\n{\n    v_PositionWS = params.positionWS;\n\n    v_NormalWS = params.normalWS;\n    v_TangentWS = params.tangentWS;\n    v_BiNormalWS = params.biNormalWS;\n\n    #ifdef UV\n    v_Texcoord0 = params.uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    v_Texcoord1 = params.uv1;\n\t#endif LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    v_VertexColor = params.vertexColor;\n    #endif // COLOR\n}\n\nvoid shadingPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    mat4 worldMat = getWorldMatrix();\n    vec4 pos = (worldMat * vec4(vertex.positionOS, 1.0));\n    params.positionWS = pos.xyz / pos.w;\n\n    mat4 normalMat = transpose(inverse(worldMat));\n    params.normalWS = normalize((normalMat * vec4(vertex.normalOS, 0.0)).xyz);\n\n    #ifdef TANGENT\n    params.tangentWS = normalize((normalMat * vec4(vertex.tangentOS.xyz, 0.0)).xyz);\n    params.tangentWS *= u_WroldInvertFront.x;\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS) * sign(vertex.tangentOS.w));\n    #else // TANGENT\n    params.tangentWS = vec3(1.0, 0.0, 0.0);\n    params.tangentWS *= u_WroldInvertFront.x;\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS));\n    #endif // TANGENT\n    \n\n    #ifdef UV\n    params.uv0 = vertex.texCoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = tranformLightMapUV(vertex.texCoord1, u_LightmapScaleOffset);\n\t#endif LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = vertex.vertexColor;\n    #endif // COLOR\n}\n\n#endif // ShadingVertex_lib'),t.Shader3D.addInclude("ShadingFrag.glsl",'#if !defined(ShadingFrag_lib)\n    #define ShadingFrag_lib\n\n    #include "ShadingCommon.glsl";\n\nvoid getPixelParams(inout PixelParams params)\n{\n    params.positionWS = v_PositionWS;\n\n    params.normalWS = normalize(v_NormalWS);\n    params.tangentWS = normalize(v_TangentWS);\n    params.biNormalWS = normalize(v_BiNormalWS);\n\n    params.TBN = mat3(params.tangentWS, params.biNormalWS, params.normalWS);\n\n    #ifdef UV\n    params.uv0 = v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = v_VertexColor;\n    #endif // COLOR\n}\n\n#endif // ShadingFrag_lib'),t.Shader3D.addInclude("Scene.glsl","#if !defined(SceneCommon_lib)\n    #define SceneCommon_lib\n\n    #ifdef ENUNIFORMBLOCK\nuniform SceneUniformBlock\n{\n    // time\n    float u_Time;\n    vec4 u_FogParams;// x start,y range,z Density\n    vec4 u_FogColor;\n};\n    #else // ENUNIFORMBLOCK\n// time\nuniform float u_Time;\nuniform vec4 u_FogParams;//x start,y range,z Density\nuniform vec4 u_FogColor;\n    #endif // ENUNIFORMBLOCK\n    //rotate SH IBL\nuniform float u_GIRotate;\n\n#endif // SceneCommon_lib"),t.Shader3D.addInclude("Camera.glsl","#if !defined(CameraCommon_lib)\n    #define CameraCommon_lib\n\n    #ifdef ENUNIFORMBLOCK\n\nuniform CameraUniformBlock\n{\n    mat4 u_View;\n    mat4 u_Projection;\n    mat4 u_ViewProjection;\n    vec4 u_ProjectionParams; // x: near, y: far, z: invert, w: 1/far\n    vec4 u_Viewport; // x,y,width,height\n    vec3 u_CameraDirection;\n    vec3 u_CameraUp;\n    vec3 u_CameraPos;\n};\n    #else\nuniform mat4 u_View;\nuniform mat4 u_Projection;\nuniform mat4 u_ViewProjection;\nuniform vec4 u_ProjectionParams; // x: near, y: far, z: invert, w: 1/far\nuniform vec4 u_Viewport; // x, y, width, height\nuniform vec3 u_CameraDirection;\nuniform vec3 u_CameraUp;\nuniform vec3 u_CameraPos;\n    #endif // ENUNIFORMBLOCK\n\n/*Depth or DepthNormal Uniform*/\nuniform highp sampler2D u_CameraDepthTexture;\nuniform vec4 u_ZBufferParams; //(1.0 - far / near, far / near, (near - far) / (near * far), 1 / near)\nuniform mediump sampler2D u_CameraDepthNormalsTexture;\nuniform mediump sampler2D u_CameraOpaqueTexture;\n\nvec4 getPositionCS(in vec3 positionWS)\n{\n    return u_ViewProjection * vec4(positionWS, 1.0);\n}\n\nvec3 getViewDirection(in vec3 positionWS)\n{\n    return normalize(u_CameraPos - positionWS);\n}\n\n// 根据投影剧专重映射深度\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\n\n#endif // CameraCommon_lib"),t.Shader3D.addInclude("Sprite3DCommon.glsl","#if !defined(Sprite3DCommon_lib)\n    #define Sprite3DCommon_lib\n\nuniform mat4 u_WorldMat;\n\nuniform vec4 u_WroldInvertFront;\n    \n    #ifdef LIGHTMAP\nuniform vec4 u_LightmapScaleOffset;\n    #endif // LIGHTMAP\n\nvec2 tranformLightMapUV(in vec2 texcoord, in vec4 tilingOffset)\n{\n    vec2 lightMapUV = vec2(texcoord.x, 1.0 - texcoord.y) * tilingOffset.xy + tilingOffset.zw;\n    lightMapUV.y = 1.0 - lightMapUV.y;\n    return lightMapUV;\n}\n\nvec2 transformUV(in vec2 texcoord, in vec4 tilingOffset)\n{\n    vec2 uv = texcoord * tilingOffset.xy + tilingOffset.zw * vec2(1.0, -1.0) + vec2(0.0, 1.0 - tilingOffset.y);\n    return uv;\n}\n\n#endif // Sprite3DCommon_lib"),t.Shader3D.addInclude("Sprite3DVertex.glsl",'#if !defined(Sprite3DVertex_lib)\n    #define Sprite3DVertex_lib\n\n    #include "Sprite3DCommon.glsl";\n\n    #ifdef BONE\n// todo const int c_MaxBoneCount = 24\nuniform mat4 u_Bones[24];\n\n\t#ifdef SIMPLEBONE\nuniform vec4 u_SimpleAnimatorParams;\nuniform sampler2D u_SimpleAnimatorTexture;\nuniform float u_SimpleAnimatorTextureSize;\n\t    #include "BakedBoneMatrixSampler.glsl";\n\n\t#endif // SIMPLEBONE\n\n    #endif // BONE\n\n/**\n * world matrix\n */\nmat4 getWorldMatrix()\n{\n    #ifdef GPU_INSTANCE\n    mat4 worldMat = a_WorldMat;\n    #else\n    mat4 worldMat = u_WorldMat;\n    #endif // GPU_INSTANCE\n\n    #ifdef BONE\n\n\t#ifdef SIMPLEBONE\n\n\t    #ifdef GPU_INSTANCE\n    float currentPixelPos = a_SimpleTextureParams.x + a_SimpleTextureParams.y;\n\t    #else // GPU_INSTANCE\n    float currentPixelPos = u_SimpleAnimatorParams.x + u_SimpleAnimatorParams.y;\n\t    #endif // GPU_INSTANCE\n\n    float offset = 1.0 / u_SimpleAnimatorTextureSize;\n    mat4 skinTrans = loadBakedMatMatrix(currentPixelPos, a_BoneIndices.x, offset) * a_BoneWeights.x;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.y, offset) * a_BoneWeights.y;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.z, offset) * a_BoneWeights.z;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.w, offset) * a_BoneWeights.w;\n    worldMat = worldMat * skinTrans;\n\n\t#else // SIMPLEBONE\n\n    ivec4 boneIndex = ivec4(a_BoneIndices);\n    mat4 skinTrans = u_Bones[boneIndex.x] * a_BoneWeights.x;\n    skinTrans += u_Bones[boneIndex.y] * a_BoneWeights.y;\n    skinTrans += u_Bones[boneIndex.z] * a_BoneWeights.z;\n    skinTrans += u_Bones[boneIndex.w] * a_BoneWeights.w;\n    worldMat = worldMat * skinTrans;\n\n\t#endif // SIMPLEBONE\n\n    #endif // BONE\n\n    return worldMat;\n}\n\n#endif // Sprite3DVertex_lib'),t.Shader3D.addInclude("Sprite3DFrag.glsl",'#if !defined(Sprite3DFrag_lib)\n    #define Sprite3DFrag_lib\n\n    #include "Sprite3DCommon.glsl";\n\n#endif // Sprite3DFrag_lib'),t.Shader3D.addInclude("DepthVertex.glsl",'#if !defined(DepthVertex_lib)\n    #define DepthVertex_lib\n    #include "Math.glsl";\n    #include "Scene.glsl";\n    #include "Camera.glsl";\n    #include "Sprite3DVertex.glsl";\n\n    #include "VertexCommon.glsl";\n\n    #if defined(SHADOW) || defined(SHADOW_SPOT)\n\n\t#ifndef DEPTHPASS\n\t    #ifdef ENUNIFORMBLOCK\nuniform ShadowUniformBlock\n{\n    vec4 u_ShadowBias; // x: depth bias, y: normal bias\n    vec3 u_ShadowLightDirection;\n};\n\t    #else // ENUNIFORMBLOCK\nuniform vec4 u_ShadowBias; // x: depth bias, y: normal bias\n\t\t#ifdef SHADOW\nuniform vec3 u_ShadowLightDirection;\n\t\t#endif // SHADOW\n\t    #endif // ENUNIFORMBLOCK\n\nvec3 applyShadowBias(vec3 positionWS, vec3 normalWS, vec3 lightDirection)\n{\n    float invNdotL = 1.0 - clamp(dot(-lightDirection, normalWS), 0.0, 1.0);\n    float scale = invNdotL * u_ShadowBias.y;\n\n    // normal bias is negative since we want to apply an inset normal offset\n    positionWS += -lightDirection * u_ShadowBias.xxx;\n    positionWS += normalWS * vec3(scale);\n    return positionWS;\n}\n\t#endif // DEPTHPASS\n    #endif // SHADOW || SHADOW_SPOT\n\n    #ifdef DEPTHPASS\n\t#include "Camera.glsl";\n    #endif // DEPTHPASS\n\nvec4 DepthPositionCS(in vec3 positionWS, in vec3 normalWS)\n{\n    #ifdef DEPTHPASS\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    #endif // DEPTHPASS\n\n    #ifdef SHADOW\n\t#ifndef DEPTHPASS\n    positionWS = applyShadowBias(positionWS, normalWS, u_ShadowLightDirection);\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    positionCS.z = max(positionCS.z, 0.0); // min ndc z is 0.0\n\t#endif // DEPTHPASS\n    #endif // SHADOW\n\n    #ifdef SHADOW_SPOT\n\t#ifndef DEPTHPASS\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    positionCS.z = positionCS.z - u_ShadowBias.x / positionCS.w;\n    positionCS.z = max(positionCS.z, 0.0); // min ndc z is 0.0\n\t#endif // DEPTHPASS\n    #endif // SHADOW_SPOT\n\n    return positionCS;\n}\n\n#endif // DepthVertex_lib'),t.Shader3D.addInclude("DepthFrag.glsl","#if !defined(DepthFrag_lib)\n    #define DepthFrag_lib\n\nvec4 getDepthColor()\n{\n    return vec4(0.0);\n}\n\n#endif // DepthFrag_lib"),t.Shader3D.addInclude("DepthNormalUtil.glsl","#define SAMPLE_DEPTH_TEXTURE(textureName, coord2) (texture2D(textureName, coord2).r)\n//此方法库用来压缩解析深度贴图，法线深度贴图\n\n// Encoding/decoding view space normals into 2D 0..1 vector\nvec2 EncodeViewNormalStereo(vec3 n)\n{\n    n.z = abs(n.z);\n    float kScale = 1.7777;\n    vec2 enc;\n    enc = n.xy / (n.z + 1.0);\n    enc /= kScale;\n    enc = enc * 0.5 + 0.5;\n    return enc;\n}\n\nvec3 DecodeViewNormalStereo(vec4 enc4)\n{\n    float kScale = 1.7777;\n    vec3 nn = enc4.xyz * vec3(2.0 * kScale, 2.0 * kScale, 0.0) + vec3(-kScale, -kScale, 1.0);\n    float g = 2.0 / dot(nn.xyz, nn.xyz);\n    vec3 n;\n    n.xy = g * nn.xy;\n    n.z = g - 1.0;\n    return n;\n}\n\n// Encoding/decoding [0..1) floats into 8 bit/channel RG. Note that 1.0 will not be encoded properly.\nvec2 EncodeFloatRG(float v)\n{\n    vec2 kEncodeMul = vec2(1.0, 255.0);\n    float kEncodeBit = 1.0 / 255.0;\n    vec2 enc = kEncodeMul * v;\n    enc = fract(enc);\n    enc.x -= enc.y * kEncodeBit;\n    return enc;\n}\n\nfloat DecodeFloatRG(vec2 enc)\n{\n    vec2 kDecodeDot = vec2(1.0, 1.0 / 255.0);\n    return dot(enc, kDecodeDot);\n}\n\nvec4 EncodeDepthNormal(float depth, vec3 normals)\n{\n    vec4 encode;\n    encode.xy = EncodeViewNormalStereo(normals);\n    encode.zw = EncodeFloatRG(depth);\n    return encode;\n}\n\nvoid DecodeDepthNormal(vec4 enc, out float depth, out vec3 normal)\n{\n    depth = DecodeFloatRG(enc.zw);\n    normal = DecodeViewNormalStereo(enc);\n}\n\nvec4 depthNormalsFragment(vec4 depthNormal)\n{\n    return EncodeDepthNormal(depthNormal.w, depthNormal.xyz);\n}\n\n// Z buffer to linear 0..1 depth\nfloat Linear01Depth(float z, vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.x * z + zbufferParams.y);\n}\n// Z buffer to linear depth\nfloat LinearEyeDepth(float z, vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.z * z + zbufferParams.w);\n}\n"),t.Shader3D.addInclude("DepthNormalFrag.glsl",'#if !defined(DepthNormalFrag_lib)\n    #define DepthNormalFrag_lib\n\n    #include "DepthNormalUtil.glsl";\n\nvec4 encodeDepthNormal(const in vec4 positionCS, const in vec3 normalWS)\n{\n    float depth = (positionCS.z * 2.0 - positionCS.w) * u_ProjectionParams.w;\n\n    vec3 normalVS = mat3(u_View) * normalWS;\n\n    return EncodeDepthNormal(depth, normalVS);\n}\n\n#endif // DepthNormalFrag_lib'),t.Shader3D.addInclude("SceneFog.glsl","#if !defined(SceneFog_lib)\n    #define SceneFog_lib\n\n    #ifdef FOG\nvarying float v_fogFactor;\nfloat getFogFactor()\n{\n    return v_fogFactor;\n}\n\nvec3 scenUnlitFog(in vec3 color)\n{\n    float lerpFact = getFogFactor();\n\t#ifdef ADDTIVEFOG\n    lerpFact = clamp(lerpFact, 0.0, 1.0);\n    return mix(vec3(0.0), color, lerpFact);\n\t#else\n    lerpFact = clamp(lerpFact, 0.0, 1.0);\n    return mix(u_FogColor.rgb, color, lerpFact);\n\t#endif // ADDTIVEFOG\n}\n\nvec3 sceneLitFog(in vec3 color)\n{\n    float lerpFact = getFogFactor();\n    lerpFact = clamp(lerpFact, 0.0, 1.0);\n    return mix(u_FogColor.rgb, color, lerpFact);\n}\n\n    #endif\n#endif // SceneFog_lib"),t.Shader3D.addInclude("SceneFogInput.glsl","#if !defined(SceneFog_lib)\n    #define SceneFog_lib\n\n    #ifdef FOG\nvarying float v_fogFactor;\nvoid FogHandle(in float fact)\n{\n    float lerpFact = 0.0;\n\t#ifdef FOG_EXP\n    lerpFact = fact * (u_FogParams.z / log(2.0));\n    lerpFact = exp2(-lerpFact);\n\t#elif defined(FOG_EXP2)\n    lerpFact = fact * (u_FogParams.z / sqrt(log(2.0)));\n    lerpFact = exp2(-lerpFact);\n\t#else // default FOG_LINEAR\n    lerpFact = (-1.0 * fact / (u_FogParams.y - u_FogParams.x) + u_FogParams.y / (u_FogParams.y - u_FogParams.x));\n\t#endif\n    v_fogFactor = lerpFact;\n}\n    #endif\n#endif // SceneFog_lib"),t.Shader3D.addInclude("ShadowSampleTent.glsl",'// ------------------------------------------------------------------\n//  PCF Filtering Tent Functions\n// ------------------------------------------------------------------\n\n// Assuming a isoceles right angled triangle of height "triangleHeight" (as drawn below).\n// This function return the area of the triangle above the first texel(in Y the first texel).\n//\n// |\\      <-- 45 degree slop isosceles right angled triangle\n// | \\\n// ----    <-- length of this side is "triangleHeight"\n// _ _ _ _ <-- texels\nfloat sampleShadowGetIRTriangleTexelArea(float triangleHeight)\n{\n    return triangleHeight - 0.5;\n}\n\n// Assuming a isoceles triangle of 1.5 texels height and 3 texels wide lying on 4 texels.\n// This function return the area of the triangle above each of those texels.\n//    |    <-- offset from -0.5 to 0.5, 0 meaning triangle is exactly in the center\n//   / \\   <-- 45 degree slop isosceles triangle (ie tent projected in 2D)\n//  /   \\\n// _ _ _ _ <-- texels\n// X Y Z W <-- result indices (in computedArea.xyzw and computedAreaUncut.xyzw)\n// Top point at (right,top) in a texel,left bottom point at (middle,middle) in a texel,right bottom point at (middle,middle) in a texel.\nvoid sampleShadowGetTexelAreasTent3x3(float offset, out vec4 computedArea, out vec4 computedAreaUncut)\n{\n    // Compute the exterior areas,a and h is same.\n    float a = offset + 0.5;\n    float offsetSquaredHalved = a * a * 0.5;\n    computedAreaUncut.x = computedArea.x = offsetSquaredHalved - offset;\n    computedAreaUncut.w = computedArea.w = offsetSquaredHalved;\n\n    // Compute the middle areas\n    // For Y : We find the area in Y of as if the left section of the isoceles triangle would\n    // intersect the axis between Y and Z (ie where offset = 0).\n    computedAreaUncut.y = sampleShadowGetIRTriangleTexelArea(1.5 - offset);\n    // This area is superior to the one we are looking for if (offset < 0) thus we need to\n    // subtract the area of the triangle defined by (0,1.5-offset), (0,1.5+offset), (-offset,1.5).\n    float clampedOffsetLeft = min(offset,0.0);\n    float areaOfSmallLeftTriangle = clampedOffsetLeft * clampedOffsetLeft;\n    computedArea.y = computedAreaUncut.y - areaOfSmallLeftTriangle;\n\n    // We do the same for the Z but with the right part of the isoceles triangle\n    computedAreaUncut.z = sampleShadowGetIRTriangleTexelArea(1.5 + offset);\n    float clampedOffsetRight = max(offset,0.0);\n    float areaOfSmallRightTriangle = clampedOffsetRight * clampedOffsetRight;\n    computedArea.z = computedAreaUncut.z - areaOfSmallRightTriangle;\n}\n\n// Assuming a isoceles triangle of 2.5 texel height and 5 texels wide lying on 6 texels.\n// This function return the weight of each texels area relative to the full triangle area.\n//  /       \\\n// _ _ _ _ _ _ <-- texels\n// 0 1 2 3 4 5 <-- computed area indices (in texelsWeights[])\n// Top point at (right,top) in a texel,left bottom point at (middle,middle) in a texel,right bottom point at (middle,middle) in a texel.\nvoid sampleShadowGetTexelWeightsTent5x5(float offset, out vec3 texelsWeightsA, out vec3 texelsWeightsB)\n{\n    vec4 areaFrom3texelTriangle;\n    vec4 areaUncutFrom3texelTriangle;\n    sampleShadowGetTexelAreasTent3x3(offset, areaFrom3texelTriangle, areaUncutFrom3texelTriangle);\n\n    // Triangle slope is 45 degree thus we can almost reuse the result of the 3 texel wide computation.\n    // the 5 texel wide triangle can be seen as the 3 texel wide one but shifted up by one unit/texel.\n    // 0.16 is 1/(the triangle area)\n    texelsWeightsA.x = 0.16 * (areaFrom3texelTriangle.x);\n    texelsWeightsA.y = 0.16 * (areaUncutFrom3texelTriangle.y);\n    texelsWeightsA.z = 0.16 * (areaFrom3texelTriangle.y + 1.0);\n    texelsWeightsB.x = 0.16 * (areaFrom3texelTriangle.z + 1.0);\n    texelsWeightsB.y = 0.16 * (areaUncutFrom3texelTriangle.z);\n    texelsWeightsB.z = 0.16 * (areaFrom3texelTriangle.w);\n}\n\n// 5x5 Tent filter (45 degree sloped triangles in U and V)\nvoid sampleShadowComputeSamplesTent5x5(vec4 shadowMapTextureTexelSize, vec2 coord, out float fetchesWeights[9], out vec2 fetchesUV[9])\n{\n    // tent base is 5x5 base thus covering from 25 to 36 texels, thus we need 9 bilinear PCF fetches\n    vec2 tentCenterInTexelSpace = coord.xy * shadowMapTextureTexelSize.zw;\n    vec2 centerOfFetchesInTexelSpace = floor(tentCenterInTexelSpace + 0.5);\n    vec2 offsetFromTentCenterToCenterOfFetches = tentCenterInTexelSpace - centerOfFetchesInTexelSpace;\n\n    // find the weight of each texel based on the area of a 45 degree slop tent above each of them.\n    vec3 texelsWeightsUA, texelsWeightsUB;\n    vec3 texelsWeightsVA, texelsWeightsVB;\n    sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.x, texelsWeightsUA, texelsWeightsUB);\n    sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.y, texelsWeightsVA, texelsWeightsVB);\n\n    // each fetch will cover a group of 2x2 texels, the weight of each group is the sum of the weights of the texels\n    vec3 fetchesWeightsU = vec3(texelsWeightsUA.xz, texelsWeightsUB.y) + vec3(texelsWeightsUA.y, texelsWeightsUB.xz);\n    vec3 fetchesWeightsV = vec3(texelsWeightsVA.xz, texelsWeightsVB.y) + vec3(texelsWeightsVA.y, texelsWeightsVB.xz);\n\n    // move the PCF bilinear fetches to respect texels weights\n    vec3 fetchesOffsetsU = vec3(texelsWeightsUA.y, texelsWeightsUB.xz) / fetchesWeightsU.xyz + vec3(-2.5,-0.5,1.5);\n    vec3 fetchesOffsetsV = vec3(texelsWeightsVA.y, texelsWeightsVB.xz) / fetchesWeightsV.xyz + vec3(-2.5,-0.5,1.5);\n    fetchesOffsetsU *= shadowMapTextureTexelSize.xxx;\n    fetchesOffsetsV *= shadowMapTextureTexelSize.yyy;\n\n    vec2 bilinearFetchOrigin = centerOfFetchesInTexelSpace * shadowMapTextureTexelSize.xy;\n    fetchesUV[0] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.x);\n    fetchesUV[1] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.x);\n    fetchesUV[2] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.x);\n    fetchesUV[3] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.y);\n    fetchesUV[4] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.y);\n    fetchesUV[5] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.y);\n    fetchesUV[6] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.z);\n    fetchesUV[7] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.z);\n    fetchesUV[8] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.z);\n\n    fetchesWeights[0] = fetchesWeightsU.x * fetchesWeightsV.x;\n    fetchesWeights[1] = fetchesWeightsU.y * fetchesWeightsV.x;\n    fetchesWeights[2] = fetchesWeightsU.z * fetchesWeightsV.x;\n    fetchesWeights[3] = fetchesWeightsU.x * fetchesWeightsV.y;\n    fetchesWeights[4] = fetchesWeightsU.y * fetchesWeightsV.y;\n    fetchesWeights[5] = fetchesWeightsU.z * fetchesWeightsV.y;\n    fetchesWeights[6] = fetchesWeightsU.x * fetchesWeightsV.z;\n    fetchesWeights[7] = fetchesWeightsU.y * fetchesWeightsV.z;\n    fetchesWeights[8] = fetchesWeightsU.z * fetchesWeightsV.z;\n}'),t.Shader3D.addInclude("ShadowSampler.glsl",'#if !defined(ShadowSampler_lib)\n    #define ShadowSampler_lib\n\n    #ifndef GRAPHICS_API_GLES3\n\t#define NO_NATIVE_SHADOWMAP\n    #endif // GRAPHICS_API_GLES3\n\n    #if defined(NO_NATIVE_SHADOWMAP)\n\t#define TEXTURE2D_SHADOW(textureName)\t\t     uniform mediump sampler2D textureName\n\t#define SAMPLE_TEXTURE2D_SHADOW(textureName, coord3) (texture2D(textureName, coord3.xy).r < coord3.z ? 0.0 : 1.0)\n\t#define TEXTURE2D_SHADOW_PARAM(shadowMap)\t     mediump sampler2D shadowMap\n    #else // NO_NATIVE_SHADOWMAP\n\t#define TEXTURE2D_SHADOW(textureName)\t\t     uniform mediump sampler2DShadow textureName\n\t#define SAMPLE_TEXTURE2D_SHADOW(textureName, coord3) textureLod(textureName, coord3, 0.0)\n\t#define TEXTURE2D_SHADOW_PARAM(shadowMap)\t     mediump sampler2DShadow shadowMap\n    #endif // NO_NATIVE_SHADOWMAP\n\n    // 计算阴影\n    #ifdef RECEIVESHADOW\n\n\t#include "ShadowSampleTent.glsl";\n\nuniform vec4 u_ShadowParams;\n\n\t#define ShadowStrength\t   u_ShadowParams.x\n\t#define SpotShadowStrength u_ShadowParams.y\n\n    // 平行光阴影\n\t#ifdef SHADOW\n\t    #define CALCULATE_SHADOWS\nvarying vec4 v_ShadowCoord;\nTEXTURE2D_SHADOW(u_ShadowMap);\nuniform vec4 u_ShadowMapSize;\n\n#ifdef SHADOW_CASCADE\nconst int c_MaxCascadeCount = 4;\n#else //SHADOW_CASCADE\nconst int c_MaxCascadeCount = 1;\n#endif//SHADOW_CASCADE\n\nuniform mat4 u_ShadowMatrices[c_MaxCascadeCount];\nuniform vec4 u_ShadowSplitSpheres[c_MaxCascadeCount];\n\t#endif // SHADOW\n\n\t// 聚光灯阴影\n\t#ifdef SHADOW_SPOT\n\t    #define CALCULATE_SPOTSHADOWS\nvarying vec4 v_SpotShadowCoord;\nTEXTURE2D_SHADOW(u_SpotShadowMap);\nuniform vec4 u_SpotShadowMapSize;\nuniform mat4 u_SpotViewProjectMatrix;\n\t#endif // SHADOW_SPOT\n\nfloat sampleShdowMapFiltered4(TEXTURE2D_SHADOW_PARAM(shadowMap), vec3 shadowCoord, vec4 shadowMapSize)\n{\n    float attenuation;\n    vec4 attenuation4;\n    vec2 offset = shadowMapSize.xy / 2.0;\n    vec3 shadowCoord0 = shadowCoord + vec3(-offset, 0.0);\n    vec3 shadowCoord1 = shadowCoord + vec3(offset.x, -offset.y, 0.0);\n    vec3 shadowCoord2 = shadowCoord + vec3(-offset.x, offset.y, 0.0);\n    vec3 shadowCoord3 = shadowCoord + vec3(offset, 0.0);\n    attenuation4.x = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord0);\n    attenuation4.y = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord1);\n    attenuation4.z = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord2);\n    attenuation4.w = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord3);\n    attenuation = dot(attenuation4, vec4(0.25));\n    return attenuation;\n}\n\nfloat sampleShdowMapFiltered9(TEXTURE2D_SHADOW_PARAM(shadowMap), vec3 shadowCoord, vec4 shadowmapSize)\n{\n    float attenuation;\n    float fetchesWeights[9];\n    vec2 fetchesUV[9];\n    sampleShadowComputeSamplesTent5x5(shadowmapSize, shadowCoord.xy, fetchesWeights, fetchesUV);\n    attenuation = fetchesWeights[0] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[0].xy, shadowCoord.z));\n    attenuation += fetchesWeights[1] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[1].xy, shadowCoord.z));\n    attenuation += fetchesWeights[2] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[2].xy, shadowCoord.z));\n    attenuation += fetchesWeights[3] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[3].xy, shadowCoord.z));\n    attenuation += fetchesWeights[4] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[4].xy, shadowCoord.z));\n    attenuation += fetchesWeights[5] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[5].xy, shadowCoord.z));\n    attenuation += fetchesWeights[6] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[6].xy, shadowCoord.z));\n    attenuation += fetchesWeights[7] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[7].xy, shadowCoord.z));\n    attenuation += fetchesWeights[8] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[8].xy, shadowCoord.z));\n    return attenuation;\n}\n    #endif // RECEIVESHADOW\n\n    // 计算平行光阴影\n    #if defined(CALCULATE_SHADOWS)\n\n#ifdef SHADOW_CASCADE\n// 平行光阴影级联索引\nmediump int computeCascadeIndex(in vec3 positionWS)\n{\n    vec3 fromCenter0 = positionWS - u_ShadowSplitSpheres[0].xyz;\n    vec3 fromCenter1 = positionWS - u_ShadowSplitSpheres[1].xyz;\n    vec3 fromCenter2 = positionWS - u_ShadowSplitSpheres[2].xyz;\n    vec3 fromCenter3 = positionWS - u_ShadowSplitSpheres[3].xyz;\n\n    mediump vec4 comparison = vec4(dot(fromCenter0, fromCenter0) < u_ShadowSplitSpheres[0].w,\n\tdot(fromCenter1, fromCenter1) < u_ShadowSplitSpheres[1].w,\n\tdot(fromCenter2, fromCenter2) < u_ShadowSplitSpheres[2].w,\n\tdot(fromCenter3, fromCenter3) < u_ShadowSplitSpheres[3].w);\n\n    comparison.yzw = clamp(comparison.yzw - comparison.xyz, 0.0, 1.0); // keep the nearest\n    mediump vec4 indexCoefficient = vec4(4.0, 3.0, 2.0, 1.0);\n    mediump int index = 4 - int(dot(comparison, indexCoefficient));\n    return index;\n}\n#endif\n\n// 平行光阴影坐标\nvec4 getShadowCoord(in vec3 positionWS)\n{\n\t#ifdef SHADOW_CASCADE\n    mediump int cascadeIndex = computeCascadeIndex(positionWS);\n\t    #ifdef GRAPHICS_API_GLES3\n    mat4 shadowMat = u_ShadowMatrices[cascadeIndex];\n\t    #else // GRAPHICS_API_GLES3\n    mat4 shadowMat;\n    if (cascadeIndex == 0)\n\t{\n\t    shadowMat = u_ShadowMatrices[0];\n\t}\n    else if (cascadeIndex == 1)\n\t{\n\t    shadowMat = u_ShadowMatrices[1];\n\t}\n    else if (cascadeIndex == 2)\n\t{\n\t    shadowMat = u_ShadowMatrices[2];\n\t}\n    else\n\t{\n\t    shadowMat = u_ShadowMatrices[3];\n\t}\n\t    #endif // GRAPHICS_API_GLES3\n\n    return shadowMat * vec4(positionWS, 1.0);\n\n\t#else // SHADOW_CASCADE\n\n    return u_ShadowMatrices[0] * vec4(positionWS, 1.0);\n\n\t#endif // SHADOW_CASCADE\n}\n\n// 采样平行光阴影\nfloat sampleShadowmap(in vec4 shadowCoord)\n{\n    float attenuation = 1.0;\n\n    vec3 coord = shadowCoord.xyz / shadowCoord.w;\n\n    vec4 shadowmapSize = u_ShadowMapSize;\n\n    if (coord.z > 0.0 && coord.z < 1.0)\n\t{\n\t#if defined(SHADOW_SOFT_SHADOW_HIGH)\n\t    attenuation = sampleShdowMapFiltered9(u_ShadowMap, coord, shadowmapSize);\n\t#elif defined(SHADOW_SOFT_SHADOW_LOW)\n\t    attenuation = sampleShdowMapFiltered4(u_ShadowMap, coord, shadowmapSize);\n\t#else // hard\n\t    attenuation = SAMPLE_TEXTURE2D_SHADOW(u_ShadowMap, coord);\n\t#endif // SHADOW_SOFT_SHADOW_HIGH\n\t    attenuation = mix(1.0, attenuation, ShadowStrength);\n\t}\n\n    return attenuation;\n}\n\n    #endif // CALCULATE_SHADOWS\n\n    // 计算 聚光灯 阴影\n    #if defined(CALCULATE_SPOTSHADOWS)\n\n// 聚光灯阴影坐标\nvec4 getSpotShadowCoord(in vec3 positionWS)\n{\n    vec4 coordinate = u_SpotViewProjectMatrix * vec4(positionWS, 1.0);\n\n    return coordinate;\n}\n\n// 采样聚光灯阴影\nfloat sampleSpotShadowmap(vec4 shadowCoord)\n{\n    float attenuation = 1.0;\n\n    vec3 coord = shadowCoord.xyz / shadowCoord.w;\n    coord.xy = coord.xy * 0.5 + 0.5;\n\n    vec4 shadowmapSize = u_SpotShadowMapSize;\n    // todo\n    if (coord.z > 0.0 && coord.z < 1.0)\n\t{\n\t#if defined(SHADOW_SPOT_SOFT_SHADOW_HIGH)\n\t    attenuation = sampleShdowMapFiltered9(u_SpotShadowMap, coord, shadowmapSize);\n\t#elif defined(SHADOW_SPOT_SOFT_SHADOW_LOW)\n\t    attenuation = sampleShdowMapFiltered4(u_SpotShadowMap, coord, shadowmapSize);\n\t#else // hard\n\t    attenuation = SAMPLE_TEXTURE2D_SHADOW(u_SpotShadowMap, coord);\n\t#endif\n\t    attenuation = mix(1.0, attenuation, SpotShadowStrength);\n\t}\n\n    return attenuation;\n}\n\n    #endif // CALCULATE_SPOTSHADOWS\n\n#endif // ShadowSampler_lib'),t.Shader3D.addInclude("Lighting.glsl",'#if !defined(Lighting_lib)\n    #define Lighting_lib\n\n    #include "ShadowSampler.glsl";\n\nstruct Light {\n    vec3 color;\n    vec3 dir;\n    float attenuation;\n};\n\nstruct DirectionLight {\n    vec3 color;\n    vec3 direction;\n    float attenuation;\n    int lightMode;\n};\n\nstruct PointLight {\n    vec3 color;\n    vec3 position;\n    float range;\n    float attenuation;\n    int lightMode;\n};\n\nstruct SpotLight {\n    vec3 color;\n    vec3 position;\n    float range;\n    vec3 direction;\n    float spot;\n    float attenuation;\n    int lightMode;\n};\n\n    #define LightMode_Mix      0\n    #define LightMode_RealTime 1\n\nint getAttenuationByMode(float lightMapMode)\n{\n    #ifdef LIGHTMAP // mix 0 realtime 1\n    return int(lightMapMode);\n    #else // LIGHTMAP\n\n\t#ifdef VOLUMETRICGI\n    return int(lightMapMode);\n\t#endif // VOLUMETRICGI\n\n    #endif // LIGHTMAP\n    return LightMode_RealTime;\n}\n\n    #if defined(DIRECTIONLIGHT) || defined(POINTLIGHT) || defined(SPOTLIGHT)\n\n\t#define LIGHTING\n\n// 灯光衰减函数\nfloat attenuation(in vec3 L, in float invLightRadius)\n{\n    float fRatio = clamp(length(L) * invLightRadius, 0.0, 1.0);\n    fRatio *= fRatio;\n    return 1.0 / (1.0 + 25.0 * fRatio) * clamp(4.0 * (1.0 - fRatio), 0.0, 1.0);\n}\n\n// 平行光\nLight getLight(in DirectionLight directionLight)\n{\n    Light light;\n    light.color = directionLight.color;\n    light.dir = directionLight.direction;\n    light.attenuation = directionLight.attenuation;\n    return light;\n}\n\n// 点光\nLight getLight(in PointLight pointLight, in vec3 normalWS, in vec3 positionWS)\n{\n    vec3 lightDirection = positionWS - pointLight.position;\n    float rangeAttenuate = attenuation(lightDirection, 1.0 / pointLight.range);\n\n    Light light;\n    light.color = pointLight.color * rangeAttenuate;\n    light.dir = normalize(lightDirection);\n    light.attenuation = pointLight.attenuation;\n    return light;\n}\n\n// 聚光灯\nLight getLight(in SpotLight spotLight, in vec3 normalWS, in vec3 positionWS)\n{\n    vec3 lightDirection = positionWS - spotLight.position;\n    vec3 normalizeLightDir = normalize(lightDirection);\n\n    vec2 cosAngles = cos(vec2(spotLight.spot, spotLight.spot * 0.5) * 0.5);\n    float dirAttenuate = dot(spotLight.direction, normalizeLightDir);\n    dirAttenuate *= smoothstep(cosAngles.x, cosAngles.y, dirAttenuate);\n\n    float rangeAttenuate = attenuation(lightDirection, 1.0 / spotLight.range);\n\n    Light light;\n    light.color = spotLight.color * rangeAttenuate * dirAttenuate;\n    light.dir = normalizeLightDir;\n    light.attenuation = spotLight.attenuation;\n    return light;\n}\n\n\t#ifdef LEGACYSINGLELIGHTING\n\t    #define CalculateLightCount 1\n\t    #define DirectionCount\t1\n\n\t    #ifdef DIRECTIONLIGHT\nuniform DirectionLight u_DirectionLight;\n\t    #endif // DIRECTIONLIGHT\n\n\t    #ifdef POINTLIGHT\nuniform PointLight u_PointLight;\n\t    #endif // POINTLIGHT\n\n\t    #ifdef SPOTLIGHT\nuniform SpotLight u_SpotLight;\n\t    #endif // SPOTLIGHT\n\n\t#else // LEGACYSINGLELIGHTING\n\t    #define CalculateLightCount MAX_LIGHT_COUNT\n\t    #define DirectionCount\tu_DirationLightCount\n\nuniform sampler2D u_LightBuffer;\n\n\t    #ifdef DIRECTIONLIGHT\nuniform mediump int u_DirationLightCount;\n\t    #endif\n\n\t    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\nconst int c_ClusterBufferWidth = CLUSTER_X_COUNT * CLUSTER_Y_COUNT;\nconst int c_ClusterBufferHeight = CLUSTER_Z_COUNT * (1 + int(ceil(float(MAX_LIGHT_COUNT_PER_CLUSTER) / 4.0)));\nconst int c_ClusterBufferFloatWidth = c_ClusterBufferWidth * 4;\nuniform sampler2D u_LightClusterBuffer;\n\nint getLightIndex(in int offset, in int index)\n{\n    int totalOffset = offset + index;\n    int row = totalOffset / c_ClusterBufferFloatWidth;\n    int lastRowFloat = totalOffset - row * c_ClusterBufferFloatWidth;\n    int col = lastRowFloat / 4;\n    vec2 uv = vec2((float(col) + 0.5) / float(c_ClusterBufferWidth), (float(row) + 0.5) / float(c_ClusterBufferHeight));\n    vec4 texPixel = texture2D(u_LightClusterBuffer, uv);\n    int pixelComponent = lastRowFloat - col * 4;\n\n\t\t#ifdef GRAPHICS_API_GLES3\n    return int(texPixel[pixelComponent]);\n\t\t#else\n    if (pixelComponent == 0)\n\treturn int(texPixel.x);\n    else if (pixelComponent == 1)\n\treturn int(texPixel.y);\n    else if (pixelComponent == 2)\n\treturn int(texPixel.z);\n    else\n\treturn int(texPixel.w);\n\t\t#endif\n}\n\t    #endif // POINTLIGHT || SPOTLIGHT\n\n\t#endif // LEGACYSINGLELIGHTING\n\n\t#ifdef DIRECTIONLIGHT\nDirectionLight getDirectionLight(in int index, in vec3 positionWS)\n{\n    DirectionLight light;\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_DirectionLight.color;\n    light.direction = u_DirectionLight.direction;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(float(u_DirectionLight.lightMode));\n\t    #else // LEGACYSINGLELIGHTING\n    float v = (float(index) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    light.color = p1.rgb;\n    light.direction = p2.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p1.a);\n\t    #endif // LEGACYSINGLELIGHTING\n\n\t    #if defined(CALCULATE_SHADOWS)\n    if (index == 0)\n\t{\n\t    vec4 shadowCoord = getShadowCoord(positionWS);\n\t    float shadowAttenuation = sampleShadowmap(shadowCoord);\n\t    light.attenuation = shadowAttenuation;\n\t}\n\t    #endif // CALCULATE_SHADOWS\n\n    return light;\n}\n\t#endif // DIRECTIONLIGHT\n\n\t#if defined(POINTLIGHT) || defined(SPOTLIGHT)\nivec4 getClusterInfo(mat4 viewMatrix, vec4 viewport, vec3 positionWS, vec4 fragCoord, vec4 projectParams)\n{\n\t    #ifdef LEGACYSINGLELIGHTING\n    return ivec4(1, 1, 0, 0);\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  这个地方 用 positionVS 替换?\n    vec3 viewPos = vec3(viewMatrix * vec4(positionWS, 1.0));\n    int clusterXIndex = int(floor(fragCoord.x / (float(viewport.z) / float(CLUSTER_X_COUNT))));\n    int clusterYIndex = int(floor((viewport.w * (projectParams.z < 0.0 ? 0.0 : 1.0) - fragCoord.y * projectParams.z) / (float(viewport.w) / float(CLUSTER_Y_COUNT))));\n    float zSliceParam = float(CLUSTER_Z_COUNT) / log2(projectParams.y / projectParams.x);\n    int clusterZIndex = int(floor(log2(-viewPos.z) * zSliceParam - log2(projectParams.x) * zSliceParam));\n    // todo 化简\n    vec2 uv = vec2((float(clusterXIndex + clusterYIndex * CLUSTER_X_COUNT) + 0.5) / float(c_ClusterBufferWidth), (float(clusterZIndex) + 0.5) / float(c_ClusterBufferHeight));\n    vec4 clusterPixel = texture2D(u_LightClusterBuffer, uv);\n    return ivec4(clusterPixel); // X:Point Count Y:Spot Count Z、W:Light Offset\n\t    #endif // LEGACYSINGLELIGHTING\n}\n\t#endif // POINTLIGHT || SPOTLIGHT\n\n\t#ifdef POINTLIGHT\nPointLight getPointLight(in int index, in ivec4 clusterInfo, in vec3 positionWS)\n{\n\n    PointLight light;\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_PointLight.color;\n    light.position = u_PointLight.position;\n    light.range = u_PointLight.range;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(float(u_PointLight.lightMode));\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  重复计算\n    int indexOffset = clusterInfo.z * c_ClusterBufferFloatWidth + clusterInfo.w;\n    int pointIndex = getLightIndex(indexOffset, index);\n    float v = (float(pointIndex) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    light.color = p1.rgb;\n    light.range = p1.a;\n    light.position = p2.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p2.a);\n\t    #endif // LEGACYSINGLELIGHTING\n    return light;\n}\n\t#endif // POINTLIGHT\n\n\t#ifdef SPOTLIGHT\nSpotLight getSpotLight(in int index, in ivec4 clusterInfo, in vec3 positionWS)\n{\n    SpotLight light;\n\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_SpotLight.color;\n    light.position = u_SpotLight.position;\n    light.range = u_SpotLight.range;\n    light.direction = u_SpotLight.direction;\n    light.spot = u_SpotLight.spot;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(float(u_SpotLight.lightMode));\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  重复计算\n    int indexOffset = clusterInfo.z * c_ClusterBufferFloatWidth + clusterInfo.w;\n    int spotIndex = getLightIndex(indexOffset, index + clusterInfo.x);\n    float v = (float(spotIndex) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    vec4 p3 = texture2D(u_LightBuffer, vec2(0.625, v));\n    light.color = p1.rgb;\n    light.range = p1.a;\n    light.position = p2.rgb;\n    light.spot = p2.a;\n    light.direction = p3.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p3.a);\n\t    #endif // LEGACYSINGLELIGHTING\n\n\t    #if defined(CALCULATE_SPOTSHADOWS)\n    if (index == 0)\n\t{\n\t    vec4 shadowCoord = getSpotShadowCoord(positionWS);\n\t    float shadowAttenuation = sampleSpotShadowmap(shadowCoord);\n\t    light.attenuation = shadowAttenuation;\n\t}\n\t    #endif // CALCULATE_SPOTSHADOWS\n\n    return light;\n}\n\t#endif // SPOTLIGHT\n\n    #endif // DIRECTIONLIGHT || POINTLIGHT || SPOTLIGHT\n\n#endif // Lighting_lib'),t.Shader3D.addInclude("globalIllumination.glsl",'#if !defined(globalIllumination_lib)\n    #define globalIllumination_lib\n\n    #ifdef VOLUMETRICGI\n\t#include "VolumetricGI.glsl";\n    #endif // VOLUMETRICGI\n\nvec3 rotateByYAixs(in vec3 normal)\n{\n    float co = cos(u_GIRotate);\n    float si = sin(u_GIRotate);\n    float x = normal.x * co - normal.z * si;\n    float z = normal.x * si + normal.z * co;\n    return vec3(x, normal.y, z);\n}\n\nvec4 rotateByYAixs(in vec4 normal)\n{\n    float co = cos(u_GIRotate);\n    float si = sin(u_GIRotate);\n    float x = normal.x * co - normal.z * si;\n    float z = normal.x * si + normal.z * co;\n    return vec4(x, normal.y, z, normal.w);\n}\nuniform float u_AmbientIntensity;\nuniform float u_ReflectionIntensity;\n\n    #ifdef GI_IBL\n\nuniform vec3 u_IblSH[9];\n\nuniform samplerCube u_IBLTex;\nuniform float u_IBLRoughnessLevel;\n\n\t#define IBL_ROUGHNESS_LEVEL u_IBLRoughnessLevel\n\n// todo 格式\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    // todo cmeng 生成的数据问题， 临时转换下\n    vec3 n = normalWS * vec3(-1.0, 1.0, 1.0);\n    n = rotateByYAixs(n);\n    return max(\n\t       u_IblSH[0]\n\t\t   + u_IblSH[1] * n.y\n\t\t   + u_IblSH[2] * n.z\n\t\t   + u_IblSH[3] * n.x\n\t\t   + u_IblSH[4] * (n.y * n.x)\n\t\t   + u_IblSH[5] * (n.y * n.z)\n\t\t   + u_IblSH[6] * (3.0 * n.z * n.z - 1.0)\n\t\t   + u_IblSH[7] * (n.z * n.x)\n\t\t   + u_IblSH[8] * (n.x * n.x - n.y * n.y),\n\t       0.0)\n\t* u_AmbientIntensity;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS, in vec3 positionWS, in vec3 viewDir)\n{\n\t#ifdef VOLUMETRICGI\n    vec3 surfaceBias = VolumetricGISurfaceBias(normalWS, viewDir);\n    return VolumetricGIVolumeIrradiance(positionWS, surfaceBias, normalWS) * u_AmbientIntensity;\n\t#else // VOLUMETRICGI\n    return diffuseIrradiance(normalWS);\n\t#endif // VOLUMETRICGI\n}\n\nvec3 specularRadiance(in vec3 r, in float perceptualRoughness)\n{\n    float lod = IBL_ROUGHNESS_LEVEL * perceptualRoughness * (2.0 - perceptualRoughness);\n\n    // todo 临时转换\n    vec3 reflectDir = r * vec3(-1.0, 1.0, 1.0);\n\n    // todo rotateY SceneConfig\n    reflectDir = rotateByYAixs(reflectDir);\n\n    // todo float 编码 ?\n    vec4 reflectSampler = textureCubeLodEXT(u_IBLTex, reflectDir, lod);\n\n\t#ifdef IBL_RGBD\n    return decodeRGBD(reflectSampler) * u_ReflectionIntensity;\n\t#else // IBL_RGBD\n    return reflectSampler.rgb * u_ReflectionIntensity;\n\t#endif // IBL_RGBD\n}\n\n    #endif // GI_IBL\n\n    #ifdef GI_LEGACYIBL\n\nuniform vec4 u_AmbientSHAr;\nuniform vec4 u_AmbientSHAg;\nuniform vec4 u_AmbientSHAb;\nuniform vec4 u_AmbientSHBr;\nuniform vec4 u_AmbientSHBg;\nuniform vec4 u_AmbientSHBb;\nuniform vec4 u_AmbientSHC;\n\n\t#define LAYA_SPECCUBE_LOD_STEPS 6.0\nuniform samplerCube u_ReflectTexture;\nuniform vec4 u_ReflectCubeHDRParams;\n\nvec3 shEvalLinearL0L1(in vec4 normal)\n{\n    vec3 x;\n    x.r = dot(u_AmbientSHAr, normal);\n    x.g = dot(u_AmbientSHAg, normal);\n    x.b = dot(u_AmbientSHAb, normal);\n    return x;\n}\n\nvec3 shEvalLinearL2(in vec4 normal)\n{\n    vec3 x1, x2;\n    // 4 of the quadratic (L2) polynomials\n    vec4 vB = normal.xyzz * normal.yzzx;\n    x1.r = dot(u_AmbientSHBr, vB);\n    x1.g = dot(u_AmbientSHBg, vB);\n    x1.b = dot(u_AmbientSHBb, vB);\n\n    // Final (5th) quadratic (L2) polynomial\n    float vC = normal.x * normal.x - normal.y * normal.y;\n    x2 = u_AmbientSHC.rgb * vC;\n\n    return x1 + x2;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    // todo -x 坐标转换\n    vec4 normal = vec4(-normalWS.x, normalWS.yz, 1.0);\n\n    // TODO rotate y SceneConfig\n\n    normal = rotateByYAixs(normal);\n\n    vec3 ambientContrib = shEvalLinearL0L1(normal);\n    ambientContrib += shEvalLinearL2(normal);\n    vec3 ambient = max(vec3(0.0), ambientContrib);\n\n    return ambient * u_AmbientIntensity;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS, in vec3 positionWS, in vec3 viewDir)\n{\n\t#ifdef VOLUMETRICGI\n    vec3 surfaceBias = VolumetricGISurfaceBias(normalWS, viewDir);\n    return VolumetricGIVolumeIrradiance(positionWS, surfaceBias, normalWS) * u_AmbientIntensity;\n\t#else // VOLUMETRICGI\n    return diffuseIrradiance(normalWS);\n\t#endif // VOLUMETRICGI\n}\n\nvec3 specularRadiance(in vec3 r, in float perceptualRoughness)\n{\n    float roughness = perceptualRoughness * (1.7 - 0.7 * perceptualRoughness);\n    // todo 临时转换\n    r *= vec3(-1.0, 1.0, 1.0);\n    r = rotateByYAixs(r);\n\n    float lod = roughness * LAYA_SPECCUBE_LOD_STEPS;\n    vec4 rgbm = textureCubeLodEXT(u_ReflectTexture, r, lod);\n    float range = u_ReflectCubeHDRParams.x;\n    vec3 color = decodeRGBM(rgbm, range);\n    color = gammaToLinear(color);\n    return color * u_ReflectionIntensity;\n}\n\n    #endif // GI_LEGACYIBL\n\n    #ifndef GI_IBL\n\t#ifndef GI_LEGACYIBL\n\nuniform vec4 u_AmbientColor;\n\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    return u_AmbientColor.rgb * u_AmbientIntensity;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS, in vec3 positionWS, in vec3 viewDir)\n{\n    return diffuseIrradiance(normalWS);\n}\n\nvec3 specularRadiance(in vec3 r, in float perceptualRoughness)\n{\n    // todo\n    return u_AmbientColor.rgb * u_ReflectionIntensity;\n}\n\n\t#endif // GI_LEGACYIBL\n    #endif // GI_IBL\n\n    #ifdef LIGHTMAP\n\n\t#ifdef UV1\n\t    #define USELIGHTMAP\n\t#endif // UV1\n\nuniform sampler2D u_LightMap;\n\n\t#ifdef LIGHTMAP_DIRECTIONAL\n\nuniform sampler2D u_LightMapDirection;\n\nvec3 DecodeDirectionalLightmap(in vec2 lightmapUV, in vec3 bakeColor, in vec3 normalWS)\n{\n    vec4 dirLightmap = texture2D(u_LightMapDirection, lightmapUV);\n    vec3 lightdir = normalize(dirLightmap.xyz - vec3(0.5)); // 0-1  => -0.5-0.5\n    //根据法线计算半兰伯特\n    float halfLambert = clamp(dot(normalWS, lightdir), 0.0, 1.0) * 0.5 + 0.5;\n    return bakeColor * halfLambert / max(dirLightmap.w, 0.001);\n}\n\n\t#endif // LIGHTMAP_DIRECTIONAL\n\nvec3 getBakedLightmapColor(in vec2 lightmapUV, in vec3 normalWS)\n{\n    vec4 lightmapSampler = texture2D(u_LightMap, lightmapUV);\n\t// todo lightmap rgbm encode color space\n\t#ifdef Gamma_u_LightMap\n    lightmapSampler = gammaToLinear(lightmapSampler);\n\t#endif // Gamma_u_LightMap\n\n\t#ifdef LIGHTMAP_DIRECTIONAL\n    lightmapSampler.rgb = DecodeDirectionalLightmap(lightmapUV, lightmapSampler.rgb, normalWS);\n\t#endif // LIGHTMAP_DIRECTIONAL\n\n    return lightmapSampler.rgb;\n}\n\n    #endif // LIGHTMAP\n\n    #ifdef SPECCUBE_BOX_PROJECTION\n\nuniform vec3 u_SpecCubeProbePosition;\nuniform vec3 u_SpecCubeBoxMax;\nuniform vec3 u_SpecCubeBoxMin;\n\nvec3 getBoxProjectionReflectedVector(vec3 r, vec3 positionWS)\n{\n    vec3 boxCenter = u_SpecCubeProbePosition;\n    vec3 boxMin = u_SpecCubeBoxMin;\n    vec3 boxMax = u_SpecCubeBoxMax;\n\n    vec3 nr = normalize(r);\n    vec3 rbmax = boxMax - positionWS;\n    vec3 rbmin = boxMin - positionWS;\n    vec3 select = step(vec3(0.0), r);\n    vec3 rbminmax = mix(rbmin, rbmax, select) / nr;\n    float scalar = vecmin(rbminmax);\n    vec3 boxr = nr * scalar + positionWS - boxCenter;\n    return boxr;\n}\n\n    #endif // SPECCUBE_BOX_PROJECTION\n\n#endif // globalIllumination_lib'),t.Shader3D.addInclude("Oct.glsl","#if !defined(Oct_lib)\n    #define Oct_lib\n\nfloat signNotZero(in float k) { return k >= 0.0 ? 1.0 : -1.0; }\n\nvec2 signNotZero(in vec2 v) { return vec2(signNotZero(v.x), signNotZero(v.y)); }\n\n/**\n * v: normalized sample dir\n * @return: oct encode uv [-1, 1]\n */\nvec2 octEncode(in vec3 v)\n{\n    float l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n    vec2 result = v.xy * (1.0 / l1norm);\n    if (v.z < 0.0)\n\t{\n\t    result = (1.0 - abs(result.yx)) * signNotZero(result.xy);\n\t}\n\n    return result;\n}\n\n/**\n * x: u [-1, 1]\n * y: v [-1, 1]\n * @return: normalized sample dir\n */\nvec3 finalDecode(float x, float y)\n{\n    vec3 v = vec3(x, y, 1.0 - abs(x) - abs(y));\n    if (v.z < 0.0)\n\t{\n\t    v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\n\t}\n    return normalize(v);\n}\n\n/**\n * dir: cubemap sample dir\n * outsize: probe size with border (x: probe x, y: probe y, z: 1 / probe x, w: 1\n * / probe y) gridsize: probe grid size (x: probe x index, y: probe y index, z:\n * grid x size, w: grid y size)\n * @return texture coord [0, 1]\n */\nvec2 textureCoordFromDirection(in vec3 dir, vec4 outSize, vec4 gridSize)\n{\n    vec2 uv = (octEncode(normalize(dir))) * 0.5 + 0.5;\n    uv = uv * (outSize.xy - vec2(2.0, 2.0)) * outSize.zw + outSize.zw;\n    uv = gridSize.xy * (1.0 / gridSize.zw) + uv * (1.0 / gridSize.zw);\n    return uv;\n}\n\n#endif // Oct_lib"),t.Shader3D.addInclude("GridHelpers.glsl","#if !defined(GridHelpers_lib)\n    #define GridHelpers_lib\n\nint gridCoordToProbeIndex(in ivec3 probeCoords, const in ivec3 probeCounts)\n{\n    return probeCoords.x + probeCoords.y * probeCounts.x + probeCoords.z * probeCounts.x * probeCounts.y;\n}\n\nivec3 probeIndexToGridcoord(in int probeIndex, const in ivec3 probeCounts)\n{\n    ivec3 iPos;\n    iPos.x = probeIndex % probeCounts.x;\n    iPos.y = (probeIndex % (probeCounts.x * probeCounts.y)) / probeCounts.x;\n    iPos.z = probeIndex / (probeCounts.x * probeCounts.y);\n    return iPos;\n\n    //   ivec3 iPos;\n    //   iPos.x = probeIndex & (probeCounts.x - 1);\n    //   iPos.y = (probeIndex & ((probeCounts.x * probeCounts.y) - 1)) >>\n    //            findMSB(probeCounts.x);\n    //   iPos.z = probeIndex >> findMSB(probeCounts.x * probeCounts.y);\n    //   return iPos;\n}\n\nvec3 gridCoordToPosition(in ivec3 coord, const in vec3 probeStep,\n    const in vec3 probeStartPosition)\n{\n    return (vec3(coord) + 0.5) * probeStep + probeStartPosition;\n}\n\nivec3 baseGridCoord(in vec3 position, in vec3 probeStep,\n    in vec3 probeStartPosition, in ivec3 probeCounts)\n{\n    probeStartPosition += 0.5 * probeStep;\n    return clamp(ivec3((position - probeStartPosition) / probeStep),\n\tivec3(0, 0, 0), probeCounts - ivec3(1, 1, 1));\n}\n\n#endif // GridHelpers_lib"),t.Shader3D.addInclude("VolumetricGI.glsl",'// https://jcgt.org/published/0008/02/01/\n\n#if !defined(VolumetricGI_lib)\n    #define VolumetricGI_lib\n\n    #include "Oct.glsl";\n    #include "GridHelpers.glsl";\n\nstruct VolumetricGI {\n    vec3 probeCounts;\n    vec3 probeStep;\n    vec3 probeStartPosition;\n    // float irradianceTexels;\n    // float distanceTexels;\n    // float normalBias;\n    // float viewBias;\n    vec4 probeParams; // x: irradianceTexels, y: distanceTexels, z: normalBias, w: viewBias\n};\n\nuniform VolumetricGI u_VolumetricGI;\n\nuniform sampler2D u_ProbeIrradiance;\nuniform sampler2D u_ProbeDistance;\n\nvec2 porbeGridCoordToTextureGridCoord(in ivec3 porbeGridCoord,\n    in ivec3 probeCounts,\n    in vec2 textureGridSize)\n{\n    int probeIndex = gridCoordToProbeIndex(porbeGridCoord, probeCounts);\n    ivec2 index;\n    index.x = probeIndex % (probeCounts.x * probeCounts.y);\n    index.y = probeIndex / (probeCounts.x * probeCounts.y);\n\n    vec2 textureGridCoord = vec2(index);\n    textureGridCoord.y = textureGridCoord.y;\n    return textureGridCoord;\n}\n\nvec3 VolumetricGISurfaceBias(in vec3 surfaceNormal, in vec3 cameraDirection)\n{\n    return surfaceNormal * u_VolumetricGI.probeParams.z + cameraDirection * u_VolumetricGI.probeParams.w;\n}\n\nvec3 VolumetricGIVolumeIrradiance(in vec3 worldPosition, in vec3 surfaceBias,\n    in vec3 direction)\n{\n    // direction *= vec3(-1.0, 1.0, 1.0);\n    ivec3 porbeCounts = ivec3(u_VolumetricGI.probeCounts);\n    vec3 probeStep = u_VolumetricGI.probeStep;\n    vec3 probeStartPosition = u_VolumetricGI.probeStartPosition;\n    vec2 volumeCounts = vec2(porbeCounts.x * porbeCounts.y, porbeCounts.z);\n    vec4 irradianceTexels = vec4(u_VolumetricGI.probeParams.x, u_VolumetricGI.probeParams.x, 1.0 / u_VolumetricGI.probeParams.x, 1.0 / u_VolumetricGI.probeParams.x);\n    vec4 distanceTexels = vec4(u_VolumetricGI.probeParams.y, u_VolumetricGI.probeParams.y, 1.0 / u_VolumetricGI.probeParams.y, 1.0 / u_VolumetricGI.probeParams.y);\n\n    ivec3 maxGridCoord = porbeCounts - ivec3(1);\n\n    vec3 irradiance = vec3(0.0);\n    float accumulatedWeights = 0.0;\n\n    // Bias the world space position\n    vec3 biasedWorldPosition = worldPosition + surfaceBias;\n\n    // Get the 3D grid coordinates of the probe nearest the biased world position\n    // (i.e. the "base" probe)\n    ivec3 baseProbeCoords = baseGridCoord(biasedWorldPosition, probeStep,\n\tprobeStartPosition, porbeCounts);\n\n    // Get the world-space position of the base probe (ignore relocation)\n    vec3 baseProbeWorldPosition = gridCoordToPosition(baseProbeCoords, probeStep, probeStartPosition);\n\n    // Clamp the distance (in grid space) between the given point and the base\n    // probe\'s world position (on each axis) to [0, 1]\n    vec3 gridSpaceDistance = biasedWorldPosition - baseProbeWorldPosition;\n\n    vec3 alpha = clamp(gridSpaceDistance / probeStep, vec3(0.0), vec3(1.0));\n\n    // Iterate over the 8 closest probes and accumulate their contributions\n    for (int probeIndex = 0; probeIndex < 8; probeIndex++)\n\t{\n\t    // Compute the offset to the adjacent probe in grid coordinates by sourcing\n\t    // the offsets from the bits of the loop index: x = bit 0, y = bit 1, z =\n\t    // bit 2\n\t    ivec3 adjacentProbeOffset = ivec3(probeIndex, probeIndex >> 1, probeIndex >> 2) & ivec3(1, 1, 1);\n\n\t    // Get the 3D grid coordinates of the adjacent probe by adding the offset to\n\t    // the base probe and clamping to the grid boundaries\n\t    ivec3 adjacentProbeCoords = clamp(baseProbeCoords + adjacentProbeOffset, ivec3(0), maxGridCoord);\n\n\t    // Get the adjacent probe\'s world position\n\t    vec3 adjacentProbeWorldPosition = gridCoordToPosition(adjacentProbeCoords, probeStep, probeStartPosition);\n\n\t    // Compute the distance and direction from the (biased and non-biased)\n\t    // shading point and the adjacent probe\n\t    vec3 worldPosToAdjProbe = normalize(adjacentProbeWorldPosition - worldPosition);\n\t    vec3 biasedPosToAdjProbe = normalize(adjacentProbeWorldPosition - biasedWorldPosition);\n\t    float biasedPosToAdjProbeDist = distance(adjacentProbeWorldPosition, biasedWorldPosition);\n\n\t    // Compute trilinear weights based on the distance to each adjacent probe to\n\t    // smoothly transition between probes. adjacentProbeOffset is binary, so\n\t    // we\'re using a 1-alpha when adjacentProbeOffset = 0 and alpha when\n\t    // adjacentProbeOffset = 1.\n\t    vec3 trilinear = max(vec3(0.001), mix(1.0 - alpha, alpha, vec3(adjacentProbeOffset)));\n\t    float trilinearWeight = trilinear.x * trilinear.y * trilinear.z;\n\t    float weight = 1.0;\n\n\t    // A naive soft backface weight would ignore a probe when\n\t    // it is behind the surface. That\'s good for walls, but for\n\t    // small details inside of a room, the normals on the details\n\t    // might rule out all of the probes that have mutual visibility\n\t    // to the point. We instead use a "wrap shading" test. The small\n\t    // offset at the end reduces the "going to zero" impact.\n\t    float warpShading = (dot(worldPosToAdjProbe, direction) + 1.0) * 0.5;\n\t    weight *= (warpShading * warpShading) * 0.2;\n\n\t    vec2 textureGridCoord = porbeGridCoordToTextureGridCoord(\n\t\tadjacentProbeCoords, porbeCounts, volumeCounts);\n\t    // compute the octahedral coordinates of the adjacent probe\n\t    vec2 probeTextureUV = textureCoordFromDirection(-biasedPosToAdjProbe, distanceTexels,\n\t\tvec4(textureGridCoord, volumeCounts));\n\t    // Sample the probe\'s distance texture to get the mean distance to nearby\n\t    // surfaces\n\t    vec3 filteredDistance = texture2D(u_ProbeDistance, probeTextureUV).xyz;\n\t    // Find the variance of the mean distance\n\t    float variance = abs(filteredDistance.x * filteredDistance.x - filteredDistance.y);\n\n\t    // Occlusion test\n\t    float chebyshevWeight = 1.0;\n\t    if (biasedPosToAdjProbeDist > filteredDistance.x)\n\t\t{\n\t\t    float v = biasedPosToAdjProbeDist - filteredDistance.x;\n\t\t    // v must be greater than 0, which is guaranteed by the if condition\n\t\t    // above.\n\t\t    chebyshevWeight = variance / (variance + (v * v));\n\n\t\t    // Increase the contrast in the weight\n\t\t    chebyshevWeight = max(chebyshevWeight * chebyshevWeight * chebyshevWeight, 0.0);\n\t\t}\n\n\t    if (filteredDistance.z < 1.0)\n\t\t{\n\t\t    chebyshevWeight = 1.0;\n\t\t}\n\n\t    // Avoid visibility weights ever going all the way to zero because\n\t    // when *no* probe has visibility we need a fallback value\n\t    weight *= max(0.05, chebyshevWeight);\n\n\t    // Avoid a weight of zero\n\t    weight = max(0.000001, weight);\n\n\t    // A small amount of light is visible due to logarithmic perception, so\n\t    // crush tiny weights but keep the curve continuous\n\t    const float crushThreshold = 0.2;\n\t    if (weight < crushThreshold)\n\t\t{\n\t\t    weight *= (weight * weight) * (1.0 / (crushThreshold * crushThreshold));\n\t\t}\n\n\t    // Apply the trilinear weights\n\t    weight *= trilinearWeight;\n\n\t    probeTextureUV = textureCoordFromDirection(\n\t\tdirection, irradianceTexels, vec4(textureGridCoord, volumeCounts));\n\n\t    // Sample the probe\'s irradiance\n\t    vec3 probeIrradiance = linearToGamma(texture2D(u_ProbeIrradiance, probeTextureUV).rgb);\n\n\t    irradiance += (probeIrradiance * weight);\n\t    accumulatedWeights += weight;\n\t}\n\n    if (accumulatedWeights == 0.0)\n\t{\n\t    return vec3(0.0);\n\t}\n\n    irradiance *= (1.f / accumulatedWeights); // Normalize by the accumulated weights\n\n    irradiance = gammaToLinear(irradiance);\n\n    return irradiance;\n}\n\n#endif // VolumetricGI_lib'),t.Shader3D.addInclude("BlinnPhongLighting.glsl",'#if !defined(BlinnPhongLighting_lib)\n    #define BlinnPhongLighting_lib\n\n    #include "Lighting.glsl";\n    #include "globalIllumination.glsl";\n\nstruct PixelInfo {\n    vec3 positionWS;\n\n    vec3 vertexNormalWS;\n    vec3 normalWS;\n\n    vec3 viewDir;\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    vec2 lightmapUV;\n\t#endif // UV1\n    #endif // LIGHTMAP\n};\n\nstruct Surface {\n    vec3 diffuseColor;\n    vec3 specularColor;\n    float shininess;\n    vec3 gloss;\n\n    vec3 normalTS;\n\n    float alpha;\n    float alphaClip;\n};\n\nvec3 BlinnPhongLighting(in Surface surface, in Light light, in PixelInfo pixel)\n{\n    vec3 l = normalize(-light.dir);\n    vec3 v = pixel.viewDir;\n\n    vec3 normalWS = pixel.normalWS;\n\n    vec3 diffuseColor = surface.diffuseColor;\n    float shininess = surface.shininess;\n    vec3 specularColor = surface.specularColor;\n    vec3 gloss = surface.gloss;\n\n    // difffuse\n    float ndl = max(0.0, dot(normalWS, l));\n    vec3 lightDiffuse = light.color * diffuseColor * ndl;\n\n    // specular\n    mediump vec3 h = normalize(v + l);\n    lowp float ndh = max(0.0, dot(h, normalWS));\n    float specularIntensity = pow(ndh, shininess * 128.0);\n    vec3 lightSpecular = light.color * specularColor * specularIntensity * gloss;\n\n    return lightDiffuse + lightSpecular;\n}\n\nvec3 BlinnPhongGI(const in Surface surface, const in PixelInfo info)\n{\n    vec3 indirect = vec3(0.0);\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n\n    vec2 lightmapUV = info.lightmapUV;\n    vec3 bakedColor = getBakedLightmapColor(lightmapUV, info.normalWS);\n\n    // todo  surface.diffuseColor ？\n    indirect = bakedColor * surface.diffuseColor;\n\n\t#endif // UV1\n\n    #else // LIGHTMAP\n\n    vec3 n = info.normalWS;\n    indirect = diffuseIrradiance(n) * surface.diffuseColor;\n\n    #endif // LIGHTMAP\n\n    return indirect;\n}\n\n#endif // BlinnPhongLighting_lib'),t.Shader3D.addInclude("PBRLighting.glsl",'#if !defined(PBRLighting_lib)\n    #define PBRLighting_lib\n\n    #include "Lighting.glsl";\n\n    // 精度\n    #if !defined(GL_FRAGMENT_PRECISION_HIGH)\n\t#define MIN_PERCEPTUAL_ROUGHNESS 0.089\n\t#define MIN_ROUGHNESS\t\t 0.007921\n    #else\n\t#define MIN_PERCEPTUAL_ROUGHNESS 0.045\n\t#define MIN_ROUGHNESS\t\t 0.002025\n    #endif\n\n    #define MIN_N_DOT_V 1e-4\n\n    #include "BRDF.glsl";\n\nstruct PixelInfo {\n    vec3 positionWS;\n\n    vec3 vertexNormalWS;\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n\n    vec3 viewDir;\n    float NoV;\n\n    vec3 dfg;\n    vec3 energyCompensation;\n\n    #ifdef CLEARCOAT\n    vec3 clearCoatNormal;\n    float clearCoatNoV;\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    vec3 anisotropicT;\n    vec3 anisotropicB;\n    float ToV;\n    float BoV;\n    float at;\n    float ab;\n    #endif // ANISOTROPIC\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    vec2 lightmapUV;\n\t#endif // UV1\n    #endif // LIGHTMAP\n};\n\nstruct Surface {\n    vec3 diffuseColor;\n    float alpha;\n    vec3 f0;\n    float roughness;\n    float perceptualRoughness;\n    float occlusion;\n\n    vec3 normalTS;\n\n    #ifdef CLEARCOAT\n    float clearCoat;\n    float clearCoatRoughness;\n    float clearCoatPerceptualRoughness;\n\t#ifdef CLEARCOAT_NORMAL\n    vec3 clearCoatNormalTS;\n\t#endif // CLEARCOAT_NORMAL\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    float anisotropy;\n    vec2 anisotropyDirection;\n    #endif // ANISOTROPIC\n};\n\nstruct LightParams {\n    vec3 l;\n    vec3 h;\n    float NoL;\n    float NoH;\n    float LoH;\n    float VoH;\n\n    #ifdef CLEARCOAT\n    float clearCoatNoH;\n    float clearCoatNoL;\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    float ToL;\n    float BoL;\n    #endif // ANISOTROPIC\n};\n\nvoid initLightParams(inout LightParams params, const in PixelInfo pixel, const in Light light)\n{\n    vec3 v = pixel.viewDir;\n    vec3 n = pixel.normalWS;\n\n    vec3 l = normalize(-light.dir);\n    params.l = l;\n\n    vec3 h = SafeNormalize(v + l);\n    params.h = h;\n    params.NoL = saturate(dot(n, l));\n    params.NoH = saturate(dot(n, h));\n    params.LoH = saturate(dot(l, h));\n    params.VoH = saturate(dot(v, h));\n\n    #ifdef CLEARCOAT\n    params.clearCoatNoL = saturate(dot(pixel.clearCoatNormal, l));\n    params.clearCoatNoH = saturate(dot(pixel.clearCoatNormal, h));\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    vec3 t = pixel.anisotropicT;\n    vec3 b = pixel.anisotropicB;\n    params.ToL = dot(t, l);\n    params.BoL = dot(b, l);\n    #endif // ANISOTROPIC\n}\n\nvec3 prefilteredDFG_LUT(float roughness, float NoV)\n{\n    vec2 samplePoint = clamp(vec2(NoV, roughness), vec2(0.0, 0.0), vec2(1.0, 1.0));\n    samplePoint.y = 1.0 - samplePoint.y;\n    #if defined(FLOATTEXTURE) && defined(FLOATTEXTURE_FIL_LINEAR)\n        return (texture2D(u_IBLDFG, samplePoint)).rgb;\n    #else\n        return decodeRGBD(texture2D(u_IBLDFG, samplePoint));\n    #endif\n}\n\nvec2 EnvBRDFApproxLazarov(float roughness, float NoV)\n{\n    vec4 c0 = vec4(-1, -0.0275, -0.572, 0.022);\n    vec4 c1 = vec4(1, 0.0425, 1.04, -0.04);\n    vec4 r = roughness * c0 + c1;\n    float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n    vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n    return AB;\n}\n\nvec3 diffuseLobe(in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    return surface.diffuseColor * diffuse();\n    // return surface.diffuseColor * diffuse() * (1.0 - F_Schlick(surface.f0, vec3(1.0, 1.0, 1.0), lightParams.VoH));\n    // return surface.diffuseColor * Fd_Burley(surface.roughness, pixel.NoV, lightParams.NoL, lightParams.LoH);\n}\n\nvec3 specularLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.roughness;\n\n    float D = distribution(roughness, lightParams.NoH, lightParams.h, pixel.normalWS);\n    float V = visibility(roughness, pixel.NoV, lightParams.NoL);\n    vec3 F = fresnel(surface.f0, lightParams.LoH);\n\n    return (D * V) * F;\n}\n\n    #ifdef CLEARCOAT\nfloat clearCoatLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.clearCoatRoughness;\n    float clearCoat = surface.clearCoat;\n    vec3 n = pixel.clearCoatNormal;\n    vec3 h = lightParams.h;\n    float LoH = lightParams.LoH;\n\n    float clearCoatNoH = lightParams.clearCoatNoH;\n\n    float D = distribution(roughness, clearCoatNoH, h, n);\n    float V = V_kelemen(LoH);\n\n    return D * V;\n}\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\nvec3 anisotropyLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float anisotropy = surface.anisotropy;\n    float at = pixel.at;\n    float ab = pixel.ab;\n    vec3 anisotropicT = pixel.anisotropicT;\n    vec3 anisotropicB = pixel.anisotropicB;\n\n    float NoV = pixel.NoV;\n    float ToV = pixel.ToV;\n    float BoV = pixel.BoV;\n\n    vec3 h = lightParams.h;\n    float NoL = lightParams.NoL;\n    float NoH = lightParams.NoH;\n    float VoH = lightParams.VoH;\n    float ToL = lightParams.ToL;\n    float BoL = lightParams.BoL;\n\n    float V = V_SmithGGXCorrelated_Anisotropic(at, ab, ToV, BoV, ToL, BoL, NoV, NoL);\n    float D = D_GGX_Anisotropic(NoH, h, anisotropicT, anisotropicB, at, ab);\n    vec3 F = fresnel(surface.f0, lightParams.LoH);\n    return V * D * F;\n}\n    #endif // ANISOTROPIC\n\nvec3 PBRLighting(const in Surface surface, const in PixelInfo pixel, const in Light light)\n{\n    LightParams lightParams;\n    initLightParams(lightParams, pixel, light);\n\n    vec3 Fd = diffuseLobe(surface, pixel, lightParams);\n\n    #ifdef ANISOTROPIC\n    vec3 Fr = anisotropyLobe(surface, pixel, lightParams);\n    #else // ANISOTROPIC\n    vec3 Fr = specularLobe(surface, pixel, lightParams);\n    #endif // ANISOTROPIC\n\n    vec3 shading = (Fd + Fr * pixel.energyCompensation) * lightParams.NoL;\n\n    #ifdef CLEARCOAT\n    float clearCoatNoL = lightParams.clearCoatNoL;\n    float LoH = lightParams.LoH;\n    // todo\n    // default IOR 1.5\n    float FccClearCoat = F_Schlick(0.04, 1.0, LoH) * surface.clearCoat;\n    float attenuation = 1.0 - FccClearCoat;\n    shading *= attenuation;\n\n    float clearcoat = clearCoatLobe(surface, pixel, lightParams) * FccClearCoat;\n    shading += clearcoat * clearCoatNoL;\n    #endif // CLEARCOAT\n\n    return shading * light.color;\n}\n\n    // gi\n    #include "PBRGI.glsl";\n\n#endif // PBRLighting_lib'),PBRShaderLib.init(),ACESShaderLib.init(),BlitScreenShaderInit.init(),UnlitShaderInit.init(),PBRStandardShaderInit.init(),BlinnPhongShaderInit.init(),TrailShaderInit.init(),ParticleShuriKenShaderInit.init(),SkyBoxShaderInit.init(),SkyProceduralShaderInit.init(),SkyPanoramicShaderInit.init(),t.Shader3D.SHADERDEFINE_LEGACYSINGALLIGHTING=t.Shader3D.getDefineByName("LEGACYSINGLELIGHTING"),t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES2=t.Shader3D.getDefineByName("GRAPHICS_API_GLES2"),t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES3=t.Shader3D.getDefineByName("GRAPHICS_API_GLES3"),t.Shader3D.SHADERDEFINE_ENUNIFORMBLOCK=t.Shader3D.getDefineByName("ENUNIFORMBLOCK"),t.Shader3D.SHADERDEFINE_FLOATTEXTURE=t.Shader3D.getDefineByName("FLOATTEXTURE"),t.Shader3D.SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR=t.Shader3D.getDefineByName("FLOATTEXTURE_FIL_LINEAR")}}class IndexBuffer3D extends t.IndexBuffer{get indexType(){return this._indexType}get indexTypeByteCount(){return this._indexTypeByteCount}get indexCount(){return this._indexCount}get canRead(){return this._canRead}constructor(e,a,r=t.BufferUsage.Static,i=!1){switch(super(t.BufferTargetType.ELEMENT_ARRAY_BUFFER,r),this._indexType=e,this._indexCount=a,this._canRead=i,e){case t.IndexFormat.UInt32:this._indexTypeByteCount=4;break;case t.IndexFormat.UInt16:this._indexTypeByteCount=2;break;case t.IndexFormat.UInt8:this._indexTypeByteCount=1;break;default:throw new Error("unidentification index type.")}var n=this._indexTypeByteCount*a;if(this._byteLength=n,this._setIndexData(n),i)switch(e){case t.IndexFormat.UInt32:this._buffer=new Uint32Array(a);break;case t.IndexFormat.UInt16:this._buffer=new Uint16Array(a);break;case t.IndexFormat.UInt8:this._buffer=new Uint8Array(a)}}setData(e,a=0,r=0,i=4294967295){var n=this._indexTypeByteCount;if(0!==r||4294967295!==i)switch(this._indexType){case t.IndexFormat.UInt32:e=new Uint32Array(e.buffer,r*n,i);break;case t.IndexFormat.UInt16:e=new Uint16Array(e.buffer,r*n,i);break;case t.IndexFormat.UInt8:e=new Uint8Array(e.buffer,r*n,i)}if(this._setIndexData(e,a*n),this._canRead)if(0!==a||0!==r||4294967295!==i){var s=this._buffer.length-a;if(i>s&&(i=s),typeof e==typeof this._buffer&&e.length==i)this._buffer.set(e,a);else for(var o=0;o<i;o++)this._buffer[a+o]=e[o]}else this._buffer=e}getData(){if(this._canRead)return this._buffer;throw new Error("Can't read data from VertexBuffer with only write flag!")}destroy(){super.destroy(),this._buffer=null,this._byteLength=0,this._indexCount=0}}class VertexBuffer3D extends t.VertexBuffer{get vertexDeclaration(){return this._vertexDeclaration}set vertexDeclaration(e){this._vertexDeclaration=e}get canRead(){return this._canRead}constructor(e,a,r=!1){super(t.BufferTargetType.ARRAY_BUFFER,a),this._float32Reader=null,this._canRead=r,this._byteLength=e,this.bind(),this._glBuffer.setDataLength(e),this._canRead&&(this._buffer=new Uint8Array(e),this._float32Reader=new Float32Array(this._buffer.buffer))}orphanStorage(){this.bind(),this._glBuffer.setDataLength(this._byteLength)}setData(e,t=0,a=0,r=Number.MAX_SAFE_INTEGER){if(this.bind(),0!==a||r!==Number.MAX_SAFE_INTEGER){var i=new Uint8Array(e,a,r);this._glBuffer.setData(i,t),this._canRead&&this._buffer.set(i,t)}else this._glBuffer.setData(e,t),this._canRead&&this._buffer.set(new Uint8Array(e),t)}getUint8Data(){if(this._canRead)return this._buffer;throw new Error("Can't read data from VertexBuffer with only write flag!")}getFloat32Data(){if(this._canRead)return this._float32Reader;throw new Error("Can't read data from VertexBuffer with only write flag!")}markAsUnreadbale(){this._canRead=!1,this._buffer=null,this._float32Reader=null}destroy(){super.destroy(),this._buffer=null,this._float32Reader=null,this._vertexDeclaration=null,this._byteLength=0}}class BoundsImpl{get min(){return this.getMin()}set min(e){this.setMin(e)}get max(){return this.getMax()}set max(e){this.setMax(e)}setMin(e){var t=this._boundBox.min;e!==t&&e.cloneTo(t),this._setUpdateFlag(BoundsImpl._UPDATE_CENTER|BoundsImpl._UPDATE_EXTENT,!0),this._setUpdateFlag(BoundsImpl._UPDATE_MIN,!1)}getMin(){var e=this._boundBox.min;return this._getUpdateFlag(BoundsImpl._UPDATE_MIN)&&(this._getMin(this.getCenter(),this.getExtent(),e),this._setUpdateFlag(BoundsImpl._UPDATE_MIN,!1)),e}setMax(e){var t=this._boundBox.max;e!==t&&e.cloneTo(t),this._setUpdateFlag(BoundsImpl._UPDATE_CENTER|BoundsImpl._UPDATE_EXTENT,!0),this._setUpdateFlag(BoundsImpl._UPDATE_MAX,!1)}getMax(){var e=this._boundBox.max;return this._getUpdateFlag(BoundsImpl._UPDATE_MAX)&&(this._getMax(this.getCenter(),this.getExtent(),e),this._setUpdateFlag(BoundsImpl._UPDATE_MAX,!1)),e}setCenter(e){e!==this._center&&e.cloneTo(this._center),this._setUpdateFlag(BoundsImpl._UPDATE_MIN|BoundsImpl._UPDATE_MAX,!0),this._setUpdateFlag(BoundsImpl._UPDATE_CENTER,!1)}getCenter(){return this._getUpdateFlag(BoundsImpl._UPDATE_CENTER)&&(this._getCenter(this.getMin(),this.getMax(),this._center),this._setUpdateFlag(BoundsImpl._UPDATE_CENTER,!1)),this._center}setExtent(e){e!==this._extent&&e.cloneTo(this._extent),this._setUpdateFlag(BoundsImpl._UPDATE_MIN|BoundsImpl._UPDATE_MAX,!0),this._setUpdateFlag(BoundsImpl._UPDATE_EXTENT,!1)}getExtent(){return this._getUpdateFlag(BoundsImpl._UPDATE_EXTENT)&&(this._getExtent(this.getMin(),this.getMax(),this._extent),this._setUpdateFlag(BoundsImpl._UPDATE_EXTENT,!1)),this._extent}constructor(e,a){this._updateFlag=0,this._center=new t.Vector3,this._extent=new t.Vector3,this._boundBox=new BoundBox(new t.Vector3,new t.Vector3),e&&e.cloneTo(this._boundBox.min),a&&a.cloneTo(this._boundBox.max),this._setUpdateFlag(BoundsImpl._UPDATE_CENTER|BoundsImpl._UPDATE_EXTENT,!0)}_getUpdateFlag(e){return 0!=(this._updateFlag&e)}_setUpdateFlag(e,t){t?this._updateFlag|=e:this._updateFlag&=~e}_getCenter(e,a,r){t.Vector3.add(e,a,r),t.Vector3.scale(r,.5,r)}_getExtent(e,a,r){t.Vector3.subtract(a,e,r),t.Vector3.scale(r,.5,r)}_getMin(e,a,r){t.Vector3.subtract(e,a,r)}_getMax(e,a,r){t.Vector3.add(e,a,r)}_rotateExtents(e,t,a){var r=e.x,i=e.y,n=e.z,s=t.elements;a.x=Math.abs(s[0]*r)+Math.abs(s[4]*i)+Math.abs(s[8]*n),a.y=Math.abs(s[1]*r)+Math.abs(s[5]*i)+Math.abs(s[9]*n),a.z=Math.abs(s[2]*r)+Math.abs(s[6]*i)+Math.abs(s[10]*n)}_tranform(e,a){var r=a._center,i=a._extent;t.Vector3.transformCoordinate(this.getCenter(),e,r),this._rotateExtents(this.getExtent(),e,i),a._boundBox.setCenterAndExtent(r,i),a._updateFlag=0}_getBoundBox(){if(this._updateFlag&BoundsImpl._UPDATE_MIN){var e=this._boundBox.min;this._getMin(this.getCenter(),this.getExtent(),e),this._setUpdateFlag(BoundsImpl._UPDATE_MIN,!1)}if(this._updateFlag&BoundsImpl._UPDATE_MAX){var t=this._boundBox.max;this._getMax(this.getCenter(),this.getExtent(),t),this._setUpdateFlag(BoundsImpl._UPDATE_MAX,!1)}return this._boundBox}calculateBoundsintersection(e){var t=this.getMax(),a=this.getMin(),r=e.getMax(),i=e.getMin(),n=Y,s=X,o=this.getExtent(),l=e.getExtent();return n.setValue(Math.max(t.x,r.x)-Math.min(a.x,i.x),Math.max(t.y,r.y)-Math.min(a.y,i.y),Math.max(t.z,r.z)-Math.min(a.z,i.z)),s.setValue(2*(o.x+l.x),2*(o.y+l.y),2*(o.z+l.z)),n.x>s.x||n.y>s.y||n.z>s.z?-1:(s.x-n.x)*(s.y-n.y)*(s.z-n.z)}cloneTo(e){var t=e;this.getMin().cloneTo(t._boundBox.min),this.getMax().cloneTo(t._boundBox.max),this.getCenter().cloneTo(t._center),this.getExtent().cloneTo(t._extent),t._updateFlag=0}clone(){var e=new BoundsImpl(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}BoundsImpl._UPDATE_MIN=1,BoundsImpl._UPDATE_MAX=2,BoundsImpl._UPDATE_CENTER=4,BoundsImpl._UPDATE_EXTENT=8;const Y=new t.Vector3,X=new t.Vector3;class BaseRenderNode{}class RenderElementBatch{constructor(){RenderElementBatch.instance=this,this._instanceBatchManager=InstanceBatchManager.instance,this._recoverList=new t.SingletonList}recoverData(){let e=this._recoverList.elements;for(let t=0,a=this._recoverList.length;t<a;t++){e[t].recover()}this._recoverList.length=0}batch(e){let a=e.length;e.length=0,this._instanceBatchManager.updateCountMark++;let r=e.elements;for(var i=0;i<a;i++){let a=e.elements[i];if(a._canBatch)if(a.staticBatch&&(!a.render._probReflection||a.render._probReflection._isScene)&&t.Config3D.enableStaticBatch)e.add(a);else if(t.Config3D.enableDynamicBatch&&t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance))if(a.renderSubShader._owner._enableInstancing&&a.render.lightmapIndex<0){var n=this._instanceBatchManager;let t=!!a.transform&&a.transform._isFrontFaceInvert;var s=n.getInstanceBatchOpaquaMark(a.render.receiveShadow,a.material.id,a._geometry._id,t,a.render._probReflection?a.render._probReflection.id:-1);if(n.updateCountMark===s.updateMark){var o=s.indexInList,l=r[o];if(s.batched){var h=l._instanceBatchElementList;h.length===SubMeshInstanceBatch.maxInstanceCount?(s.updateMark=n.updateCountMark,s.indexInList=e.length,s.batched=!1,e.add(a)):h.add(a)}else{let e=InstanceRenderElement.create();this._recoverList.add(e),e.render=l.render,e.renderType=RenderElement.RENDERTYPE_INSTANCEBATCH,e._geometry.subMesh=l._geometry,e.material=l.material,e.setTransform(null),e.renderSubShader=l.renderSubShader;let i=e._instanceBatchElementList;i.length=0,i.add(l),i.add(a),r[o]=e,s.batched=!0,e._isUpdataData=!0,e._invertFrontFace=t}}else s.updateMark=n.updateCountMark,s.indexInList=e.length,s.batched=!1,e.add(a)}else e.add(a);else e.add(a);else e.add(a)}}}class BaseRenderQueue{set sortPass(e){this._sortPass=e}constructor(e){this._isTransparent=!1,this.elements=new t.SingletonList,this._isTransparent=e,this._batch=RenderElementBatch.instance?RenderElementBatch.instance:new RenderElementBatch}set context(e){this._context=e._contextOBJ}addRenderElement(e){this.elements.add(e)}clear(){this.elements.length=0}renderQueue(e){this.context=e,this._context.applyContext(Camera._updateMark);var a=this.elements.elements;this._batchQueue();for(var r=0,i=this.elements.length;r<i;r++)a[r]._renderUpdatePre(e);this._sort();for(r=0,i=this.elements.length;r<i;r++)a[r]._render(this._context);return t.BufferState._curBindedBufferState&&t.BufferState._curBindedBufferState.unBind(),this._batch.recoverData(),i}_batchQueue(){this._isTransparent||this._batch.batch(this.elements)}_sort(){var e=this.elements.length;this._sortPass.sort(this.elements,this._isTransparent,0,e-1)}destroy(){this.elements.destroy()}}class CameraCullInfo{}class RenderElementOBJ{constructor(){this._shaderInstances=new t.SingletonList}_addShaderInstance(e){this._shaderInstances.add(e)}_clearShaderInstance(){this._shaderInstances.length=0}_render(e){var t=e.invertY,a=e.cameraUpdateMark,r=e.sceneID,i=e.sceneShaderData,n=e.cameraShaderData;if(this._isRender)for(var s=this._shaderInstances.elements,o=0,l=this._shaderInstances.length;o<l;o++){const l=s[o];if(l.complete){var h=l.bind(),c=a!==l._uploadMark,d=l._uploadScene!==r||c;if((d||h)&&(i&&l.uploadUniforms(l._sceneUniformParamsMap,i,d),l._uploadScene=r),this._renderShaderData){var u=l._uploadRender!==this._renderShaderData||c;(u||h)&&(l.uploadUniforms(l._spriteUniformParamsMap,this._renderShaderData,u),l._uploadRender=this._renderShaderData)}var _=l._uploadCameraShaderValue!==n||c;(_||h)&&(n&&l.uploadUniforms(l._cameraUniformParamsMap,n,_),l._uploadCameraShaderValue=n);var m=l._uploadMaterial!==this._materialShaderData||c;(m||h)&&(l.uploadUniforms(l._materialUniformParamsMap,this._materialShaderData,m),l._uploadMaterial=this._materialShaderData,e.globalShaderData&&l.uploadUniforms(l._materialUniformParamsMap,e.globalShaderData,m)),l.uploadRenderStateBlendDepth(this._materialShaderData),l.uploadRenderStateFrontFace(this._materialShaderData,t,this._invertFront),this.drawGeometry(l)}}}drawGeometry(e){t.LayaGL.renderDrawContext.drawGeometryElement(this._geometry)}_destroy(){this._geometry=null,this._shaderInstances=null,this._materialShaderData=null,this._renderShaderData=null,this._transform=null,this._isRender=null}}class InstanceRenderElementOBJ extends RenderElementOBJ{addUpdateBuffer(e,t){this._vertexBuffer3D[this.updateNums]=e,this._updateDataNum[this.updateNums++]=t}getUpdateData(e,t){let a=this._updateData[e];return(!a||a.length<t)&&(a=this._updateData[e]=new Float32Array(t)),a}constructor(){super(),this._vertexBuffer3D=[],this._updateData=[],this._updateDataNum=[]}drawGeometry(e){let a,r;for(let e=0;e<this.updateNums&&(r=this._vertexBuffer3D[e],r);e++)a=this._updateData[e],r.orphanStorage(),r.setData(a.buffer,0,0,this.drawCount*this._updateDataNum[e]*4);t.LayaGL.renderDrawContext.drawGeometryElement(this._geometry)}clear(){this.updateNums=0}}class QuickSort{sort(e,t,a,r){this.elementArray=e,this.isTransparent=t,this._quickSort(a,r)}_quickSort(e,t){if(this.elementArray.length>1){var a=this._partitionRenderObject(e,t),r=a-1;e<r&&this._quickSort(e,r),a<t&&this._quickSort(a,t)}}_partitionRenderObject(e,t){for(var a=this.elementArray.elements,r=a[Math.floor((t+e)/2)];e<=t;){for(;this._compare(a[e],r)<0;)e++;for(;this._compare(a[t],r)>0;)t--;if(e<t){var i=a[e];a[e]=a[t],a[t]=i,e++,t--}else if(e===t){e++;break}}return e}_compare(e,t){var a=e.material.renderQueue-t.material.renderQueue;return 0===a?(this.isTransparent?t.render.distanceForSort-e.render.distanceForSort:e.render.distanceForSort-t.render.distanceForSort)+t.render.sortingFudge-e.render.sortingFudge:a}}class RenderContext3DOBJ{constructor(){this.invertY=!1,this.viewPort=new Viewport(0,0,0,0),this.scissor=new t.Vector4,this.pipelineMode="Forward"}applyContext(e){this.destTarget&&this.destTarget._start(),this.cameraUpdateMark=e,t.LayaGL.renderEngine.viewport(this.viewPort.x,this.viewPort.y,this.viewPort.width,this.viewPort.height),t.LayaGL.renderEngine.scissor(this.scissor.x,this.scissor.y,this.scissor.z,this.scissor.w)}drawRenderElement(e){e._render(this)}}class RenderGeometryElementOBJ{constructor(e,a){this.mode=e,this.drawParams=new t.SingletonList,this.drawType=a}setDrawArrayParams(e,t){this.drawParams.add(e),this.drawParams.add(t)}setDrawElemenParams(e,t){this.drawParams.add(t),this.drawParams.add(e)}destroy(){}clearRenderParams(){this.drawParams.length=0}}class SceneRenderManagerOBJ{constructor(){this._renders=new t.SingletonList,this._motionRenders=new t.SingletonList}get list(){return this._renders}set list(e){this._renders=e}addRenderObject(e){this._renders.add(e)}removeRenderObject(e){this._renders.remove(e),this.removeMotionObject(e)}removeMotionObject(e){let t=e._motionIndexList;if(-1!=t){let e=this._motionRenders.elements;this._motionRenders.length-=1,e[length]._motionIndexList=t,e[t]=e[length]}}updateMotionObjects(){for(let e=0;e<this._motionRenders.length;e++)this._motionRenders.elements[e].bounds,this._motionRenders.elements[e]._motionIndexList=-1;this._motionRenders.length=0}addMotionObject(e){-1==e._motionIndexList&&(e._motionIndexList=this._motionRenders.length,this._motionRenders.add(e))}destroy(){this._renders.destroy()}}class ShadowCullInfo{}class SkinRenderElementOBJ extends RenderElementOBJ{constructor(){super()}drawGeometry(e){let a=this._shaderInstances.length,r=this._geometry.drawParams.elements;if(this.skinnedData){this._geometry.bufferState.bind();for(var i=0,n=a;i<n;i++)for(var s=0,o=this._geometry.drawParams.length/2;s<o;s++){var l=this.skinnedData[s];e.uploadCustomUniform(SkinnedMeshSprite3D.BONES,l);var h=2*s;t.LayaGL.renderDrawContext.drawElements(this._geometry.mode,r[h+1],this._geometry.indexFormat,r[h])}}}}class RenderOBJCreateUtil{constructor(){this.globalBlockMap={}}createTransform(e){return new Transform3D(e)}createBounds(e,t){return new BoundsImpl(e,t)}createShaderData(){return new t.ShaderData}createRenderElement(){return new RenderElementOBJ}createSkinRenderElement(){return new SkinRenderElementOBJ}createInstanceRenderElement(){return new InstanceRenderElementOBJ}createBaseRenderQueue(e){var t=new BaseRenderQueue(e);return t.sortPass=this.createSortPass(),t}createRenderGeometry(e,t){return new RenderGeometryElementOBJ(e,t)}createVertexBuffer3D(e,t,a=!1){return new VertexBuffer3D(e,t,a)}createIndexBuffer3D(e,a,r=t.BufferUsage.Static,i=!1){return new IndexBuffer3D(e,a,r,i)}createShaderInstance(e,a,r,i){return new t.ShaderInstance(e,a,r,i)}createBaseRenderNode(){return new BaseRenderNode}createRenderContext3D(){return new RenderContext3DOBJ}createSceneRenderManager(){return new SceneRenderManagerOBJ}createCullPass(){return new CullPassBase}createSortPass(){return new QuickSort}createShadowCullInfo(){return new ShadowCullInfo}createCameraCullInfo(){return new CameraCullInfo}createRenderStateComand(){return new t.RenderStateCommand}createRenderState(){return new t.RenderState}createUniformBufferObject(e,a,r,i,n){return new t.UniformBufferObject(e,a,r,i,n)}createGlobalUniformMap(e){let a=this.globalBlockMap[e];return a||(a=this.globalBlockMap[e]=new t.CommandUniformMap(e)),a}}class NativeBaseRenderNode{constructor(){this._bounds=null,this._geometryBounds=null,this._transform=null,this._nativeObj=new window.conchRenderNode}set boundsChange(e){this._nativeObj.boundsChange=e}get boundsChange(){return this._nativeObj.boundsChange}set layer(e){this._nativeObj.layer=e}get layer(){return this._nativeObj.layer}get renderId(){return this._nativeObj.renderId}set renderId(e){this._nativeObj.renderId=e}get receiveShadow(){return this._nativeObj.receiveShadow}set receiveShadow(e){this._nativeObj.receiveShadow=e}get castShadow(){return this._nativeObj.castShadow}set castShadow(e){this._nativeObj.castShadow=e}get bounds(){return this._bounds}set bounds(e){this._bounds=e,this._nativeObj.bounds=e._imp._nativeObj}get distanceForSort(){return this._nativeObj.distanceForSort}set distanceForSort(e){this._nativeObj.distanceForSort=e}get transform(){return this._transform}set transform(e){this._transform=e,this._nativeObj.transform=e?e._nativeObj:null}get owner(){return this._nativeObj.owner}set owner(e){this._nativeObj.owner=e}get geometryBounds(){return this._geometryBounds}set geometryBounds(e){this._geometryBounds=e,this._nativeObj.geometryBounds=e._imp._nativeObj}get renderbitFlag(){return this._nativeObj.renderbitFlag}set renderbitFlag(e){this._nativeObj.renderbitFlag=e}get staticMask(){return this._nativeObj.staticMask}set staticMask(e){this._nativeObj.staticMask=e}}class NativeBaseRenderQueue{set sortPass(e){this._nativeObj.sortPass=e}constructor(e){this._isTransparent=!1,this.elements=new t.SingletonList,this._isTransparent=e,this._nativeObj=new window.conchRenderQueue(e),this._batch=RenderElementBatch.instance?RenderElementBatch.instance:new RenderElementBatch}destroy(){this._nativeObj.destroy()}set context(e){this._context=e._contextOBJ}addRenderElement(e){this.elements.add(e)}clear(){this._nativeObj.clear(),this.elements.length=0}renderQueue(e){this.context=e,this._context.applyContext(Camera._updateMark);var a=this.elements.elements;this._batchQueue(),this._nativeObj.clear();for(var r=0,i=this.elements.length;r<i;r++){var n=a[r];this._nativeObj.addRenderElement(n._renderElementOBJ._nativeObj,n.render.renderNode._nativeObj,n.material.renderQueue,n.render.sortingFudge),n._renderUpdatePre(e)}return t.UploadMemoryManager.syncRenderMemory(),t.BufferState._curBindedBufferState&&t.BufferState._curBindedBufferState.unBind(),this._nativeObj.renderQueue(this._context._nativeObj),this._batch.recoverData(),i}_batchQueue(){this._isTransparent||this._batch.batch(this.elements)}}class NativeBounds{get min(){return this.getMin()}set min(e){this.setMin(e)}get max(){return this.getMax()}set max(e){this.setMax(e)}setMin(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setMin()}getMin(){var e=this._boundBox.min;return this._nativeObj.getMin(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}setMax(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setMax()}getMax(){var e=this._boundBox.max;return this._nativeObj.getMax(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}setCenter(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setCenter()}getCenter(){var e=this._center;return this._nativeObj.getCenter(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}setExtent(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setExtent()}getExtent(){var e=this._extent;return this._nativeObj.getExtent(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}constructor(e,a){this._center=new t.Vector3,this._extent=new t.Vector3,this._boundBox=new BoundBox(new t.Vector3,new t.Vector3),this.nativeMemory=new t.NativeMemory(NativeBounds.MemoryBlock_size,!0),this.float32Array=this.nativeMemory.float32Array,this.float64Array=this.nativeMemory.float64Array,this._nativeObj=new window.conchBounds(this.nativeMemory._buffer),e&&this.setMin(e),a&&this.setMax(a)}_tranform(e,t){this.float32Array.set(e.elements),this._nativeObj._tranform(t._nativeObj)}_getBoundBox(){return this._nativeObj._getBoundBox(),this._boundBox.min.x=this.float64Array[0],this._boundBox.min.y=this.float64Array[1],this._boundBox.min.z=this.float64Array[2],this._boundBox.max.x=this.float64Array[3],this._boundBox.max.y=this.float64Array[4],this._boundBox.max.z=this.float64Array[5],this._boundBox}calculateBoundsintersection(e){var t=this.getMax(),a=this.getMin(),r=e.getMax(),i=e.getMin(),n=Q,s=K,o=this.getExtent(),l=e.getExtent();return n.setValue(Math.max(t.x,r.x)-Math.min(a.x,i.x),Math.max(t.y,r.y)-Math.min(a.y,i.y),Math.max(t.z,r.z)-Math.min(a.z,i.z)),s.setValue(2*(o.x+l.x),2*(o.y+l.y),2*(o.z+l.z)),n.x>s.x||n.y>s.y||n.z>s.z?-1:(s.x-n.x)*(s.y-n.y)*(s.z-n.z)}cloneTo(e){var t=e;this._nativeObj.cloneTo(t._nativeObj)}clone(){var e=new NativeBounds(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}NativeBounds.MemoryBlock_size=Math.max(48,64);const Q=new t.Vector3,K=new t.Vector3;class NativeCameraCullInfo{constructor(){this.nativeMemory=new t.NativeMemory(NativeCameraCullInfo.MemoryBlock_size,!0),this.float64Array=this.nativeMemory.float64Array,this._nativeObj=new window.conchCameraCullInfo(this.nativeMemory._buffer)}set position(e){this._position=e,this._nativeObj.setPosition(e.x,e.y,e.z)}get position(){return this._position}set useOcclusionCulling(e){this._useOcclusionCulling=e,this._nativeObj.useOcclusionCulling=e}get useOcclusionCulling(){return this._useOcclusionCulling}set cullingMask(e){this._cullingMask=e,this._nativeObj.cullingMask=e}get cullingMask(){return this._cullingMask}set staticMask(e){this._staticMask=e,this._nativeObj.staticMask=e}get staticMask(){return this._staticMask}serialize(){this.boundFrustum&&(this.setPlane(0,this.boundFrustum.near),this.setPlane(4,this.boundFrustum.far),this.setPlane(8,this.boundFrustum.left),this.setPlane(12,this.boundFrustum.right),this.setPlane(16,this.boundFrustum.top),this.setPlane(20,this.boundFrustum.bottom),this._nativeObj.setBoundFrustum())}setPlane(e,t){this.float64Array[e]=t.normal.x,this.float64Array[e+1]=t.normal.y,this.float64Array[e+2]=t.normal.z,this.float64Array[e+3]=t.distance}}NativeCameraCullInfo.MemoryBlock_size=192;class NativeCommandUniformMap extends t.CommandUniformMap{constructor(e,t){super(t),this._nativeObj=e}hasPtrID(e){return this._nativeObj.hasPtrID(e)}getMap(){return this._idata}addShaderUniform(e,t){this._idata[e]=t,this._nativeObj.addShaderUniform(e,t)}}class NativeCullPassBase{get cullList(){return this._tempRenderList.elements=this._nativeObj.cullList,this._tempRenderList.length=this._nativeObj.cullList.length,this._tempRenderList}constructor(){this._nativeObj=new window.conchCullPass,this._tempRenderList=new t.SingletonList}cullByCameraCullInfo(e,a){e.serialize(),t.Stat.frustumCulling+=this._nativeObj.cullByCameraCullInfo(e._nativeObj,a._sceneManagerOBJ._nativeObj);var r=a._sceneManagerOBJ._customCullList,i=e.boundFrustum,n=e.cullingMask;let s=e.staticMask;var o=r.elements;let l=RenderContext3D._instance;for(var h=0,c=r.length;h<c;h++){var d=o[h];0!=Math.pow(2,d.renderNode.layer&n)&&d._enabled&&0==d.renderbitFlag&&0!=(d.renderNode.staticMask&s)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!d._needRender(i,l)||this._nativeObj.cullList.push(d))}}cullByShadowCullInfo(e,a){t.Stat.frustumCulling+=this._nativeObj.cullByShadowCullInfo(e._nativeObj,a._sceneManagerOBJ._nativeObj);for(var r=a._sceneManagerOBJ._customCullList,i=r.elements,n=0,s=r.length;n<s;n++){var o=i[n];if(o.castShadow&&o._enabled&&0==o.renderbitFlag){t.Stat.frustumCulling++,FrustumCulling.cullingRenderBounds(o.bounds,e)&&this._nativeObj.cullList.push(o)}}}cullingSpotShadow(e,a){e.serialize(),t.Stat.frustumCulling+=this._nativeObj.cullingSpotShadow(e._nativeObj,a._sceneManagerOBJ._nativeObj);var r=a._sceneManagerOBJ._customCullList,i=r.elements;let n=RenderContext3D._instance;for(var s=0,o=r.length;s<o;s++){var l;if((l=i[s]).castShadow&&l._enabled&&0==l.renderbitFlag)t.Stat.frustumCulling++,(l=i[s])._needRender(e.boundFrustum,n)&&this._nativeObj.cullList.push(l)}}}class NativeIndexBuffer3D extends IndexBuffer3D{constructor(e,a,r=t.BufferUsage.Static,i=!1){super(e,a,r,i),this._conchIndexBuffer3D=null,this._conchIndexBuffer3D=new window.conchIndexBuffer3D(t.LayaGL.renderEngine._nativeObj,e,a,r,!1),this._conchIndexBuffer3D.setGLBuffer(this._glBuffer)}}var j,J,Z;e.RenderElementType=void 0,(j=e.RenderElementType||(e.RenderElementType={}))[j.Base=0]="Base",j[j.Skin=1]="Skin",j[j.Instance=2]="Instance";class NativeRenderElementOBJ{set _geometry(e){this.geometry=e,this._nativeObj._geometry=e._nativeObj}get _geometry(){return this.geometry}set _materialShaderData(e){this.materialShaderData=e,this._nativeObj._materialShaderData=e?e._nativeObj:null}get _materialShaderData(){return this.materialShaderData}set _renderShaderData(e){this.renderShaderData=e,this._nativeObj._renderShaderData=e?e._nativeObj:null}get _renderShaderData(){return this.renderShaderData}set _transform(e){this.transform=e,this._nativeObj._transform=e?e._nativeObj:null}get _transform(){return this.transform}get _isRender(){return this._nativeObj._isRender}set _isRender(e){this._nativeObj._isRender=e}get _invertFront(){return this._nativeObj._invertFront}set _invertFront(e){this._nativeObj._invertFront=e}constructor(){this._shaderInstances=new t.SingletonList,this.init()}init(){this._nativeObj=new window.conchRenderElement(e.RenderElementType.Base,t.LayaGL.renderEngine._nativeObj)}_addShaderInstance(e){this._shaderInstances.add(e),this._nativeObj._addShaderInstance(e._nativeObj)}_clearShaderInstance(){this._shaderInstances.length=0,this._nativeObj._clearShaderInstance()}_render(e){this._nativeObj._render(e._nativeObj)}_destroy(){this._nativeObj._destroy(),this.geometry=null,this._shaderInstances=null,this.materialShaderData=null,this.renderShaderData=null,this.transform=null}}class NativeInstanceRenderElementOBJ extends NativeRenderElementOBJ{addUpdateBuffer(e,t){this._vertexBuffer3D[this._updateNums++]=e,this._nativeObj.addUpdateBuffer(e._conchVertexBuffer3D,t)}getUpdateData(e,t){let a=this._updateData[e];return(!a||a.length<t)&&(a=this._updateData[e]=new Float32Array(t),this._nativeObj.getUpdateData(e,a)),a}constructor(){super(),this._vertexBuffer3D=[],this._updateData=[]}clear(){this._updateNums=0,this._nativeObj.clear()}init(){this._nativeObj=new window.conchRenderElement(e.RenderElementType.Instance,t.LayaGL.renderEngine._nativeObj)}set drawCount(e){this._nativeObj.drawCount=e}get drawCount(){return this._nativeObj.drawCount}}class NativeRenderContext3DOBJ{constructor(){this._viewPort=new Viewport(0,0,0,0),this._scissor=new t.Vector4,this._nativeObj=new window.conchRenderContext3D(t.LayaGL.renderEngine._nativeObj)}drawRenderElement(e){t.UploadMemoryManager.syncRenderMemory(),e._render(this)}applyContext(e){this._nativeObj.changeViewport(this._viewPort.x,this._viewPort.y,this._viewPort.width,this._viewPort.height),this._nativeObj.changeScissor(this._scissor.x,this._scissor.y,this._scissor.z,this._scissor.w),this.destTarget&&this.destTarget._start(),this._nativeObj.applyContext(e)}set destTarget(e){this._destTarget=e,this._nativeObj.destTarget=e?e._renderTarget:null}get destTarget(){return this._destTarget}set viewPort(e){this._viewPort=e,this._nativeObj.changeViewport(e.x,e.y,e.width,e.height)}get viewPort(){return this._viewPort}set scissor(e){this._scissor=e,this._nativeObj.changeScissor(e.x,e.y,e.z,e.w)}get scissor(){return this._scissor}set invertY(e){this._nativeObj.invertY=e}get invertY(){return this._nativeObj.invertY}set pipelineMode(e){this._nativeObj.pipelineMode=e}get pipelineMode(){return this._nativeObj.pipelineMode}set globalShaderData(e){this._globalShaderData=e,this._nativeObj.globalShaderData=e?e._nativeObj:null}get globalShaderData(){return this._globalShaderData}set sceneShaderData(e){this._sceneShaderData=e,this._nativeObj.sceneShaderData=e?e._nativeObj:null}get sceneShaderData(){return this._sceneShaderData}set cameraShaderData(e){this._cameraShaderData=e,this._nativeObj.cameraShaderData=e?e._nativeObj:null}get cameraShaderData(){return this._cameraShaderData}set sceneID(e){this._nativeObj.sceneID=e}get sceneID(){return this._nativeObj.sceneID}set cameraUpdateMark(e){this._nativeObj.cameraUpdateMark=e}get cameraUpdateMark(){return this._nativeObj.cameraUpdateMark}}class NativeRenderGeometryElementOBJ{constructor(e,a){this._nativeObj=new window.conchRenderGeometryElement(e,a),this.drawParams=new t.SingletonList}setDrawArrayParams(e,t){this.drawParams.add(e),this.drawParams.add(t),this._nativeObj.setDrawArrayParams(e,t)}setDrawElemenParams(e,t){this.drawParams.add(t),this.drawParams.add(e),this._nativeObj.setDrawElemenParams(e,t)}destroy(){this._nativeObj.destroy()}clearRenderParams(){this.drawParams.length=0,this._nativeObj.clearRenderParams()}set bufferState(e){this._bufferState=e,this._nativeObj.bufferState=e?e._nativeVertexArrayObject._nativeObj:null}get bufferState(){return this._bufferState}set mode(e){this._nativeObj.mode=e}get mode(){return this._nativeObj.mode}set drawType(e){this._nativeObj.drawType=e}get drawType(){return this._nativeObj.drawType}set instanceCount(e){this._nativeObj.instanceCount=e}get instanceCount(){return this._nativeObj.instanceCount}set indexFormat(e){this._nativeObj.indexFormat=e}get indexFormat(){return this._nativeObj.indexFormat}}class NativeRenderState{set cull(e){this._nativeObj.cull=e}get cull(){return this._nativeObj.cull}set blend(e){this._nativeObj.blend=e}get blend(){return this._nativeObj.blend}set srcBlend(e){this._nativeObj.srcBlend=e}get srcBlend(){return this._nativeObj.srcBlend}set dstBlend(e){this._nativeObj.dstBlend=e}get dstBlend(){return this._nativeObj.dstBlend}set srcBlendRGB(e){this._nativeObj.srcBlendRGB=e}get srcBlendRGB(){return this._nativeObj.srcBlendRGB}set dstBlendRGB(e){this._nativeObj.dstBlendRGB=e}get dstBlendRGB(){return this._nativeObj.dstBlendRGB}set srcBlendAlpha(e){this._nativeObj.srcBlendAlpha=e}get srcBlendAlpha(){return this._nativeObj.srcBlendAlpha}set dstBlendAlpha(e){this._nativeObj.dstBlendAlpha=e}get dstBlendAlpha(){return this._nativeObj.dstBlendAlpha}set blendEquation(e){this._nativeObj.blendEquation=e}get blendEquation(){return this._nativeObj.blendEquation}set blendEquationRGB(e){this._nativeObj.blendEquationRGB=e}get blendEquationRGB(){return this._nativeObj.blendEquationRGB}set blendEquationAlpha(e){this._nativeObj.blendEquationAlpha=e}get blendEquationAlpha(){return this._nativeObj.blendEquationAlpha}set depthTest(e){this._nativeObj.depthTest=e}get depthTest(){return this._nativeObj.depthTest}set depthWrite(e){this._nativeObj.depthWrite=e}get depthWrite(){return this._nativeObj.depthWrite}set stencilWrite(e){this._nativeObj.stencilWrite=e}get stencilWrite(){return this._nativeObj.stencilWrite}set stencilTest(e){this._nativeObj.stencilTest=e}get stencilTest(){return this._nativeObj.stencilTest}set stencilRef(e){this._nativeObj.stencilRef=e}get stencilRef(){return this._nativeObj.stencilRef}set stencilOp(e){this._nativeObj.setStencilOp(e.x,e.y,e.z)}setNull(){this._nativeObj.setNull()}constructor(){this._nativeObj=new window.conchRenderState}}class NativeSceneRenderManager{constructor(){this._renders=new t.SingletonList,this._customUpdateList=new t.SingletonList,this._customCullList=new t.SingletonList,this._nativeObj=new window.conchSceneCullManger}get list(){return this._renders}set list(e){this._customCullList.elements=[],this._customCullList.length=0,this._nativeObj.clear(),this._renders.clear();for(let t=0,a=e.length;t<a;t++)this.addRenderObject(e.elements[t])}addRenderObject(e){this._renders.add(e),!e._customCull&&e.renderNode.geometryBounds?this._nativeObj.addRenderObject(e.renderNode._nativeObj):this._customCullList.add(e)}removeRenderObject(e){if(!e._customCull&&e.renderNode.geometryBounds)this._nativeObj.removeRenderObject(e.renderNode._nativeObj);else{let t=this._customCullList.elements,a=t.indexOf(e);a<this._customCullList.length&&(this._customCullList.length-=1,t[a]=t[this._customCullList.length])}this._renders.remove(e),this.removeMotionObject(e)}removeMotionObject(e){if(e.renderNode.geometryBounds)this._nativeObj.removeMotionObject(e.renderNode._nativeObj);else{let t=e._motionIndexList;if(-1!=t){let e=this._customUpdateList.elements;this._customUpdateList.length-=1,e[length]._motionIndexList=t,e[t]=e[length]}}}updateMotionObjects(){this._nativeObj.updateMotionObjects();for(let e=0;e<this._customUpdateList.length;e++)this._customUpdateList.elements[e].bounds,this._customUpdateList.elements[e]._motionIndexList=-1;this._customUpdateList.length=0}addMotionObject(e){e.renderNode.geometryBounds?this._nativeObj.addMotionObject(e.renderNode._nativeObj):-1==e._motionIndexList&&(e._motionIndexList=this._customUpdateList.length,this._customUpdateList.add(e))}destroy(){this._nativeObj.destroy(),this._renders.destroy(),this._customUpdateList.destroy(),this._customCullList.destroy()}}e.NativeShaderDataType=void 0,(J=e.NativeShaderDataType||(e.NativeShaderDataType={}))[J.Number32=0]="Number32",J[J.Vector2=1]="Vector2",J[J.Vector3=2]="Vector3",J[J.Vector4=3]="Vector4",J[J.Matrix4x4=4]="Matrix4x4",J[J.Number32Array=5]="Number32Array",J[J.Texture=6]="Texture",J[J.ShaderDefine=7]="ShaderDefine",J[J.UBO=8]="UBO";class NativeShaderData extends t.ShaderData{constructor(e=null){super(e),this.inUploadList=!1,this.payload32bitNum=0,this._initData(),this._nativeObj=new window.conchShaderData,this.nativeObjID=this._nativeObj.nativeID,this._dataType=t.MemoryDataType.ShaderData,this.updateMap=new Map,this.updataSizeMap=new Map}getUploadMemoryLength(){return this.updataSizeMap.forEach((e=>{this.payload32bitNum+=e})),4*(this.payload32bitNum+4)}uploadDataTOShareMemory(e,a){if(!this._data)return!1;let r=e.int32Array,i=a/4;return r[i++]=t.MemoryDataType.ShaderData,r[i++]=this.nativeObjID,r[i++]=this.payload32bitNum,r[i++]=this.updateMap.size,this.updateMap.forEach(((t,a)=>{i+=t.call(this,a,e,i)})),this.clearUpload(),this.inUploadList=!1,!0}clearUpload(){this.payload32bitNum=0,this.updataSizeMap.clear(),this.updateMap.clear()}compressNumber(t,a,r){return a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.Number32,a.float32Array[r+2]=this._data[t],3}compressVector2(t,a,r){a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.Vector2;var i=this._data[t];return a.float32Array[r+2]=i.x,a.float32Array[r+3]=i.y,4}compressVector3(t,a,r){a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.Vector3;var i=this._data[t];return a.float32Array[r+2]=i.x,a.float32Array[r+3]=i.y,a.float32Array[r+4]=i.z,5}compressVector4(t,a,r){a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.Vector4;var i=this._data[t];return a.float32Array[r+2]=i.x,a.float32Array[r+3]=i.y,a.float32Array[r+4]=i.z,a.float32Array[r+5]=i.w,6}compressMatrix4x4(t,a,r){a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.Matrix4x4;var i=this._data[t];return a.float32Array.set(i.elements,r+2),18}compressNumberArray(t,a,r){a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.Number32Array;var i=this._data[t];return a.int32Array[r+2]=i.length,a.float32Array.set(i,r+3),i.length+3}compressTexture(a,r,i){var n=this._data[a];return r.int32Array[i]=a,r.int32Array[i+1]=e.NativeShaderDataType.Texture,n&&n instanceof t.Texture?r.int32Array[i+2]=n.bitmap._texture.id:n&&n._texture?r.int32Array[i+2]=n._texture.id:r.int32Array[i+2]=t.Texture2D.errorTexture._texture.id,3}compressUBO(t,a,r){var i=this._data[t];return a.int32Array[r]=t,a.int32Array[r+1]=e.NativeShaderDataType.UBO,a.int32Array[r+2]=i._conchUniformBufferObject.nativeID,3}configMotionProperty(e,a,r){this.updateMap.set(e,r),this.updataSizeMap.set(e,a),this.inUploadList||(this.inUploadList=!0,t.UploadMemoryManager.getInstance()._dataNodeList.add(this))}setBool(e,t){super.setBool(e,t),this.configMotionProperty(e,3,this.compressNumber)}setInt(e,t){super.setInt(e,t),this.configMotionProperty(e,3,this.compressNumber)}setNumber(e,t){super.setNumber(e,t),this.configMotionProperty(e,3,this.compressNumber)}setVector2(e,t){super.setVector2(e,t),this.configMotionProperty(e,4,this.compressVector2)}setVector3(e,t){super.setVector3(e,t),this.configMotionProperty(e,5,this.compressVector3)}setVector(e,t){super.setVector(e,t),this.configMotionProperty(e,6,this.compressVector4)}setColor(e,t){super.setColor(e,t),this.configMotionProperty(e,6,this.compressVector4)}setMatrix4x4(e,t){super.setMatrix4x4(e,t),this.configMotionProperty(e,18,this.compressMatrix4x4)}setBuffer(e,t){super.setBuffer(e,t),this.configMotionProperty(e,3+t.length,this.compressNumberArray)}setTexture(e,t){super.setTexture(e,t),this.configMotionProperty(e,3,this.compressTexture)}setUniformBuffer(e,t){this._data[e]=t,this.configMotionProperty(e,3,this.compressUBO)}setValueData(e,a){"boolean"==typeof a?this.setBool(e,a):"number"==typeof a?this.setNumber(e,a):a instanceof t.Color?this.setColor(e,a):a instanceof t.Vector2?this.setVector2(e,a):a instanceof t.Vector3?this.setVector3(e,a):a instanceof t.Vector4||a instanceof t.Quaternion?this.setVector(e,a):a instanceof t.Matrix4x4?this.setMatrix4x4(e,a):null!=a.ArrayBuffer?this.setBuffer(e,a):null!=a._texture&&this.setTexture(e,a)}cloneTo(e){var a=e;for(var r in this._data){var i=this._data[r];null!=i&&("boolean"==typeof i?e.setBool(r,i):"number"==typeof i?e.setNumber(r,i):i instanceof t.Vector2?e.setVector2(r,i):i instanceof t.Vector3?e.setVector3(r,i):i instanceof t.Vector4?e.setVector(r,i):i instanceof t.Matrix4x4?e.setMatrix4x4(r,i):i instanceof t.BaseTexture&&e.setTexture(r,i))}this._defineDatas.cloneTo(a._defineDatas),this._gammaColorMap.forEach(((t,a)=>{e._gammaColorMap.set(a,t.clone())}))}clone(){var e=new NativeShaderData;return this.cloneTo(e),e}destroy(){super.destroy(),this._nativeObj.destroy(),this._nativeObj=null}}!function(e){e[e.Scene=0]="Scene",e[e.Camera=1]="Camera",e[e.Sprite=2]="Sprite",e[e.Material=3]="Material"}(Z||(Z={}));class NativeShaderInstance{constructor(e,a,r,i){this._shaderPass=i;var n=new window.conchAttributeMap;for(var s in r)n.setAttributeValue(s,r[s][0]);var o=t.SubShader.StateParamsMap;for(var l in o)n.setStateValue(parseInt(l),o[l]);n.statefirst=this._shaderPass.statefirst;var h=i.renderState;this._nativeObj=new window.conchShaderInstance(t.LayaGL.renderEngine._nativeObj,e,a,n,h._nativeObj)}_disposeResource(){this._nativeObj.destroy()}bind(){return this._nativeObj.bind()}uploadUniforms(e,t,a){this._nativeObj.uploadUniforms(e,t._nativeObj,a)}uploadCustomUniform(e,t){this._nativeObj.uploadCustomUniforms(e,t)}get _sceneUniformParamsMap(){return Z.Scene}get _cameraUniformParamsMap(){return Z.Camera}get _spriteUniformParamsMap(){return Z.Sprite}get _materialUniformParamsMap(){return Z.Material}uploadRenderStateBlendDepth(e){this._nativeObj.uploadRenderStateBlendDepth(e._nativeObj)}uploadRenderStateFrontFace(e,t,a){this._nativeObj.uploadRenderStateFrontFace(e._nativeObj,t,a)}}class NativeShadowCullInfo{constructor(){this.nativeMemory=new t.NativeMemory(NativeShadowCullInfo.MemoryBlock_size,!0),this.float64Array=this.nativeMemory.float64Array,this._nativeObj=new window.conchShadowCullInfo(this.nativeMemory._buffer)}set cullPlanes(e){this._cullPlanes=e,this._nativeObj.clearCullPlanes(),e.forEach((e=>{this.float64Array[0]=e.normal.x,this.float64Array[1]=e.normal.y,this.float64Array[2]=e.normal.z,this.float64Array[3]=e.distance,this._nativeObj.addCullPlane()}))}get cullPlanes(){return this._cullPlanes}set cullSphere(e){this._cullSphere=e,this.float64Array[0]=e.center.x,this.float64Array[1]=e.center.y,this.float64Array[2]=e.center.z,this.float64Array[3]=e.radius,this._nativeObj.setCullSphere()}get cullSphere(){return this._cullSphere}set position(e){this._position=e,this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setPosition()}get position(){return this._position}set direction(e){this._direction=e,this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setDirection()}get direction(){return this._direction}set cullPlaneCount(e){this._cullPlaneCount=e,this._nativeObj.cullPlaneCount=e}get cullPlaneCount(){return this._cullPlaneCount}}NativeShadowCullInfo.MemoryBlock_size=32;class NativeSkinRenderElementOBJ extends NativeRenderElementOBJ{constructor(){super()}get skinnedData(){return this._skinnedData}set skinnedData(e){this._skinnedData=e,this._nativeObj._skinnedData=e}init(){this._nativeObj=new window.conchRenderElement(e.RenderElementType.Skin,t.LayaGL.renderEngine._nativeObj)}}class NativeTransform3D extends Transform3D{get _isFrontFaceInvert(){return this._nativeObj._isFrontFaceInvert}get owner(){return this._owner}get localPositionX(){return this.localPosition.x}set localPositionX(e){this._localPosition.x=e,this.localPosition=this._localPosition}get localPositionY(){return this.localPosition.y}set localPositionY(e){this._localPosition.y=e,this.localPosition=this._localPosition}get localPositionZ(){return this.localPosition.z}set localPositionZ(e){this._localPosition.z=e,this.localPosition=this._localPosition}get localPosition(){return this._nativeObj.getLocalPosition()&&(this._localPosition.x=this.float64Array[0],this._localPosition.y=this.float64Array[1],this._localPosition.z=this.float64Array[2]),this._localPosition}set localPosition(e){this._localPosition.x=this.float64Array[0]=e.x,this._localPosition.y=this.float64Array[1]=e.y,this._localPosition.z=this.float64Array[2]=e.z,this._nativeObj.setLocalPosition()}get localRotationX(){return this.localRotation.x}set localRotationX(e){let t=this.localRotation;t.x=e,this.localRotation=t}get localRotationY(){return this.localRotation.y}set localRotationY(e){let t=this.localRotation;t.y=e,this.localRotation=t}get localRotationZ(){return this.localRotation.z}set localRotationZ(e){let t=this.localRotation;t.z=e,this.localRotation=t}get localRotationW(){return this.localRotation.w}set localRotationW(e){let t=this.localRotation;t.w=e,this.localRotation=t}get localRotation(){return this._nativeObj.getLocalRotation()&&(this._localRotation.x=this.float64Array[0],this._localRotation.y=this.float64Array[1],this._localRotation.z=this.float64Array[2],this._localRotation.w=this.float64Array[3]),this._localRotation}set localRotation(e){this._localRotation.x=this.float64Array[0]=e.x,this._localRotation.y=this.float64Array[1]=e.y,this._localRotation.z=this.float64Array[2]=e.z,this._localRotation.w=this.float64Array[3]=e.w,this._nativeObj.setLocalRotation()}get localScaleX(){return this.localScale.x}set localScaleX(e){this._localScale.x=e,this.localScale=this._localScale}get localScaleY(){return this.localScale.y}set localScaleY(e){this._localScale.y=e,this.localScale=this._localScale}get localScaleZ(){return this.localScale.z}set localScaleZ(e){this._localScale.z=e,this.localScale=this._localScale}get localScale(){return this._nativeObj.getLocalScale()&&(this._localScale.x=this.float64Array[0],this._localScale.y=this.float64Array[1],this._localScale.z=this.float64Array[2]),this._localScale}set localScale(e){this._localScale.x=this.float64Array[0]=e.x,this._localScale.y=this.float64Array[1]=e.y,this._localScale.z=this.float64Array[2]=e.z,this._nativeObj.setLocalScale()}get localRotationEulerX(){return this.localRotationEuler.x}set localRotationEulerX(e){let t=this.localRotationEuler;t.x=e,this.localRotationEuler=t}get localRotationEulerY(){return this.localRotationEuler.y}set localRotationEulerY(e){let t=this.localRotationEuler;t.y=e,this.localRotationEuler=t}get localRotationEulerZ(){return this.localRotationEuler.z}set localRotationEulerZ(e){let t=this.localRotationEuler;t.z=e,this.localRotationEuler=t}get localRotationEuler(){return this._nativeObj.getLocalRotationEuler()&&(this._localRotationEuler.x=this.float64Array[0],this._localRotationEuler.y=this.float64Array[1],this._localRotationEuler.z=this.float64Array[2]),this._localRotationEuler}set localRotationEuler(e){this._localRotationEuler.x=this.float64Array[0]=e.x,this._localRotationEuler.y=this.float64Array[1]=e.y,this._localRotationEuler.z=this.float64Array[2]=e.z,this._nativeObj.setLocalRotationEuler()}get localMatrix(){if(this._nativeObj.getLocalMatrix())for(var e=0;e<16;++e)this._localMatrix.elements[e]=this.float32Array[e];return this._localMatrix}set localMatrix(e){this._localMatrix!==e&&e.cloneTo(this._localMatrix),this.float32Array.set(e.elements),this._nativeObj.setLocalMatrix()}get position(){return this._nativeObj.getPosition()&&(this._position.x=this.float64Array[0],this._position.y=this.float64Array[1],this._position.z=this.float64Array[2]),this._position}set position(e){this._position.x=this.float64Array[0]=e.x,this._position.y=this.float64Array[1]=e.y,this._position.z=this.float64Array[2]=e.z,this._nativeObj.setPosition()}get rotation(){return this._nativeObj.getRotation()&&(this._rotation.x=this.float64Array[0],this._rotation.y=this.float64Array[1],this._rotation.z=this.float64Array[2],this._rotation.w=this.float64Array[3]),this._rotation}set rotation(e){this._rotation.x=this.float64Array[0]=e.x,this._rotation.y=this.float64Array[1]=e.y,this._rotation.z=this.float64Array[2]=e.z,this._rotation.w=this.float64Array[3]=e.w,this._nativeObj.setRotation()}get rotationEuler(){return this._nativeObj.getRotationEuler()&&(this._rotationEuler.x=this.float64Array[0],this._rotationEuler.y=this.float64Array[1],this._rotationEuler.z=this.float64Array[2]),this._rotationEuler}set rotationEuler(e){this._rotationEuler.x=this.float64Array[0]=e.x,this._rotationEuler.y=this.float64Array[1]=e.y,this._rotationEuler.z=this.float64Array[2]=e.z,this._nativeObj.setRotationEuler()}get worldMatrix(){if(this._nativeObj.getWorldMatrix())for(var e=0;e<16;e++)this._worldMatrix.elements[e]=this.float32Array[e];return this._worldMatrix}set worldMatrix(e){this._worldMatrix!==e&&e.cloneTo(this._worldMatrix),this.float32Array.set(e.elements),this._nativeObj.setWorldMatrix()}constructor(e){super(e),this.nativeMemory=new t.NativeMemory(NativeTransform3D.MemoryBlock_size,!0),this.float32Array=this.nativeMemory.float32Array,this.float64Array=this.nativeMemory.float64Array,this.int32Array=this.nativeMemory.int32Array,this.eventDispatcher=new t.EventDispatcher,this._nativeObj=new window.conchTransform(this.nativeMemory._buffer,this.eventDispatcher.event.bind(this.eventDispatcher))}_setTransformFlag(e,t){this._nativeObj&&this._nativeObj._setTransformFlag(e,t)}_getTransformFlag(e){return this._nativeObj._getTransformFlag(e)}_setParent(e){super._setParent(e),this._nativeObj.setParent(e?e._nativeObj:null)}translate(e,t=!0){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this.int32Array[6]=t?1:0,this._nativeObj.translate()}rotate(e,t=!0,a=!0){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this.int32Array[6]=t?1:0,this.int32Array[7]=a?1:0,this._nativeObj.rotate()}getForward(e){var t=this.worldMatrix.elements;e.x=-t[8],e.y=-t[9],e.z=-t[10]}getUp(e){var t=this.worldMatrix.elements;e.x=t[4],e.y=t[5],e.z=t[6]}getRight(e){var t=this.worldMatrix.elements;e.x=t[0],e.y=t[1],e.z=t[2]}lookAt(e,t,a=!1,r=!0){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this.float64Array[3]=t.x,this.float64Array[4]=t.y,this.float64Array[5]=t.z,this.int32Array[12]=a?1:0,this.int32Array[13]=r?1:0,this._nativeObj.lookAt()}objLookat(e,t,a=!1){}getWorldLossyScale(){return this._nativeObj.getWorldLossyScale()&&(this._scale.x=this.float64Array[0],this._scale.y=this.float64Array[1],this._scale.z=this.float64Array[2]),this._scale}setWorldLossyScale(e){this._scale.x=this.float64Array[0]=e.x,this._scale.y=this.float64Array[1]=e.y,this._scale.z=this.float64Array[2]=e.z,this._nativeObj.setWorldLossyScale()}hasListener(e){return this.eventDispatcher.hasListener(e)}event(e,t){return this.eventDispatcher.event(e,t)}on(e,t,a,r){return 2==arguments.length&&(a=t,t=null),this.eventDispatcher.on(e,t,a,r)}once(e,t,a,r){return 2==arguments.length&&(a=t,t=null),this.eventDispatcher.once(e,t,a,r)}off(e,t,a){return 2==arguments.length&&(a=t,t=null),this.eventDispatcher.off(e,t,a)}offAll(e){return this.eventDispatcher.offAll(e)}offAllCaller(e){return this.eventDispatcher.offAllCaller(e)}}NativeTransform3D.MemoryBlock_size=64;class NativeUniformBufferObject extends t.UniformBufferObject{constructor(e,a,r,i,n){super(e,a,r,i,n),this._conchUniformBufferObject=null,this._conchUniformBufferObject=new window.conchUniformBufferObject(t.LayaGL.renderEngine._nativeObj,e),this._conchUniformBufferObject.setGLBuffer(this._glBuffer)}}class NativeVertexBuffer3D extends VertexBuffer3D{get vertexDeclaration(){return this._vertexDeclaration}set vertexDeclaration(e){this._vertexDeclaration=e,this._conchVertexBuffer3D.setVertexDeclaration(this.serilizeVertexDeclaration(e))}serilizeVertexDeclaration(e){let t=new Int32Array(6*e._vertexElements.length),a=0;var r=e._shaderValues;for(var i in r){var n=parseInt(i),s=r[i];t[a++]=n,t.set(s,a),a+=5}return t}get instanceBuffer(){return this._conchVertexBuffer3D._instanceBuffer}set instanceBuffer(e){this._conchVertexBuffer3D._instanceBuffer=e}constructor(e,a,r=!1){super(e,a,r),this._conchVertexBuffer3D=null,this._conchVertexBuffer3D=new window.conchVertexBuffer3D(t.LayaGL.renderEngine._nativeObj,e,a,!1),this._conchVertexBuffer3D.setGLBuffer(this._glBuffer)}}class NativeRenderOBJCreateUtil{createTransform(e){return new NativeTransform3D(e)}createBounds(e,t){return new NativeBounds(e,t)}createShaderData(){return new NativeShaderData}createRenderElement(){return new NativeRenderElementOBJ}createSkinRenderElement(){return new NativeSkinRenderElementOBJ}createInstanceRenderElement(){return new NativeInstanceRenderElementOBJ}createBaseRenderQueue(e){var t=new NativeBaseRenderQueue(e);return t.sortPass=this.createSortPass(),t}createRenderGeometry(e,t){return new NativeRenderGeometryElementOBJ(e,t)}createVertexBuffer3D(e,t,a=!1){return new NativeVertexBuffer3D(e,t,a)}createIndexBuffer3D(e,a,r=t.BufferUsage.Static,i=!1){return new NativeIndexBuffer3D(e,a,r,i)}createShaderInstance(e,t,a,r){return new NativeShaderInstance(e,t,a,r)}createBaseRenderNode(){return new NativeBaseRenderNode}createRenderContext3D(){return new NativeRenderContext3DOBJ}createSceneRenderManager(){return new NativeSceneRenderManager}createCullPass(){return new NativeCullPassBase}createSortPass(){return new window.conchQuickSort}createShadowCullInfo(){return new NativeShadowCullInfo}createCameraCullInfo(){return new NativeCameraCullInfo}createRenderStateComand(){return new t.NativeRenderStateCommand}createRenderState(){return new NativeRenderState}createUniformBufferObject(e,t,a,r,i){return new NativeUniformBufferObject(e,t,a,r,i)}createGlobalUniformMap(e){return new NativeCommandUniformMap(window.conchCommandUniformMap.createGlobalUniformMap(e),e)}}class Laya3D{static get enablePhysics(){return Physics3D._enablePhysics}static _changeWebGLSize(e,a){t.WebGL.onStageResize(e,a),RenderContext3D.clientWidth=e,RenderContext3D.clientHeight=a}static __init__(e){if(!1!==e){let e=window.Physics3D;if(null!=e)return Physics3D._enablePhysics=!0,new Promise((a=>{e(16*Math.max(16,t.Config3D.defaultPhysicsMemory),new BulletInteractive(null,null)).then((()=>{Laya3D.__init__(!1).then(a)}))}));Physics3D._enablePhysics=!1}Laya3D.createRenderObjInit(),t.Config3D._multiLighting=t.Config3D.enableMultiLight&&t.LayaGL.renderEngine.getCapable(t.RenderCapable.TextureFormat_R32G32B32A32),t.Config3D._uniformBlock=t.Config3D.enableUniformBufferObject&&t.LayaGL.renderEngine.getCapable(t.RenderCapable.UnifromBufferObject),t.Config3D.maxLightCount>2048&&(t.Config3D.maxLightCount=2048,console.warn("Config3D: maxLightCount must less equal 2048."));let a=t.Config3D.lightClusterCount;(a.x>128||a.y>128||a.z>128)&&(a.setValue(Math.min(a.x,128),Math.min(a.y,128),Math.min(a.z,128)),console.warn("Config3D: lightClusterCount X and Y、Z must less equal 128."));let r=4*Math.floor(2048/t.Config3D.lightClusterCount.z-1);return r<t.Config3D.maxLightCount&&console.warn("Config3D: if the area light(PointLight、SpotLight) count is large than "+r+",maybe the far away culster will ingonre some light."),t.Config3D._maxAreaLightCountPerClusterAverage=Math.min(r,t.Config3D.maxLightCount),ILaya3D.Scene3D=Scene3D,ILaya3D.Laya3D=Laya3D,ILaya3D.Physics3D=Physics3D,Physics3D.__bulletinit__(),t.SubShader.__init__(),t.VertexMesh.__init__(),VertexShurikenParticleBillboard.__init__(),VertexShurikenParticleMesh.__init__(),VertexPositionTexture0.__init__(),VertexTrail.__init__(),VertexPositionTerrain.__init__(),PixelLineVertex.__init__(),SubMeshInstanceBatch.__init__(),ShaderInit3D.__init__(),ShuriKenParticle3DShaderDeclaration.__init__(),SimpleSkinnedMeshSprite3D.__init__(),PBRMaterial.__init__(),PBRStandardMaterial.__init__(),SkyPanoramicMaterial.__init__(),BloomEffect.init(),ScalableAO.init(),GaussianDoF.init(),ColorGradEffect.init(),Mesh.__init__(),PrimitiveMesh.__init__(),Sprite3D.__init__(),RenderableSprite3D.__init__(),MeshSprite3D.__init__(),DepthPass.__init__(),SkinnedMeshSprite3D.__init__(),SimpleSkinnedMeshSprite3D.__init__(),TrailFilter.__init__(),ShuriKenParticle3D.__init__(),TrailSprite3D.__init__(),PostProcess.__init__(),Scene3D.__init__(),ShadowCasterPass.__init__(),BaseCamera.__init__(),BaseRender.__init__(),MeshRenderer.__init__(),SkyRenderer.__init__(),Camera.__init__(),ShadowUtils.init(),RenderContext3D.__init__(),t.RenderTexture.configRenderContextInstance(RenderContext3D._instance),Material.__initDefine__(),BlinnPhongMaterial.__initDefine__(),SkyProceduralMaterial.__initDefine__(),UnlitMaterial.__initDefine__(),TrailMaterial.__initDefine__(),ShurikenParticleMaterial.__initDefine__(),SkyBoxMaterial.__initDefine__(),Command.__init__(),BlitFrameBufferCMD.__init__(),BlinnPhongMaterial.defaultMaterial=new BlinnPhongMaterial,BlinnPhongMaterial.defaultMaterial.lock=!0,t.Texture2D.__init__(),t.TextureCube.__init__(),SkyBox.__init__(),SkyDome.__init__(),ScreenQuad.__init__(),FrustumCulling.__init__(),t.HalfFloatUtils.__init__(),Promise.resolve()}static init(e,a,r=null,i=null){t.Laya.init(e,a).then((()=>{i&&i.run()}))}static createRenderObjInit(){t.LayaEnv.isConch&&!window.conchConfig.conchWebGL?(t.LayaGL.renderEngine._renderOBJCreateContext=new NativeRenderOBJCreateUtil,t.LayaGL.renderOBJCreate=t.LayaGL.renderEngine.getCreateRenderOBJContext()):(t.LayaGL.renderEngine._renderOBJCreateContext=new RenderOBJCreateUtil,t.LayaGL.renderOBJCreate=t.LayaGL.renderEngine.getCreateRenderOBJContext())}}window.Laya3D=Laya3D;class RandX{constructor(e){if(!(e instanceof Array)||4!==e.length)throw new Error("Rand:Seed must be an array with 4 numbers");this._state0U=0|e[0],this._state0L=0|e[1],this._state1U=0|e[2],this._state1L=0|e[3]}randomint(){var e=this._state0U,t=this._state0L,a=this._state1U,r=this._state1L,i=(r>>>0)+(t>>>0),n=a+e+(i/2>>>31)>>>0,s=i>>>0;this._state0U=a,this._state0L=r;var o=0,l=0;o=(e^=o=e<<23|(-512&t)>>>9)^a,l=(t^=l=t<<23)^r;o^=e>>>18,l^=t>>>18|(262143&e)<<14;return o^=a>>>5,l^=r>>>5|(31&a)<<27,this._state1U=o,this._state1L=l,[n,s]}random(){var e=this.randomint(),t=e[0],a=1023<<20|t>>>12,r=0|(e[1]>>>12|(4095&t)<<20);return RandX._CONVERTION_BUFFER.setUint32(0,a,!1),RandX._CONVERTION_BUFFER.setUint32(4,r,!1),RandX._CONVERTION_BUFFER.getFloat64(0,!1)-1}}RandX._CONVERTION_BUFFER=new DataView(new ArrayBuffer(8)),RandX.defaultRand=new RandX([0,Date.now()/65536,0,Date.now()%65536]);class Size{static get fullScreen(){return new Size(-1,-1)}get width(){return-1===this._width?RenderContext3D.clientWidth:this._width}get height(){return-1===this._height?RenderContext3D.clientHeight:this._height}constructor(e,t){this._width=0,this._height=0,this._width=e,this._height=t}}class WebXRRenderTexture extends t.RenderTexture{constructor(){super(1,1,1,t.RenderTargetFormat.STENCIL_8,!1,1),this.frameLoop=-1}set frameBuffer(e){this._frameBuffer=e}_create(e,t){}_start(){var e=WebXRExperienceHelper.glInstance;e.bindFramebuffer(e.FRAMEBUFFER,this._frameBuffer),t.RenderTexture._currentActive=this}_end(){var e=WebXRExperienceHelper.glInstance;e.bindFramebuffer(e.FRAMEBUFFER,null),t.RenderTexture._currentActive=null}}class WebXRSessionManager extends t.EventDispatcher{constructor(){super(),this.currentTimestamp=-1,this.defaultHeightCompensation=1.7,this._sessionEnded=!1}get referenceSpace(){return this._referenceSpace}set referenceSpace(e){this._referenceSpace=e}get sessionMode(){return this._sessionMode}exitXR(){this.endXRRenderLoop(),this.event(WebXRSessionManager.EVENT_MANAGER_END)}initializeXRGL(e,t){return t.makeXRCompatible().then((()=>!0))}initializeAsync(){return this._xrNavigator=navigator,this._xrNavigator.xr?Promise.resolve():Promise.reject("WebXR not available")}isSessionSupportedAsync(e){if(!navigator.xr)return Promise.resolve(!1);this._xrNavigator=navigator;return navigator.xr.isSessionSupported||navigator.xr.supportsSession?navigator.xr.isSessionSupported(e):Promise.resolve(!1)}initializeSessionAsync(e="immersive-vr",t={}){return this._xrNavigator.xr.requestSession("immersive-vr").then((t=>(this.session=t,this._sessionMode=e,this._sessionEnded=!1,this.session.addEventListener("end",(()=>{this._sessionEnded=!0,this.exitXR()}),{once:!0}),this.session)))}resetReferenceSpace(){this.referenceSpace=this.baseReferenceSpace}runXRRenderLoop(){this.session.requestAnimationFrame.bind(this.session);let fn=(e,a)=>{this._updateByXrFrame(a,e),this.event(WebXRSessionManager.EVENT_FRAME_LOOP,[a]),t.ILaya.stage._loop(),this.session.requestAnimationFrame(fn)};this.session.requestAnimationFrame(fn)}endXRRenderLoop(){}_updateByXrFrame(e,t){this.currentFrame=e,this.currentTimestamp=t}setReferenceSpaceTypeAsync(e="local-floor"){return this.session.requestReferenceSpace(e).then((e=>e),(e=>this.session.requestReferenceSpace("viewer").then((e=>{const t=new XRRigidTransform({x:0,y:-this.defaultHeightCompensation,z:0});return e.getOffsetReferenceSpace(t)}),(e=>{throw'XR initialization failed: required "viewer" reference space type not supported.'})))).then((e=>(this.referenceSpace=this.baseReferenceSpace=e,this.referenceSpace)))}updateRenderStateAsync(e){return e.baseLayer&&(this._baseLayer=e.baseLayer),this.session.updateRenderState(e)}get currentFrameRate(){var e;return null===(e=this.session)||void 0===e?void 0:e.frameRate}get supportedFrameRates(){var e;return null===(e=this.session)||void 0===e?void 0:e.supportedFrameRates}updateTargetFrameRate(e){return this.session.updateTargetFrameRate(e)}destroy(){this._sessionEnded||this.exitXR()}}WebXRSessionManager.EVENT_MANAGER_END="xrManagerDestory",WebXRSessionManager.EVENT_FRAME_LOOP="xrFrameLoop";class WebXRCameraManager{get position(){return this._position}set position(e){e.cloneTo(this._position)}set rotationQuaternion(e){e.cloneTo(this._referenceQuaternion)}get rotationQuaternion(){return this._referenceQuaternion}get rigCameras(){return this._rigCameras}constructor(e,a=null){this._referenceQuaternion=new t.Quaternion,this._referencedPosition=new t.Vector3,this._firstFrame=!0,this._XRRenderTexture=new WebXRRenderTexture,this._rigCameras=new Array,this._position=new t.Vector3,this.owner=e,this.owner.enableRender=!1,this.owner.aspectRatio||console.warn("owner is not Camera"),this._webXRSessionManager=a,this._webXRSessionManager.on(WebXRSessionManager.EVENT_FRAME_LOOP,this,this._updateFromXRSession),this._webXRSessionManager.on(WebXRSessionManager.EVENT_FRAME_LOOP,this,this._updateReferenceSpace),this._webXRSessionManager.on(WebXRSessionManager.EVENT_MANAGER_END,this,this.destroy)}_updateFromXRSession(){let e=this._webXRSessionManager.currentFrame&&this._webXRSessionManager.currentFrame.getViewerPose(this._webXRSessionManager.referenceSpace);const t=e.transform.position,a=e.transform.orientation;this._referenceQuaternion.setValue(a.x,a.y,a.z,a.w),this._referencedPosition.setValue(t.x,t.y,t.z),this._firstFrame?(this._firstFrame=!1,this.position.y+=this._referencedPosition.y,this._referenceQuaternion.setValue(0,0,0,1)):(this.rotationQuaternion=this._referenceQuaternion,this.position=this._referencedPosition),this.rigCameras.length!==e.views.length&&this._updateNumberOfRigCameras(e.views.length),e.views.forEach(((e,t)=>{const a=this.rigCameras[t];"right"===e.eye?a.name="right":"left"===e.eye&&(a.name="left");const r=e.transform.position,i=e.transform.orientation;if(a.transform.position.setValue(r.x,r.y,r.z),a.transform.rotation.setValue(i.x,i.y,i.z,i.w),a.transform.position=a.transform.position,a.transform.rotation=a.transform.rotation,this._webXRSessionManager.session.renderState.baseLayer){var n=this._webXRSessionManager.session.renderState.baseLayer.getViewport(e),s=this._webXRSessionManager.session.renderState.baseLayer.framebufferWidth,o=this._webXRSessionManager.session.renderState.baseLayer.framebufferHeight;this._XRRenderTexture.frameBuffer=this._webXRSessionManager.session.renderState.baseLayer.framebuffer,a.renderTarget=this._XRRenderTexture,a.clientWidth=s,a.clientHeight=o;var l=a.viewport;l.x=n.x,l.y=n.y,l.width=n.width,l.height=n.height,a.viewport=l,a.projectionMatrix.cloneByArray(e.projectionMatrix)}}))}_updateNumberOfRigCameras(e=1){for(;this.rigCameras.length<e;){var t=new WebXRCamera(this.owner.aspectRatio,this.owner.nearPlane,this.owner.farPlane);t.clearFlag=this.owner.clearFlag,t.clearColor=this.owner.clearColor,this.owner.addChild(t),this.rigCameras.push(t)}for(;this.rigCameras.length>e;){let e=this.rigCameras.pop();this.owner.removeChild(e)}}_updateReferenceSpace(){}destroy(){this.owner.enableRender=!0,this._webXRSessionManager.off(WebXRSessionManager.EVENT_FRAME_LOOP,this,this._updateFromXRSession),this._webXRSessionManager.off(WebXRSessionManager.EVENT_FRAME_LOOP,this,this._updateReferenceSpace),this._webXRSessionManager.off(WebXRSessionManager.EVENT_MANAGER_END,this,this.destroy),this._rigCameras.forEach((e=>{e.destroy()})),this._rigCameras=null,this._XRRenderTexture.destroy()}}class AxiGamepad extends t.EventDispatcher{constructor(e,t){super(),this.axisData=new Array,this.handness=e,this.axisData.length=t,this.axisLength=t}update(e){for(let a=0,r=0;a<e.axes.length;a+=2,++r)this.axisData[r]||(this.axisData[r]=new t.Vector2),this.axisData[r].setValue(e.axes[a],e.axes[a+1]),this.outPutStickValue(this.axisData[r],r)}outPutStickValue(e,t){const a=AxiGamepad.EVENT_OUTPUT+t.toString();this.event(a,[e])}destroy(){for(let e=0;e<this.axisLength;e++){let t=AxiGamepad.EVENT_OUTPUT+e.toString();this.offAll(t)}}}AxiGamepad.EVENT_OUTPUT="outputAxi_id";class ButtonGamepad extends t.EventDispatcher{constructor(e,t){super(),this.lastTouch=!1,this.lastPress=!1,this.lastPressValue=0,this.touch=!1,this.press=!1,this.pressValue=0,this.handness=e,this.index=t}update(e){this.lastTouch=this.touch,this.lastPress=this.press,this.lastPressValue=this.pressValue,this.touch=e.touched,this.press=e.pressed,this.pressValue=e.value,(this.lastTouch||this.touch)&&(this.lastTouch!=this.touch&&this.touch?this.touchEnter():this.lastTouch==this.touch&&this.touch?this.touchStay():this.lastTouch==this.touch||this.touch||this.touchOut(),this.lastPress!=this.press&&this.press?this.pressEnter():this.lastPress==this.press&&this.press?this.pressStay():this.lastPress==this.press||this.press||this.pressOut(),this.touch&&this.outpressed())}touchEnter(){this.event(ButtonGamepad.EVENT_TOUCH_ENTER)}touchStay(){this.event(ButtonGamepad.EVENT_TOUCH_STAY)}touchOut(){this.event(ButtonGamepad.EVENT_TOUCH_OUT)}pressEnter(){this.event(ButtonGamepad.EVENT_PRESS_ENTER)}pressStay(){this.event(ButtonGamepad.EVENT_PRESS_STAY)}pressOut(){this.event(ButtonGamepad.EVENT_PRESS_OUT)}outpressed(){this.event(ButtonGamepad.EVENT_PRESS_VALUE,[this.pressValue])}destroy(){this.offAll(ButtonGamepad.EVENT_PRESS_ENTER),this.offAll(ButtonGamepad.EVENT_PRESS_STAY),this.offAll(ButtonGamepad.EVENT_PRESS_OUT),this.offAll(ButtonGamepad.EVENT_PRESS_ENTER),this.offAll(ButtonGamepad.EVENT_PRESS_STAY),this.offAll(ButtonGamepad.EVENT_PRESS_OUT),this.offAll(ButtonGamepad.EVENT_PRESS_VALUE)}}ButtonGamepad.EVENT_TOUCH_ENTER="touchEnter",ButtonGamepad.EVENT_TOUCH_STAY="touchStay",ButtonGamepad.EVENT_TOUCH_OUT="touchOut",ButtonGamepad.EVENT_PRESS_ENTER="pressEnter",ButtonGamepad.EVENT_PRESS_STAY="pressStay",ButtonGamepad.EVENT_PRESS_OUT="pressOut",ButtonGamepad.EVENT_PRESS_VALUE="outpressed";class WebXRInput extends t.EventDispatcher{constructor(e){super(),this.preButtonEventList=[],this.preAxisEventList=[],this.handness=e,this.position=new t.Vector3,this.rotation=new t.Quaternion,this.ray=new Ray(new t.Vector3,new t.Vector3)}_updateByXRPose(e,a){const r=e.getPose(this._inputSource.targetRaySpace,a);if(this._lastXRPose=r,r){const e=r.transform.position,a=r.transform.orientation;WebXRInput.tempQua.setValue(a.x,a.y,a.z,a.w),this.ray.origin.setValue(e.x,e.y,e.z),t.Vector3.transformQuat(t.Vector3.UnitZ,WebXRInput.tempQua,this.ray.direction),t.Vector3.scale(this.ray.direction,-1,this.ray.direction)}if(this._inputSource.gripSpace){let t=e.getPose(this._inputSource.gripSpace,a);if(t){const e=t.transform.position,a=t.transform.orientation;this.position.setValue(e.x,e.y,e.z),this.rotation.setValue(a.x,a.y,a.z,a.w)}}this.event(WebXRInput.EVENT_FRAMEUPDATA_WEBXRINPUT,[this]),this._handleProcessGamepad()}_handleProcessGamepad(){const e=this._inputSource.gamepad;if(this.gamepadAxis||(this.gamepadAxis=new AxiGamepad(this.handness,e.axes.length),this.preAxisEventList.forEach((e=>{this.gamepadAxis.on(e.eventnam,e.caller,e.listener)}))),!this.gamepadButton){this.gamepadButton=[];for(let t=0;t<e.buttons.length;++t)this.gamepadButton.push(new ButtonGamepad(this.handness,t));this.preButtonEventList.forEach((e=>{this.addButtonEvent(e.index,e.type,e.caller,e.listener)}))}this.gamepadAxis.update(e);for(let t=0;t<e.buttons.length;++t){this.gamepadButton[t].update(e.buttons[t])}}addButtonEvent(e,t,a,r){if(this.gamepadButton){this.gamepadButton[e].on(t,a,r)}else this.preButtonEventList.push({index:e,type:t,caller:a,listener:r})}addAxisEvent(e,t,a,r){if(this.gamepadAxis){const i=t+e.toString();this.gamepadAxis.on(i,a,r)}else this.preAxisEventList.push({eventnam:t+e.toString(),caller:a,listener:r})}offAxisEvent(e,t,a,r){if(this.gamepadAxis){const i=t+e.toString();this.gamepadAxis.off(i,a,r)}}offButtonEvent(e,t,a,r){if(this.gamepadButton){this.gamepadButton[e].off(t,a,r)}}destroy(){this.preButtonEventList=null,this.ray=null,this.position=null,this.rotation=null,this.gamepadAxis.destroy(),this.gamepadButton.forEach((e=>{e.destroy()}))}}WebXRInput.HANDNESS_LEFT="left",WebXRInput.HANDNESS_RIGHT="right",WebXRInput.EVENT_FRAMEUPDATA_WEBXRINPUT="frameXRInputUpdate",WebXRInput.tempQua=new t.Quaternion;class WebXRInputManager{constructor(e,a){this.controllers=new Map,this.controllerHandMesh=new Map,this.controllerLineRender=new Map,this.lineColor=t.Color.RED,this.rayLength=2,this.webXRSessionManager=e,this.webXRCameraManager=a,this.webXRSessionManager.on(WebXRSessionManager.EVENT_MANAGER_END,this,this.destory),this.webXRSessionManager.on(WebXRSessionManager.EVENT_FRAME_LOOP,this,this._updateFromXRFrame)}_updataMeshRender(e){const a=e.handness;if(this.controllerHandMesh.has(a)){let t=this.controllerHandMesh.get(a);t.transform.position=e.position,t.transform.rotation=e.rotation}if(this.controllerLineRender.has(a)){let r=this.controllerLineRender.get(a);r.clear();let i=e.ray;WebXRInputManager.tempVec.setValue(i.origin.x,i.origin.y,i.origin.z),t.Vector3.scale(i.direction,this.rayLength,WebXRInputManager.tempVec1),t.Vector3.add(WebXRInputManager.tempVec,WebXRInputManager.tempVec1,WebXRInputManager.tempVec1),r.addLine(WebXRInputManager.tempVec,WebXRInputManager.tempVec1,this.lineColor,this.lineColor)}}_updateFromXRFrame(e){const t=this.webXRSessionManager.session,a=this.webXRSessionManager.referenceSpace;for(let r of t.inputSources){const t=r.handedness;let i;i=this.controllers.has(t)?this.controllers.get(t):this.getController(t),i&&(i=this.controllers.get(t),i._inputSource=r,i._updateByXRPose(e,a))}}bindMeshNode(e,t){this.controllerHandMesh.set(t,e)}bindRayNode(e,t){this.controllerLineRender.set(t,e)}getController(e){if("left"!=e&&"right"!=e)return null;if(!this.controllers.has(e)){let t=new WebXRInput(e);this.controllers.set(e,t),t.on(WebXRInput.EVENT_FRAMEUPDATA_WEBXRINPUT,this,this._updataMeshRender)}return this.controllers.get(e)}destory(){this.webXRSessionManager.off(WebXRSessionManager.EVENT_FRAME_LOOP,this,this._updateFromXRFrame);for(let e in this.controllers)this.controllers.get(e).off("frameXRInputUpdate",this,this._updataMeshRender),this.controllers.get(e).destroy();this.controllers=null,this.controllerHandMesh=null,this.controllerLineRender=null}}WebXRInputManager.tempVec=new t.Vector3,WebXRInputManager.tempVec1=new t.Vector3;class WebXRExperienceHelper{static supportXR(e){return WebXRExperienceHelper.xr_Manager.isSessionSupportedAsync(e).then((e=>(WebXRExperienceHelper.supported=e,e)))}static enterXRAsync(e,a,r){return"immersive-ar"===e&&"unbounded"!==a&&console.warn("We recommend using 'unbounded' reference space type when using 'immersive-ar' session mode"),WebXRExperienceHelper.xr_Manager.initializeSessionAsync(e).then((()=>WebXRExperienceHelper.xr_Manager.setReferenceSpaceTypeAsync(a))).then((()=>WebXRExperienceHelper.xr_Manager.initializeXRGL(e,t.LayaGL.renderEngine._gl))).then((()=>(WebXRExperienceHelper.glInstance=t.LayaGL.renderEngine._gl,WebXRExperienceHelper.xr_Manager.updateRenderStateAsync({depthFar:r.depthFar,depthNear:r.depthNear,baseLayer:new XRWebGLLayer(WebXRExperienceHelper.xr_Manager.session,t.LayaGL.instance)})))).then((()=>(WebXRExperienceHelper.xr_Manager.runXRRenderLoop(),WebXRExperienceHelper.xr_Manager)))}static setWebXRCamera(e,t){return new WebXRCameraManager(e,t)}static setWebXRInput(e,t){return new WebXRInputManager(e,t)}}WebXRExperienceHelper.xr_Manager=new WebXRSessionManager,WebXRExperienceHelper.supported=!1,WebXRExperienceHelper.canvasOptions={antialias:!0,depth:!0,stencil:!1,alpha:!0,multiview:!1,framebufferScaleFactor:1};class WebXRCamera extends Camera{constructor(){super(...arguments),this.isWebXR=!0}get renderTarget(){return this._internalRenderTexture}set renderTarget(e){this._internalRenderTexture=e}set clientWidth(e){this._clientWidth=e}set clientHeight(e){this._clientHeight=e}get clientWidth(){return this._clientWidth}get clientHeight(){return this._clientHeight}_restoreView(e){var t,a,r=this.viewport,i=r.width,n=r.height;this._needInternalRenderTexture()?(t=0,a=0):(t=r.x,a=this._getCanvasHeight()-r.y-n),e.viewport(t,a,i,n)}render(e=null,t=null){if(this.activeInHierarchy){var a=this.viewport,r=RenderContext3D._instance,i=r.scene=this._scene;r.pipelineMode=r.configPipeLineMode,r.replaceTag=t,r.customShader=e;var n=this._renderShadowMap(i,r);this._preRenderMainPass(r,i,true,a),this._renderMainPass(r,a,i,e,t,true),this._aftRenderMainPass(n)}}_renderMainPass(a,r,i,n,s,o){var l=WebXRExperienceHelper.glInstance,h=this._internalRenderTexture;a.viewport=r,this._prepareCameraToRender(),t.Config3D._multiLighting&&Cluster.instance.update(this,i),i._preCulling(a,this),h&&h._isCameraTarget&&(a.invertY=!0),this._applyViewProject(a,this.viewMatrix,this._projectionMatrix),0!=this.depthTextureMode&&this._renderDepthMode(a),h&&h._start(),h.frameLoop!=Scene3D._updateMark&&(h.frameLoop=Scene3D._updateMark,this.clear(l)),this._restoreView(l),this._prepareCameraToRender(),this._applyCommandBuffer(e.CameraEventFlags.BeforeForwardOpaque,a),i._renderScene(a,ILaya3D.Scene3D.SCENERENDERFLAG_RENDERQPAQUE),this._applyCommandBuffer(e.CameraEventFlags.BeforeSkyBox,a),i._renderScene(a,ILaya3D.Scene3D.SCENERENDERFLAG_SKYBOX),this._applyCommandBuffer(e.CameraEventFlags.BeforeTransparent,a),i._renderScene(a,ILaya3D.Scene3D.SCENERENDERFLAG_RENDERTRANSPARENT),i._componentDriver.callPostRender(),this._applyCommandBuffer(e.CameraEventFlags.BeforeImageEffect,a),h&&h._end(),this._applyCommandBuffer(e.CameraEventFlags.AfterEveryThing,a)}_calculateProjectionMatrix(){}clear(e){e.viewport(0,0,this._clientWidth,this._clientHeight),e.scissor(0,0,this._clientWidth,this._clientHeight),e.clearColor(this.clearColor.r,this.clearColor.g,this.clearColor.b,this.clearColor.a),t.RenderStateContext.setDepthMask(!0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)}destroy(){super.destroy(!0)}}class ConstraintComponent extends t.Component{get appliedImpulse(){return this._feedbackEnabled||(this._btConstraint.EnableFeedback(!0),this._feedbackEnabled=!0),this._btConstraint.AppliedImpulse}set connectedBody(e){this._connectedBody=e}get connectedBody(){return this._connectedBody}get ownBody(){return this._ownBody}set ownBody(e){this._ownBody=e}get currentForce(){return this._getJointFeedBack||this._getFeedBackInfo(),this._currentForce}get currentTorque(){return this._getJointFeedBack||this._getFeedBackInfo(),this._currentTorque}get breakForce(){return this._breakForce}set breakForce(e){this._breakForce=e}get breakTorque(){return this._breakTorque}set breakTorque(e){this._breakTorque=e}set anchor(e){e.cloneTo(this._anchor),this.setFrames()}get anchor(){return this._anchor}set connectAnchor(e){e.cloneTo(this._connectAnchor),this.setFrames()}get connectAnchor(){return this._connectAnchor}constructor(e){super(),this._anchor=new t.Vector3,this._connectAnchor=new t.Vector3,this._feedbackEnabled=!1,this._getJointFeedBack=!1,this._currentForce=new t.Vector3,this._currentTorque=new t.Vector3,this.disableCollisionsBetweenLinkedBodies=!0,this._constraintType=e;var a=Physics3D._bullet;this._btframATrans=a.btTransform_create(),this._btframBTrans=a.btTransform_create(),a.btTransform_setIdentity(this._btframATrans),a.btTransform_setIdentity(this._btframBTrans),this._btframAPos=a.btVector3_create(0,0,0),this._btframBPos=a.btVector3_create(0,0,0),a.btTransform_setOrigin(this._btframATrans,this._btframAPos),a.btTransform_setOrigin(this._btframBTrans,this._btframBPos),this._breakForce=-1,this._breakTorque=-1}setOverrideNumSolverIterations(e){Physics3D._bullet.btTypedConstraint_setOverrideNumSolverIterations(this._btConstraint,e)}setConstraintEnabled(e){Physics3D._bullet.btTypedConstraint_setEnabled(this._btConstraint,e)}setFrames(){var e=Physics3D._bullet;e.btVector3_setValue(this._btframAPos,this._anchor.x,this.anchor.y,this.anchor.z),e.btVector3_setValue(this._btframBPos,this._connectAnchor.x,this._connectAnchor.y,this._connectAnchor.z),e.btTransform_setOrigin(this._btframATrans,this._btframAPos),e.btTransform_setOrigin(this._btframBTrans,this._btframBPos)}_addToSimulation(){}_removeFromSimulation(){}_createConstraint(){}setConnectRigidBody(e,t){var a=e&&!!(e._simulation&&e._enabled&&e.colliderShape),r=t&&!!(t._simulation&&t._enabled&&t.colliderShape);if(!a||!r)throw"ownerRigid or connectRigidBody is not in Simulation";e==this._ownBody&&t==this._connectedBody||(!(!this.enabled||!this._simulation)&&this._removeFromSimulation(),this._ownBody=e,this._connectedBody=t,this._createConstraint())}_setConnectRigidBody(e,t){this.ownBody=e,this.connectedBody=t,this._createConstraint()}getcurrentForce(e){if(!this._btJointFeedBackObj)throw"this Constraint is not simulation";var t=Physics3D._bullet,a=t.btJointFeedback_getAppliedForceBodyA(this._btJointFeedBackObj);e.setValue(t.btVector3_x(a),t.btVector3_y(a),t.btVector3_z(a))}getPhysicsSimulation(){return this.owner._scene.physicsSimulation}getcurrentTorque(e){if(!this._btJointFeedBackObj)throw"this Constraint is not simulation";var t=Physics3D._bullet,a=t.btJointFeedback_getAppliedTorqueBodyA(this._btJointFeedBackObj);e.setValue(t.btVector3_x(a),t.btVector3_y(a),t.btVector3_z(a))}_onDestroy(){var e=Physics3D._bullet;this._simulation&&this._removeFromSimulation(),this._btConstraint&&this._btJointFeedBackObj&&this._simulation&&(e.btTypedConstraint_destroy(this._btConstraint),e.btJointFeedback_destroy(this._btJointFeedBackObj),this._btJointFeedBackObj=null,this._btConstraint=null)}_isBreakConstrained(){if(this._getJointFeedBack=!1,-1==this.breakForce&&-1==this.breakTorque)return!1;this._getFeedBackInfo();var e=-1!=this._breakForce&&t.Vector3.scalarLength(this._currentForce)>this._breakForce,a=-1!=this._breakTorque&&t.Vector3.scalarLength(this._currentTorque)>this._breakTorque;return!(!e&&!a)&&(this._breakConstrained(),!0)}_parse(e){this._anchor.fromArray(e.anchor),this._connectAnchor.fromArray(e.connectAnchor),this.setFrames()}_getFeedBackInfo(){var e=Physics3D._bullet,t=e.btJointFeedback_getAppliedForceBodyA(this._btJointFeedBackObj),a=e.btJointFeedback_getAppliedTorqueBodyA(this._btJointFeedBackObj);this._currentTorque.setValue(e.btVector3_x(a),e.btVector3_y(a),e.btVector3_z(a)),this._currentForce.setValue(e.btVector3_x(t),e.btVector3_y(t),e.btVector3_z(t)),this._getJointFeedBack=!0}_breakConstrained(){this.destroy()}}ConstraintComponent.CONSTRAINT_POINT2POINT_CONSTRAINT_TYPE=3,ConstraintComponent.CONSTRAINT_HINGE_CONSTRAINT_TYPE=4,ConstraintComponent.CONSTRAINT_CONETWIST_CONSTRAINT_TYPE=5,ConstraintComponent.CONSTRAINT_D6_CONSTRAINT_TYPE=6,ConstraintComponent.CONSTRAINT_SLIDER_CONSTRAINT_TYPE=7,ConstraintComponent.CONSTRAINT_CONTACT_CONSTRAINT_TYPE=8,ConstraintComponent.CONSTRAINT_D6_SPRING_CONSTRAINT_TYPE=9,ConstraintComponent.CONSTRAINT_GEAR_CONSTRAINT_TYPE=10,ConstraintComponent.CONSTRAINT_FIXED_CONSTRAINT_TYPE=11,ConstraintComponent.CONSTRAINT_MAX_CONSTRAINT_TYPE=12,ConstraintComponent.CONSTRAINT_CONSTRAINT_ERP=1,ConstraintComponent.CONSTRAINT_CONSTRAINT_STOP_ERP=2,ConstraintComponent.CONSTRAINT_CONSTRAINT_CFM=3,ConstraintComponent.CONSTRAINT_CONSTRAINT_STOP_CFM=4,ConstraintComponent.tempForceV3=new t.Vector3;class ConfigurableConstraint extends ConstraintComponent{constructor(){super(ConstraintComponent.CONSTRAINT_D6_SPRING_CONSTRAINT_TYPE),this._axis=new t.Vector3,this._secondaryAxis=new t.Vector3,this._minLinearLimit=new t.Vector3,this._maxLinearLimit=new t.Vector3,this._minAngularLimit=new t.Vector3,this._maxAngularLimit=new t.Vector3,this._linearLimitSpring=new t.Vector3,this._angularLimitSpring=new t.Vector3,this._linearBounce=new t.Vector3,this._angularBounce=new t.Vector3,this._linearDamp=new t.Vector3,this._angularDamp=new t.Vector3,this._xMotion=0,this._yMotion=0,this._zMotion=0,this._angularXMotion=0,this._angularYMotion=0,this._angularZMotion=0;var e=Physics3D._bullet;this._btAxis=e.btVector3_create(0,0,1),this._btSecondaryAxis=e.btVector3_create(0,1,0)}get axis(){return this._axis}get secondaryAxis(){return this._secondaryAxis}set maxAngularLimit(e){e.cloneTo(this._maxAngularLimit)}set minAngularLimit(e){e.cloneTo(this._minAngularLimit)}get maxAngularLimit(){return this._maxAngularLimit}get minAngularLimit(){return this._minAngularLimit}set maxLinearLimit(e){e.cloneTo(this._maxLinearLimit)}set minLinearLimit(e){e.cloneTo(this._minLinearLimit)}get maxLinearLimit(){return this._maxLinearLimit}get minLinearLimit(){return this._minLinearLimit}set XMotion(e){this._xMotion!=e&&(this._xMotion=e,this.setLimit(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,e,this._minLinearLimit.x,this._maxLinearLimit.x))}get XMotion(){return this._xMotion}set YMotion(e){this._yMotion!=e&&(this._yMotion=e,this.setLimit(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,e,this._minLinearLimit.y,this._maxLinearLimit.y))}get YMotion(){return this._yMotion}set ZMotion(e){this._zMotion!=e&&(this._zMotion=e,this.setLimit(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,e,this._minLinearLimit.z,this._maxLinearLimit.z))}get ZMotion(){return this._zMotion}set angularXMotion(e){this._angularXMotion!=e&&(this._angularXMotion=e,this.setLimit(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,e,this._minAngularLimit.x,this._maxAngularLimit.x))}get angularXMotion(){return this._angularXMotion}set angularYMotion(e){this._angularYMotion!=e&&(this._angularYMotion=e,this.setLimit(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,e,this._minAngularLimit.y,this._maxAngularLimit.y))}get angularYMotion(){return this._angularYMotion}set angularZMotion(e){this._angularZMotion!=e&&(this._angularZMotion=e,this.setLimit(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,e,this._minAngularLimit.z,this._maxAngularLimit.z))}get angularZMotion(){return this._angularZMotion}set linearLimitSpring(e){t.Vector3.equals(this._linearLimitSpring,e)||(e.cloneTo(this._linearLimitSpring),this.setSpring(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,e.x),this.setSpring(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,e.y),this.setSpring(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,e.z))}get linearLimitSpring(){return this._linearLimitSpring}set angularLimitSpring(e){t.Vector3.equals(this._angularLimitSpring,e)||(e.cloneTo(this._angularLimitSpring),this.setSpring(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,e.x),this.setSpring(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,e.y),this.setSpring(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,e.z))}get angularLimitSpring(){return this._angularLimitSpring}set linearBounce(e){t.Vector3.equals(this._linearBounce,e)||(e.cloneTo(this._linearBounce),this.setBounce(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,e.x),this.setBounce(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,e.y),this.setBounce(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,e.z))}get linearBounce(){return this._linearBounce}set angularBounce(e){t.Vector3.equals(this._angularBounce,e)||(e.cloneTo(this._angularBounce),this.setBounce(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,e.x),this.setBounce(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,e.y),this.setBounce(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,e.z))}get angularBounce(){return this._angularBounce}set linearDamp(e){t.Vector3.equals(this._linearDamp,e)||(e.cloneTo(this._linearDamp),this.setDamping(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,e.x),this.setDamping(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,e.y),this.setDamping(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,e.z))}get linearDamp(){return this._linearDamp}set angularDamp(e){t.Vector3.equals(this._angularDamp,e)||(e.cloneTo(this._angularDamp),this.setDamping(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,e.x),this.setDamping(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,e.y),this.setDamping(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,e.z))}get angularDamp(){return this._angularDamp}set anchor(e){e.cloneTo(this._anchor),this.setFrames()}get anchor(){return this._anchor}set connectAnchor(e){e.cloneTo(this._connectAnchor),this.setFrames()}get connectAnchor(){return this._connectAnchor}setAxis(e,t){if(this._btConstraint){var a=Physics3D._bullet;this._axis.setValue(e.x,e.y,e.y),this._secondaryAxis.setValue(t.x,t.y,t.z),a.btVector3_setValue(this._btAxis,e.x,e.y,e.z),a.btVector3_setValue(this._btSecondaryAxis,t.x,t.y,t.z),a.btGeneric6DofSpring2Constraint_setAxis(this._btConstraint,this._btAxis,this._btSecondaryAxis)}}setLimit(e,t,a,r){if(this._btConstraint){var i=Physics3D._bullet;switch(t){case ConfigurableConstraint.CONFIG_MOTION_TYPE_LOCKED:i.btGeneric6DofSpring2Constraint_setLimit(this._btConstraint,e,0,0);break;case ConfigurableConstraint.CONFIG_MOTION_TYPE_LIMITED:a<r&&i.btGeneric6DofSpring2Constraint_setLimit(this._btConstraint,e,a,r);break;case ConfigurableConstraint.CONFIG_MOTION_TYPE_FREE:i.btGeneric6DofSpring2Constraint_setLimit(this._btConstraint,e,1,0);break;default:throw"No Type of Axis Motion"}}}setSpring(e,t,a=!0){if(this._btConstraint){var r=Physics3D._bullet,i=t>0;r.btGeneric6DofSpring2Constraint_enableSpring(this._btConstraint,e,i),i&&r.btGeneric6DofSpring2Constraint_setStiffness(this._btConstraint,e,t,a)}}setBounce(e,t){this._btConstraint&&(t=t<=0?0:t,Physics3D._bullet.btGeneric6DofSpring2Constraint_setBounce(this._btConstraint,e,t))}setDamping(e,t,a=!0){this._btConstraint&&(t=t<=0?0:t,Physics3D._bullet.btGeneric6DofSpring2Constraint_setDamping(this._btConstraint,e,t,a))}setEquilibriumPoint(e,t){Physics3D._bullet.btGeneric6DofSpring2Constraint_setEquilibriumPoint(this._btConstraint,e,t)}enableMotor(e,t){Physics3D._bullet.btGeneric6DofSpring2Constraint_enableMotor(this._btConstraint,e,t)}setServo(e,t){Physics3D._bullet.btGeneric6DofSpring2Constraint_setServo(this._btConstraint,e,t)}setTargetVelocity(e,t){Physics3D._bullet.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btConstraint,e,t)}setTargetPosition(e,t){Physics3D._bullet.btGeneric6DofSpring2Constraint_setServoTarget(this._btConstraint,e,t)}setMaxMotorForce(e,t){Physics3D._bullet.btGeneric6DofSpring2Constraint_setMaxMotorForce(this._btConstraint,e,t)}setParam(e,t,a){Physics3D._bullet.btTypedConstraint_setParam(this._btConstraint,e,t,a)}setFrames(){super.setFrames();var e=Physics3D._bullet;this._btConstraint&&e.btGeneric6DofSpring2Constraint_setFrames(this._btConstraint,this._btframATrans,this._btframBTrans)}_addToSimulation(){this._simulation&&this._simulation.addConstraint(this,this.disableCollisionsBetweenLinkedBodies)}_removeFromSimulation(){this._simulation.removeConstraint(this),this._simulation=null}_createConstraint(){var e=Physics3D._bullet;this._btConstraint=e.btGeneric6DofSpring2Constraint_create(this.ownBody.btColliderObject,this._btframATrans,this.connectedBody.btColliderObject,this._btframBTrans,ConfigurableConstraint.RO_XYZ),this._btJointFeedBackObj=e.btJointFeedback_create(this._btConstraint),e.btTypedConstraint_setJointFeedback(this._btConstraint,this._btJointFeedBackObj),this._initAllConstraintInfo(),e.btTypedConstraint_setEnabled(this._btConstraint,!0),this._simulation=this.getPhysicsSimulation(),this._addToSimulation()}_initAllConstraintInfo(){this.setLimit(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,this._xMotion,this._minLinearLimit.x,this._maxLinearLimit.x),this.setLimit(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,this._yMotion,this._minLinearLimit.y,this._maxLinearLimit.y),this.setLimit(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,this._zMotion,this._minLinearLimit.z,this._maxLinearLimit.z),this.setLimit(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,this._angularXMotion,this._minAngularLimit.x,this._maxAngularLimit.x),this.setLimit(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,this._angularYMotion,this._minAngularLimit.y,this._maxAngularLimit.y),this.setLimit(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,this._angularZMotion,this._minAngularLimit.z,this._maxAngularLimit.z),this.setSpring(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,this._linearLimitSpring.x),this.setSpring(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,this._linearLimitSpring.y),this.setSpring(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,this._linearLimitSpring.z),this.setSpring(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,this._angularLimitSpring.x),this.setSpring(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,this._angularLimitSpring.y),this.setSpring(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,this._angularLimitSpring.z),this.setBounce(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,this._linearBounce.x),this.setBounce(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,this._linearBounce.y),this.setBounce(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,this._linearBounce.z),this.setBounce(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,this._angularBounce.x),this.setBounce(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,this._angularBounce.y),this.setBounce(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,this._angularBounce.z),this.setDamping(ConfigurableConstraint.MOTION_LINEAR_INDEX_X,this._linearDamp.x),this.setDamping(ConfigurableConstraint.MOTION_LINEAR_INDEX_Y,this._linearDamp.y),this.setDamping(ConfigurableConstraint.MOTION_LINEAR_INDEX_Z,this._linearDamp.z),this.setDamping(ConfigurableConstraint.MOTION_ANGULAR_INDEX_X,this._angularDamp.x),this.setDamping(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y,this._angularDamp.y),this.setDamping(ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z,this._angularDamp.z),this.setFrames(),this.setEquilibriumPoint(0,0)}_onEnable(){this._btConstraint&&Physics3D._bullet.btTypedConstraint_setEnabled(this._btConstraint,!0)}_onDisable(){!this.connectedBody&&this._simulation&&this._removeFromSimulation(),this._btConstraint&&Physics3D._bullet.btTypedConstraint_setEnabled(this._btConstraint,!1)}_parse(e,t=null){super._parse(e),this._axis.fromArray(e.axis),this._secondaryAxis.fromArray(e.secondaryAxis);var a=e.linearLimit;this._minLinearLimit.setValue(-a,-a,-a),this._maxLinearLimit.setValue(a,a,a);var r=e.linearLimitSpring;this._linearLimitSpring.setValue(r,r,r);var i=e.linearLimitDamper;this._linearDamp.setValue(i,i,i);var n=e.linearLimitBounciness;this._linearBounce.setValue(n,n,n);var s=e.lowAngularXLimit,o=e.highAngularXLimit,l=e.angularYLimit,h=e.angularZLimit;this._minAngularLimit.setValue(s,-l,-h),this._maxAngularLimit.setValue(o,l,h);var c=e.highAngularXLimitBounciness,d=e.angularYLimitBounciness,u=e.angularZLimitBounciness;this._angularBounce.setValue(c,d,u);var _=e.angularXLimitSpring,m=e.angularYZLimitSpring;this._angularLimitSpring.setValue(_,m,m);var f=e.angularXLimitDamper,S=e.angularYZLimitDamper;this._angularDamp.setValue(f,S,S),this.XMotion=e.xMotion,this.YMotion=e.yMotion,this.ZMotion=e.zMotion,this.angularXMotion=e.angularXMotion,this.angularYMotion=e.angularYMotion,this.angularZMotion=e.angularZMotion,-1!=e.rigidbodyID&&-1!=e.connectRigidbodyID&&(t.component.push(this),t.data.push(e)),null!=e.breakForce&&(this.breakForce=e.breakForce),null!=e.breakTorque&&(this.breakTorque=e.breakTorque)}_parseInteractive(e=null,t=null){var a=t[e.rigidbodyID].getComponent(Rigidbody3D),r=t[e.connectRigidbodyID].getComponent(Rigidbody3D);this.ownBody=a,this.connectedBody=r}}ConfigurableConstraint.CONFIG_MOTION_TYPE_LOCKED=0,ConfigurableConstraint.CONFIG_MOTION_TYPE_LIMITED=1,ConfigurableConstraint.CONFIG_MOTION_TYPE_FREE=2,ConfigurableConstraint.MOTION_LINEAR_INDEX_X=0,ConfigurableConstraint.MOTION_LINEAR_INDEX_Y=1,ConfigurableConstraint.MOTION_LINEAR_INDEX_Z=2,ConfigurableConstraint.MOTION_ANGULAR_INDEX_X=3,ConfigurableConstraint.MOTION_ANGULAR_INDEX_Y=4,ConfigurableConstraint.MOTION_ANGULAR_INDEX_Z=5,ConfigurableConstraint.RO_XYZ=0,ConfigurableConstraint.RO_XZY=1,ConfigurableConstraint.RO_YXZ=2,ConfigurableConstraint.RO_YZX=3,ConfigurableConstraint.RO_ZXY=4,ConfigurableConstraint.RO_ZYX=5;class FixedConstraint extends ConstraintComponent{constructor(){super(ConstraintComponent.CONSTRAINT_FIXED_CONSTRAINT_TYPE),this.breakForce=-1,this.breakTorque=-1}_addToSimulation(){this._simulation&&this._simulation.addConstraint(this,this.disableCollisionsBetweenLinkedBodies)}_removeFromSimulation(){this._simulation.removeConstraint(this),this._simulation=null}_createConstraint(){if(this.ownBody&&this.ownBody._simulation&&this.connectedBody&&this.connectedBody._simulation){var e=Physics3D._bullet;this._btConstraint=e.btFixedConstraint_create(this.ownBody.btColliderObject,this._btframATrans,this.connectedBody.btColliderObject,this._btframBTrans),this._btJointFeedBackObj=e.btJointFeedback_create(this._btConstraint),e.btTypedConstraint_setJointFeedback(this._btConstraint,this._btJointFeedBackObj),e.btTypedConstraint_setEnabled(this._btConstraint,!0),this._simulation=this.getPhysicsSimulation(),this._addToSimulation()}}_onEnable(){this._btConstraint&&Physics3D._bullet.btTypedConstraint_setEnabled(this._btConstraint,!0)}_onDisable(){this.connectedBody||this._removeFromSimulation(),this._btConstraint&&Physics3D._bullet.btTypedConstraint_setEnabled(this._btConstraint,!1)}_parse(e,t=null){super._parse(e),-1!=e.rigidbodyID&&-1!=e.connectRigidbodyID&&(t.component.push(this),t.data.push(e)),null!=e.breakForce&&(this.breakForce=e.breakForce),null!=e.breakTorque&&(this.breakTorque=e.breakTorque)}_parseInteractive(e=null,t=null){var a=t[e.rigidbodyID].getComponent(Rigidbody3D),r=t[e.connectRigidbodyID].getComponent(Rigidbody3D);this.ownBody=a,this.connectedBody=r}}class PhysicsCollider extends PhysicsTriggerComponent{constructor(e=Physics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER,t=Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER){super(e,t),this._enableProcessCollisions=!1}_addToSimulation(){this._simulation._addPhysicsCollider(this,this._collisionGroup,this._canCollideWith)}_removeFromSimulation(){this._simulation._removePhysicsCollider(this)}_parse(e){null!=e.friction&&(this.friction=e.friction),null!=e.rollingFriction&&(this.rollingFriction=e.rollingFriction),null!=e.restitution&&(this.restitution=e.restitution),null!=e.isTrigger&&(this.isTrigger=e.isTrigger),super._parse(e),this._parseShape(e.shapes)}_onAdded(){var e=Physics3D._bullet,t=e.btCollisionObject_create();e.btCollisionObject_setUserIndex(t,this.id),e.btCollisionObject_forceActivationState(t,PhysicsComponent.ACTIVATIONSTATE_DISABLE_SIMULATION);var a=e.btCollisionObject_getCollisionFlags(t);this.owner.isStatic?((a&PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT)>0&&(a^=PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT),a|=PhysicsComponent.COLLISIONFLAGS_STATIC_OBJECT):((a&PhysicsComponent.COLLISIONFLAGS_STATIC_OBJECT)>0&&(a^=PhysicsComponent.COLLISIONFLAGS_STATIC_OBJECT),a|=PhysicsComponent.COLLISIONFLAGS_KINEMATIC_OBJECT),e.btCollisionObject_setCollisionFlags(t,a),this._btColliderObject=t,super._onAdded()}}let q=t.ClassUtils.regClass;q("CharacterController",CharacterController),q("Rigidbody3D",Rigidbody3D),q("PhysicsCollider",PhysicsCollider),q("ConfigurableConstraint",ConfigurableConstraint),q("FixedConstraint",FixedConstraint);var $=t.Script;class HLODRender extends BaseRender{constructor(){super(),this._singleton=!1}get curHLODRS(){return this._curHLODRS}set curHLODRS(e){this._curHLODRS||(this._renderElements=[],this._renderElements.push(new RenderElement),this._renderElements[0].render=this),e!=this._curHLODRS&&(this._changeMesh(e.HLODMesh),this._curHLODRS=e,this._createRenderelementByHLODElement(this._curHLODRS,this._renderElements[0]))}_createRenderelementByHLODElement(e,t){t.setGeometry(e.HLODMesh),t.material=e.material}_changeMesh(e){var t=this._shaderValues;this.boundsChange=!0;let a=MeshFilter._meshVerticeDefine;if(this.curHLODRS){MeshUtil.getMeshDefine(this.curHLODRS.HLODMesh.batchMesh,a);for(var r=0,i=a.length;r<i;r++)t.removeDefine(MeshFilter._meshVerticeDefine[r])}if(e){MeshUtil.getMeshDefine(e.batchMesh,a);for(r=0,i=MeshFilter._meshVerticeDefine.length;r<i;r++)t.addDefine(MeshFilter._meshVerticeDefine[r])}this._curSubBatchMeshBounds.length=e.batchSubMeshInfo.length;for(let t=0,a=e.batchSubMeshInfo.length;t<a;t++)this._curSubBatchMeshBounds[t]=this._curSubBatchMeshBounds[t]?this._curSubBatchMeshBounds[t]:new Bounds}_applyLightMapParams(){if(this._scene){var e=this._shaderValues,t=this._curHLODRS.lightmap;t&&t.lightmapColor?(e.setTexture(RenderableSprite3D.LIGHTMAP,t.lightmapColor),e.addDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),t.lightmapDirection?(e.setTexture(RenderableSprite3D.LIGHTMAP_DIRECTION,t.lightmapDirection),e.addDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)):e.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)):(e.removeDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),e.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL))}}_calculateBoundingBox(){if(this._curHLODRS){var e=this._curHLODRS.HLODMesh;if(e){var t=this._transform.worldMatrix;e.batchMesh.bounds._tranform(t,this._bounds)}for(let a=0,r=this._curSubBatchMeshBounds.length;a<r;a++)e.batchSubMeshInfo[a].bounds._tranform(t,this._curSubBatchMeshBounds[a])}}_renderUpdate(e,a){this._applyLightMapParams(),this._setShaderValue(Sprite3D.WORLDMATRIX,t.ShaderDataType.Matrix4x4,this._transform.worldMatrix)}_needRender(e,t){if(e){if(e.intersects(this.bounds)){let t=this.curHLODRS.HLODMesh.drawSubMeshs,a=this._curHLODRS.HLODMesh.batchSubMeshInfo;t.length=0;for(let r=0,i=this._curSubBatchMeshBounds.length;r<i;r++)e.intersects(this._curSubBatchMeshBounds[r])&&t.push(a[r]);return this._curHLODRS.HLODMesh.drawSubMeshs=t,!0}return!1}return!0}onEnable(){super.onEnable()}onDisable(){super.onDisable()}onDestroy(){super.onDestroy(),this._renderElements.forEach((e=>{e.material._removeReference(),e.destroy()})),this._renderElements=null}_cloneTo(e){}}const ee=new t.Vector3;class HLOD extends t.Component{constructor(){super(),this._singleton=!0}get bounds(){return this._bounds}set bounds(e){this._bounds=e,this.recalculateBounds()}get lodResource(){return this._resourceList}set lodResource(e){this._resourceList=e}set lodCullRateArray(e){e.sort(((e,t)=>t-e)),this._lodRateArray=e}get lodCullRateArray(){return this._lodRateArray}_applyLODResource(e){this._curLODSource=e;let t=e.resources;for(let e=0,a=t.length;e<a;e++){let a=this.owner.addComponent(HLODRender);this._curRender.push(a),a.curHLODRS=t[e]}}_releaseGroupRender(){this._curRender.forEach((e=>{e.destroy()})),this._curRender=[]}recalculateBounds(){let e=this._bounds.getExtent();this._size=2*Math.max(e.x,e.y,e.z)}onPreRender(){let e=this.owner.scene.cullInfoCamera,a=e.maxlocalYDistance,r=e.boundFrustum;t.Vector3.subtract(this.owner.transform.position,e.transform.position,ee);let i=ee.length();if(i>e.farPlane||0==r.containsPoint(this.owner.transform.position))return;let n=i/e.farPlane*a,s=this._size/n;for(let e=0;e<this._lodRateArray.length;e++)if(!(s<this._lodRateArray[e])){this.applyResource(this._resourceList[e]);break}}onUpdate(){this._curLODSource.updateMark=Camera._updateMark}applyResource(e){e!=this._curLODSource&&(e.loaded?this._curLODSource&&(this._releaseGroupRender(),this._applyLODResource(e)):e.load(this.applyResource,this))}onEnable(){super.onEnable()}onDisable(){super.onDisable()}onDestroy(){super.onDestroy()}_cloneTo(e){throw"cant clone HLOD"}}class StaticBatchSubInfo{constructor(){this.indexStart=0,this.indexCount=0,this.meshBounds=new Bounds(new t.Vector3,new t.Vector3),this.needRender=!1}}class StaticBatchSubMesh extends GeometryElement{constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this.subInfos=[]}addSubMesh(e,t,a){let r=new StaticBatchSubInfo;r.indexCount=e,r.indexStart=t,a.cloneTo(r.meshBounds),this.subInfos.push(r)}_getType(){return StaticBatchSubMesh._type}_updateRenderParams(e){this.clearRenderParams();let a=e.camera.transform.position;this.subInfos.sort(((e,r)=>{let i=e.meshBounds.getCenter(),n=t.Vector3.distanceSquared(i,a),s=r.meshBounds.getCenter();return n-t.Vector3.distanceSquared(s,a)}));for(const e of this.subInfos)e.needRender&&this.setDrawElemenParams(e.indexCount,e.indexStart*this.indexByteCount)}_prepareRender(e){return!!this.subInfos.find((e=>e.needRender))}_render(e){super._render(e)}destroy(){for(const e of this.subInfos);this.subInfos=null}}StaticBatchSubMesh._type=GeometryElement._typeCounter++;const te=new t.Matrix4x4,ae=[0,1,2],re=[0,2,1];class StaticBatchMesh{static create(e){let a,r=new StaticBatchMesh,i=e.vertexCount,n=e.indexCount,s=e.vertexDec,o=s.vertexStride/4,l=new ArrayBuffer(s.vertexStride*i),h=new Float32Array(l),c=t.IndexFormat.UInt16,d=2;i>65535?(c=t.IndexFormat.UInt32,d=4,a=new Uint32Array(n)):a=new Uint16Array(n),s.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0),s.getVertexElementByUsage(t.VertexMesh.MESH_NORMAL0),s.getVertexElementByUsage(t.VertexMesh.MESH_TEXTURECOORDINATE1),s.getVertexElementByUsage(t.VertexMesh.MESH_TANGENT0);let u,_=0,m=0,f=0;for(const i of e.renders){let e=i.lightmapScaleOffset;u||(u=r.bounds,i.bounds.cloneTo(u)),Bounds.merge(u,i.bounds,u);let n=i.owner,l=n.transform._isFrontFaceInvert,S=n.transform.worldMatrix,g=te;S.invert(g),g.transpose();let p=i.getMesh(),D=p.vertexCount,T=p.indexCount,E=p._vertexBuffer.getFloat32Data();h.set(E,_);for(let a=0;a<D;a++){let r=a*o;for(const a of s._vertexElements)switch(r+=a.offset/4,a.elementUsage){case t.VertexMesh.MESH_POSITION0:Utils3D.transformVector3ArrayToVector3ArrayCoordinate(E,r,S,h,_+r);break;case t.VertexMesh.MESH_NORMAL0:case t.VertexMesh.MESH_TANGENT0:Utils3D.transformVector3ArrayToVector3ArrayNormal(E,r,g,h,_+r);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:Utils3D.transformLightingMapTexcoordArray(E,r,e,h,_+r)}}let C=p._indexBuffer.getData(),A=l?re:ae;for(let e=0;e<T;e+=3)a[f+e]=C[e+A[0]]+m,a[f+e+1]=C[e+A[1]]+m,a[f+e+2]=C[e+A[2]]+m;let R=p.subMeshCount;for(let e=0;e<R;e++){let t=i.sharedMaterials[e]||BlinnPhongMaterial.defaultMaterial,a=r._staticSubMeshes.get(t);a||(a=new StaticBatchSubMesh,a.indexByteCount=d,r._staticSubMeshes.set(t,a),a.bufferState=r._bufferState,a.indexFormat=c);let n=p.getSubMesh(e);a.addSubMesh(n.indexCount,n._indexStart+f,i.bounds)}_+=E.length,m+=D,f+=C.length}let S=t.LayaGL.renderOBJCreate.createVertexBuffer3D(l.byteLength,t.BufferUsage.Static,!1);S.vertexDeclaration=s,S.setData(l);let g=t.LayaGL.renderOBJCreate.createIndexBuffer3D(c,n,t.BufferUsage.Static,!1);return g.setData(a),r.setBuffer(S,g),r}constructor(){this._bufferState=new t.BufferState,this._staticSubMeshes=new Map,this.bounds=new Bounds}setBuffer(e,t){let a=this._bufferState;this._vertexBuffer=e,this._indexBuffer=t,a.applyState([e],t)}destroy(){this._staticSubMeshes.forEach((e=>{e.destroy()})),this._staticSubMeshes.clear(),this._staticSubMeshes=null,this._bufferState.destroy()}}class StaticBatchMeshRenderElement extends RenderElement{constructor(){super()}getInvertFront(){return!1}}class StaticBatchMeshRender extends BaseRender{static create(e){let t=new StaticBatchMeshRender;return t.mergeInfo=e,t}get staticMesh(){return this._staticMesh}get mergeInfo(){return this._mergeInfo}set mergeInfo(e){this._mergeInfo=e;let t=StaticBatchMesh.create(e);this._staticMesh=t,this.lightmapIndex=e.lightmapIndex,this._staticMesh=t,this.geometryBounds=t.bounds;let a=MeshFilter._meshVerticeDefine,r=this._shaderValues;this._getMeshDefine(t,a);for(const e of a)r.addDefine(e);this._renderElements.forEach((e=>{e.material._removeReference(),e.destroy()})),this._renderElements=[],t._staticSubMeshes.forEach(((e,t)=>{let a=new StaticBatchMeshRenderElement;this._renderElements.push(a),a.render=this,a.material=t,a.setGeometry(e),t._addReference()})),t.bounds.cloneTo(this.bounds)}constructor(){super(),this._singleton=!1}_calculateBoundingBox(){}_renderUpdate(e,a){this._applyLightMapParams(),this._setShaderValue(Sprite3D.WORLDMATRIX,t.ShaderDataType.Matrix4x4,t.Matrix4x4.DEFAULT),this._worldParams.x=1,this._setShaderValue(Sprite3D.WORLDINVERTFRONT,t.ShaderDataType.Vector4,this._worldParams)}_getMeshDefine(e,a){let r=e._vertexBuffer.vertexDeclaration._vertexElements;for(const e of r)switch(e.elementUsage){case t.VertexMesh.MESH_COLOR0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);break;case t.VertexMesh.MESH_TEXTURECOORDINATE0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);break;case t.VertexMesh.MESH_TANGENT0:a.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT)}}_needRender(e,t){if(e){if(e.intersects(this.bounds)){let t=!1;return this.staticMesh._staticSubMeshes.forEach((a=>{for(const r of a.subInfos)r.needRender=e.intersects(r.meshBounds),t=t||r.needRender})),t}return!1}return!0}onEnable(){super.onEnable(),this.mergeInfo.renders.forEach((t=>{t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_Batch,!0)}))}onDisable(){super.onDisable(),this.mergeInfo.renders.forEach((t=>{t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_Batch,!1)}))}onDestroy(){super.onDestroy(),this._renderElements.forEach((e=>{e.material._removeReference(),e.destroy()})),this._renderElements=null,this._staticMesh.destroy(),this._staticMesh=null}_cloneTo(e){e.mergeInfo=this.mergeInfo}}class StaticMeshMergeInfo{static create(e){let t=e.getMesh();e.owner;let a=new StaticMeshMergeInfo;return a.lightmapIndex=e.lightmapIndex,a.receiveShadow=e.receiveShadow,a.vertexDec=t?t.getVertexDeclaration():null,a}get renders(){return this._renders}constructor(){this._renders=[],this.vertexCount=0,this.indexCount=0}match(e){let t=e.getMesh();e.owner;let a=!0;return a=a&&this.lightmapIndex==e.lightmapIndex,a=a&&this.receiveShadow==e.receiveShadow,a=a&&this.vertexDec==t.getVertexDeclaration(),a}addElement(e){this.renders.push(e);let t=e.getMesh();this.vertexCount+=t.vertexCount,this.indexCount+=t.indexCount}destroy(){this._renders=null}}class TransLargeUBOUtils{constructor(e,t,a){this.currentlength=0,this.bindUBO=e,this.defaultSubData=a,e._reset(TransLargeUBOUtils.configStartLength*this.defaultSubData.getbyteLength()),this.subDataParamMap=t,this.maxlength=TransLargeUBOUtils.configStartLength,this.subDataMap=[],this.pool=[],this.subDataMap.push(a),this.currentlength++}create(){if(this.pool.length>0){const e=this.pool.pop();return e._isInPool=!1,e}this.maxlength==this.currentlength&&this.reset();let e=new Map;this.subDataParamMap.forEach(((a,r)=>{e.set(t.Shader3D.propertyNameToID(r),a)}));let a=new t.SubUniformBufferData(e,this.currentlength++);return this.subDataMap.push(a),a}recover(e){e._isInPool||(this.pool.push(e),e._isInPool=!0)}reset(){this.maxlength+=TransLargeUBOUtils.addStep,this.bindUBO._reset(this.maxlength*this.defaultSubData.getbyteLength()),this.subDataMap.forEach((e=>{this.bindUBO.setDataByByUniformBufferDataOffset(e,e._offset)}))}updateSubData(e){this.bindUBO.setDataByByUniformBufferDataOffset(e,e._offset),e._needUpdate=!1}updateBindRange(e){let t=e.getbyteLength();this.bindUBO._bindBufferRange(e._offset*t,t)}destroy(){this.subDataMap.forEach((e=>{e.destroy()})),delete this.subDataMap,delete this.pool,this.subDataMap=null,this.pool=null}}TransLargeUBOUtils.configStartLength=1024,TransLargeUBOUtils.addStep=512;const ie=new t.Vector2,ne=new Ray(new t.Vector3,new t.Vector3),se=new HitResult;t.InputManager.prototype.getSprite3DUnderPoint=function(a,r){se.succeeded=!1;var i=a*=this._stage.clientScaleX,n=r*=this._stage.clientScaleY,s=a/t.Render._mainCanvas.width,o=r/t.Render._mainCanvas.height;a=this._stage.width*s,r=this._stage.height*o,ie.setValue(a,r);for(let a of this._stage._scene3Ds){let r=a._physicsSimulation,s=a._UI3DManager,o=a._cameraPool;for(let a=o.length-1;a>=0;a--){let l=o[a],h=l.viewport,c=t.Config3D.pixelRatio;if(i>=h.x&&n>=h.y&&i<=h.width/c&&n<=h.height/c){l.viewportPointToRay(ie,ne);let t=s.rayCast(ne);if(t)return t;if(!r)continue;if(r.rayCast(ne,se)||l.clearFlag===e.CameraClearFlags.SolidColor||l.clearFlag===e.CameraClearFlags.Sky)break}}if(se.succeeded)return se.collider.owner}return null};class GradientDataVector2{get gradientCount(){return this._currentLength/3}constructor(){this._currentLength=0,this._elements=new Float32Array(12)}add(e,t){this._currentLength<8?(6===this._currentLength&&1!==e&&(e=1,console.log("GradientDataVector2 warning:the forth key is  be force set to 1.")),this._elements[this._currentLength++]=e,this._elements[this._currentLength++]=t.x,this._elements[this._currentLength++]=t.y):console.log("GradientDataVector2 warning:data count must lessEqual than 4")}cloneTo(e){var t=e;t._currentLength=this._currentLength;for(var a=t._elements,r=0,i=this._elements.length;r<i;r++)a[r]=this._elements[r]}clone(){var e=new GradientDataVector2;return this.cloneTo(e),e}}class MaterialInstanceProperty{constructor(){this._isNeedUpdate=!1}createInstanceVertexBuffer3D(){this._instanceData=new Float32Array(DrawMeshInstancedCMD.maxInstanceCount*this._vertexStride),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this._instanceData.length,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=this._vertexDeclaration,this._vertexBuffer.instanceBuffer=!0}updateVertexBufferData(e){if(!this._isNeedUpdate)return;let t,a=this._instanceData,r=this._value,i=this._value.length,n=this._vertexStride,s=0;switch(this._value instanceof Float32Array||(s=1),s){case 0:a.set(r,0);break;case 1:for(let e=0;e<i;e++)t=r[e],t.writeTo(a,e*n)}this._vertexBuffer.orphanStorage(),this._vertexBuffer.setData(a.buffer,0,0,4*e*n)}destroy(){delete this._value,delete this._instanceData,this._vertexDeclaration=null,this._vertexBuffer.destroy()}}var oe;e.InstanceLocation=void 0,(oe=e.InstanceLocation||(e.InstanceLocation={}))[oe.CUSTOME0=12]="CUSTOME0",oe[oe.CUSTOME1=13]="CUSTOME1",oe[oe.CUSTOME2=14]="CUSTOME2",oe[oe.CUSTOME3=15]="CUSTOME3";class MaterialInstancePropertyBlock{constructor(){this._type=0,this._propertyMap={}}_checkPropertyLegal(e,t,a,r){if(r._vertexDeclaration._vertexElements[0]._elementFormat!==e)throw"Data exists and format does not match";if(r._name!==t)throw"You cannot add a new property to an existing attributeLocation,Please use another attributeLocation"}_creatProperty(e,a,r,i,n){var s=this._propertyMap[n]=new MaterialInstanceProperty;s._name=e,s._value=a,s._vertexDeclaration=new t.VertexDeclaration(r,[new t.VertexElement(0,i,n)]),s._isNeedUpdate=!0,s._vertexStride=r/4,s.createInstanceVertexBuffer3D()}setVectorArray(e,a,r){var i=this._propertyMap[r];i?(this._checkPropertyLegal(t.VertexElementFormat.Vector4,e,r,i),i._value=a,i._isNeedUpdate=!0):this._creatProperty(e,a,16,t.VertexElementFormat.Vector4,r)}setVector3Array(e,a,r){var i=this._propertyMap[r];i?(this._checkPropertyLegal(t.VertexElementFormat.Vector3,e,r,i),i._value=a,i._isNeedUpdate=!0):this._creatProperty(e,a,12,t.VertexElementFormat.Vector3,r)}setVector2Array(e,a,r){var i=this._propertyMap[r];i?(this._checkPropertyLegal(t.VertexElementFormat.Vector2,e,r,i),i._value=a,i._isNeedUpdate=!0):this._creatProperty(e,a,8,t.VertexElementFormat.Vector2,r)}setNumberArray(e,a,r){var i=this._propertyMap[r];i?(this._checkPropertyLegal(t.VertexElementFormat.Single,e,r,i),i._value=a,i._isNeedUpdate=!0):this._creatProperty(e,a,4,t.VertexElementFormat.Single,r)}getPropertyArray(e){var t=this._propertyMap[e];return t?t._value:null}clear(){for(var e in this._propertyMap)this._propertyMap[e].destroy();this._propertyMap={}}}MaterialInstancePropertyBlock.INSTANCETYPE_ATTRIBUTE=0,MaterialInstancePropertyBlock.INSTANCETYPE_UNIFORMBUFFER=1,e.ACESShaderLib=ACESShaderLib,e.AlternateLightQueue=AlternateLightQueue,e.AnimationClip=AnimationClip,e.AnimationClipParser03=AnimationClipParser03,e.AnimationClipParser04=AnimationClipParser04,e.AnimationEvent=AnimationEvent,e.Animator=Animator,e.AnimatorController=AnimatorController,e.AnimatorControllerLayer=AnimatorControllerLayer,e.AnimatorPlayState=AnimatorPlayState,e.AnimatorResource=AnimatorResource,e.AnimatorState=AnimatorState,e.AnimatorStateScript=class{setPlayScriptInfo(e,t,a){this.playStateInfo.animator=e,this.playStateInfo.layerindex=t,this.playStateInfo.playState=a}constructor(){this.playStateInfo={animator:null,layerindex:-1,playState:null}}onStateEnter(){}onStateUpdate(e){}onStateExit(){}},e.AnimatorTransition=AnimatorTransition,e.AreaLightCom=AreaLightCom,e.AvatarMask=AvatarMask,e.AxiGamepad=AxiGamepad,e.BVHCullPass=BVHCullPass,e.BVHRenderBox=BVHRenderBox,e.BVHRenderSpatial=BVHRenderSpatial,e.BVHSceneRenderManager=BVHSceneRenderManager,e.BVHSpatial=BVHSpatial,e.BVHSpatialBox=BVHSpatialBox,e.BVHSpatialConfig=BVHSpatialConfig,e.BVHSpatialManager=BVHSpatialManager,e.BaseCamera=BaseCamera,e.BaseRender=BaseRender,e.BaseRenderNode=BaseRenderNode,e.BaseRenderQueue=BaseRenderQueue,e.BaseShape=BaseShape,e.BatchMark=BatchMark,e.BatchRender=BatchRender,e.BlinnPhongMaterial=BlinnPhongMaterial,e.BlinnPhongShaderInit=BlinnPhongShaderInit,e.BlitFrameBufferCMD=BlitFrameBufferCMD,e.BlitScreenQuadCMD=BlitScreenQuadCMD,e.BlitScreenShaderInit=BlitScreenShaderInit,e.BloomEffect=BloomEffect,e.BoundBox=BoundBox,e.BoundFrustum=BoundFrustum,e.BoundSphere=BoundSphere,e.Bounds=Bounds,e.BoundsImpl=BoundsImpl,e.BoxColliderShape=BoxColliderShape,e.BoxShape=BoxShape,e.BulletInteractive=BulletInteractive,e.Burst=Burst,e.ButtonGamepad=ButtonGamepad,e.Camera=Camera,e.CameraCullInfo=CameraCullInfo,e.CapsuleColliderShape=CapsuleColliderShape,e.CharacterController=CharacterController,e.CircleShape=CircleShape,e.ClearRenderTextureCMD=ClearRenderTextureCMD,e.Cluster=Cluster,e.ColliderShape=ColliderShape,e.Collision=Collision,e.CollisionTool=CollisionTool,e.CollisionUtils=CollisionUtils,e.ColorGradEffect=ColorGradEffect,e.ColorOverLifetime=ColorOverLifetime,e.Command=Command,e.CommandBuffer=CommandBuffer,e.CompoundColliderShape=CompoundColliderShape,e.ConeColliderShape=ConeColliderShape,e.ConeShape=ConeShape,e.ConfigurableConstraint=ConfigurableConstraint,e.Constraint3D=class{constructor(){}},e.ConstraintComponent=ConstraintComponent,e.ContactPoint=ContactPoint,e.ContainmentType=ContainmentType,e.CullPassBase=CullPassBase,e.CylinderColliderShape=CylinderColliderShape,e.DepthCasterData=DepthCasterData,e.DepthPass=DepthPass,e.DirectionLight=DirectionLight,e.DirectionLightCom=DirectionLightCom,e.DrawMeshCMD=DrawMeshCMD,e.DrawMeshInstancedCMD=DrawMeshInstancedCMD,e.DrawRenderCMD=DrawRenderCMD,e.EffectMaterial=EffectMaterial,e.Emission=Emission,e.ExtendTerrainMaterial=ExtendTerrainMaterial,e.FixedConstraint=FixedConstraint,e.FloatKeyframe=FloatKeyframe,e.FrameOverTime=FrameOverTime,e.FrustumCulling=FrustumCulling,e.GaussianDoF=GaussianDoF,e.GeometryElement=GeometryElement,e.Gradient=Gradient,e.GradientAngularVelocity=GradientAngularVelocity,e.GradientColor=GradientColor,e.GradientDataInt=GradientDataInt,e.GradientDataNumber=GradientDataNumber,e.GradientDataVector2=GradientDataVector2,e.GradientMode=GradientMode,e.GradientSize=GradientSize,e.GradientVelocity=GradientVelocity,e.HLOD=HLOD,e.HLODBatchMesh=class extends GeometryElement{constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElement)}set batchMesh(e){this._mesh!=e&&(this._mesh&&this._mesh._removeReference(),this.indexFormat=e.indexFormat,this._mesh=e,this._mesh._addReference())}get batchMesh(){return this._mesh}set batchSubMeshInfo(e){this._batchSubMeshInfos=e}get batchSubMeshInfo(){return this._batchSubMeshInfos}set drawSubMeshs(e){this._drawSubMeshs=e}get drawSubMeshs(){return this._drawSubMeshs}_prepareRender(e){return this._mesh._uploadVerticesData(),!0}_updateRenderParams(e){var a,r=this._mesh;switch(r.indexFormat){case t.IndexFormat.UInt32:a=4;break;case t.IndexFormat.UInt16:a=2;break;case t.IndexFormat.UInt8:a=1}this.clearRenderParams(),this.bufferState=r._bufferState,this._drawSubMeshs&&this._drawSubMeshs.forEach((e=>{this.setDrawElemenParams(e.drawPramas.y,e.drawPramas.x*a)}))}destroy(){this._mesh&&this._mesh._removeReference(),delete this._batchSubMeshInfos,delete this._drawSubMeshs}},e.HLODBatchSubMesh=class{},e.HLODConfig=class{},e.HLODElement=class{get material(){return this._material}set material(e){this._material!=e&&(this._material&&this._material._removeReference(),this._material=e,this._material._addReference())}get lightmap(){return this._lightmap}set lightmap(e){this._lightmap!=e&&(this._lightmap&&(this._lightmap.lightmapColor._removeReference(),this._lightmap.lightmapDirection._removeReference()),this._lightmap=e,this._lightmap.lightmapColor._addReference(),this._lightmap.lightmapDirection._addReference()),this._lightmap=e}release(){this.HLODMesh.destroy(),this.material.destroy(),this.lightmap&&(this._lightmap.lightmapColor.destroy(),this._lightmap.lightmapDirection.destroy())}},e.HLODRender=HLODRender,e.HLODResourceGroup=class{load(e,a){this.loaded||t.Laya.loader.load(this.url,t.Handler.create(this,(t=>{e.apply(a,[this]),this.loaded=!0}),[this]))}release(){this.resources.forEach((e=>{e.release()})),this.loaded=!1}},e.HeightfieldTerrainShape=class extends ColliderShape{constructor(e,a,r,i,n,s){super(),this.dataPtr=0,this.initSize=new t.Vector3,this._type=ColliderShape.SHAPETYPES_HEIGHTFIELDTERRAIN;var o=ILaya3D.Physics3D._bullet;this.needsCustomCollisionCallback=!0;let l=5;if(e instanceof Uint16Array)l=3;else if(e instanceof Uint8Array)l=5;else{if(!(e instanceof Float32Array))throw"bad heightfield data";l=0}if(this.dataPtr=o._malloc(e.byteLength),window.conch)o.copyJSArray(this.dataPtr,e.buffer);else{let a=t.ILaya.Laya.WasmModules.bullet.memory.buffer;new Uint8Array(a,this.dataPtr,e.byteLength).set(new Uint8Array(e.buffer))}this._btShape=o.btHeightfieldTerrainShape_create(a,r,this.dataPtr,s,i,n,l)}setMargin(e){ILaya3D.Physics3D._bullet.btConcaveShape_setMargin(this._btShape,e)}_setScale(e){super._setScale(e)}destroy(){(super.destroy(),this.dataPtr)&&ILaya3D.Physics3D._bullet._free(this.dataPtr)}clone(){throw"not imp"}},e.HemisphereShape=HemisphereShape,e.HitResult=HitResult,e.ILaya3D=ILaya3D,e.IndexBuffer3D=IndexBuffer3D,e.InstanceBatchManager=InstanceBatchManager,e.InstanceRenderElement=InstanceRenderElement,e.InstanceRenderElementOBJ=InstanceRenderElementOBJ,e.Keyframe=Keyframe,e.KeyframeNode=KeyframeNode,e.KeyframeNodeList=KeyframeNodeList,e.KeyframeNodeOwner=KeyframeNodeOwner,e.LODGroup=LODGroup,e.LODInfo=LODInfo,e.Laya3D=Laya3D,e.Light=Light,e.LightQueue=LightQueue,e.LightSprite=LightSprite,e.Lightmap=Lightmap,e.LoadModelV04=LoadModelV04,e.LoadModelV05=LoadModelV05,e.Material=Material,e.MaterialInstanceProperty=MaterialInstanceProperty,e.MaterialInstancePropertyBlock=MaterialInstancePropertyBlock,e.MaterialParser=MaterialParser,e.Mesh=Mesh,e.MeshColliderShape=MeshColliderShape,e.MeshFilter=MeshFilter,e.MeshInstanceGeometry=MeshInstanceGeometry,e.MeshReader=MeshReader,e.MeshRenderer=MeshRenderer,e.MeshSprite3D=MeshSprite3D,e.MeshSprite3DShaderDeclaration=MeshSprite3DShaderDeclaration,e.MeshUtil=MeshUtil,e.MorphTarget=MorphTarget,e.MorphTargetChannel=MorphTargetChannel,e.MorphTargetData=MorphTargetData,e.NativeBaseRenderNode=NativeBaseRenderNode,e.NativeBaseRenderQueue=NativeBaseRenderQueue,e.NativeBounds=NativeBounds,e.NativeCameraCullInfo=NativeCameraCullInfo,e.NativeCommandUniformMap=NativeCommandUniformMap,e.NativeCullPassBase=NativeCullPassBase,e.NativeIndexBuffer3D=NativeIndexBuffer3D,e.NativeInstanceRenderElementOBJ=NativeInstanceRenderElementOBJ,e.NativeRenderContext3DOBJ=NativeRenderContext3DOBJ,e.NativeRenderElementOBJ=NativeRenderElementOBJ,e.NativeRenderGeometryElementOBJ=NativeRenderGeometryElementOBJ,e.NativeRenderOBJCreateUtil=NativeRenderOBJCreateUtil,e.NativeRenderState=NativeRenderState,e.NativeSceneRenderManager=NativeSceneRenderManager,e.NativeShaderData=NativeShaderData,e.NativeShaderInstance=NativeShaderInstance,e.NativeShadowCullInfo=NativeShadowCullInfo,e.NativeSkinRenderElementOBJ=NativeSkinRenderElementOBJ,e.NativeTransform3D=NativeTransform3D,e.NativeUniformBufferObject=NativeUniformBufferObject,e.NativeVertexBuffer3D=NativeVertexBuffer3D,e.PBRDefaultDFG=PBRDefaultDFG,e.PBRMaterial=PBRMaterial,e.PBRShaderLib=PBRShaderLib,e.PBRStandardMaterial=PBRStandardMaterial,e.PBRStandardShaderInit=PBRStandardShaderInit,e.ParseJSON=ParseJSON,e.ParticleShuriKenShaderInit=ParticleShuriKenShaderInit,e.Physics3D=Physics3D,e.Physics3DUtils=Physics3DUtils,e.PhysicsCollider=PhysicsCollider,e.PhysicsComponent=PhysicsComponent,e.PhysicsSettings=PhysicsSettings,e.PhysicsSimulation=PhysicsSimulation,e.PhysicsTriggerComponent=PhysicsTriggerComponent,e.PhysicsUpdateList=PhysicsUpdateList,e.Picker=Picker,e.PixelLineData=PixelLineData,e.PixelLineFilter=PixelLineFilter,e.PixelLineMaterial=PixelLineMaterial,e.PixelLineRenderer=PixelLineRenderer,e.PixelLineSprite3D=class extends RenderableSprite3D{get maxLineCount(){return this._render.maxLineCount}set maxLineCount(e){this._render.maxLineCount=e}get lineCount(){return this._render.lineCount}get pixelLineRenderer(){return this._render}constructor(e=2,t=null){super(t),this._isRenderActive=!1,this._isInRenders=!1,this._render=this.addComponent(PixelLineRenderer),this._geometryFilter=this._render._pixelLineFilter,this._render.maxLineCount=e,(this._render.material=new UnlitMaterial).enableVertexColor=!0}addLine(e,t,a,r){this._render.addLine(e,t,a,r)}addLines(e){this._render.addLines(e)}removeLine(e){this._render.removeLine(e)}setLine(e,t,a,r,i){this._render.setLine(e,t,a,r,i)}getLine(e,t){this._render.getLine(e,t)}clear(){this._render.clear()}_create(){return new Sprite3D}},e.PixelLineVertex=PixelLineVertex,e.Plane=Plane,e.PointLight=PointLight,e.PointLightCom=PointLightCom,e.PostProcess=PostProcess,e.PostProcessEffect=PostProcessEffect,e.PostProcessRenderContext=PostProcessRenderContext,e.PrimitiveMesh=PrimitiveMesh,e.QuaternionKeyframe=QuaternionKeyframe,e.QuickSort=QuickSort,e.Rand=Rand,e.RandX=RandX,e.Ray=Ray,e.RaycastVehicle=RaycastVehicle,e.RaycastWheel=RaycastWheel,e.ReflectionProbe=ReflectionProbe,e.ReflectionProbeManager=ReflectionProbeManager,e.RenderContext3D=RenderContext3D,e.RenderContext3DOBJ=RenderContext3DOBJ,e.RenderElement=RenderElement,e.RenderElementBatch=RenderElementBatch,e.RenderElementOBJ=RenderElementOBJ,e.RenderGeometryElementOBJ=RenderGeometryElementOBJ,e.RenderOBJCreateUtil=RenderOBJCreateUtil,e.RenderableSprite3D=RenderableSprite3D,e.Rigidbody3D=Rigidbody3D,e.RotationOverLifetime=RotationOverLifetime,e.ScalableAO=ScalableAO,e.Scene3D=Scene3D,e.Scene3DShaderDeclaration=Scene3DShaderDeclaration,e.SceneRenderManager=SceneRenderManager,e.SceneRenderManagerOBJ=SceneRenderManagerOBJ,e.ScreenQuad=ScreenQuad,e.Script3D=$,e.SetGlobalShaderDataCMD=SetGlobalShaderDataCMD,e.SetRenderTargetCMD=SetRenderTargetCMD,e.SetShaderDataCMD=SetShaderDataCMD,e.ShaderInit3D=ShaderInit3D,e.ShaderParser=ShaderParser,e.ShadowCasterPass=ShadowCasterPass,e.ShadowCullInfo=ShadowCullInfo,e.ShadowSliceData=ShadowSliceData,e.ShadowSpotData=ShadowSpotData,e.ShadowUtils=ShadowUtils,e.ShapeUtils=ShapeUtils,e.ShuriKenParticle3D=ShuriKenParticle3D,e.ShuriKenParticle3DShaderDeclaration=ShuriKenParticle3DShaderDeclaration,e.ShurikenParticleData=ShurikenParticleData,e.ShurikenParticleInstanceSystem=ShurikenParticleInstanceSystem,e.ShurikenParticleMaterial=ShurikenParticleMaterial,e.ShurikenParticleRenderer=ShurikenParticleRenderer,e.ShurikenParticleSystem=ShurikenParticleSystem,e.SimpleSkinnedMeshRenderer=SimpleSkinnedMeshRenderer,e.SimpleSkinnedMeshSprite3D=SimpleSkinnedMeshSprite3D,e.Size=Size,e.SizeOverLifetime=SizeOverLifetime,e.SkinRenderElement=SkinRenderElement,e.SkinRenderElementOBJ=SkinRenderElementOBJ,e.SkinnedMeshRenderer=SkinnedMeshRenderer,e.SkinnedMeshSprite3D=SkinnedMeshSprite3D,e.SkinnedMeshSprite3DShaderDeclaration=SkinnedMeshSprite3DShaderDeclaration,e.SkyBox=SkyBox,e.SkyBoxMaterial=SkyBoxMaterial,e.SkyBoxShaderInit=SkyBoxShaderInit,e.SkyDome=SkyDome,e.SkyPanoramicMaterial=SkyPanoramicMaterial,e.SkyPanoramicShaderInit=SkyPanoramicShaderInit,e.SkyProceduralMaterial=SkyProceduralMaterial,e.SkyProceduralShaderInit=SkyProceduralShaderInit,e.SkyRenderer=SkyRenderer,e.SphereColliderShape=SphereColliderShape,e.SphereShape=SphereShape,e.SphericalHarmonicsL2=SphericalHarmonicsL2,e.SphericalHarmonicsL2Generater=SphericalHarmonicsL2Generater,e.SpotLight=SpotLight,e.SpotLightCom=SpotLightCom,e.Sprite3D=Sprite3D,e.Sprite3DRenderDeclaration=Sprite3DRenderDeclaration,e.StartFrame=StartFrame,e.StatiVertexMergeBatchRender=StatiVertexMergeBatchRender,e.StaticBatchMesh=StaticBatchMesh,e.StaticBatchMeshRender=StaticBatchMeshRender,e.StaticBatchMeshRenderElement=StaticBatchMeshRenderElement,e.StaticBatchSubInfo=StaticBatchSubInfo,e.StaticBatchSubMesh=StaticBatchSubMesh,e.StaticBatchVolume=StaticBatchVolume,e.StaticInstanceBatchRender=StaticInstanceBatchRender,e.StaticMeshBatchManager=class{constructor(){this.meshVertexDecSet=new Set}combine(e){for(const t of e){let e=!1;for(const a of this.meshVertexDecSet)a.match(t)&&(e=!0,a.addElement(t));if(!e){let e=StaticMeshMergeInfo.create(t);e.addElement(t),this.meshVertexDecSet.add(e)}}let t=[];for(const e of this.meshVertexDecSet)t.push(StaticBatchMeshRender.create(e));return this.meshVertexDecSet.clear(),t}merge(e){return StaticBatchMeshRender.create(e)}},e.StaticMeshMergeInfo=StaticMeshMergeInfo,e.StaticPlaneColliderShape=StaticPlaneColliderShape,e.SubMesh=SubMesh,e.SubMeshInstanceBatch=SubMeshInstanceBatch,e.SubMeshRenderElement=SubMeshRenderElement,e.TextMesh=class{get text(){return this._text}set text(e){this._text=e}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize=e}get color(){return this._color}set color(e){this._color=e}constructor(){}},e.TextureGenerator=TextureGenerator,e.TextureSheetAnimation=TextureSheetAnimation,e.TrailFilter=TrailFilter,e.TrailGeometry=TrailGeometry,e.TrailMaterial=TrailMaterial,e.TrailRenderer=TrailRenderer,e.TrailShaderInit=TrailShaderInit,e.TrailSprite3D=TrailSprite3D,e.TrailTextureMode=TrailTextureMode,e.TransLargeUBOUtils=TransLargeUBOUtils,e.Transform3D=Transform3D,e.UI3D=UI3D,e.UI3DGeometry=UI3DGeometry,e.UI3DManager=UI3DManager,e.UnlitMaterial=UnlitMaterial,e.UnlitShaderInit=UnlitShaderInit,e.Utils3D=Utils3D,e.Vector2Keyframe=Vector2Keyframe,e.Vector3Keyframe=Vector3Keyframe,e.Vector4Keyframe=Vector4Keyframe,e.VelocityOverLifetime=VelocityOverLifetime,e.VertexBuffer3D=VertexBuffer3D,e.VertexPositionTerrain=VertexPositionTerrain,e.VertexPositionTexture0=VertexPositionTexture0,e.VertexShuriKenParticle=VertexShuriKenParticle,e.VertexShurikenParticleBillboard=VertexShurikenParticleBillboard,e.VertexShurikenParticleMesh=VertexShurikenParticleMesh,e.VertexTrail=VertexTrail,e.Viewport=Viewport,e.Volume=Volume,e.VolumeManager=VolumeManager,e.VolumetricGI=VolumetricGI,e.VolumetricGIManager=VolumetricGIManager,e.WaterPrimaryMaterial=WaterPrimaryMaterial,e.WebXRCamera=WebXRCamera,e.WebXRCameraInfo=class{},e.WebXRCameraManager=WebXRCameraManager,e.WebXRExperienceHelper=WebXRExperienceHelper,e.WebXRInput=WebXRInput,e.WebXRInputManager=WebXRInputManager,e.WebXRRenderTexture=WebXRRenderTexture,e.WebXRSessionManager=WebXRSessionManager,e.btVehicleTuning=btVehicleTuning,e.btWheelInfo=class{},e.skinnedMatrixCache=skinnedMatrixCache,e.volumeIntersectInfo=class{}}(window.Laya=window.Laya||{},Laya);
//# sourceMappingURL=laya.d3.js.map