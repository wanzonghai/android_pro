功能：插件代码加密
用途：减少代码重构量，从而减少重构导致的错误率，减少代码重复率
1、temp_class：加载插件相关代码，这是一个模板代码，不能对其文件夹下的代码进行修改
2、android.jar：从android sdk下拷贝过来的jar包，主要用于编译java代码
3、JavacTools.py：执行脚本，需要使用管理员身份执行，不然在脚本编译java文件时会发生错误。执行脚本前需要先修改脚本中的部分配置


脚本处理流程：
1、将模板代码拷贝至javac_class文件夹下，这样处理是不会改变模板代码下的代码，下次跑脚本时可以做到动态替换
2、替换掉java代码中的一些配置，比如包名、类名、函数名，这些是会暴露在宿主的代码中，需要做到重构
3、动态生成15-50个java文件，这些文件为垃圾代码，目的是做到加密后的文件大小不一样，内容不一样
4、使用android.jar对所有java文件进行编译，不能直接使用javac是因为代码中包含了一些android的引用
5、将java文件编译后生成的.class文件进行压缩，jar包本身就是一个压缩包
6、对jar包进行dex格式化，宿主中使用DexClassloader加载dex文件
7、对dex格式化后的jar包进行加密
8、在javac_class文件夹下会生成指定文件名的加密后的文件，将这个文件放到宿主中的assets下面用于宿主加载
9、完成